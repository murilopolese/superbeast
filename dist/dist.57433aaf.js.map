{"version":3,"sources":["data.js","p5/core/shim.js","p5/core/constants.js","p5/core/main.js","p5/core/environment.js","node_modules/@babel/runtime/helpers/esm/typeof.js","node_modules/@babel/runtime/helpers/esm/defineProperty.js","node_modules/@babel/runtime/helpers/esm/objectSpread.js","node_modules/@babel/runtime/helpers/esm/classCallCheck.js","node_modules/@babel/runtime/helpers/esm/createClass.js","node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","node_modules/@babel/runtime/helpers/esm/inherits.js","node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/esm/iterableToArray.js","node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","node_modules/@babel/runtime/helpers/esm/toArray.js","node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","node_modules/@babel/runtime/helpers/esm/slicedToArray.js","node_modules/i18next/dist/esm/i18next.js","node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js","p5/core/internationalization.js","p5/core/error_helpers.js","p5/core/helpers.js","p5/core/legacy.js","p5/core/preload.js","p5/core/p5.Element.js","p5/core/p5.Graphics.js","p5/core/p5.Renderer.js","p5/image/filters.js","p5/core/p5.Renderer2D.js","p5/core/rendering.js","p5/core/structure.js","p5/core/transform.js","p5/core/shape/2d_primitives.js","p5/core/shape/attributes.js","p5/core/shape/curves.js","p5/core/shape/vertex.js","p5/color/color_conversion.js","p5/color/p5.Color.js","p5/color/creating_reading.js","p5/color/setting.js","p5/data/p5.TypedDict.js","p5/data/local_storage.js","p5/dom/dom.js","p5/events/acceleration.js","p5/events/keyboard.js","p5/events/mouse.js","p5/events/touch.js","node_modules/omggif/omggif.js","p5/image/image.js","p5/image/loading_displaying.js","p5/image/p5.Image.js","p5/image/pixels.js","node_modules/whatwg-fetch/fetch.js","node_modules/process/browser.js","lib/es6-promise.js","lib/es6-promise/utils.js","lib/es6-promise/asap.js","lib/es6-promise/then.js","lib/es6-promise/promise/resolve.js","lib/es6-promise/-internal.js","lib/es6-promise/enumerator.js","lib/es6-promise/promise.js","lib/es6-promise/promise/all.js","lib/es6-promise/promise/race.js","lib/es6-promise/promise/reject.js","lib/es6-promise/polyfill.js","node_modules/es6-promise/auto.js","node_modules/fetch-jsonp/build/fetch-jsonp.js","../src/FileSaver.js","p5/io/files.js","p5/io/p5.Table.js","p5/io/p5.TableRow.js","p5/io/p5.XML.js","p5/math/calculation.js","p5/math/math.js","p5/math/noise.js","p5/math/p5.Vector.js","p5/math/random.js","p5/math/trigonometry.js","p5/typography/attributes.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","../src/opentype.js","../node_modules/string.prototype.codepointat/codepointat.js","../node_modules/tiny-inflate/index.js","../src/bbox.js","../src/path.js","../src/check.js","../src/types.js","../src/table.js","../src/parse.js","../src/tables/cmap.js","../src/encoding.js","../src/draw.js","../src/glyph.js","../src/glyphset.js","../src/tables/cff.js","../src/tables/head.js","../src/tables/hhea.js","../src/tables/hmtx.js","../src/tables/ltag.js","../src/tables/maxp.js","../src/tables/name.js","../src/tables/os2.js","../src/tables/post.js","../src/tables/gsub.js","../src/tables/meta.js","../src/tables/sfnt.js","../src/layout.js","../src/position.js","../src/substitution.js","../src/util.js","../src/tables/glyf.js","../src/hintingtt.js","../src/tokenizer.js","../src/char.js","../src/features/featureQuery.js","../src/features/arab/contextCheck/arabicWord.js","../src/features/arab/contextCheck/arabicSentence.js","../src/features/applySubstitution.js","../src/features/arab/arabicPresentationForms.js","../src/features/arab/arabicRequiredLigatures.js","../src/features/latn/contextCheck/latinWord.js","../src/features/latn/latinLigatures.js","../src/bidi.js","../src/font.js","../src/tables/fvar.js","../src/tables/gpos.js","../src/tables/kern.js","../src/tables/loca.js","p5/typography/loading_displaying.js","p5/typography/p5.Font.js","p5/utilities/array_functions.js","p5/utilities/conversion.js","p5/utilities/string_functions.js","p5/utilities/time_date.js","p5/core/init.js","p5/app.js","spike.js","particle.js","triangle.js","superbeast.js","dist.js"],"names":["window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","Uint8ClampedArray","prototype","slice","Object","defineProperty","value","Array","writable","configurable","enumerable","assign","keys","hasSymbols","Symbol","propIsEnumerable","propertyIsEnumerable","isEnumerableOn","obj","prop","call","target","source1","TypeError","s","source","i","props","objTarget","arguments","length","getOwnPropertySymbols","push","apply","filter","_PI","Math","PI","P2D","WEBGL","ARROW","CROSS","HAND","MOVE","TEXT","WAIT","HALF_PI","QUARTER_PI","TAU","TWO_PI","DEGREES","RADIANS","DEG_TO_RAD","RAD_TO_DEG","CORNER","CORNERS","RADIUS","RIGHT","LEFT","CENTER","TOP","BOTTOM","BASELINE","POINTS","LINES","LINE_STRIP","LINE_LOOP","TRIANGLES","TRIANGLE_FAN","TRIANGLE_STRIP","QUADS","QUAD_STRIP","TESS","CLOSE","OPEN","CHORD","PIE","PROJECT","SQUARE","ROUND","BEVEL","MITER","RGB","HSB","HSL","AUTO","ALT","BACKSPACE","CONTROL","DELETE","DOWN_ARROW","ENTER","ESCAPE","LEFT_ARROW","OPTION","RETURN","RIGHT_ARROW","SHIFT","TAB","UP_ARROW","BLEND","REMOVE","ADD","DARKEST","LIGHTEST","DIFFERENCE","SUBTRACT","EXCLUSION","MULTIPLY","SCREEN","REPLACE","OVERLAY","HARD_LIGHT","SOFT_LIGHT","DODGE","BURN","THRESHOLD","GRAY","OPAQUE","INVERT","POSTERIZE","DILATE","ERODE","BLUR","NORMAL","ITALIC","BOLD","BOLDITALIC","_DEFAULT_TEXT_FILL","_DEFAULT_LEADMULT","_CTX_MIDDLE","LINEAR","QUADRATIC","BEZIER","CURVE","STROKE","FILL","TEXTURE","IMMEDIATE","IMAGE","NEAREST","REPEAT","CLAMP","MIRROR","LANDSCAPE","PORTRAIT","_DEFAULT_STROKE","_DEFAULT_FILL","GRID","AXES","p5","sketch","node","sync","_setupDone","_pixelDensity","ceil","devicePixelRatio","_userNode","_curElement","_elements","_glAttributes","_requestAnimId","_preloadCount","_isGlobal","_loop","_initializeInstanceVariables","_defaultCanvasSize","width","height","_events","mousemove","mousedown","mouseup","dragend","dragover","click","dblclick","mouseover","mouseout","keydown","keyup","keypress","touchstart","touchmove","touchend","resize","blur","_millisStart","_lcg_random_state","_gaussian_previous","wheel","_loadingScreenId","_registeredMethods","methods","getOwnPropertyNames","DeviceOrientationEvent","deviceorientation","DeviceMotionEvent","_isNodeWebkit","devicemotion","_start","document","getElementById","context","userPreload","preload","loadingScreen","createElement","innerHTML","style","position","id","body","appendChild","_preloadMethods","method","_wrapPreload","_registeredPreloadMethods","_runIfPreloadsAreDone","_setup","_draw","parentNode","removeChild","_lastFrameTime","performance","now","_decrementPreload","_setProperty","fnName","_incrementPreload","args","createCanvas","f","bind","setup","canvases","getElementsByTagName","k","dataset","hidden","visibility","time_since_last","target_time_between_frames","_targetFrameRate","redraw","_frameRate","deltaTime","_updateMouseCoords","remove","ev","cancelAnimationFrame","removeEventListener","e","elt_ev","elt","self","forEach","p","x","undefined","p2","hasOwnProperty","instance","init","_setupPromisePreloads","friendlyBindGlobal","_createFriendlyGlobalFunctionBinder","substring","m","addEventListener","passive","focusHandler","blurHandler","registerMethod","readyState","_styles","_bezierDetail","_curveDetail","_colorMode","constants","_colorMaxes","rgb","hsb","hsl","_downKeys","fnString","name","options","globalObject","log","console","propsToForciblyOverwrite","print","disableFriendlyErrors","IS_MINIFIED","Error","get","set","newValue","loadJSON","loadImage","loadStrings","loadXML","loadBytes","loadTable","loadFont","loadModel","loadShader","pre","post","standardCursors","C","_windowPrint","getWindowWidth","innerWidth","documentElement","clientWidth","getWindowHeight","innerHeight","clientHeight","launchFullscreen","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","frameCount","focused","hasFocus","cursor","type","y","canvas","includes","coords","test","frameRate","fps","_validateParameters","getFrameRate","setFrameRate","noCursor","displayWidth","screen","displayHeight","windowWidth","windowHeight","_onresize","executeDefault","windowResized","preventDefault","fullscreen","val","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","pixelDensity","returnValue","resizeCanvas","displayDensity","getURL","location","href","getURLPath","pathname","split","v","getURLParams","re","exec","search","index","lastIndex","_typeof","iterator","constructor","_defineProperty","key","_objectSpread","ownKeys","concat","sym","getOwnPropertyDescriptor","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","create","_arrayLikeToArray","arr","len","arr2","_arrayWithoutHoles","isArray","_iterableToArray","iter","from","_unsupportedIterableToArray","minLen","n","toString","_nonIterableSpread","_toConsumableArray","_arrayWithHoles","_nonIterableRest","_toArray","_iterableToArrayLimit","_arr","_n","_d","_e","_s","_i","next","done","err","_slicedToArray","i18next","consoleLogger","output","warn","error","_console","Logger","concreteLogger","prefix","logger","debug","bool","_len","_key","forward","_len2","_key2","_len3","_key3","_len4","_key4","lvl","debugOnly","moduleName","baseLogger","EventEmitter","observers","events","listener","_this","event","l","observer","defer","res","rej","promise","Promise","resolve","reject","makeString","object","copy","a","t","getLastOfPath","path","Empty","cleanKey","indexOf","replace","canNotTraverseDeeper","stack","shift","setPath","_getLastOfPath","pushPath","_getLastOfPath2","getPath","_getLastOfPath3","getPathWithDefaults","data","defaultData","deepExtend","overwrite","String","regexEscape","str","_entityMap","escape","isIE10","navigator","userAgent","ResourceStore","_EventEmitter","ns","defaultNS","keySeparator","splice","lng","silent","addNamespaces","emit","resources","addResource","deep","pack","hasResourceBundle","removeNamespaces","getResource","compatibilityAPI","postProcessor","processors","addPostProcessor","module","handle","translator","processor","process","checkedLoadedFor","Translator","services","language","interpolation","resolved","nsSeparator","namespaces","parts","join","_this2","overloadTranslationOptionHandler","_this$extractFromKey","extractFromKey","namespace","appendNamespaceToCIMode","toLowerCase","resUsedKey","usedKey","resExactUsedKey","exactUsedKey","resType","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","copy$$1","newKeyToUse","deepKey","translate","extendTranslation","usedDefault","isValidLookup","defaultValue","count","suffix","pluralResolver","getSuffix","updateMissing","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","missingKeyHandler","backendConnector","saveMissing","needsPluralHandling","saveMissingPlurals","getPluralFormsOfKey","appendNamespaceToMissingKey","parseMissingKeyHandler","_this3","parse","usedLng","usedNS","skipInterpolation","interpolator","defaultVariables","interpolate","nest","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","_this4","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","code","finalKey","pluralSuffix","possibleKey","finalKeys","addLookupKeys","contextSeparator","pop","returnNull","returnEmptyString","resourceStore","capitalize","string","charAt","toUpperCase","LanguageUtil","whitelist","formatLanguageCode","specialCases","lowerCaseLng","map","part","cleanCode","load","nonExplicitWhitelist","getLanguagePartFromCode","fallbacks","getScriptPartFromCode","fallbackCode","fallbackCodes","addCode","c","isWhitelisted","fc","sets","nr","_rulesPluralsTypes","Number","createRules","rules","numbers","plurals","PluralResolver","rule","getRule","ret","idx","noAbs","abs","simplifyPluralSuffix","returnSuffix","prepend","compatibilityJSON","Interpolator","format","escapeValue","iOpts","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","regexpStr","regexp","RegExp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","nestingRegexp","match","replaces","regexSafe","handleFormat","trim","missingInterpolationHandler","temp","_temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","JSON","formatters","_match$1$split$map","elem","_match$1$split$map2","reduce","what","Connector","backend","store","state","queue","languages","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","_name$split","_name$split2","addResourceBundle","q","fcName","tried","wait","read","queueLoad","loadOne","prepareLoading","_this5","_name$split3","_name$split4","fallbackValue","isUpdate","initImmediate","pluralSeparator","partialBundledLanguages","tDescription","_format","transformOptions","noop","I18n","modules","external","isInitialized","isClone","createClassOnDemand","ClassOrObject","lu","on","languageDetector","detection","_this2$store","deferred","changeLanguage","usedCallback","append","isLanguageChangingTo","setLng","cacheUserLanguage","loadResources","async","detect","fixedT","opts","rest","_this$translator","_this$translator2","exists","_this6","lastLng","loadNotPending","loadState","_this7","preloaded","newLngs","rtlLngs","_this8","mergedOptions","clone","Browser","each","defaults","hasLocalStorageSupport","cookie","minutes","domain","cookieOptions","expires","date","Date","setTime","getTime","toUTCString","acc","$1","encodeURIComponent","nameEQ","ca","cookie$1","lookup","lookupCookie","cookieMinutes","cookieDomain","querystring","query","params","pos","lookupQuerystring","localStorage","testKey","setItem","removeItem","lookupLocalStorage","getItem","navigator$1","userLanguage","htmlTag","getAttribute","lookupFromPathIndex","subdomain","lookupFromSubdomainIndex","getDefaults","order","caches","excludeCacheFor","checkWhitelist","detectors","i18nOptions","lookupFromUrlIndex","addDetector","detector","detectionOrder","detected","detectorName","cleanedLng","cacheName","initialize","use","LanguageDetector","then","translateFn","typeColors","_friendlyFileLoadError","_friendlyError","doFriendlyWelcome","dataDoc","arrDoc","stringify","class2type","names","getType","friendlyWelcome","welcomeMessage","message","report","func","color","fileLoadErrorCases","num","filePath","suggestion","link","errorType","_friendlyAutoplayError","src","docCache","builtinTypes","lookupParamDoc","ichDot","queryResult","lastIndexOf","funcName","substr","funcClass","classitems","class","overloads","formats","mapConstants","maxParams","overload","minParams","optional","types","ct","array","lowerType","constant","myRe","values","myArray","description","matchConst","reConst","builtin","typeParts","isNumber","param","isNaN","testParamType","matches","floor","Function","testParamTypes","minScore","score","scoreOverload","argCount","arg","getOverloadErrors","errorArray","ValidationError","captureStackTrace","_friendlyParamError","errorObj","formatType","argType","_throwValidationErrors","docs","minOverload","validateParameters","misusedAtTopLevelCode","FAQ_URL","defineMisusedAtTopLevelCode","uniqueNamesFound","sort","b","helpForMisusedAtTopLevelCode","some","symbol","symbolName","symbolType","_helpForMisusedAtTopLevelCode","modeAdjust","d","mode","w","h","pushStyle","popStyle","popMatrix","pushMatrix","_promisePreloads","registerPromisePreload","initialSetupRan","preloadSetup","thisValue","addCallbacks","legacyPreloadSetup","sourceFunction","_wrapPromisePreload","_legacyPreloadGenerator","fn","replacementFunction","errorCallback","catch","objectCreator","baseValueGenerator","createBaseObject","returnedFunction","Element","pInst","_pInst","_pixelsState","offsetWidth","offsetHeight","parent","className","mousePressed","fxn","_adjustListener","_setMouseButton","doubleClicked","mouseWheel","mouseReleased","mouseClicked","mouseMoved","mouseOver","mouseOut","touchStarted","touchMoved","touchEnded","dragOver","dragLeave","ctx","_detachListener","_attachListener","Graphics","renderer","r","_renderer","RendererGL","Renderer2D","_applyDefaults","resetMatrix","isP3D","_update","Renderer","calculateOffset","currentLeft","currentTop","offsetParent","offsetLeft","offsetTop","isMainCanvas","_isMainCanvas","display","_textSize","_textLeading","_textFont","_textStyle","_textAscent","_textDescent","_textAlign","_textBaseline","_rectMode","_ellipseMode","_curveTightness","_imageMode","_tint","_doStroke","_doFill","_strokeSet","_fillSet","properties","pixelsState","pd","_getPixel","region","Image","getContext","drawImage","textLeading","textSize","_applyTextProperties","textStyle","textAscent","_updateTextMetrics","textDescent","textAlign","horizontal","vertical","text","maxWidth","maxHeight","cars","ii","jj","line","testLine","words","totalHeight","finalMaxHeight","MAX_VALUE","textWidth","baselineHacked","_renderText","offset","vAlign","_isOpenType","font","supported","fontFamily","fontSize","block","container","overflow","verticalAlign","blockOffset","textOffset","ascent","descent","Filters","blurRadius","blurKernelSize","blurKernel","blurMult","buildBlurKernel","radius","Int32Array","bk","bki","bm","bmi","radiusi","j","blurARGB","pixels","sum","cr","cg","cb","ri","ym","ymi","bk0","_toPixels","numPackedPixels","argb","_getARGB","a2","r2","g2","b2","yi","_setPixels","ImageData","getImageData","al","_toImageData","_createImageData","_tmpCanvas","_tmpCtx","createImageData","filterParam","imageData","newImageData","putImageData","threshold","level","thresh","gray","opaque","invert","posterize","levels1","rlevel","glevel","blevel","dilate","currIdx","currRowIdx","maxRowIdx","colOrig","colOut","currLum","idxRight","idxLeft","idxUp","idxDown","colRight","colLeft","colUp","colDown","lumRight","lumLeft","lumUp","lumDown","maxIdx","out","erode","styleEmpty","drawingContext","_cachedFillStyle","_cachedStrokeStyle","_cachedBlendMode","_setFill","_setStroke","lineCap","scale","background","save","image","curFill","_getFill","newFill","_isErasing","blendMode","fillRect","erase","restore","clear","clearRect","fill","stroke","opacityFill","opacityStroke","fillStyle","strokeStyle","newStroke","tempBlendMode","noErase","img","sx","sy","sWidth","sHeight","dx","dy","dWidth","dHeight","cnv","gifProperties","_animateGif","MediaElement","loadPixels","_getTintedImageCanvas","filters","tmpCanvas","tmpCtx","newPixels","g","globalCompositeOperation","blend","currBlend","copyArgs","imgOrCol","setTransform","Color","levels","updatePixels","frames","displayIndex","_acuteArcToBezier","start","size","alpha","cos_alpha","cos","sin_alpha","sin","cot_alpha","tan","phi","cos_phi","sin_phi","lambda","mu","ax","toFixed","ay","bx","by","cx","cy","arc","stop","rx","ry","arcToDraw","curves","min","beginPath","curve","moveTo","bezierCurveTo","lineTo","closePath","ellipse","doFill","doStroke","parseFloat","_getStroke","kappa","ox","oy","xe","ye","xm","x1","y1","x2","y2","point","round","lineWidth","quad","x3","y3","x4","y4","rect","tl","tr","br","bl","absW","absH","hw","hh","arcTo","triangle","endShape","vertices","isCurve","isBezier","isQuadratic","isContour","shapeKind","closeShape","numVerts","POLYGON","_doFillStrokeClose","isVert","quadraticCurveTo","strokeCap","cap","strokeJoin","lineJoin","strokeWeight","bezier","beginShape","vertex","bezierVertex","curveVertex","applyMatrix","transform","rotate","rad","Vector","textBaseline","maxY","_renderPath","strokeText","fillText","_textWidth","measureText","familyName","styleName","defaultId","defaultClass","thisRenderer","classList","add","_defaultGraphicsCreated","noRedraw","savedKey","noCanvas","createGraphics","noLoop","loop","_inUserDraw","numberOfRedraws","parseInt","userSetup","userDraw","draw","callMethod","idxRedraw","angle","axis","_toRadians","rotateX","_assert3d","rotateY","rotateZ","z","rg","shearX","shearY","_normalizeArcAngles","correctForScaling","epsilon","separation","atan","correspondToSamePoint","detail","vals","angles","detailX","_renderEllipse","circle","_renderRect","square","ellipseMode","noSmooth","setAttributes","imageSmoothingEnabled","rectMode","smooth","bezierDetail","bezierPoint","adjustedT","pow","bezierTangent","curveDetail","curveTightness","curvePoint","t3","t2","curveTangent","contourVertices","isFirstContour","beginContour","kind","vert","endContour","quadraticVertex","_contourInited","pt","_contourVertices","u","ColorConversion","_hsbaToHSLA","hsba","hue","sat","li","_hsbaToRGBA","RGBA","sector","red","green","blue","tint1","tint2","tint3","_hslaToHSBA","hsla","_hslaToRGBA","zest","hzvToRGB","_rgbaToHSBA","rgba","max","chroma","_rgbaToHSLA","_storeModeAndMaxes","_array","_parseInputs","_calculateLevels","toPrecision","color_conversion","maxes","setRed","new_red","setGreen","new_green","setBlue","new_blue","setAlpha","new_alpha","_getAlpha","new_mode","new_maxes","_getMode","_getMaxes","_getBlue","_getBrightness","_getGreen","_getHue","_getLightness","_getRed","_getSaturation","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","WHITESPACE","INTEGER","DECIMAL","PERCENT","colorPatterns","HEX3","HEX4","HEX6","HEX8","RGB_PERCENT","RGBA_PERCENT","HSLA","HSBA","numArgs","results","result","brightness","lerpColor","c1","c2","amt","l0","l1","l2","l3","fromArray","toArray","lerp","lightness","saturation","colorMode","max1","max2","max3","maxA","noFill","noStroke","TypedDict","createStringDict","StringDict","createNumberDict","NumberDict","hasKey","_validate","_addObj","item","saveTable","filename","blob","Blob","downloadFile","saveJSON","opt","amount","sub","mult","div","_valueTest","flip","minValue","maxValue","_keyTest","minKey","maxKey","storeItem","typeKey","createVector","clearStorage","getContainer","HTMLElement","addElement","media","createMedia","mediaSource","sourceEl","setAttribute","callbackHandler","mediaEl","loadedmetadata","videoWidth","videoHeight","presetPlaybackRate","playbackRate","select","getElementsByClassName","_wrapElement","selectAll","children","tagName","converted","checked","createSelect","every","createRadio","removeElements","el","HTMLCanvasElement","changed","input","createDiv","html","createP","createSpan","createImg","alt","crossOrigin","last","createA","createSlider","step","createButton","label","createCheckbox","checkbox","ran","random","htmlFor","createTextNode","HTMLSelectElement","option","selected","selectedIndex","selectedOptions","selectedOption","disable","disabled","radioElement","arg0","HTMLDivElement","HTMLSpanElement","_name","isRadioInput","HTMLInputElement","isNextLabel","nextElementSibling","HTMLLabelElement","_getOptionsArray","optionEl","labelElement","insertAdjacentElement","shouldDisable","createColorPicker","createInput","createFileInput","multiple","File","FileReader","FileList","fileInput","files","file","_load","createVideo","createAudio","VIDEO","AUDIO","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","createCapture","DOMException","useVideo","useAudio","video","audio","domElement","stream","srcObject","URL","createObjectURL","videoEl","play","tag","content","addClass","hasClass","removeClass","contains","toggleClass","child","childNodes","center","align","parentHidden","show","wOffset","hOffset","hide","insertAdjacentHTML","positionType","left","top","_translate","parentElement","perspective","_rotate","getComputedStyle","getPropertyValue","attrs","numVal","attribute","attr","firstChild","removeAttribute","aW","aH","getTracks","track","drop","_dragDisabled","evt","dataTransfer","_prevTime","_cueIDCounter","_cues","_modified","firstChildSrc","srcVal","modified","_onended","onended","currentTime","duration","pause","_setupAutoplayFailDetection","timeout","clearTimeout","once","autoplay","oldVal","setupAutoplayFailDetection","volume","speed","time","_ensureCanvas","setModified","mask","isModified","connect","audioContext","masterOutput","getAudioContext","soundOut","destination","audioSourceNode","createMediaElementSource","disconnect","showControls","controls","hideControls","Cue","addCue","cue","ontimeupdate","_onTimeUpdate","removeCue","clearCues","playbackTime","callbackTime","typeList","subtype","_createLoader","theFile","reader","onload","p5file","parser","xml","DOMParser","parseFromString","XML","readAsText","readAsDataURL","deviceOrientation","accelerationX","accelerationY","accelerationZ","pAccelerationX","pAccelerationY","pAccelerationZ","_updatePAccelerations","rotationX","rotationY","rotationZ","pRotationX","pRotationY","pRotationZ","startAngleX","startAngleY","startAngleZ","rotateDirectionX","rotateDirectionY","rotateDirectionZ","pRotateDirectionX","pRotateDirectionY","pRotateDirectionZ","_updatePRotations","turnAxis","move_threshold","shake_threshold","setMoveThreshold","setShakeThreshold","_ondeviceorientation","_angleMode","radians","beta","gamma","_handleMotion","_ondevicemotion","acceleration","orientation","deviceMoved","deviceTurned","wRX","wPRX","wSAX","wRY","wPRY","wSAY","deviceShaken","accelerationChangeX","accelerationChangeY","isKeyPressed","keyIsPressed","keyCode","_onkeydown","which","fromCharCode","keyPressed","charCode","_onkeyup","keyReleased","_areDownKeys","_onkeypress","_lastKeyCodeTyped","keyTyped","_onblur","keyIsDown","getMousePos","clientX","touches","changedTouches","getBoundingClientRect","scrollWidth","scrollHeight","clientY","winX","winY","identifier","movedX","movedY","_hasMouseInteracted","mouseX","mouseY","pmouseX","pmouseY","winMouseX","winMouseY","pwinMouseX","pwinMouseY","mouseButton","mouseIsPressed","_updateNextMouseCoords","mousePos","movementX","movementY","_mouseWheelDeltaY","button","_onmousemove","mouseDragged","_onmousedown","_onmouseup","_ondragend","_ondragover","_onclick","_ondblclick","_pmouseWheelDeltaY","_onwheel","deltaY","delta","requestPointerLock","mozRequestPointerLock","exitPointerLock","getTouchInfo","touch","_updateTouchCoords","_ontouchstart","_ontouchmove","_ontouchend","createImage","saveCanvas","htmlCanvas","extension","mimeType","_checkFileExtension","toBlob","saveGif","pImg","loopLimit","buffer","Uint8Array","numFrames","allFramesPixelColors","paletteFreqsAndFrames","paletteSet","Set","dataLength","pixelColors","Uint32Array","paletteStr","freq","framesUsingGlobalPalette","palettesSortedByFreq","globalPalette","globalPaletteSet","palette","difference","has","globalIndicesLookup","powof2","gifWriter","omggif","GifWriter","previousFrame","localPaletteRequired","pixelPaletteIndex","colorIndicesLookup","cannotBeTransparent","frameOpts","canBeTransparent","transparent","transparentIndex","disposal","delay","addFrame","end","saveFrames","fName","ext","_duration","_fps","constrain","makeFrame","_makeFrame","frameFactory","setInterval","clearInterval","_cnv","downloadMime","toDataURL","thisFrame","_createGif","arrayBuffer","successCallback","failureCallback","finishCallback","gifReader","GifReader","framePixels","loadGIFFrameIntoImage","frameNum","decodeAndBlitFrameRGBA","frameInfo","loopCount","playing","timeDisplayed","_sAssign","sVal","iVal","req","Request","fetch","response","contentType","headers","onerror","defW","defH","_dx","_dy","_dw","_dh","_sx","_sy","_sw","_sh","tint","noTint","imageMode","curDelay","skips","ind","tempCanvas","nearestNeighbor","dst","srcX","srcPos","resizedImageData","p5Image","scaleFactor","operation","timeSinceStart","getCurrentFrame","setFrame","srcImage","sw","sh","dw","dh","_copyHelper","dstImage","sxMod","syMod","support","searchParams","iterable","formData","isDataView","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","items","Headers","header","consumed","bodyUsed","fileReaderReady","readBlobAsArrayBuffer","readAsArrayBuffer","readBlobAsText","readArrayBufferAsText","buf","view","chars","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","decode","json","oldValue","thisArg","entries","normalizeMethod","upcased","url","credentials","signal","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","status","ok","statusText","redirectStatuses","redirect","RangeError","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","polyfill","cachedSetTimeout","cachedClearTimeout","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","Item","nextTick","title","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_resolve","originalThen","originalResolve","Resolve","_reject","makeObject","row","escapeHelper","destroyClickedElement","httpDo","resp","lines","separatorSet","Table","currentChar","records","currentRecord","tokenBegin","currentState","token","tokenEnd","recordEnd","escaped","columns","TableRow","addRow","httpGet","httpPost","jsonpOptions","cbCount","argsCount","serialize","fileSize","webkitURL","_pWriters","createWriter","newPW","PrintWriter","millis","write","close","writeFile","_filename","_options","saveStrings","SoundFile","saveSound","saveJSONObject","saveJSONArray","list","isCRLF","pWriter","table","rows","col","entry","htmlEntry","getString","dataToDownload","_isSafari","fx","saveAs","download","onclick","stopPropagation","aText","alert","removeRow","chunk","getRow","getRows","findRow","column","findRows","matchRow","matchRows","getColumn","clearRows","addColumn","getColumnCount","getRowCount","removeTokens","charArray","regex","removeColumn","cString","cNumber","tempR","chip","setNum","setString","getNum","getObject","headerColumn","tableObject","cPos","getArray","tableArray","separator","cTitle","floatVal","stringVal","elementsToP5XML","elements","DOM","xmlDoc","implementation","createDocument","getParent","getName","setName","attributes","newDOM","nodeName","nodeValue","hasChildren","listChildren","getChildren","getChild","addChild","getAttributeCount","listAttributes","hasAttribute","getContent","textContent","setContent","xmlSerializer","XMLSerializer","serializeToString","hypot","Infinity","compensation","summand","preliminary","sqrt","low","high","dist","exp","mag","start1","stop1","start2","stop2","withinBounds","newval","norm","decimals","sq","fract","toConvert","sign","toFract","perlin","PERLIN_YWRAPB","PERLIN_YWRAP","PERLIN_ZWRAPB","PERLIN_ZWRAP","PERLIN_SIZE","perlin_octaves","perlin_amp_falloff","scaled_cosine","noise","xi","rxf","ryf","n1","n2","n3","zi","xf","yf","zf","ampl","of","noiseDetail","lod","falloff","noiseSeed","seed","lcg","setSeed","getSeed","rand","calculateRemainder2D","xComponent","yComponent","calculateRemainder3D","zComponent","rem","isFinite","vectorComponents","magSq","dot","cross","normalize","limit","mSq","setMag","heading","atan2","_fromRadians","newHeading","angleBetween","dotmagmag","acos","reflect","surfaceNormal","equals","fromAngle","fromAngles","theta","cosPhi","sinPhi","cosTheta","sinTheta","random2D","random3D","vz","vzBase","vx","vy","v1","v2","vecT","randomStateProp","_lcg","stateProperty","_lcgSetSeed","randomSeed","tmp","randomGaussian","mean","sd","ratio","asin","degrees","angleMode","_toDegrees","horizAlign","vertAlign","theLeading","theSize","theStyle","let","const","pair","this","subtable","singleSubstitutionFormat1","singleSubstitutionFormat2","chainingSubstitutionFormat3","ligatureSubstitutionFormat1","getContextParams","HintingTrueType","subtableParsers","subtableMakers","inflate","onSuccess","onError","p5Font","Font","opentype","validFontTypes","newStyle","fileNoPath","lastDotIdx","fileExt","head","textFont","theFont","pathToPoints","cmds","parseOpts","sampleFactor","simplifyThreshold","pointAtLength","pts","simplify","collinear","at","splitPaths","paths","current","cmdToArr","cmd","thresholdAngle","areaTriangle","tmpPoint1","tmpPoint2","ab","bc","magA","magB","findDotsAtSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t1","t13","t12","mx","my","nx","ny","getPointAtSegmentLength","bezlen","getTatLen","istotal","path2curve","pathToAbsolute","pathArray","dots","crz","pa","catmullRom2bezier","kk","path2","X","Y","qx","qy","attrs2","pcoms1","pcoms2","processPath","pcom","T","Q","a2c","q2c","l2c","fixArc","pp","pi","fixM","path1","a1","pfirst","seg","seg2","seglen","seg2len","lac","sweep_flag","recursive","f1","f2","xy","_120","rx2","ry2","df","f2old","x2old","y2old","s1","s2","hx","hy","m1","m2","m3","m4","newres","crp","iLen","z2","Tvalues","Cvalues","xbase","base3","ybase","comb","ll","p1","p3","p4","cacheKey","hash","cache","textBounds","minX","minY","maxX","xCoords","yCoords","_scale","forEachGlyph","glyph","gX","gY","gFontSize","gm","getMetrics","xMin","xMax","yMin","yMax","advance","_handleAlignment","textToPoints","txt","xoff","glyphs","_getGlyphs","isSpace","gpath","commands","advanceWidth","stringToGlyphs","_getPath","_getPathData","toPathData","_getSVG","strokeWidth","toSVG","pdata","pg","getAdvanceWidth","ascender","descender","unitsPerEm","arrayCopy","srcPosition","dstPosition","list0","list1","reverse","shorten","shuffle","rnd","subset","float","int","radix","boolean","byte","nn","char","unchar","charCodeAt","hex","digits","repeat","unhex","doNf","right","neg","decimalInd","intPart","decPart","decimal","doNfc","dec","addNfp","addNfs","reg","matchAll","nf","nums","nfc","nfp","nfRes","nfs","delim","splitTokens","delims","sqc","sqo","day","getDate","hour","getHours","minute","getMinutes","month","getMonth","second","getSeconds","year","getFullYear","_globalInit","mocha","waitForDocumentReady","waitingForTranslator","all","Spike","points","distance","maxAngle","spike","base","update","mouseCursor","Particle","vel","Triangle","avel","spikes","particles","floating","moving","baseX","baseY","paddingX","paddingY","targetX","targetY","calculatePadding","querySelector","triangles","createParticles","createTriangles","drawBackground","particle","getRandomColor","colorNames","colorName"],"mappings":"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AA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,kBAEN,CACM,EAAA,kBACA,EAAA,mBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,kBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,E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,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,iBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,iBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,iBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,C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EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAEN,CACM,EAAA,mBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,mBAEN,CACM,EAAA,mBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kB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A,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,mBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,iBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,qBAGP,CACC,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAEN,CACM,EAAA,kBACA,EAAA,oBAGP,CACC,CACM,EAAA,kBACA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ACA,IAAA,KACA,IAAA,MAeH,GAAsB,CACrmBH,GAAmB,CACb,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,QACA,MAAA,QACA,KAAA,KACA,KAAA,QACA,MAAA,QACA,MAAA,QACA,MAAA,QACA,KAAA,QACA,KAAA,MACA,KAAA,QACA,MAAA,QACA,KAAA,QACA,MAAA,QACA,KAAA,MACA,MAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,UACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,UACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,MAAA,QACA,KAAA,QACA,KAAA,SACA,MAAA,QACA,KAAA,QACA,KAAA,QACA,MAAA,QACA,KAAA,QACA,MAAA,QACA,MAAA,QACA,KAAA,QACA,MAAA,QACA,KAAA,QACA,KAAA,KACA,MAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,QACA,KAAA,QACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,UACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,QACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,MACA,KAAA,KACA,KAAA,KACA,K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rB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,OAAS,IAAK,QACtB,CAAC,MAAO,OAAS,IAAK,QACtB,CAAC,MAAO,QAAS,IAAK,SACtB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,OAAS,IAAK,QACtB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,OAAS,IAAK,QACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,OAAS,IAAK,QACtB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,KAAQ,IAAK,MACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAQ,IAAK,OACrB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,KAAS,IAAK,OACtB,CAAC,MAAO,MAAS,IAAK,OACtB,CAAC,MAAO,OAAS,IAAK,SAG1B,SAAS,GAAgB,GAChBA,IAAAA,IAAI,EAAI,EAAG,EAAI,GAAc,OAAQ,GAAK,EAAG,CACxC,IAAA,EAAQ,GAAc,GACxB,GAAA,GAAW,EAAM,OAAS,EAAU,EAAM,IACnC,OAAA,EAIR,OAAC,EAIZ,SAAS,GAAc,EAAM,GACnB,IAAA,EAAM,GACN,EAAI,IAAI,GAAM,OAAO,EAAM,GACjC,EAAI,QAAU,EAAE,cAChB,EAAI,cAAgB,EAAE,aACtB,EAAI,cAAgB,EAAE,cACtB,EAAI,aAAe,EAAE,cACrB,EAAI,OAAS,EAAE,cACf,EAAI,gBAAkB,EAAE,aACxB,EAAI,gBAAkB,EAAE,aACxB,EAAI,kBAAoB,EAAE,aAC1B,EAAI,kBAAoB,EAAE,aAC1B,EAAI,kBAAoB,EAAE,aAC1B,EAAI,kBAAoB,EAAE,aAC1B,EAAI,oBAAsB,EAAE,aAC5B,EAAI,oBAAsB,EAAE,aAC5B,EAAI,eAAiB,EAAE,aACvB,EAAI,mBAAqB,EAAE,aAC3B,EAAI,aAAe,EAAE,aACrB,EAAI,OAAS,GACRA,IAAAA,IAAI,EAAI,EAAG,EAAI,GAAI,IACpB,EAAI,OAAO,GAAK,EAAE,YA6Bf,OA1BP,EAAI,gBAAkB,EAAE,aACxB,EAAI,gBAAkB,EAAE,aACxB,EAAI,gBAAkB,EAAE,aACxB,EAAI,gBAAkB,EAAE,aACxB,EAAI,UAAY,OAAO,aAAa,EAAE,YAAa,EAAE,YAAa,EAAE,YAAa,EAAE,aACnF,EAAI,YAAc,EAAE,cACpB,EAAI,iBAAmB,EAAE,cACzB,EAAI,gBAAkB,EAAE,cACxB,EAAI,cAAgB,EAAE,aACtB,EAAI,eAAiB,EAAE,aACvB,EAAI,aAAe,EAAE,aACrB,EAAI,YAAc,EAAE,cACpB,EAAI,aAAe,EAAE,cACjB,EAAI,SAAW,IACf,EAAI,iBAAmB,EAAE,aACzB,EAAI,iBAAmB,EAAE,cAGzB,EAAI,SAAW,IACf,EAAI,SAAW,EAAE,aACjB,EAAI,WAAa,EAAE,aACnB,EAAI,cAAgB,EAAE,cACtB,EAAI,YAAc,EAAE,cACpB,EAAI,aAAe,EAAE,eAGlB,EAGX,SAAS,GAAa,GACX,OAAA,IAAI,GAAM,MAAM,OAAQ,CAC3B,CAAC,KAAM,UAAW,KAAM,SAAU,MAAO,GACzC,CAAC,KAAM,gBAAiB,KAAM,QAAS,MAAO,GAC9C,CAAC,KAAM,gBAAiB,KAAM,SAAU,MAAO,GAC/C,CAAC,KAAM,eAAgB,KAAM,SAAU,MAAO,GAC9C,CAAC,KAAM,SAAU,KAAM,SAAU,MAAO,GACxC,CAAC,KAAM,kBAAmB,KAAM,QAAS,MAAO,KAChD,CAAC,KAAM,kBAAmB,KAAM,QAAS,MAAO,KAChD,CAAC,KAAM,oBAAqB,KAAM,QAAS,MAAO,GAClD,CAAC,KAAM,oBAAqB,KAAM,QAAS,MAAO,KAClD,CAAC,KAAM,oBAAqB,KAAM,QAAS,MAAO,KAClD,CAAC,KAAM,oBAAqB,KAAM,QAAS,MAAO,KAClD,CAAC,KAAM,sBAAuB,KAAM,QAAS,MAAO,GACpD,CAAC,KAAM,sBAAuB,KAAM,QAAS,MAAO,KACpD,CAAC,KAAM,iBAAkB,KAAM,QAAS,MAAO,IAC/C,CAAC,KAAM,qBAAsB,KAAM,QAAS,MAAO,KACnD,CAAC,KAAM,eAAgB,KAAM,QAAS,MAAO,GAC7C,CAAC,KAAM,cAAe,KAAM,OAAQ,MAAO,GAC3C,CAAC,KAAM,cAAe,KAAM,OAAQ,MAAO,GAC3C,CAAC,KAAM,UAAW,KAAM,OAAQ,MAAO,GACvC,CAAC,KAAM,cAAe,KAAM,OAAQ,MAAO,GAC3C,CAAC,KAAM,YAAa,KAAM,OAAQ,MAAO,GACzC,CAAC,KAAM,mBAAoB,KAAM,OAAQ,MAAO,GAChD,CAAC,KAAM,YAAa,KAAM,OAAQ,MAAO,GACzC,CAAC,KAAM,cAAe,KAAM,OAAQ,MAAO,GAC3C,CAAC,KAAM,WAAY,KAAM,OAAQ,MAAO,GACxC,CAAC,KAAM,WAAY,KAAM,OAAQ,MAAO,GACxC,CAAC,KAAM,kBAAmB,KAAM,QAAS,MAAO,GAChD,CAAC,KAAM,kBAAmB,KAAM,QAAS,MAAO,GAChD,CAAC,KAAM,kBAAmB,KAAM,QAAS,MAAO,GAChD,CAAC,KAAM,kBAAmB,KAAM,QAAS,MAAO,GAChD,CAAC,KAAM,YAAa,KAAM,YAAa,MAAO,QAC9C,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,mBAAoB,KAAM,SAAU,MAAO,GAClD,CAAC,KAAM,kBAAmB,KAAM,SAAU,MAAO,GACjD,CAAC,KAAM,gBAAiB,KAAM,QAAS,MAAO,GAC9C,CAAC,KAAM,iBAAkB,KAAM,QAAS,MAAO,GAC/C,CAAC,KAAM,eAAgB,KAAM,QAAS,MAAO,GAC7C,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,eAAgB,KAAM,SAAU,MAAO,GAC9C,CAAC,KAAM,mBAAoB,KAAM,QAAS,MAAO,GACjD,CAAC,KAAM,mBAAoB,KAAM,QAAS,MAAO,GACjD,CAAC,KAAM,WAAY,KAAM,QAAS,MAAO,GACzC,CAAC,KAAM,aAAc,KAAM,QAAS,MAAO,GAC3C,CAAC,KAAM,gBAAiB,KAAM,SAAU,MAAO,GAC/C,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,eAAgB,KAAM,SAAU,MAAO,IAC/C,GAGP,IAAA,GAAe,CAAE,MAAO,GAAe,KAAM,GAAY,cAAE,GAAa,gBAAE,IChP1E,SAAS,GAAe,EAAM,GACpB,IAAA,EAAO,GACP,EAAI,IAAI,GAAM,OAAO,EAAM,GAUzB,OATR,EAAK,QAAU,EAAE,eACjB,EAAK,YAAc,EAAE,aACrB,EAAK,kBAAoB,EAAE,aAC3B,EAAK,mBAAqB,EAAE,aAC5B,EAAK,aAAe,EAAE,aACtB,EAAK,aAAe,EAAE,aACtB,EAAK,aAAe,EAAE,aACtB,EAAK,YAAc,EAAE,aACrB,EAAK,YAAc,EAAE,aACb,EAAK,SACJ,KAAA,EACD,EAAK,MAAQ,GAAc,QAC3B,MACC,KAAA,EACD,EAAK,eAAiB,EAAE,cACxB,EAAK,eAAiB,IAAI,MAAM,EAAK,gBAChCA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAK,eAAgB,IACrC,EAAK,eAAe,GAAK,EAAE,cAG/B,EAAK,MAAQ,GACRA,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAK,eAAgBA,IACjC,GAAA,EAAK,eAAeA,IAAM,GAAc,OAAQ,CAC1C,IAAA,EAAa,EAAE,YACrB,EAAK,MAAM,KAAK,EAAE,YAAY,IAItC,MACC,KAAA,IACD,EAAK,eAAiB,EAAE,cACxB,EAAK,OAAS,IAAI,MAAM,EAAK,gBACxBm5E,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAK,eAAgBA,IACrC,EAAK,OAAOA,GAAK,EAAE,YAKxB,OAAA,EAGX,SAAS,KACE,OAAA,IAAI,GAAM,MAAM,OAAQ,CAC3B,CAAC,KAAM,UAAW,KAAM,QAAS,MAAO,QACxC,CAAC,KAAM,cAAe,KAAM,QAAS,MAAO,GAC5C,CAAC,KAAM,oBAAqB,KAAM,QAAS,MAAO,GAClD,CAAC,KAAM,qBAAsB,KAAM,QAAS,MAAO,GACnD,CAAC,KAAM,eAAgB,KAAM,QAAS,MAAO,GAC7C,CAAC,KAAM,eAAgB,KAAM,QAAS,MAAO,GAC7C,CAAC,KAAM,eAAgB,KAAM,QAAS,MAAO,GAC7C,CAAC,KAAM,cAAe,KAAM,QAAS,MAAO,GAC5C,CAAC,KAAM,cAAe,KAAM,QAAS,MAAO,KAIpD,IAAA,GAAe,CAAE,MAAO,GAAgB,KAAM,IC3DxC,GAAkB,IAAI,MAAM,GAGlC,GAAgB,GAAK,WACX,IAAA,EAAQ,KAAK,OAAS,KAAK,eAC3B,EAAc,KAAK,cACrB,OAAgB,IAAhB,EACO,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,aAAc,KAAK,eAEA,IAAhB,EACA,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,WAAY,KAAK,0BAGzB,EAAM,QAAO,EAAO,KAAO,EAAM,SAAS,IAAM,2CAIpD,GAAgB,GAAK,WACX,IAAA,EAAc,KAAK,cAElB,OADP,EAAM,SAAyB,IAAhB,EAAmB,mEAC3B,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,UAAW,KAAK,qBAKxB,GAAgB,GAAK,WACX,IAAA,EAAc,KAAK,cAElB,OADP,EAAM,SAAyB,IAAhB,EAAmB,oEAC3B,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,cAAe,KAAK,qBAK5B,GAAgB,GAAK,WACX,IAAA,EAAc,KAAK,cAElB,OADP,EAAM,SAAyB,IAAhB,EAAmB,mDAC3B,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,aAAc,KAAK,iBAAiB,WACzB,MAAA,CACH,SAAU,KAAK,cACf,WAAY,KAAK,gBAAgB,KAAK,cAAgB,QAMtEo5E,IAAM,GAAmB,CACrB,cAAe,GAAO,OACtB,gBAAiB,GAAO,QAwH5B,SAAS,GAAe,EAAM,GAEpB,IAAA,EAAI,IAAI,GAAO,EADrB,EAAQ,GAAS,GAEX,EAAe,EAAE,aAAa,GAEhC,OADJ,EAAM,SAA0B,IAAjB,GAAuC,MAAjB,EAAsB,mCACtC,IAAjB,EACO,CACH,QAAS,EACT,QAAS,EAAE,kBACX,SAAU,EAAE,mBACZ,QAAS,EAAE,gBAAgB,KAGxB,CACH,QAAS,EACT,QAAS,EAAE,kBACX,SAAU,EAAE,mBACZ,QAAS,EAAE,gBAAgB,IAC3B,WAAY,EAAE,8BAtI1B,GAAgB,GAAK,WACX,IAAA,EAAQ,KAAK,OAAS,KAAK,eAC3B,EAAc,KAAK,cAErB,GAAgB,IAAhB,EACO,MAAA,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,SAAU,KAAK,iBAAiB,WACtB,IAAA,EAAa,KAAK,cAClB,EAAa,KAAK,cACjB,MAAA,CACH,MAAO,KAAK,gBAAgB,EAAa,GACzC,cAAe,KAAK,gBAAgB,EAAY,QAIzD,GAAoB,IAAhB,EACA,MAAA,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,SAAU,KAAK,aAAa,GAAO,UACnC,UAAW,KAAK,iBAAiB,WACvB,IAAA,EAAa,KAAK,cAClB,EAAa,KAAK,cACjB,MAAA,CACH,QAAS,KAAK,gBAAgB,EAAa,GAC3C,cAAe,KAAK,gBAAgB,EAAY,QAIzD,GAAoB,IAAhB,EAAmB,CACpB,IAAA,EAAa,KAAK,cAClB,EAAa,KAAK,cACjB,MAAA,CACH,YAAa,EACb,UAAW,KAAK,UAAU,EAAY,GAAO,QAAQ,GAAO,WAC5D,cAAe,KAAK,gBAAgB,EAAY,KAGxD,EAAM,QAAO,EAAO,KAAO,EAAM,SAAS,IAAM,8CAIpD,GAAgB,GAAK,WACX,IAAA,EAAQ,KAAK,OAAS,KAAK,eAC3B,EAAc,KAAK,cACrB,OAAgB,IAAhB,EACO,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,cAAe,KAAK,iBAAiB,WAC1B,MAAA,CACH,UAAW,KAAK,kBAChB,MAAO,KAAK,gBAAgB,KAAK,aAAe,GAChD,UAAW,KAAK,kBAChB,cAAe,KAAK,gBAAgB,QAIzB,IAAhB,EACA,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,kBAAmB,KAAK,aAAa,GAAO,UAC5C,cAAe,KAAK,aAAa,GAAO,UACxC,kBAAmB,KAAK,aAAa,GAAO,UAC5C,cAAe,KAAK,iBAAiB,WAC1B,MAAA,CACH,UAAW,KAAK,kBAChB,MAAO,KAAK,gBAAgB,KAAK,aAAe,GAChD,UAAW,KAAK,kBAChB,cAAe,KAAK,gBAAgB,QAIzB,IAAhB,EACA,CACH,YAAa,EACb,kBAAmB,KAAK,UAAU,GAAO,QAAQ,GAAO,WACxD,cAAe,KAAK,UAAU,GAAO,QAAQ,GAAO,WACpD,kBAAmB,KAAK,UAAU,GAAO,QAAQ,GAAO,WACxD,cAAe,KAAK,gBAAgB,UAG5C,EAAM,QAAO,EAAO,KAAO,EAAM,SAAS,IAAM,8CAIpD,GAAgB,GAAK,WAEX,IAAA,EAAc,KAAK,cACzB,EAAM,SAAyB,IAAhB,EAAmB,oEAC5B,IAAA,EAAsB,KAAK,cAC3B,EAAkB,IAAI,GAAO,KAAK,KAAM,KAAK,OAAS,KAAK,cAC1D,MAAA,CACH,YAAa,EACb,WAAY,EACZ,UAAW,GAAgB,GAAqB,KAAK,KAK7D,GAAgB,GAAK,WACX,IAAA,EAAc,KAAK,cAElB,OADP,EAAM,SAAyB,IAAhB,EAAmB,6FAC3B,CACH,YAAa,EACb,SAAU,KAAK,aAAa,GAAO,UACnC,kBAAmB,KAAK,UAAU,GAAO,QAAQ,GAAO,WACxD,kBAAmB,KAAK,UAAU,GAAO,QAAQ,GAAO,WACxD,YAAa,KAAK,oBA8B1BA,IAAM,GAAiB,IAAI,MAAM,GA2CjC,SAAS,GAAc,GACZ,OAAA,IAAI,GAAM,MAAM,OAAQ,CAC3B,CAAC,KAAM,UAAW,KAAM,QAAS,MAAO,OACxC,CAAC,KAAM,UAAW,KAAM,QAAS,MAAO,IAAI,GAAM,WAAW,EAAK,UAClE,CAAC,KAAM,WAAY,KAAM,QAAS,MAAO,IAAI,GAAM,YAAY,EAAK,WACpE,CAAC,KAAM,UAAW,KAAM,QAAS,MAAO,IAAI,GAAM,WAAW,EAAK,QAAS,OA9CnF,GAAe,GAAK,SAAqB,GACjC,OAAyB,IAAzB,EAAS,YACF,IAAI,GAAM,MAAM,oBAAqB,CACxC,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,WAAY,KAAM,QAAS,MAAO,IAAI,GAAM,SAAS,EAAS,WACrE,CAAC,KAAM,eAAgB,KAAM,SAAU,MAAO,EAAS,gBAGpD,IAAI,GAAM,MAAM,oBAAqB,CACxC,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,WAAY,KAAM,QAAS,MAAO,IAAI,GAAM,SAAS,EAAS,YACvE,OAAO,GAAM,WAAW,aAAc,EAAS,eAKzD,GAAe,GAAK,SAAqB,GAE9B,OADP,EAAM,OAAgC,IAAzB,EAAS,YAAmB,wCAClC,IAAI,GAAM,MAAM,oBAAqB,CACxC,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,WAAY,KAAM,QAAS,MAAO,IAAI,GAAM,SAAS,EAAS,YACvE,OAAO,GAAM,UAAU,SAAU,EAAS,cAAe,SAAS,GACzD,OAAA,IAAI,GAAM,MAAM,oBAAqB,GAAM,WAAW,YAAa,SAIlF,GAAe,GAAK,SAAqB,GAE9B,OADP,EAAM,OAAgC,IAAzB,EAAS,YAAmB,wCAClC,IAAI,GAAM,MAAM,oBAAqB,CACxC,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,WAAY,KAAM,QAAS,MAAO,IAAI,GAAM,SAAS,EAAS,YACvE,OAAO,GAAM,UAAU,SAAU,EAAS,aAAc,SAAS,GACxD,OAAA,IAAI,GAAM,MAAM,mBAAoB,GAAM,UAAU,WAAY,EAAa,SAAS,GAClF,OAAA,IAAI,GAAM,MAAM,gBACnB,CAAC,CAAC,KAAM,WAAY,KAAM,SAAU,MAAO,EAAS,WACnD,OAAO,GAAM,WAAW,YAAa,EAAS,WAAY,EAAS,WAAW,OAAS,aAexG,IAAA,GAAe,CAAE,MAAO,GAAgB,KAAM,IChQ9C,SAAS,GAAe,EAAM,GACpB,IAAA,EAAI,IAAI,GAAM,OAAO,EAAM,GAC3B,EAAe,EAAE,aACvB,EAAM,SAA0B,IAAjB,EAAoB,mCACnC,EAAE,aACF,EAAE,aAIGD,IAHC,IAAA,EAAc,EAAE,aAEhB,EAAO,GACJ,EAAI,EAAG,EAAI,EAAa,IAAK,CAC5B,IAAA,EAAM,EAAE,WACR,EAAa,EAAE,aACf,EAAa,EAAE,aACf,EAAO,EAAO,KAAK,EAAM,EAAQ,EAAY,GAEnD,EAAK,GAAO,EAET,OAAA,EAGX,SAAS,GAAc,GACb,IAAA,EAAU,OAAO,KAAK,GAAM,OAC9B,EAAa,GACX,EAAmB,GAAe,GAAV,EAExB,EAAS,IAAI,GAAM,MAAM,OAAQ,CACnC,CAAC,KAAM,UAAW,KAAM,QAAS,MAAO,GACxC,CAAC,KAAM,QAAS,KAAM,QAAS,MAAO,GACtC,CAAC,KAAM,SAAU,KAAM,QAAS,MAAO,GACvC,CAAC,KAAM,UAAW,KAAM,QAAS,MAAO,KAGvCA,IAAAA,IAAI,KAAO,EAAM,CACZ,IAAA,EAAM,EAAW,OACvB,GAAc,EAAK,GAEnB,EAAO,OAAO,KAAK,CAAC,KAAM,OAAS,EAAK,KAAM,MAAO,MAAO,IAC5D,EAAO,OAAO,KAAK,CAAC,KAAM,UAAY,EAAK,KAAM,QAAS,MAAO,EAAmB,IACpF,EAAO,OAAO,KAAK,CAAC,KAAM,UAAY,EAAK,KAAM,QAAS,MAAO,EAAK,GAAK,SAKxE,OAFP,EAAO,OAAO,KAAK,CAAC,KAAM,aAAc,KAAM,YAAa,MAAO,IAE3D,EAGX,IAAA,GAAe,CAAE,MAAO,GAAgB,KAAM,IClC9C,SAAS,GAAK,GACH,OAAA,KAAK,IAAI,GAAK,KAAK,IAAI,GAAK,EAGvC,SAAS,GAAgB,GACd,KAAA,EAAM,OAAS,GAAM,GACxB,EAAM,KAAK,GAIVA,IADD,IAAA,EAAM,EACD,EAAI,EAAG,EAAI,EAAM,OAAQ,GAAK,EACnC,IAAQ,EAAM,IAAM,KACf,EAAM,EAAI,IAAM,KAChB,EAAM,EAAI,IAAM,GAChB,EAAM,EAAI,GAIZ,OADP,GAAO,KAAK,IAAI,EAAG,IAIvB,SAAS,GAAgB,EAAK,EAAU,EAAQ,GACrC,OAAA,IAAI,GAAM,OAAO,eAAgB,CACpC,CAAC,KAAM,MAAO,KAAM,MAAO,WAAe,IAAR,EAAoB,EAAM,IAC5D,CAAC,KAAM,WAAY,KAAM,QAAS,WAAoB,IAAb,EAAyB,EAAW,GAC7E,CAAC,KAAM,SAAU,KAAM,QAAS,WAAkB,IAAX,EAAuB,EAAS,GACvE,CAAC,KAAM,SAAU,KAAM,QAAS,WAAkB,IAAX,EAAuB,EAAS,KAI/E,SAAS,GAAc,GACb,IAAA,EAAO,IAAI,GAAM,MAAM,OAAQ,CACjC,CAAC,KAAM,UAAW,KAAM,MAAO,MAAO,QACtC,CAAC,KAAM,YAAa,KAAM,SAAU,MAAO,GAC3C,CAAC,KAAM,cAAe,KAAM,SAAU,MAAO,GAC7C,CAAC,KAAM,gBAAiB,KAAM,SAAU,MAAO,GAC/C,CAAC,KAAM,aAAc,KAAM,SAAU,MAAO,KAEhD,EAAK,OAAS,EACd,EAAK,UAAY,EAAO,OAClB,IAAA,EAAkB,KAAK,IAAI,EAAG,GAAK,EAAK,YAC9C,EAAK,YAAc,GAAK,EACxB,EAAK,cAAgB,GAAK,GAC1B,EAAK,WAA8B,GAAjB,EAAK,UAAiB,EAAK,YAMtC,IAJD,IAAA,EAAe,GACf,EAAc,GAEhB,EAAS,EAAK,SAAY,KAAkB,SAAW,EAAK,UACzD,EAAS,GAAM,GAClB,GAAU,EACV,EAAY,KAAK,CAAC,KAAM,UAAW,KAAM,OAAQ,MAAO,IAGvDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,GAAK,EAAG,CACjC,IAAA,EAAI,EAAO,GACjB,EAAM,SAAgC,IAAvB,EAAE,UAAU,OAAc,aAAe,EAAE,UAAY,gBAChE,IAAA,EAAc,EAAE,SAChB,EAAc,GAAgB,EAAE,UAAW,GAAgB,EAAE,UAAW,EAAQ,GAK/E,IAJP,EAAa,KAAK,CAAC,KAAM,EAAY,IAAM,gBAAiB,KAAM,SAAU,MAAO,IACnF,EAAY,KAAK,CAAC,KAAM,EAAE,UAAY,SAAU,KAAM,SAAU,MAAO,IACvE,GAAU,EACV,EAAM,UAAU,MAAM,GAAS,gDACxB,EAAS,GAAM,GAClB,GAAU,EACV,EAAY,KAAK,CAAC,KAAM,UAAW,KAAM,OAAQ,MAAO,IAezD,OAVP,EAAa,KAAK,SAAS,EAAI,GACvB,OAAA,EAAG,MAAM,IAAM,EAAG,MAAM,IACjB,GAEC,IAIhB,EAAK,OAAS,EAAK,OAAO,OAAO,GACjC,EAAK,OAAS,EAAK,OAAO,OAAO,GAC1B,EAMX,SAAS,GAAe,EAAM,EAAO,GAC5BA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,GAAK,EAAG,CAChC,IAAA,EAAa,EAAK,iBAAiB,EAAM,IAC3C,GAAA,EAAa,EAEN,OADO,EAAK,OAAO,IAAI,GACjB,aAId,OAAA,EAGX,SAAS,GAAQ,GAERA,IADD,IAAA,EAAM,EACD,EAAI,EAAG,EAAI,EAAG,OAAQ,GAAK,EAChC,GAAO,EAAG,GAGP,OAAA,EAAM,EAAG,OAKpB,SAAS,GAAgB,GAehBA,IAdC,IAOF,EAPE,EAAQ,GACR,EAAQ,GACR,EAAQ,GACR,EAAQ,GACR,EAAgB,GAChB,EAAmB,GACnB,EAAoB,GAEtB,EAAgB,EAChB,EAAkB,EAClB,EAAkB,EAClB,EAAkB,EAClB,EAAkB,EAEb,EAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,GAAK,EAAG,CACtC,IAAA,EAAQ,EAAK,OAAO,IAAI,GACxB,EAA0B,EAAhB,EAAM,QAElB,GAAA,MAAM,EAAM,cACN,MAAA,IAAI,MAAM,SAAW,EAAM,KAAO,KAAO,EAAI,qCAGnD,EAAiB,QAA8B,IAAnB,IAExB,EAAU,IACV,EAAiB,GAIrB,EAAgB,IAChB,EAAgB,GAGd,IAAA,EAAW,GAAI,gBAAgB,GACjC,GAAA,EAAW,GACX,GAAmB,GAAK,OACrB,GAAI,EAAW,GAClB,GAAmB,GAAK,EAAW,QAChC,GAAI,EAAW,GAClB,GAAmB,GAAK,EAAW,OAChC,CAAA,KAAI,EAAW,KAGZ,MAAA,IAAI,MAAM,6DAFhB,GAAmB,GAAK,EAAW,GAKnC,GAAe,YAAf,EAAM,KAAN,CACE,IAAA,EAAU,EAAM,aACtB,EAAM,KAAK,EAAQ,MACnB,EAAM,KAAK,EAAQ,MACnB,EAAM,KAAK,EAAQ,MACnB,EAAM,KAAK,EAAQ,MACnB,EAAiB,KAAK,EAAQ,iBAC9B,EAAkB,KAAK,EAAQ,kBAC/B,EAAc,KAAK,EAAM,eAGvB,IAAA,EAAU,CACZ,KAAM,KAAK,IAAI,MAAM,KAAM,GAC3B,KAAM,KAAK,IAAI,MAAM,KAAM,GAC3B,KAAM,KAAK,IAAI,MAAM,KAAM,GAC3B,KAAM,KAAK,IAAI,MAAM,KAAM,GAC3B,gBAAiB,KAAK,IAAI,MAAM,KAAM,GACtC,gBAAiB,GAAQ,GACzB,mBAAoB,KAAK,IAAI,MAAM,KAAM,GACzC,mBAAoB,KAAK,IAAI,MAAM,KAAM,GACzC,oBAAqB,KAAK,IAAI,MAAM,KAAM,IAE9C,EAAQ,SAAW,EAAK,SACxB,EAAQ,UAAY,EAAK,UAEnB,IAAA,EAAY,GAAK,KAAK,CACxB,MAAO,EACP,WAAY,EAAK,WACjB,KAAM,EAAQ,KACd,KAAM,EAAQ,KACd,KAAM,EAAQ,KACd,KAAM,EAAQ,KACd,cAAe,EACf,iBAAkB,EAAK,mBAGrB,EAAY,GAAK,KAAK,CACxB,SAAU,EAAQ,SAClB,UAAW,EAAQ,UACnB,gBAAiB,EAAQ,gBACzB,mBAAoB,EAAQ,mBAC5B,oBAAqB,EAAQ,oBAC7B,WAAY,EAAQ,oBAAsB,EAAQ,KAAO,EAAQ,MACjE,iBAAkB,EAAK,OAAO,SAG5B,EAAY,GAAK,KAAK,EAAK,OAAO,QAElC,EAAW,GAAI,KAAK,OAAO,OAAO,CACpC,cAAe,KAAK,MAAM,EAAQ,iBAClC,iBAAkB,EAClB,gBAAiB,EACjB,gBAAiB,EACjB,gBAAiB,EACjB,gBAAiB,EACjB,gBAAiB,EAKjB,cAAe,EAAQ,SACvB,eAAgB,EAAQ,UACxB,aAAc,EACd,YAAa,EAAQ,KACrB,aAAc,KAAK,IAAI,EAAQ,MAC/B,iBAAkB,EAClB,SAAU,GAAe,EAAM,OAAQ,CAAC,KAAM,KAAK,MAAM,EAAQ,SAAW,KAAK,KACjF,WAAY,GAAe,EAAM,4BAA6B,GAAS,KACvE,cAAe,EAAK,QAAQ,KAAO,GAAK,EACxC,YAAa,EAAK,QAAQ,KAAO,GAAK,GACvC,EAAK,OAAO,MAET,EAAY,GAAK,KAAK,EAAK,QAC3B,EAAY,GAAK,KAAK,EAAK,QAE3B,EAAoB,EAAK,eAAe,cACxC,EAAmB,EAAK,eAAe,iBACvC,EAAkB,EAAoB,IAAM,EAC9C,EAAiB,EAAK,eAAe,kBACpC,IACD,EAAiB,EAAkB,QAAQ,MAAO,IAAM,IAAM,GAG5D,IAAA,EAAQ,GACTA,IAAAA,IAAI,KAAK,EAAK,MACf,EAAM,GAAK,EAAK,MAAM,GAGrB,EAAM,WACP,EAAM,SAAW,CAAC,GAAI,EAAK,eAAe,gBAAkB,IAAM,IAGjE,EAAM,iBACP,EAAM,eAAiB,CAAC,GAAI,IAG3B,EAAM,kBACP,EAAM,gBAAkB,EAAK,MAAM,YAGlC,EAAM,qBACP,EAAM,mBAAqB,EAAK,MAAM,eAGpC,IAAA,EAAe,GACf,EAAY,GAAM,KAAK,EAAO,GAC9B,EAAa,EAAa,OAAS,EAAI,GAAK,KAAK,QAAgB,EAEjE,EAAY,GAAK,OACjB,EAAW,GAAI,KAAK,EAAK,OAAQ,CACnC,QAAS,EAAK,eAAe,WAC7B,SAAU,EACV,WAAY,EACZ,WAAY,EACZ,eAAgB,EAChB,WAAY,EAAK,WACjB,SAAU,CAAC,EAAG,EAAQ,KAAM,EAAQ,SAAU,EAAQ,mBAGpD,EAAa,EAAK,OAAS,OAAO,KAAK,EAAK,OAAO,OAAS,EAAK,GAAK,KAAK,EAAK,YAAS,EAGzF,EAAS,CAAC,EAAW,EAAW,EAAW,EAAU,EAAW,EAAW,EAAW,EAAU,GAClG,GACA,EAAO,KAAK,GAGZ,EAAK,OAAO,MACZ,EAAO,KAAK,GAAK,KAAK,EAAK,OAAO,OAElC,GACA,EAAO,KAAK,GAUXA,IAPC,IAAA,EAAY,GAAc,GAI1B,EAAW,GADH,EAAU,UAElB,EAAc,EAAU,OAC1B,GAAmB,EACdn5E,EAAI,EAAGA,EAAI,EAAY,OAAQA,GAAK,EACrC,GAAwB,eAAxB,EAAYA,GAAG,KAAuB,CACtC,EAAYA,GAAG,MAAM,mBAAqB,WAAa,EACvD,GAAmB,EACnB,MAIJ,IAAC,EACK,MAAA,IAAI,MAAM,sDAGb,OAAA,EAGX,IAAA,GAAe,CAAE,KAAM,GAAe,YAAa,GAAe,gBAAE,ICzUpE,SAAS,GAAU,EAAK,GAIb,IAFH,IAAA,EAAO,EACP,EAAO,EAAI,OAAS,EACjB,GAAQ,GAAM,CACX,IAAA,EAAQ,EAAO,IAAU,EACzB,EAAM,EAAI,GAAM,IAClB,GAAA,IAAQ,EACD,OAAA,EACA,EAAM,EACb,EAAO,EAAO,EACT,EAAO,EAAO,EAGpB,OAAC,EAAO,EAGnB,SAAS,GAAU,EAAK,GAIb,IAFH,IAAA,EAAO,EACP,EAAO,EAAI,OAAS,EACjB,GAAQ,GAAM,CACX,IAAA,EAAQ,EAAO,IAAU,EACzB,EAAM,EAAI,GACZ,GAAA,IAAQ,EACD,OAAA,EACA,EAAM,EACb,EAAO,EAAO,EACT,EAAO,EAAO,EAGpB,OAAC,EAAO,EAInB,SAAS,GAAY,EAAQ,GAKlB,IAHH,IAAA,EACA,EAAO,EACP,EAAO,EAAO,OAAS,EACpB,GAAQ,GAAM,CACX,IAAA,EAAQ,EAAO,IAAU,EAEzB,GADN,EAAQ,EAAO,IACK,MAChB,GAAA,IAAU,EACH,OAAA,EACA,EAAQ,EACf,EAAO,EAAO,EACT,EAAO,EAAO,EAEvB,GAAA,EAAO,EAEH,OAAA,GADJ,EAAQ,EAAO,EAAO,IACJ,IAAY,EACvB,EAQf,SAAS,GAAO,EAAM,GACb,KAAA,KAAO,EACP,KAAA,UAAY,ECxDrB,SAAS,GAAS,GACd,GAAO,KAAK,KAAM,EAAM,QCA5B,SAAS,GAAa,GAClB,GAAO,KAAK,KAAM,EAAM,QAI5B,SAAS,GAAY,EAAK,GAChB,IAAA,EAAI,EAAI,OACV,GAAA,IAAM,EAAI,OAAiB,OAAA,EAC1Bm5E,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IACf,GAAA,EAAI,KAAO,EAAI,GAAa,OAAA,EAE7B,OAAA,EAIX,SAAS,GAAe,EAAa,EAAQ,GAEpCA,IADC,IAAA,EAAY,EAAY,UACrB,EAAI,EAAG,EAAI,EAAU,OAAQ,IAAK,CACjC,IAAA,EAAW,EAAU,GACvB,GAAA,EAAS,cAAgB,EAClB,OAAA,EAGX,GAAA,EAEO,OADP,EAAU,KAAK,GACR,ECtCf,SAAS,KACE,MAAkB,oBAAX,OAOlB,SAAS,GAAwB,GAGxBA,IAFC,IAAA,EAAK,IAAI,YAAY,EAAO,QAC5B,EAAO,IAAI,WAAW,GACnB,EAAI,EAAG,EAAI,EAAO,SAAU,EACjC,EAAK,GAAK,EAAO,GAGd,OAAA,EAGX,SAAS,GAAwB,GAGxBA,IAFC,IAAA,EAAS,IAAI,EAAO,EAAG,YACvB,EAAO,IAAI,WAAW,GACnB,EAAI,EAAG,EAAI,EAAO,SAAU,EACjC,EAAO,GAAK,EAAK,GAGd,OAAA,EAGX,SAAS,GAAc,EAAY,GAC3B,IAAC,EACK,MAAA,ECrBd,SAAS,GAAqB,EAAG,EAAM,EAAe,EAAoB,GAClE,IAAA,EAqBG,OApBF,EAAO,GAAsB,GAE9B,EAAI,EAAE,YAEuB,IAAxB,EAAO,KACR,GAAK,GAGT,EAAI,EAAgB,GAKhB,GADC,EAAO,GAAe,EACnB,EAGA,EAAgB,EAAE,aAIvB,EAIX,SAAS,GAAW,EAAO,EAAM,GACvB,IAMF,EACA,EAPE,EAAI,IAAI,GAAM,OAAO,EAAM,GAS7B,GARJ,EAAM,iBAAmB,EAAE,aAC3B,EAAM,MAAQ,EAAE,aAChB,EAAM,MAAQ,EAAE,aAChB,EAAM,MAAQ,EAAE,aAChB,EAAM,MAAQ,EAAE,aAIZ,EAAM,iBAAmB,EAAG,CAGvBA,IADC,IAAA,EAAkB,EAAM,gBAAkB,GACvC,EAAI,EAAG,EAAI,EAAM,iBAAkB,GAAK,EAC7C,EAAgB,KAAK,EAAE,eAG3B,EAAM,kBAAoB,EAAE,cAC5B,EAAM,aAAe,GAChBA,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAM,kBAAmBA,GAAK,EAC9C,EAAM,aAAa,KAAK,EAAE,aAGxB,IAAA,EAAsB,EAAgB,EAAgB,OAAS,GAAK,EAC1E,EAAQ,GACHm5E,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAqBA,GAAK,EAItC,GAHJ,EAAO,EAAE,YACT,EAAM,KAAK,IAEC,EAAP,GAAY,EAERm5E,IADC,IAAA,EAAc,EAAE,YACb,EAAI,EAAG,EAAI,EAAa,GAAK,EAClC,EAAM,KAAK,GACXn5E,GAAK,EAOb,GAFJ,EAAM,SAAS,EAAM,SAAW,EAAqB,cAEjD,EAAgB,OAAS,EAAG,CACtB,IACF,EADE,EAAS,GAGX,GAAA,EAAsB,EAAG,CACpBm5E,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAqBA,GAAK,EAC1C,EAAO,EAAMA,IACb,EAAQ,IACF,WAAoB,EAAP,GACnB,EAAM,mBAAqB,EAAgB,QAAQA,IAAM,EACzD,EAAO,KAAK,GAIXm5E,IADD,IAAA,EAAK,EACAn5E,EAAI,EAAGA,EAAI,EAAqBA,GAAK,EAC1C,EAAO,EAAMA,IACb,EAAQ,EAAOA,IACT,EAAI,GAAqB,EAAG,EAAM,EAAI,EAAG,IAC/C,EAAK,EAAM,EAIVm5E,IADD,IAAA,EAAK,EACAn5E,EAAI,EAAGA,EAAI,EAAqBA,GAAK,EAC1C,EAAO,EAAMA,IACb,EAAQ,EAAOA,IACT,EAAI,GAAqB,EAAG,EAAM,EAAI,EAAG,IAC/C,EAAK,EAAM,EAInB,EAAM,OAAS,OAEf,EAAM,OAAS,QAEhB,GAA+B,IAA3B,EAAM,iBACb,EAAM,OAAS,OACZ,CACH,EAAM,aAAc,EACpB,EAAM,OAAS,GACf,EAAM,WAAa,GAEZ,IADH,IAAA,GAAiB,EACd,GAAgB,CACnB,EAAQ,EAAE,cACJ,IAAA,EAAY,CACd,WAAY,EAAE,cACd,OAAQ,EACR,QAAS,EACT,QAAS,EACT,OAAQ,EACR,GAAI,EACJ,GAAI,IAEK,EAAR,GAAa,GAED,EAAR,GAAa,GAEd,EAAU,GAAK,EAAE,aACjB,EAAU,GAAK,EAAE,cAGjB,EAAU,cAAgB,CAAC,EAAE,cAAe,EAAE,gBAKrC,EAAR,GAAa,GAEd,EAAU,GAAK,EAAE,YACjB,EAAU,GAAK,EAAE,aAGjB,EAAU,cAAgB,CAAC,EAAE,YAAa,EAAE,cAIvC,EAAR,GAAa,EAEd,EAAU,OAAS,EAAU,OAAS,EAAE,gBACxB,GAAR,GAAc,GAEtB,EAAU,OAAS,EAAE,eACrB,EAAU,OAAS,EAAE,iBACL,IAAR,GAAe,IAEvB,EAAU,OAAS,EAAE,eACrB,EAAU,QAAU,EAAE,eACtB,EAAU,QAAU,EAAE,eACtB,EAAU,OAAS,EAAE,gBAGzB,EAAM,WAAW,KAAK,GACtB,KAA4B,GAAR,GAEpB,GAAQ,IAAR,EAAe,CAEf,EAAM,kBAAoB,EAAE,cAC5B,EAAM,aAAe,GAChBm5E,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAM,kBAAmBA,GAAK,EAC9C,EAAM,aAAa,KAAK,EAAE,eAO1C,SAAS,GAAgB,EAAQ,GAExBm5E,IADC,IAAA,EAAY,GACT,EAAI,EAAG,EAAI,EAAO,OAAQ,GAAK,EAAG,CACjC,IAAA,EAAK,EAAO,GACZ,EAAQ,CACV,EAAG,EAAU,OAAS,EAAG,EAAI,EAAU,QAAU,EAAG,EAAI,EAAU,GAClE,EAAG,EAAU,QAAU,EAAG,EAAI,EAAU,OAAS,EAAG,EAAI,EAAU,GAClE,QAAS,EAAG,QACZ,mBAAoB,EAAG,oBAE3B,EAAU,KAAK,GAGZ,OAAA,EAGX,SAAS,GAAY,GAGZA,IAFC,IAAA,EAAW,GACb,EAAiB,GACZ,EAAI,EAAG,EAAI,EAAO,OAAQ,GAAK,EAAG,CACjC,IAAA,EAAK,EAAO,GAClB,EAAe,KAAK,GAChB,EAAG,qBACH,EAAS,KAAK,GACd,EAAiB,IAKlB,OADP,EAAM,SAAmC,IAA1B,EAAe,OAAc,uDACrC,EAIX,SAAS,GAAQ,GACP,IAAA,EAAI,IAAI,EACV,IAAC,EACM,OAAA,EAKNA,IAFC,IAAA,EAAW,GAAY,GAEpB,EAAe,EAAG,EAAe,EAAS,SAAU,EAAc,CACjE,IAAA,EAAU,EAAS,GAErB,EAAO,KACP,EAAO,EAAQ,EAAQ,OAAS,GAChC,EAAO,EAAQ,GAEf,GAAA,EAAK,QACL,EAAE,OAAO,EAAK,EAAG,EAAK,QAElB,GAAA,EAAK,QACL,EAAE,OAAO,EAAK,EAAG,EAAK,OACnB,CAEG,IAAA,EAAQ,CAAC,EAAuB,IAAnB,EAAK,EAAI,EAAK,GAAU,EAAuB,IAAnB,EAAK,EAAI,EAAK,IAC7D,EAAE,OAAO,EAAM,EAAG,EAAM,GAI3BA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAQ,SAAU,EAK9B,GAJJ,EAAO,EACP,EAAO,EACP,EAAO,GAAS,EAAI,GAAK,EAAQ,QAE7B,EAAK,QAEL,EAAE,OAAO,EAAK,EAAG,EAAK,OACnB,CACC,IACA,EAAQ,EAEP,EAAK,SACE,CAAE,EAAuB,IAAnB,EAAK,EAAI,EAAK,GAAU,EAAuB,IAAnB,EAAK,EAAI,EAAK,IAGvD,EAAK,UACN,EAAQ,CAAE,EAAuB,IAAnB,EAAK,EAAI,EAAK,GAAU,EAAuB,IAAnB,EAAK,EAAI,EAAK,KAG5D,EAAE,iBAAiB,EAAK,EAAG,EAAK,EAAG,EAAM,EAAG,EAAM,GAI1D,EAAE,YAEC,OAAA,EAGX,SAAS,GAAU,EAAQ,GACnB,GAAA,EAAM,YACDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAM,WAAW,OAAQ,GAAK,EAAG,CAC3C,IAAA,EAAY,EAAM,WAAW,GAC7B,EAAiB,EAAO,IAAI,EAAU,YAGxC,GADJ,EAAe,UACX,EAAe,OAAQ,CACnB,IAAA,OAAA,EACA,QAA4B,IAA5B,EAAU,cAEV,EAAoB,GAAgB,EAAe,OAAQ,OACxD,CAEE,GAAA,EAAU,cAAc,GAAK,EAAM,OAAO,OAAS,GACnD,EAAU,cAAc,GAAK,EAAe,OAAO,OAAS,EACvD,MAAA,MAAM,kCAAoC,EAAM,MAEpD,IAAA,EAAU,EAAM,OAAO,EAAU,cAAc,IACjD,EAAW,EAAe,OAAO,EAAU,cAAc,IACvD,EAAY,CACd,OAAQ,EAAU,OAAQ,QAAS,EAAU,QAC7C,QAAS,EAAU,QAAS,OAAQ,EAAU,OAC9C,GAAI,EAAG,GAAI,GAEf,EAAW,GAAgB,CAAC,GAAW,GAAW,GAClD,EAAU,GAAK,EAAQ,EAAI,EAAS,EACpC,EAAU,GAAK,EAAQ,EAAI,EAAS,EACpC,EAAoB,GAAgB,EAAe,OAAQ,GAE/D,EAAM,OAAS,EAAM,OAAO,OAAO,IAKxC,OAAA,GAAQ,EAAM,QAGzB,SAAS,GAAkB,EAAM,EAAO,EAAM,GAIrCA,IAHC,IAAA,EAAS,IAAI,GAAS,SAAS,GAG5B,EAAI,EAAG,EAAI,EAAK,OAAS,EAAG,GAAK,EAAG,CACnC,IAAA,EAAS,EAAK,GAEhB,IADe,EAAK,EAAI,GAExB,EAAO,KAAK,EAAG,GAAS,eAAe,EAAM,EAAG,GAAY,EAAM,EAAQ,EAAQ,KAElF,EAAO,KAAK,EAAG,GAAS,YAAY,EAAM,IAI3C,OAAA,EAGX,SAAS,GAA0B,EAAM,EAAO,EAAM,GAC5C,IAAA,EAAS,IAAI,GAAS,SAAS,GAY9B,OAVP,EAAK,MAAQ,SAAS,GACZ,IAAA,EAAS,EAAK,GAEhB,IADe,EAAK,EAAI,GAExB,EAAO,KAAK,EAAG,GAAS,eAAe,EAAM,EAAG,GAAY,EAAM,EAAQ,EAAQ,KAElF,EAAO,KAAK,EAAG,GAAS,YAAY,EAAM,KAI3C,EAIX,SAAS,GAAe,EAAM,EAAO,EAAM,EAAM,GACzC,OAAA,EAAI,UACG,GAA0B,EAAM,EAAO,EAAM,GAE7C,GAAkB,EAAM,EAAO,EAAM,GJlRpD,GAAO,UAAY,CAWf,UAAW,GAWX,UAAW,GAOX,SAAU,SAAS,GACX,IAAA,EAAS,KAAK,KAAK,OAAO,KAAK,WAI5B,OAHF,GAAU,IACX,EAAS,KAAK,KAAK,OAAO,KAAK,WAAa,KAAK,sBAE9C,GAQX,eAAgB,WACR,IAAA,EAAS,KAAK,WACd,OAAC,EACE,EAAO,QAAQ,IAAI,SAAS,GACxB,OAAA,EAAO,MAFI,IAY1B,qBAAsB,WACd,IAAA,EAAS,KAAK,WACd,GAAC,EAAD,CAECA,IADD,IAAA,GAAU,EACL,EAAI,EAAG,EAAI,EAAO,QAAQ,OAAQ,IAAK,CACtC,IAAA,EAAO,EAAO,QAAQ,GAAG,IAC3B,GAAS,SAAT,EAAwB,OAAA,EACf,SAAT,IAAiB,GAAU,GAE/B,OAAA,EAAgB,YAAhB,IAUR,eAAgB,SAAS,EAAQ,GACvB,IAAA,EAAS,KAAK,SAAS,GACzB,GAAA,EAAQ,CACR,EAAS,GAAU,OACb,IAAA,EAAU,EAAO,QACjB,EAAM,GAAU,EAAO,QAAS,GAClC,GAAA,GAAO,EACA,OAAA,EAAQ,GAAK,OACjB,GAAI,EAAQ,CACT,IAAA,EAAM,CACR,IAAK,EACL,OAAQ,CACJ,eAAgB,CAAC,SAAU,EAAG,gBAAiB,MAAQ,eAAgB,IACvE,eAAgB,KAIjB,OADP,EAAQ,QAAQ,EAAI,EAAK,EAAG,GACrB,EAAI,UAavB,gBAAiB,SAAS,EAAQ,EAAU,GAClC,IAAA,EAAc,KAAK,eAAe,EAAQ,GAC5C,GAAA,EAAa,CACT,IAAC,GAAyB,SAAb,GAAoC,SAAb,EAC7B,OAAA,EAAY,eAEjB,IAAA,EAAM,GAAU,EAAY,eAAgB,GAC9C,GAAA,GAAO,EACA,OAAA,EAAY,eAAe,GAAK,QACpC,GAAI,EAAQ,CACT,IAAA,EAAgB,CAClB,IAAK,EACL,QAAS,CAAC,SAAU,EAAG,gBAAiB,MAAQ,eAAgB,KAG7D,OADP,EAAY,eAAe,QAAQ,EAAI,EAAK,EAAG,GACxC,EAAc,WAcjC,gBAAiB,SAAS,EAAQ,EAAU,EAAS,GAC3C,IAAA,EAAe,KAAK,gBAAgB,EAAQ,EAAU,GACxD,GAAA,EAAc,CAMTA,IALD,IAAA,EACE,EAAc,EAAa,eAC3B,EAAc,KAAK,KAAK,OAAO,KAAK,WAAW,SAG5C,EAAI,EAAG,EAAI,EAAY,OAAQ,IAEhC,IADJ,EAAgB,EAAY,EAAY,KACtB,MAAQ,EACf,OAAA,EAAc,QAGzB,GAAA,EAAQ,CACF,IAAA,EAAQ,EAAY,OASnB,OAPP,EAAM,OAAiB,IAAV,GAAe,GAAW,EAAY,EAAQ,GAAG,IAAK,iDACnE,EAAgB,CACZ,IAAK,EACL,QAAS,CAAE,OAAQ,EAAG,kBAAmB,KAE7C,EAAY,KAAK,GACjB,EAAY,KAAK,GACV,EAAc,WAejC,gBAAiB,SAAS,EAAQ,EAAU,EAAS,EAAY,GACvD,IAAA,EAAe,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAC/D,EAAS,GACX,GAAA,EAAc,CAKTA,IAJD,IAAA,EACE,EAAoB,EAAa,kBACjC,EAAa,KAAK,KAAK,OAAO,KAAK,WAAW,QAE3C,EAAI,EAAG,EAAI,EAAkB,OAAQ,KAC1C,EAAc,EAAW,EAAkB,KAC3B,aAAe,GAC3B,EAAO,KAAK,GAGhB,GAAkB,IAAlB,EAAO,QAAgB,EAAQ,CAC/B,EAAc,CACV,WAAY,EACZ,WAAY,EACZ,UAAW,GACX,sBAAkB,GAEhB,IAAA,EAAQ,EAAW,OAGlB,OAFP,EAAW,KAAK,GAChB,EAAkB,KAAK,GAChB,CAAC,IAGT,OAAA,GAUX,cAAe,SAAS,EAAe,GAC3B,OAAA,EAAc,QACb,KAAA,EACG,OAAA,EAAc,YAAc,GAAc,EAAa,EAAc,WAAa,EAAc,QAAQ,OACjG,EAAc,QAAQ,EAAa,EAAc,YAErD,EACN,KAAA,EACK,IAAA,EAAQ,GAAY,EAAc,OAAQ,GACzC,OAAA,EAAQ,EAAM,QAAU,IAW3C,iBAAkB,SAAS,EAAe,GAC9B,OAAA,EAAc,QACb,KAAA,EACK,IAAA,EAAQ,GAAU,EAAc,OAAQ,GACvC,OAAA,GAAS,EAAI,GAAS,EAC5B,KAAA,EACK,IAAA,EAAQ,GAAY,EAAc,OAAQ,GACzC,OAAA,EAAQ,EAAM,MAAQ,EAAa,EAAM,OAAS,IAYrE,eAAgB,SAAS,GACjB,GAAyB,IAAzB,EAAc,OACP,OAAA,EAAc,OAIhBA,IAFC,IAAA,EAAS,GACT,EAAS,EAAc,OACpB,EAAI,EAAG,EAAI,EAAO,OAAQ,IAI1BA,IAHC,IAAA,EAAQ,EAAO,GACf,EAAQ,EAAM,MACd,EAAM,EAAM,IACT,EAAI,EAAO,GAAK,EAAK,IAC1B,EAAO,KAAK,GAGb,OAAA,IC9TnB,GAAS,UAAY,GAAO,UAK5B,GAAS,UAAU,KAAO,WAChB,IAAA,EAAS,KAAK,uBACf,KAAA,qBAAuB,KAAK,iBAAiB,IAUtD,GAAS,UAAU,gBAAkB,SAAS,EAAgB,EAAW,GAChEA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAe,OAAQ,IAElCA,IADC,IAAA,EAAY,EAAe,GAAG,UAC3B,EAAI,EAAG,EAAI,EAAU,OAAQ,IAAK,CACjC,IAAA,EAAW,EAAU,GACrB,EAAW,KAAK,iBAAiB,EAAS,SAAU,GACtD,KAAA,EAAW,GACP,OAAA,EAAS,WACR,KAAA,EAGIA,IADD,IAAA,EAAU,EAAS,SAAS,GACvB,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,CACjC,IAAA,EAAO,EAAQ,GACf,GAAA,EAAK,cAAgB,EACd,OAAA,EAAK,QAAU,EAAK,OAAO,UAAY,EAGtD,MACC,KAAA,EAEK,IAAA,EAAS,KAAK,cAAc,EAAS,UAAW,GAChD,EAAS,KAAK,cAAc,EAAS,UAAW,GAChDE,EAAO,EAAS,aAAa,GAAQ,GACpCA,OAAAA,EAAK,QAAUA,EAAK,OAAO,UAAY,GAIvD,OAAA,GAUX,GAAS,UAAU,iBAAmB,SAAS,EAAQ,GAC/C,GAAA,KAAK,KAAK,OAAO,KACV,OAAA,KAAK,gBAAgB,EAAQ,EAAU,OAAQ,IC7B9D,GAAa,UAAY,GAAO,UAMhC,GAAa,UAAU,mBAAqB,WAEjC,MAAA,CACH,QAAS,EACT,QAAS,CAAC,CACN,IAAK,OACL,OAAQ,CACJ,eAAgB,CAAE,SAAU,EAAG,gBAAiB,MAAQ,eAAgB,IACxE,eAAgB,MAGxB,SAAU,GACV,QAAS,KAWjB,GAAa,UAAU,UAAY,SAAS,EAAS,EAAQ,GAGpDF,IAFC,IAAA,EAAgB,GAChB,EAAe,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAC5D,EAAM,EAAG,EAAM,EAAa,OAAQ,IAEpCA,IADC,IAAA,EAAY,EAAa,GAAK,UAC3B,EAAI,EAAG,EAAI,EAAU,OAAQ,IAAK,CACjC,IAAA,EAAW,EAAU,GACrB,EAAS,KAAK,eAAe,EAAS,UACxC,OAAA,EACA,GAAyB,IAAzB,EAAS,YAAmB,CACtB,IAAA,EAAQ,EAAS,aAClB,IAAA,EAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CAC1B,IAAA,EAAQ,EAAO,GACrB,EAAc,KAAK,CAAE,IAAK,EAAO,GAAI,EAAQ,SAE9C,CACG,IAAA,EAAa,EAAS,WACvB,IAAA,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC3B,EAAc,KAAK,CAAE,IAAK,EAAO,GAAI,GAAI,EAAW,MAK7D,OAAA,GAUX,GAAa,UAAU,cAAgB,SAAS,EAAS,EAAQ,GAGxDA,IAFC,IAAA,EAAa,GACb,EAAe,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAC5D,EAAM,EAAG,EAAM,EAAa,OAAQ,IAEpCA,IADC,IAAA,EAAY,EAAa,GAAK,UAC3B,EAAI,EAAG,EAAI,EAAU,OAAQ,IAI7BA,IAHC,IAAA,EAAW,EAAU,GACrB,EAAS,KAAK,eAAe,EAAS,UACtC,EAAgB,EAAS,cACtB,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC/B,EAAW,KAAK,CAAE,IAAK,EAAO,GAAI,GAAI,EAAc,KAIzD,OAAA,GAWX,GAAa,UAAU,aAAe,SAAS,EAAS,EAAQ,GAGvDA,IAFC,IAAA,EAAY,GACZ,EAAe,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAC5D,EAAM,EAAG,EAAM,EAAa,OAAQ,IAEpCA,IADC,IAAA,EAAY,EAAa,GAAK,UAC3B,EAAI,EAAG,EAAI,EAAU,OAAQ,IAI7BA,IAHC,IAAA,EAAW,EAAU,GACrB,EAAS,KAAK,eAAe,EAAS,UACtC,EAAe,EAAS,aACrB,EAAI,EAAG,EAAI,EAAO,OAAQ,IAG1BA,IAFC,IAAA,EAAa,EAAO,GACpB,EAAS,EAAa,GACnB,EAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CAC9B,IAAA,EAAM,EAAO,GACnB,EAAU,KAAK,CACX,IAAK,CAAC,GAAY,OAAO,EAAI,YAC7B,GAAI,EAAI,WAMrB,OAAA,GAWX,GAAa,UAAU,UAAY,SAAS,EAAS,EAAc,EAAQ,GACjE,IACA,EAAW,GADG,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAAG,GAAM,GAChC,EAAG,CAC5C,YAAa,EACb,SAAU,CAAC,OAAQ,EAAG,OAAQ,IAC9B,WAAY,KAEhB,EAAM,OAAoC,IAA7B,EAAS,SAAS,OAAc,oDAAsD,EAAS,SAAS,QAC/G,IAAA,EAAgB,EAAa,IAC/B,EAAM,KAAK,UAAU,EAAS,SAAS,OAAQ,GAC/C,EAAM,IACN,GAAO,EAAI,EACX,EAAS,SAAS,OAAO,OAAO,EAAK,EAAG,GACxC,EAAS,WAAW,OAAO,EAAK,EAAG,IAEvC,EAAS,WAAW,GAAO,EAAa,IAU5C,GAAa,UAAU,aAAe,SAAS,EAAS,EAAc,EAAQ,GACpE,IACA,EAAW,GADG,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAAG,GAAM,GAChC,EAAG,CAC5C,YAAa,EACb,SAAU,CAAC,OAAQ,EAAG,OAAQ,IAC9B,cAAe,KAEnB,EAAM,OAAoC,IAA7B,EAAS,SAAS,OAAc,oDAAsD,EAAS,SAAS,QAC/G,IAAA,EAAgB,EAAa,IAC/B,EAAM,KAAK,UAAU,EAAS,SAAS,OAAQ,GAC/C,EAAM,IACN,GAAO,EAAI,EACX,EAAS,SAAS,OAAO,OAAO,EAAK,EAAG,GACxC,EAAS,cAAc,OAAO,EAAK,EAAG,IAE1C,EAAS,cAAc,GAAO,EAAa,IAW/C,GAAa,UAAU,YAAc,SAAS,EAAS,EAAU,EAAQ,GAC/D,IAAA,EAAc,KAAK,gBAAgB,EAAQ,EAAU,EAAS,GAAG,GAAM,GACzE,EAAW,EAAY,UAAU,GAChC,IACD,EAAW,CACP,YAAa,EACb,SAAU,CAAE,OAAQ,EAAG,OAAQ,IAC/B,aAAc,IAElB,EAAY,UAAU,GAAK,GAE/B,EAAM,OAAoC,IAA7B,EAAS,SAAS,OAAc,oDAAsD,EAAS,SAAS,QAC/G,IAAA,EAAgB,EAAS,IAAI,GAC7B,EAAgB,EAAS,IAAI,MAAM,GACnC,EAAgB,CAClB,SAAU,EAAS,GACnB,WAAY,GAEZ,EAAM,KAAK,UAAU,EAAS,SAAS,OAAQ,GAC/C,GAAA,GAAO,EAAG,CAGLA,IADC,IAAA,EAAc,EAAS,aAAa,GACjC,EAAI,EAAG,EAAI,EAAY,OAAQ,IAEhC,GAAA,GAAY,EAAY,GAAG,WAAY,GACvC,OAIR,EAAY,KAAK,QAGjB,GAAO,EAAI,EACX,EAAS,SAAS,OAAO,OAAO,EAAK,EAAG,GACxC,EAAS,aAAa,OAAO,EAAK,EAAG,CAAC,KAW9C,GAAa,UAAU,WAAa,SAAS,EAAS,EAAQ,GACtD,GAAA,SAAS,KAAK,GAEP,OAAA,KAAK,UAAU,EAAS,EAAQ,GAEnC,OAAA,GACC,IAAA,OACA,IAAA,OACM,OAAA,KAAK,UAAU,EAAS,EAAQ,GAC9B,OAAO,KAAK,cAAc,EAAS,EAAQ,IACnD,IAAA,OACA,IAAA,OACA,IAAA,OAAe,OAAA,KAAK,aAAa,EAAS,EAAQ,KAY/D,GAAa,UAAU,IAAM,SAAS,EAAS,EAAK,EAAQ,GACpD,GAAA,SAAS,KAAK,GAEP,OAAA,KAAK,UAAU,EAAS,EAAK,EAAQ,GAExC,OAAA,GACC,IAAA,OACA,IAAA,OACG,MAAkB,iBAAX,EAAI,GACJ,KAAK,UAAU,EAAS,EAAK,EAAQ,GAEzC,KAAK,aAAa,EAAS,EAAK,EAAQ,GAC9C,IAAA,OACA,IAAA,OACA,IAAA,OACM,OAAA,KAAK,YAAY,EAAS,EAAK,EAAQ,KEkD1D,IC7TI,GACA,GACA,GACA,GD0TJ,GAAe,CAAA,QAAE,GAAS,MAAO,IClTjC,SAAS,GAAQ,GAER,KAAA,KAAO,EAEP,KAAA,YAAc,SAAU,GAClB,OAAA,GAAK,QAAQ,GAAS,UAI5B,KAAA,WACL,KAAK,gBACD,EASC,KAAA,YAAc,EAMvB,SAAS,GAAS,GACP,OAAA,EAMX,SAAS,GAAY,GAEV,OAAA,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,IAAI,IAM9C,SAAS,GAAkB,GAChB,OAAA,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,IAAQ,EAAJ,IAAU,EAMxD,SAAS,GAAgB,GACd,OAAA,KAAK,KAAK,IAAM,KAAK,MAAM,KAAK,IAAI,GAAK,IAAO,IAM3D,SAAS,GAAc,GACZ,OAAA,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK,IAAI,IAM7C,SAAS,GAAgB,GACd,OAAA,KAAK,KAAK,GAAK,KAAK,MAAM,KAAK,IAAI,IAM9CC,IAAM,GAAa,SAAU,GACnB,IAAA,EAAS,KAAK,SAChB,EAAQ,KAAK,QAEb,EAAO,EAcP,OAZA,EAAI,IACJ,GAAK,EACL,GAAQ,GAGZ,GARkB,KAAK,YAQN,EAEjB,EAAI,KAAK,MAAM,EAAI,GAAU,GAE7B,GAAK,GAGG,EAAU,EAAQ,EAEnB,EAAI,GAMT,GAAc,CAChB,EAAG,EAEH,EAAG,EAEH,KAAM,IAIN,SAAU,SAAU,EAAI,EAAI,EAAI,GACrB,OAAC,EAAK,EAAG,GAAK,EAAG,IAAM,EAAK,EAAG,GAAK,EAAG,IAQlD,YAAa,SAAU,EAAG,EAAK,EAAK,GAC5B,IAAA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IAAC,GAAM,IAAO,KASV,OARJ,EAAM,EAAE,GAAK,EAAI,GACjB,EAAM,EAAE,GAAK,EAAI,GACjB,EAAM,EAAI,EAAI,EAAI,GAClB,EAAM,EAAI,EAAI,EAAI,GAKP,KAFX,GAFA,EAAO,KAAK,IAAI,KAChB,EAAO,KAAK,IAAI,UAIZ,EAAE,EAAI,EAAE,IAAM,EAAM,GAAO,QAI/B,EAAE,EAAI,EAAE,IAAM,EAAM,EAAO,EAAM,GAAQ,GAI7C,EAAM,EAAG,SAAS,EAAG,GAAK,GAAM,GAChC,EAAM,EAAG,SAAS,EAAG,GAAK,GAAM,GAChC,EAAM,EAAG,SAAS,EAAK,GAAK,GAAO,GACnC,EAAM,EAAG,SAAS,EAAK,GAAK,GAAO,GAKxB,KAFX,GAFA,EAAO,KAAK,IAAI,KAChB,EAAO,KAAK,IAAI,KAQhB,GAAY,YAAY,EAAG,GAAI,EAAM,EAAO,EAAM,GAAQ,EAAI,GAAI,GAJ9D,GAAY,YAAY,EAAG,GAAI,EAAM,GAAO,EAAG,GAAI,IAQ3D,YAAa,OAAO,kBAYpB,YAAa,SAAU,EAAG,EAAI,EAAG,EAAI,GAC7B,GAAC,GAAM,IAAO,KAAd,CAKE,IAAA,EAAM,EAAM,EAAG,GAAK,EAAG,EACvB,EAAM,EAAM,EAAG,GAAK,EAAG,EACvB,EAAO,EAAM,EAAI,EAAG,EACpB,EAAO,EAAM,EAAI,EAAG,EAE1B,EAAE,EAAI,GAAQ,EAAE,EAAI,GAAQ,EAAG,iBAT3B,EAAE,GAAK,EAAM,EAAG,GAAK,EAAG,GAAK,GAarC,MAAO,EAGP,MAAO,SAAU,GACb,EAAE,UAAW,GAIjB,QAAS,SAAU,GACR,OAAA,EAAE,UAIb,QAAS,SAAU,GACf,EAAE,UAAW,IAOf,GAAc,CAChB,EAAG,EAEH,EAAG,EAEH,KAAM,IAIN,SAAU,SAAU,EAAI,EAAI,EAAI,GACrB,OAAC,EAAK,EAAG,GAAK,EAAG,IAAM,EAAK,EAAG,GAAK,EAAG,IAQlD,YAAa,SAAU,EAAG,EAAK,EAAK,GAC5B,IAAA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IAAC,GAAM,IAAO,KASV,OARJ,EAAM,EAAE,GAAK,EAAI,GACjB,EAAM,EAAE,GAAK,EAAI,GACjB,EAAM,EAAI,EAAI,EAAI,GAClB,EAAM,EAAI,EAAI,EAAI,GAKP,KAFX,GAFA,EAAO,KAAK,IAAI,KAChB,EAAO,KAAK,IAAI,UAIZ,EAAE,EAAI,EAAE,IAAM,EAAM,GAAO,QAI/B,EAAE,EAAI,EAAE,IAAM,EAAM,EAAO,EAAM,GAAQ,GAI7C,EAAM,EAAG,SAAS,EAAG,GAAK,GAAM,GAChC,EAAM,EAAG,SAAS,EAAG,GAAK,GAAM,GAChC,EAAM,EAAG,SAAS,EAAK,GAAK,GAAO,GACnC,EAAM,EAAG,SAAS,EAAK,GAAK,GAAO,GAKxB,KAFX,GAFA,EAAO,KAAK,IAAI,KAChB,EAAO,KAAK,IAAI,KAQhB,GAAY,YAAY,EAAG,GAAI,EAAM,EAAO,EAAM,GAAQ,EAAI,GAAI,GAJ9D,GAAY,YAAY,EAAG,GAAI,EAAM,GAAO,EAAG,GAAI,IAQ3D,YAAa,EAYb,YAAa,SAAU,EAAG,EAAI,EAAG,EAAI,GAC7B,GAAC,GAAM,IAAO,KAAd,CAKE,IAAA,EAAM,EAAM,EAAG,GAAK,EAAG,EACvB,EAAM,EAAM,EAAG,GAAK,EAAG,EACvB,EAAO,EAAM,EAAI,EAAG,EACpB,EAAO,EAAM,EAAI,EAAG,EAE1B,EAAE,EAAI,EAAO,EAAG,aAAe,EAAE,EAAI,QATjC,EAAE,GAAK,EAAM,EAAG,GAAK,EAAG,GAAK,GAarC,MAAO,OAAO,kBAGd,MAAO,SAAU,GACb,EAAE,UAAW,GAIjB,QAAS,SAAU,GACR,OAAA,EAAE,UAIb,QAAS,SAAU,GACf,EAAE,UAAW,IAUrB,SAAS,GAAW,EAAG,GACd,KAAA,EAAI,EACJ,KAAA,EAAI,EACJ,KAAA,UAAO,EACP,KAAA,MAAQ,EAAI,EACZ,KAAA,aAAe,EAAI,EACxB,OAAO,OAAO,MAuFlB,SAAS,GAAc,EAAG,GAChB,IAAA,EAAI,KAAK,KAAK,EAAI,EAAI,EAAI,GAK5B,OAFJ,GAAK,EAEK,KAHV,GAAK,IAGgB,IAAN,EAAgB,GAChB,IAAN,GAAiB,IAAN,EAAgB,GACxB,IAAI,GAAW,EAAG,GAMlC,SAAS,GACL,EACA,EACA,EACA,GAEK,KAAA,EAAI,KAAK,GAAK,KAAK,MAAU,GAAJ,GAAU,GACnC,KAAA,EAAI,KAAK,GAAK,KAAK,MAAU,GAAJ,GAAU,GAEnC,KAAA,mBAAqB,EACrB,KAAA,QAAU,EACV,KAAA,wBAAqB,EACrB,KAAA,wBAAqB,EACrB,KAAA,UAAW,EACX,KAAA,UAAW,EAEhB,OAAO,kBAAkB,MAjI7B,OAAO,OAAO,IACd,OAAO,OAAO,IAkBd,GAAW,UAAU,SAAW,SAAS,EAAI,EAAI,EAAI,GAE7C,OAAA,KAAK,EAAI,GAAY,SAAS,EAAI,EAAI,EAAI,GAC1C,KAAK,EAAI,GAAY,SAAS,EAAI,EAAI,EAAI,IAWlD,GAAW,UAAU,YAAc,SAAS,EAAG,EAAK,EAAK,GACjD,IAAA,EACA,EACA,EACA,EACA,EACA,EACA,EAEJ,EAAM,EAAG,SAAS,EAAG,GAAK,GAAM,GAChC,EAAM,EAAG,SAAS,EAAG,GAAK,GAAM,GAChC,EAAM,EAAG,SAAS,EAAK,GAAK,GAAO,GACnC,EAAM,EAAG,SAAS,EAAK,GAAK,GAAO,GAKxB,KAFX,GAFA,EAAO,KAAK,IAAI,KAChB,EAAO,KAAK,IAAI,KAQX,KAAA,YAAY,EAAG,GAAI,EAAM,EAAO,EAAM,GAAQ,EAAI,GAAI,GAJlD,KAAA,YAAY,EAAG,GAAI,EAAM,GAAO,EAAG,GAAI,IAmBpD,GAAW,UAAU,YAAc,SAAS,EAAG,EAAI,EAAG,EAAI,GACtD,EAAK,GAAM,KAEL,IAAA,EAAM,EAAM,EAAG,GAAK,EAAG,EACvB,EAAM,EAAM,EAAG,GAAK,EAAG,EACvB,EAAO,EAAM,EAAI,EAAG,EACpB,EAAO,EAAM,EAAI,EAAG,EAEpB,EAAO,EAAG,YACV,EAAM,KAAK,MAEX,EAAK,EAAE,EACP,EAAK,EAAE,EAEb,EAAE,GAAK,EAAM,EAAK,EAAO,EAAO,EAAO,IAAO,EAAM,GACpD,EAAE,EAAI,GAAO,EAAE,EAAI,GAAM,GAM7B,GAAW,UAAU,MAAQ,SAAS,GAClC,EAAE,UAAW,EACb,EAAE,UAAW,GA4CjB,GAAO,UAAU,YAAc,SAAS,GAG7B,IAFH,IAAA,EAAI,KAAK,oBAEL,EAAE,QAAQ,IAAM,IAAM,MAAM,EAAI,EAAE,mBAEnC,OAAA,GAQX,GAAO,UAAU,YAAc,SAAS,GAG7B,IAFH,IAAA,EAAI,KAAK,oBAEL,EAAE,QAAQ,IAAM,IAAM,MAAM,EAAI,EAAE,mBAEnC,OAAA,GAMXA,IAAM,GAAS,OAAO,OAAO,IAAI,GAAO,EAAG,IAUrC,GAAe,CACjB,QAAS,GAAK,GACd,UAAW,EACX,WAAY,KACZ,KAAM,EACN,OAAQ,EACR,UAAU,GASd,SAAS,GAAM,EAAK,GAKR,OAJH,KAAA,IAAM,EACN,KAAA,MAAQ,GACR,KAAA,KAAO,EAEJ,GACC,IAAA,OACI,KAAA,IAAM,KAAK,IAAM,KAAK,IAAM,EAC5B,KAAA,IAAM,KAAK,IAAM,KAAK,IAAM,EAEhC,IAAA,OACI,KAAA,GAAK,KAAK,GAAK,KAAK,IAAM,GAC1B,KAAA,MAAQ,IAsVzB,SAAS,GAAU,GAKVD,IAHC,IAAA,EAAQ,EAAM,MAAQ,IAAI,MAAM,EAAM,MAAM,QAGzC,EAAI,EAAG,EAAI,EAAM,OAAQ,IAE9B,EAAM,GAAK,IAAI,GAAO,EAAG,GAQjC,SAAS,GAAK,EAAO,GAEX,IAGF,EAHE,EAAO,EAAM,KACf,EAAK,EAAM,GACX,EAAU,EAGX,GAEK,GAAQ,MADZ,EAAM,IAAO,IAET,SACC,GAAY,KAAR,EACL,SACC,GAAY,KAAR,EACL,GAAM,EAAK,EAAK,GAAK,OACpB,GAAY,KAAR,EACL,GAAM,EAAI,EAAK,EAAK,GAAK,OACxB,GAAI,GAAO,KAAQ,GAAO,IAC3B,GAAM,EAAM,IAAO,OAClB,GAAI,GAAO,KAAQ,GAAO,IAC3B,GAAyB,GAAlB,EAAM,IAAO,QACnB,GAAI,GAA0B,IAAZ,GAAyB,KAAR,EACpC,YACC,EAAU,GAEnB,EAAM,GAAK,EASf,SAAS,GAAM,EAAG,GACV,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAW,EAAE,KAAO,KAE/D,EAAM,GAAK,EAAM,GAAK,EAAM,IAAM,EAKtC,SAAS,GAAO,EAAG,GACX,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAY,EAAE,KAAO,KAEhE,EAAM,GAAK,EAAM,IAAM,EAK3B,SAAS,GAAO,EAAG,GACX,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAY,EAAE,KAAO,KAEhE,EAAM,GAAK,EAKf,SAAS,GAAM,EAAG,GACR,IAQF,EACA,EATE,EAAQ,EAAM,MACd,EAAM,EAAM,MACZ,EAAM,EAAM,MACZ,EAAK,EAAM,GAAG,GACd,EAAK,EAAM,GAAG,GAEhB,QAAQ,OAAO,QAAQ,IAAI,SAAW,EAAI,IAAK,EAAK,GAKnD,GAID,EAAK,EAAG,EAAI,EAAG,EACf,EAAK,EAAG,EAAI,EAAG,IAJf,EAAK,EAAG,EAAI,EAAG,EACf,EAAK,EAAG,EAAI,EAAG,GAMnB,EAAM,GAAK,EAAM,IAAM,GAAc,EAAI,GAK7C,SAAS,GAAM,EAAG,GACR,IAQF,EACA,EATE,EAAQ,EAAM,MACd,EAAM,EAAM,MACZ,EAAM,EAAM,MACZ,EAAK,EAAM,GAAG,GACd,EAAK,EAAM,GAAG,GAEhB,QAAQ,OAAO,QAAQ,IAAI,SAAW,EAAI,IAAK,EAAK,GAKnD,GAID,EAAK,EAAG,EAAI,EAAG,EACf,EAAK,EAAG,EAAI,EAAG,IAJf,EAAK,EAAG,EAAI,EAAG,EACf,EAAK,EAAG,EAAI,EAAG,GAMnB,EAAM,GAAK,GAAc,EAAI,GAKjC,SAAS,GAAM,GACL,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAW,EAAG,GAEzD,EAAM,GAAK,EAAM,IAAM,GAAc,EAAG,GAK5C,SAAS,GAAM,GACL,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAW,EAAG,GAEzD,EAAM,GAAK,GAAc,EAAG,GAKhC,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAE3C,EAAM,KAAY,MAAP,EAAG,GACd,EAAM,KAAY,MAAP,EAAG,GAKlB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAE3C,EAAM,KAAY,MAAP,EAAG,GACd,EAAM,KAAY,MAAP,EAAG,GAKlB,SAAS,GAAO,GACZ,EAAM,GAAK,EAAM,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,YAK/C,SAAS,GAAM,GAEL,IAAA,EAAQ,EAAM,MACd,EAAO,EAAM,MACb,EAAO,EAAM,MACb,EAAO,EAAM,MACb,EAAO,EAAM,MACb,EAAK,EAAM,MACX,EAAK,EAAM,GACX,EAAK,EAAM,GACX,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAI,EAAM,GAAG,GAEf,QAAQ,OAAO,QAAQ,IAAI,YAAa,EAAM,EAAM,EAAM,EAAM,GAK9D,IAAA,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EAET,GAAO,EAAK,IAAO,EAAK,IAAO,EAAK,IAAO,EAAK,GAChD,EAAK,EAAK,EAAK,EAAK,EACpB,EAAK,EAAK,EAAK,EAAK,EAE1B,EAAE,GAAK,GAAM,EAAK,GAAM,GAAM,EAAK,IAAO,EAC1C,EAAE,GAAK,GAAM,EAAK,GAAM,GAAM,EAAK,IAAO,EAK9C,SAAS,GAAK,GACV,EAAM,IAAM,EAAM,MAAM,MAEpB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,EAAM,KAK/D,SAAS,GAAK,GACV,EAAM,IAAM,EAAM,MAAM,MAEpB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,EAAM,KAK/D,SAAS,GAAK,GACV,EAAM,IAAM,EAAM,MAAM,MAEpB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,EAAM,KAK/D,SAAS,GAAK,GACJ,IAAA,EAAI,EAAM,MAAM,MAMd,OAJJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAErD,EAAM,IAAM,EAEJ,GACC,KAAA,EACI,EAAM,OAAO,GAAU,GAC5B,EAAM,GAAK,EAAM,MACjB,MACC,KAAA,EACD,EAAM,GAAK,EAAM,MACjB,MACJ,QACU,MAAA,IAAI,MAAM,yBAM5B,SAAS,GAAK,GACJ,IAAA,EAAI,EAAM,MAAM,MAMd,OAJJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAErD,EAAM,IAAM,EAEJ,GACC,KAAA,EACI,EAAM,OAAO,GAAU,GAC5B,EAAM,GAAK,EAAM,MACjB,MACC,KAAA,EACD,EAAM,GAAK,EAAM,MACjB,MACJ,QACU,MAAA,IAAI,MAAM,yBAM5B,SAAS,GAAK,GACJ,IAAA,EAAI,EAAM,MAAM,MAMd,OAJJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAErD,EAAM,IAAM,EAEJ,GACC,KAAA,EACI,EAAM,OAAO,GAAU,GAC5B,EAAM,GAAK,EAAM,MACjB,MACC,KAAA,EACD,EAAM,GAAK,EAAM,MACjB,MACJ,QACU,MAAA,IAAI,MAAM,yBAM5B,SAAS,GAAK,GACJ,IAAA,EAAI,EAAM,MAAM,MAMd,OAJJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAErD,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAE5B,GACC,KAAA,EACI,EAAM,OAAO,GAAU,GAC5B,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,MACvC,MACC,KAAA,EACD,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,MACvC,MACJ,QACU,MAAA,IAAI,MAAM,yBAM5B,SAAS,GAAM,GACX,EAAM,KAAO,EAAM,MAAM,MAErB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAW,EAAM,MAKhE,SAAS,GAAI,GACL,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAE3C,EAAM,MAAQ,GAKlB,SAAS,GAAK,GACN,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,MAAQ,GAKlB,SAAS,GAAI,GACH,IAAA,EAAI,EAAM,MAAM,MAElB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,OAAS,EAAI,GAKvB,SAAS,GAAK,GAON,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,GAAK,GAAO,GAKhB,SAAS,GAAK,GACJ,IAAA,EAAI,EAAM,MAAM,MAElB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAGrD,EAAM,IAAM,EAAI,EAKpB,SAAS,GAAO,GACN,IAAA,EAAI,EAAM,MAAM,MAElB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAAY,GAEvD,EAAM,QAAU,EAAI,GAKxB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MAEhB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAE3C,EAAM,KAAK,EAAM,EAAM,OAAS,IAKpC,SAAS,GAAI,GACL,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAE3C,EAAM,MAAM,MAKhB,SAAS,GAAM,GACP,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAE3C,EAAM,MAAM,OAAS,EAKzB,SAAS,GAAK,GACJ,IAAA,EAAQ,EAAM,MAEd,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,KAAK,GACX,EAAM,KAAK,GAKf,SAAS,GAAM,GACL,IAAA,EAAQ,EAAM,MAEhB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAE3C,EAAM,KAAK,EAAM,QAKrB,SAAS,GAAS,GACR,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,aAAc,EAAI,GAGvD,IAAA,EAAM,EAAM,GACZ,EAAQ,EAAM,KAEpB,EAAM,KAAO,EAAM,MAAM,GAGpBA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IACnB,GAAK,GAED,QAAQ,OAAO,QAAQ,MACrB,EAAM,KACR,EAAI,EAAI,EAAI,gBAAkB,gBAC9B,GAKR,EAAM,GAAK,EACX,EAAM,KAAO,EAKjB,SAAS,GAAK,GACJ,IAAA,EAAK,EAAM,MAAM,MAEnB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAG/C,IAAA,EAAM,EAAM,GACZ,EAAQ,EAAM,KAEpB,EAAM,KAAO,EAAM,MAAM,GAGzB,GAAK,GAGL,EAAM,GAAK,EACX,EAAM,KAAO,EAET,QAAQ,OAAO,QAAQ,MAAM,EAAM,KAAM,iBAAkB,GAKnE,SAAS,GAAO,GACN,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAAY,GAIvD,EAAM,KAAK,EAAM,EAAM,OAAS,IAKpC,SAAS,GAAO,GACN,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAAY,GAEvD,EAAM,KAAK,EAAM,OAAO,EAAM,OAAS,EAAG,GAAG,IAKjD,SAAS,GAAK,GACN,GAAc,SAAd,EAAM,IAAsB,MAAA,IAAI,MAAM,yBACpC,IAAA,EAAQ,EAAM,MACd,EAAO,EAAM,KACf,EAAK,EAAM,GAET,EAAK,EAAM,MACX,EAAU,EAIT,IAFH,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAE/B,KAAf,IAAO,KAEd,EAAM,GAAK,EACX,EAAM,MAAM,GAAM,EAAK,MAAM,EAAU,EAAG,GAK9C,SAAS,GAAK,EAAO,GACX,IAAA,EAAK,EAAM,MAAM,MACjB,EAAI,EAAM,GAAG,GACb,EAAK,EAAM,GACX,EAAK,EAAM,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAU,EAAQ,IAAK,GAE9D,IAAA,EAAI,EAAG,SAAS,EAAG,IAEnB,IAAO,EAAI,EAAM,MAAM,IAE3B,EAAG,YAAY,EAAG,GAAQ,EAAG,GAC7B,EAAG,MAAM,GAET,EAAM,IAAM,EAAM,IAAM,EAK5B,SAAS,GAAI,EAAG,GACN,IAEF,EACA,EACA,EAJE,EAAK,EAAM,GACX,EAAO,EAAG,OAAS,EAKrB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAS,EAAE,KAAO,KAExDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAM,IACtB,EAAK,EAAG,GAGJ,EAAE,QAAQ,KAEd,EAAK,EAAG,YAAY,MAGT,IAIP,KAFJ,EAAK,EAAG,YAAY,KAMhB,EAAE,YAAY,EAAI,EAAI,EAAE,SAAS,EAAI,GAAI,GAAO,GAAO,GAAG,GAG9D,EAAE,YAAY,EAAI,EAAI,EAAI,IAMlC,SAAS,GAAI,EAAG,GASL,IARD,IAAA,EAAQ,EAAM,MACd,EAAM,EAAI,EAAM,IAAM,EAAM,IAC5B,GAAM,EAAI,EAAM,GAAK,EAAM,IAAI,GAC/B,EAAK,EAAM,GACX,EAAK,EAAM,GACb,EAAO,EAAM,KACX,EAAK,EAAM,GAEV,KACP,CACU,IAAA,EAAK,EAAM,MACX,EAAI,EAAG,GAEP,EAAI,EAAG,SAAS,EAAI,GAAI,GAAO,GACrC,EAAG,YAAY,EAAG,EAAG,EAAG,GACxB,EAAG,MAAM,GAEL,QAAQ,OACR,QAAQ,IACJ,EAAM,MACL,EAAM,KAAO,EACX,SAAW,EAAM,KAAO,GAAQ,KAChC,IAEH,QAAU,EAAI,MAAQ,OAAS,IAAK,GAKhD,EAAM,KAAO,EAKjB,SAAS,GAAI,EAAG,GACN,IAAA,EAAQ,EAAM,MACd,EAAM,EAAI,EAAM,IAAM,EAAM,IAC5B,GAAM,EAAI,EAAM,GAAK,EAAM,IAAI,GAC/B,EAAK,EAAM,GACX,EAAK,EAAM,GACX,EAAK,EAAM,MACX,EAAK,EAAM,GAAG,EAAM,SAAS,IAC/B,EAAI,EAEJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAS,EAAI,IAAK,GAEvD,IAAA,EAAI,EAAG,SAAS,EAAI,GAAI,GAAO,GAElC,GACK,IAAM,GAAI,EAAG,YAAY,EAAG,EAAG,EAAG,GACtC,EAAI,EAAE,yBACD,IAAM,GAKnB,SAAS,GAAI,EAAG,GACN,IAUF,EAOA,EAjBE,EAAQ,EAAM,MACd,EAAM,EAAI,EAAM,IAAM,EAAM,IAC5B,GAAM,EAAI,EAAM,GAAK,EAAM,IAAI,GAC/B,EAAK,EAAM,GACX,EAAK,EAAM,GAEX,EAAI,EAAM,MAKR,OAHJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAS,EAAI,IAAK,GAGrD,GACC,KAAA,EAAI,EAAI,EAAM,MAAO,MACrB,KAAA,EAAI,EAAI,EAAM,MAAO,MAC1B,QAAgB,MAAA,IAAI,MAAM,gBAMzBA,IAFC,IAAA,EAAI,EAAG,SAAS,EAAI,GAAI,GAAO,GAC/B,EAAO,EAAE,OAAS,EACf,EAAI,EAAG,EAAI,EAAM,IAEtB,EAAI,EAAE,GACN,EAAG,YAAY,EAAG,EAAG,EAAG,GAOhC,SAAS,GAAM,GAOJ,IAND,IAAA,EAAQ,EAAM,MAChB,EAAO,EAAM,KACX,EAAK,EAAM,GACX,EAAI,EAAM,MAAQ,GAClB,EAAK,EAAM,GAEV,KAAQ,CACL,IAAA,EAAK,EAAM,MACX,EAAI,EAAG,GAET,QAAQ,OACR,QAAQ,IACJ,EAAM,MACL,EAAM,KAAO,EAAI,SAAW,EAAM,KAAO,GAAQ,KAAO,IACzD,UAAW,EAAI,GAIvB,EAAG,YAAY,EAAG,EAAG,GACrB,EAAG,MAAM,GAGb,EAAM,KAAO,EAKjB,SAAS,GAAG,GAWD,IAVD,IAAA,EAAQ,EAAM,MACd,EAAO,EAAM,IACb,EAAO,EAAM,IACf,EAAO,EAAM,KACX,EAAM,EAAM,GAAG,GACf,EAAM,EAAM,GAAG,GACf,EAAK,EAAM,GACX,EAAK,EAAM,IACX,EAAK,EAAM,GAEV,KAAQ,CACL,IAAA,EAAK,EAAM,MACX,EAAI,EAAG,GAET,QAAQ,OACR,QAAQ,IACJ,EAAM,MACL,EAAM,KAAO,EAAI,SAAW,EAAM,KAAO,GAAQ,KAAO,IACzD,OAAQ,EAAI,EAAM,MAAO,GAIjC,EAAG,YAAY,EAAG,EAAK,EAAK,GAE5B,EAAG,MAAM,GAGb,EAAM,KAAO,EAKjB,SAAS,GAAM,EAAG,GACR,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAAQ,GAClB,EAAK,EAAM,MACX,EAAI,EAAM,GAAG,GACb,EAAM,EAAM,GAAG,EAAM,KACrB,EAAK,EAAM,GACX,EAAK,EAAM,GAEjB,EAAG,YAAY,EAAG,EAAK,EAAG,GAC1B,EAAG,MAAM,GAEL,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAW,EAAI,IAAK,EAAG,GAElE,EAAM,IAAM,EAAM,IAClB,EAAM,IAAM,EACR,IAAG,EAAM,IAAM,GAKvB,SAAS,GAAQ,GASN,IARD,IAAA,EAAQ,EAAM,MACd,EAAO,EAAM,IACb,EAAM,EAAM,GAAG,GACjB,EAAO,EAAM,KACX,EAAK,EAAM,GACX,EAAK,EAAM,GACX,EAAK,EAAM,GAEV,KAAQ,CACL,IAAA,EAAK,EAAM,MACX,EAAI,EAAG,GAET,QAAQ,OACR,QAAQ,IACJ,EAAM,MACL,EAAM,KAAO,EAAI,SAAW,EAAM,KAAO,GAAQ,KAAO,IACzD,YAAa,GAIrB,EAAG,YAAY,EAAG,EAAK,EAAG,GAC1B,EAAG,MAAM,GAGb,EAAM,KAAO,EAKjB,SAAS,GAAK,GACN,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,MAAQ,GAKlB,SAAS,GAAK,EAAO,GACX,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAK,EAAM,MACX,EAAI,EAAM,GAAG,GACb,EAAK,EAAM,GACX,EAAK,EAAM,GACb,EAAK,EAAM,IAAI,GAEf,QAAQ,OACR,QAAQ,IACJ,EAAM,KACN,QAAU,EAAQ,IAClB,EAAG,IAAK,EAAI,IAAK,GAIrB,IAAA,EAAI,EAAG,SAAS,EAAG,IAEnB,IACI,KAAK,IAAI,EAAI,GAAM,EAAM,UAAS,EAAI,GAE1C,EAAI,EAAM,MAAM,IAGpB,EAAG,YAAY,EAAG,GAAQ,EAAG,GAEX,IAAd,EAAM,MACN,EAAE,GAAK,EAAE,EACT,EAAE,GAAK,EAAE,GAGb,EAAG,MAAM,GAET,EAAM,IAAM,EAAM,IAAM,EAK5B,SAAS,GAAO,GACN,IAAA,EAAO,EAAM,KACf,EAAK,EAAM,GACT,EAAQ,EAAM,MAEd,EAAI,IAAO,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAAY,GAElDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,EAAM,KAAK,IAAO,IAE9C,EAAM,GAAK,EAKf,SAAS,GAAO,GACR,IAAA,EAAK,EAAM,GACT,EAAO,EAAM,KACb,EAAQ,EAAM,MACd,EAAI,IAAO,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAAY,GAElDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CACpB,IAAA,EAAK,IAAO,IAAO,EAAK,IAAO,GAC3B,MAAJ,IAAY,IAAqB,GAAV,MAAJ,KACvB,EAAM,KAAK,GAGf,EAAM,GAAK,EAKf,SAAS,GAAG,GACF,IAAA,EAAQ,EAAM,MAChB,EAAQ,EAAM,MAEb,IAAO,EAAQ,EAAM,MAAQ,IAE5B,IAAA,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,KAAM,EAAG,GAEpD,EAAM,GAAK,EAKf,SAAS,GAAG,GACF,IAAA,EAAQ,EAAM,MACd,EAAQ,EAAM,MAEd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,KAAM,GAE3C,IAAA,EAAK,GAAS,EAAM,IAAO,EAEjC,EAAM,KAAK,GAKf,SAAS,GAAM,GACL,IAAA,EAAQ,EAAM,MAEd,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAG,GAEvD,EAAM,IAAI,GAAK,EAAI,GAKvB,SAAS,GAAK,GACJ,IAAA,EAAQ,EAAM,MACd,EAAO,EAAM,MAEf,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAQ,GAEnD,EAAM,KAAuB,GAAlB,EAAM,IAAI,IAKzB,SAAS,GAAG,EAAG,GACL,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAI,EAAM,GAAG,GAEf,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,MAAQ,EAAI,IAAK,GAE5D,EAAM,KAA+C,GAA1C,EAAM,IAAI,SAAS,EAAG,GAAQ,GAAG,IAKhD,SAAS,GAAG,EAAG,GACL,IAAA,EAAQ,EAAM,MACd,EAAM,EAAM,MACZ,EAAM,EAAM,MACZ,EAAK,EAAM,GAAG,GACd,EAAK,EAAM,GAAG,GACd,EAAI,EAAM,IAAI,SAAS,EAAI,EAAI,EAAG,GAEpC,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,MAAQ,EAAI,IAAK,EAAK,EAAK,KAAM,GAE5E,EAAM,MAAM,KAAK,KAAK,MAAU,GAAJ,IAKhC,SAAS,GAAM,GACP,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAC3C,EAAM,MAAM,KAAK,EAAM,MAK3B,SAAS,GAAO,GACR,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,YAC3C,EAAM,UAAW,EAKrB,SAAS,GAAG,GACF,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAQ,EAAI,GAEvD,EAAM,KAAK,EAAK,EAAK,EAAI,GAK7B,SAAS,GAAK,GACJ,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,EAAI,GAEzD,EAAM,KAAK,GAAM,EAAK,EAAI,GAK9B,SAAS,GAAG,GACF,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAQ,EAAI,GAEvD,EAAM,KAAK,EAAK,EAAK,EAAI,GAK7B,SAAS,GAAK,GACJ,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,EAAI,GAEzD,EAAM,KAAK,GAAM,EAAK,EAAI,GAK9B,SAAS,GAAG,GACF,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAQ,EAAI,GAEvD,EAAM,KAAK,IAAO,EAAK,EAAI,GAK/B,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,IAAO,EAAK,EAAI,GAK/B,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,KAAK,KAAK,MAAM,GAAK,EAAI,EAAI,GAKvC,SAAS,GAAK,GACJ,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAU,GAErD,EAAM,KAAK,KAAK,MAAM,GAAK,EAAI,EAAI,GAKvC,SAAS,GAAG,GACJ,IAAA,EAAO,EAAM,MAAM,MAGnB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAQ,GAI9C,IACD,GAAK,GAAO,GAER,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAgC,UAM7E,SAAS,GAAI,GAKL,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAK/C,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,GAAM,EAAK,EAAI,GAK9B,SAAS,GAAG,GACF,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,OAAQ,EAAI,GAEvD,EAAM,KAAK,GAAM,EAAK,EAAI,GAK9B,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,KAAK,EAAI,EAAI,GAOvB,SAAS,GAAU,EAAG,GACZ,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAK,EAAM,GACX,EAAK,EAAM,GACX,EAAO,EAAM,KACb,EAAO,EAAM,UAAsB,IAAT,EAAI,GAC9B,EAAK,EAAM,WACX,EAAK,EAAM,GAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAY,EAAI,IAAK,EAAG,GAE9DA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CAClB,IAAA,EAAK,EAAM,MACX,EAAM,EAAM,MAEd,GADU,IAAe,IAAN,IAAe,KACxB,EAAV,CAEA,IAAA,GAAa,GAAN,GAAc,EACrB,GAAO,GAAG,IACV,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,YAAa,EAAI,KAAM,EAAM,GAElE,IAAA,EAAI,EAAG,GACb,EAAG,YAAY,EAAG,EAAG,EAAM,EAAI,KAMvC,SAAS,GAAI,GACH,IACA,EADQ,EAAM,MACJ,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,UAAY,EAKtB,SAAS,GAAI,GACH,IACA,EADQ,EAAM,MACJ,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,WAAa,KAAK,IAAI,GAAK,GAKrC,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,EAAK,GAKpB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,EAAK,GAKpB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAU,GAAL,EAAU,GAKzB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,EAAK,EAAK,IAKzB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,KAAK,KAAK,IAAI,IAKxB,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MAChB,EAAI,EAAM,MAEV,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,GAEpD,EAAM,MAAM,GAKhB,SAAS,GAAM,GACL,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAW,GAEtD,EAAM,KAA4B,GAAvB,KAAK,MAAM,EAAI,KAK9B,SAAS,GAAQ,GACP,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,YAAa,GAExD,EAAM,KAA2B,GAAtB,KAAK,KAAK,EAAI,KAK7B,SAAS,GAAM,EAAI,GACT,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAE3C,EAAM,KAA6B,GAAxB,EAAM,MAAM,EAAI,KAK/B,SAAS,GAAM,GACL,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAW,EAAG,GAEzD,EAAM,IAAI,GAAK,EAAI,EAAM,KAAO,EAAM,KAAK,WAO/C,SAAS,GAAU,EAAG,GACZ,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAO,EAAM,KACb,EAAO,EAAM,UAAsB,IAAT,EAAI,GAC9B,EAAK,EAAM,WAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAY,EAAI,IAAK,EAAG,GAE9DA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CAClB,IAAA,EAAI,EAAM,MACV,EAAM,EAAM,MAEd,GADU,IAAe,IAAN,IAAe,KACxB,EAAV,CAEA,IAAA,GAAa,GAAN,GAAc,EACrB,GAAO,GAAG,IAER,IAAA,EAAQ,EAAM,EAEhB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,YAAa,EAAG,KAAM,GAEjE,EAAM,IAAI,IAAM,IAMxB,SAAS,GAAO,GACR,IAMA,EANA,EAAI,EAAM,MAAM,MAQZ,OANJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,WAAY,GAEvD,EAAM,MAAQ,GAIF,IAAJ,GACC,KAAA,EACD,EAAS,GACT,MACC,KAAA,GACD,EAAS,EACT,MACC,KAAA,IACD,EAAS,EACT,MACJ,QACU,MAAA,IAAI,MAAM,wBAKhB,OAFR,EAAM,SAAW,EAEL,GAAJ,GACC,KAAA,EACD,EAAM,QAAU,EAChB,MACC,KAAA,GACD,EAAM,QAAU,IAAO,EACvB,MACC,KAAA,GACD,EAAM,QAAU,GAAO,EACvB,MACC,KAAA,GACD,EAAM,QAAU,IAAO,EACvB,MACJ,QAAe,MAAA,IAAI,MAAM,wBAG7B,GAAK,GAEQ,EAAM,YAAT,IAAN,EAA6B,GACP,EAAI,EAAI,IAAO,EAK7C,SAAS,GAAS,GACV,IAMA,EANA,EAAI,EAAM,MAAM,MAQZ,OANJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,aAAc,GAEzD,EAAM,MAAQ,GAIF,IAAJ,GACC,KAAA,EACD,EAAS,KAAK,KAAK,GAAK,EACxB,MACC,KAAA,GACD,EAAS,KAAK,KAAK,GACnB,MACC,KAAA,IACD,EAAS,EAAI,KAAK,KAAK,GACvB,MACJ,QACU,MAAA,IAAI,MAAM,0BAKhB,OAFR,EAAM,SAAW,EAEL,GAAJ,GACC,KAAA,EACD,EAAM,QAAU,EAChB,MACC,KAAA,GACD,EAAM,QAAU,IAAO,EACvB,MACC,KAAA,GACD,EAAM,QAAU,GAAO,EACvB,MACC,KAAA,GACD,EAAM,QAAU,IAAO,EACvB,MACJ,QACU,MAAA,IAAI,MAAM,0BAGxB,GAAK,GAEQ,EAAM,YAAT,IAAN,EAA6B,GACP,EAAI,EAAI,IAAO,EAK7C,SAAS,GAAK,GACN,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,MAAQ,GAKlB,SAAS,GAAK,GACN,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,MAAQ,GAKlB,SAAS,GAAK,GACN,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,MAAQ,GAKlB,SAAS,GAAS,GACR,IAAA,EAAI,EAAM,MAAM,MAIlB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,aAAc,GAK7D,SAAS,GAAO,EAAG,GACT,IAQF,EACA,EATE,EAAQ,EAAM,MACd,EAAM,EAAM,MACZ,EAAM,EAAM,MACZ,EAAK,EAAM,GAAG,GACd,EAAK,EAAM,GAAG,GAEhB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAAY,EAAI,IAAK,EAAK,GAKhE,GAID,EAAK,EAAG,EAAI,EAAG,EACf,EAAK,EAAG,EAAI,EAAG,IAJf,EAAK,EAAG,EAAI,EAAG,EACf,EAAK,EAAG,EAAI,EAAG,GAMnB,EAAM,IAAM,GAAc,EAAI,GAKlC,SAAS,GAAQ,GACP,IAAA,EAAQ,EAAM,MACd,EAAM,EAAM,MACd,EAAI,EAEJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,YAAa,GAG9C,EAAN,IAAY,EAAI,IAMV,GAAN,IAAY,GAAK,MAErB,EAAM,KAAK,GAKf,SAAS,GAAK,GACJ,IAAA,EAAQ,EAAM,MACd,EAAI,EAAM,MACV,EAAI,EAAM,MACV,EAAI,EAAM,MAEZ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,UAE3C,EAAM,KAAK,GACX,EAAM,KAAK,GACX,EAAM,KAAK,GAKf,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,KAAK,IAAI,EAAI,IAK5B,SAAS,GAAI,GACH,IAAA,EAAQ,EAAM,MACd,EAAK,EAAM,MACX,EAAK,EAAM,MAEb,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,QAAS,EAAI,GAExD,EAAM,KAAK,KAAK,IAAI,EAAI,IAK5B,SAAS,GAAS,GACR,IAAA,EAAI,EAAM,MAAM,MAElB,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,aAAc,GAK7D,SAAS,GAAS,GACR,IAAA,EAAI,EAAM,MAAM,MAClB,EAAI,EAAM,MAAM,MAIZ,OAFJ,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,aAAc,EAAG,GAEpD,GACC,KAAA,EAAgC,YAA5B,EAAM,iBAAmB,GAC7B,KAAA,EAA2B,YAAvB,EAAM,YAAc,GAC7B,QAAe,MAAA,IAAI,MAAM,gCAMjC,SAAS,GAAM,EAAG,GACR,IAAA,EAAQ,EAAM,MACd,EAAO,EAAM,KACf,EAAK,EAAM,GAEX,QAAQ,OAAO,QAAQ,IAAI,EAAM,KAAM,SAAW,EAAI,KAErDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,EAAM,KAAK,IAAO,IAE9C,EAAM,GAAK,EAKf,SAAS,GAAM,EAAG,GACV,IAAA,EAAK,EAAM,GACT,EAAO,EAAM,KACb,EAAQ,EAAM,MAEhB,QAAQ,OAAO,QAAQ,IAAI,EAAM,GAAI,SAAW,EAAI,KAEnDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CACpB,IAAA,EAAK,IAAO,IAAO,EAAK,IAAO,GAC3B,MAAJ,IAAY,IAAqB,GAAV,MAAJ,KACvB,EAAM,KAAK,GAGf,EAAM,GAAK,EAaf,SAAS,GAAU,EAAU,EAAQ,EAAO,EAAI,EAAI,GAC1C,IAUF,EACA,EACA,EACA,EAbE,EAAQ,EAAM,MACd,EAAO,GAAY,EAAM,MACzB,EAAK,EAAM,MACX,EAAO,EAAM,IACb,EAAK,EAAM,GAAG,GACd,EAAI,EAAM,GAAG,GAEb,EAAK,EAAM,OACX,EAAK,EAAM,GACX,EAAK,EAAM,IAOjB,GADA,EAAI,EAAK,EAAG,SAAS,EAAG,GAAI,GAAM,KACtB,EAAI,GAAK,EAGrB,EAAI,KAAK,IAAI,GAET,IACA,EAAK,EAAM,IAAI,GAEX,GAAM,KAAK,IAAI,EAAI,GAAM,EAAM,UAAS,EAAI,IAGhD,GAAS,EAAI,IAAI,EAAI,GAErB,IAAI,EAAI,EAAM,MAAM,IAExB,EAAG,YAAY,EAAG,EAAI,EAAO,EAAG,GAChC,EAAG,MAAM,GAEL,QAAQ,OACR,QAAQ,IACJ,EAAM,MACL,EAAW,QAAU,UACrB,EAAS,IAAM,MACf,EAAQ,IAAM,MACd,EAAK,IAAM,MACJ,IAAP,EAAW,KAAe,IAAP,EAAW,KAAe,IAAP,EAAW,KAAO,IACzD,IACA,EACI,EAAO,IAAM,EAAM,IAAI,GAAQ,IAAO,EAAK,IAC3C,GACJ,EACA,OAAQ,EAAI,KAAM,EAAO,EAAG,KAIpC,EAAM,IAAM,EAAM,IAClB,EAAM,IAAM,EACR,IAAQ,EAAM,IAAM,GC3/E5B,SAAS,GAAM,GACN,KAAA,KAAO,EACP,KAAA,MAAQ,GACR,KAAA,YAAc,KASvB,SAAS,GAAa,EAAY,EAAW,GACpC,KAAA,YAAc,EACd,KAAA,WAAa,EACb,KAAA,UAAY,EASrB,SAAS,GAAe,EAAa,EAAY,GACxC,KAAA,YAAc,EACd,KAAA,UAAY,KACZ,KAAA,OAAS,GACT,KAAA,WAAa,EACb,KAAA,SAAW,EAepB,SAAS,GAAc,EAAS,GACvB,KAAA,QAAU,EACV,KAAA,MAAQ,EACR,KAAA,OAAS,EAAQ,OACjB,KAAA,QAAU,EAAQ,GAClB,KAAA,UAAY,EAAQ,MAAM,EAAG,GAC7B,KAAA,UAAY,EAAQ,MAAM,EAAe,GAOlD,SAAS,GAAM,GACN,KAAA,QAAU,EACV,KAAA,YAAc,GAOvB,SAAS,GAAqB,GhCuV7B,IAAA,EAAA,KgCtVS,EAAa,CACf,QAAS,MAAO,OAAQ,WAAY,eACpC,aAAc,cAAe,cAAe,cAC5C,eAAgB,eAAgB,aAAc,wBAGlD,EAAW,QAAO,SAAC,GACf,OAAO,eAAeG,EAAK,OAAQ,EAAS,CACxC,MAAO,IAAI,GAAM,OAInB,GACF,EAAW,QAAO,SAAC,GACT,IAAA,EAAQ,EAAO,GACA,mBAAV,GACPA,EAAK,OAAO,GAAS,UAAU,KAIb,CAC1B,cAAe,cAAe,cAC9B,eAAgB,eAAgB,cAEd,QAAO,SAAC,GAC1BA,EAAK,OAAO,GAAS,UACjBA,EAAK,wBASjB,SAAS,GAAU,GACV,KAAA,OAAS,GACT,KAAA,mBAAqB,GACrB,KAAA,gBAAkB,GAClB,KAAA,OAAS,GACT,KAAA,oBAAsB,GAE3B,GAAqB,KAAK,KAAM,GC7G7B,SAAS,GAAa,GAClB,MAAA,4CAA4C,KAAK,GAOrD,SAAS,GAAqB,GAC1B,MAAA,mUAAmU,KAAK,GAO5U,SAAS,GAAqB,GAC1B,MAAA,wHAAwH,KAAK,GAOjI,SAAS,GAAY,GACjB,MAAA,QAAQ,KAAK,GAOjB,SAAS,GAAa,GAClB,MAAA,KAAK,KAAK,GC9BrB,SAAS,GAAa,GACb,KAAA,KAAO,EACP,KAAA,SAAW,GAepB,SAAS,GAAmB,GACnB,KAAA,GAAK,EAAO,GACZ,KAAA,IAAM,EAAO,IACb,KAAA,aAAe,EAAO,aAQ/B,SAAS,GAAe,EAAY,GAC5B,IAAC,EAAmB,OAAC,EACjB,OAAA,EAAS,QACR,KAAA,EACM,OAAA,EAAS,OAAO,QAAQ,GAE9B,KAAA,EAEIH,IADD,IAAA,EAAS,EAAS,OACb,EAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CAC9B,IAAA,EAAQ,EAAO,GACjB,GAAA,GAAc,EAAM,OAAS,GAAc,EAAM,IAAK,CAClD,IAAA,EAAS,EAAa,EAAM,MACzB,OAAA,EAAM,MAAQ,GAG7B,MACJ,QACW,OAAC,EAET,OAAC,EAOZ,SAAS,GAA0B,EAAY,GAEvC,OAAqB,IADH,GAAe,EAAY,EAAS,UACvB,KAC5B,EAAa,EAAS,aAOjC,SAAS,GAA0B,EAAY,GACvC,IAAA,EAAkB,GAAe,EAAY,EAAS,UACtD,OAAqB,IAArB,EAA+B,KAC5B,EAAS,WAAW,GAQ/B,SAAS,GAAmB,EAAc,GAEjCA,IADD,IAAA,EAAa,GACR,EAAI,EAAG,EAAI,EAAa,OAAQ,IAAK,CACpC,IAAA,EAAW,EAAa,GAC1B,EAAa,EAAc,QAEzB,EAAc,GADpB,EAAa,MAAM,QAAQ,GAAc,EAAW,GAAK,EACV,IAC1B,IAAjB,GACA,EAAW,KAAK,GAGpB,OAAA,EAAW,SAAW,EAAa,QAAgB,EAChD,EAOX,SAAS,GAA4B,EAAe,GAC1C,IAAA,EACF,EAAS,cAAc,OACvB,EAAS,kBAAkB,OAC3B,EAAS,kBAAkB,OAE3B,GAAA,EAAc,QAAQ,OAAS,EAAqB,MAAA,GAEpD,IAAA,EAAe,GACf,EAAS,cAAe,GAExB,IAAkB,IAAlB,EAA4B,MAAA,GAE1B,IAAA,EAAkB,EAAS,cAAc,OAAS,EACpD,GAAA,EAAc,UAAU,OAAS,EAAS,kBAAkB,OAAe,MAAA,GAExE,IADH,IAAA,EAAmB,EAAc,UAAU,MAAM,GAC9C,EAAiB,QAAU,GAAqB,EAAiB,GAAG,OACvE,EAAiB,QAEf,IAAA,EAAkB,IAAI,GAAc,EAAkB,GACxD,EAAmB,GACnB,EAAS,kBAAmB,GAG5B,EAAmB,GAAG,OAAO,EAAc,WAExC,IADP,EAAiB,UACV,EAAiB,QAAU,GAAqB,EAAiB,GAAG,OACvE,EAAiB,QAEjB,GAAA,EAAiB,OAAS,EAAS,kBAAkB,OAAe,MAAA,GAClE,IAAA,EAAkB,IAAI,GAAc,EAAkB,GACxD,EAAmB,GACnB,EAAS,kBAAmB,GAO5B,EAAgB,GAChB,GALA,EAAa,SAAW,EAAS,cAAc,QAC/C,EAAiB,SAAW,EAAS,kBAAkB,QACvD,EAAiB,SAAW,EAAS,kBAAkB,OAIlDA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAS,cAAc,OAAQ,IAI1CA,IAHC,IACA,EADe,EAAS,cAAc,GACP,gBAC/B,EAAc,KAAK,iBAAiB,GACjC,EAAI,EAAG,EAAI,EAAY,UAAU,OAAQ,IAAK,CAC7CI,IAAAA,EAAW,EAAY,UAAU,GACjC,EAAS,KAAK,gBAAgB,EAAaA,GAE7C,GAAqB,OADA,KAAK,oBAAoB,EAAaA,GAEtDJ,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAa,OAAQ,IAAK,CACpC,IACA,EAAe,EADF,EAAc,IAAI,IAEjC,GAAc,EAAc,KAAK,IAMlD,OAAA,EAOX,SAAS,GAA4B,EAAe,GAE5C,IAKA,EAJA,EAAc,GADD,EAAc,QACc,EAAS,UAClD,IAAiB,IAAjB,EAA2B,OAAA,KAK1BA,IADD,IAAA,EAAc,EAAS,aAAa,GAC/B,EAAI,EAAG,EAAI,EAAY,OAAQ,IAAK,CACzC,EAAW,EAAY,GAClBA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAS,WAAW,OAAQ,IAAK,CAG7C,GAFkB,EAAc,UAAU,KAC5B,EAAS,WAAW,GACL,MAC7B,GAAA,IAAM,EAAS,WAAW,OAAS,EAAU,OAAA,GAGlD,OAAA,KAQX,SAAS,GAAiC,EAAY,GAC9C,IAAA,EAAkB,GAAe,EAAY,EAAS,UACtD,OAAqB,IAArB,EAA+B,KAC5B,EAAS,UAAU,GClM9B,SAAS,GAAqB,GACpB,IAAA,EAAO,EAAc,QACrB,EAAW,EAAc,KAAK,GAExC,OACsB,OAAb,GAAqB,GAAa,KAEjC,GAAa,IAAa,GAAa,GAIjD,SAAS,GAAmB,GAClB,IAAA,EAAW,EAAc,IAAI,GAEvC,OACsB,OAAb,IAEC,GAAa,GJ+hBvB,GAAQ,UAAU,KAAO,SAAS,EAAO,GACjC,GAAgB,iBAAT,EACD,MAAA,IAAI,MAAM,+BAIhB,KAAA,KAAK,YAAc,GAAnB,CAEE,IAAA,EAAO,KAAK,KACd,EAAY,KAAK,WAEjB,IAAC,GAAa,EAAU,OAAS,EAAM,CACnC,IAAA,EAAY,KAAK,WAEjB,IAAC,EAAW,CAGZ,GAAM,UAAY,IAElB,EACA,KAAK,WACD,IAAI,GAAM,OAAQ,EAAK,OAAO,OAExB,MAAQ,GAClB,EAAU,KAAO,EAEb,QAAQ,QACR,QAAQ,IAAI,mBACZ,EAAU,MAAQ,GAGlB,IACA,GAAK,GACP,MAAO,GAGL,OAFA,QAAQ,IAAI,yBAA2B,QAClC,KAAA,YAAc,IAS3B,GAAM,UAAY,GAClB,EACA,KAAK,WACD,IAAI,GAAM,OAAQ,EAAK,OAAO,OAExB,KAAO,EAIX,IAAA,EAAO,EAAK,OAAO,IACrB,GAAA,EAGKA,IAFC,IAAA,EAAM,EAAU,IAAM,IAAI,MAAM,EAAK,QACrC,EAAQ,EAAO,EAAK,WACjB,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,EAAI,GAAK,EAAK,GAAK,OAGvB,EAAU,IAAM,GAGhB,QAAQ,QACR,QAAQ,IAAI,mBACZ,EAAU,MAAQ,GAGlB,IACA,GAAK,GACP,MAAO,GACD,KAAK,YAAc,GACnB,QAAQ,IAAI,yBAA2B,GAEtC,KAAA,YAAc,GAIvB,KAAA,KAAK,YAAc,GAEnB,IACO,OAAA,GAAU,EAAO,GAC1B,MAAO,GAME,OALH,KAAK,YAAc,IACnB,QAAQ,IAAI,iBAAmB,GAC/B,QAAQ,IAAI,mDAEX,KAAA,YAAc,MAQ3B,GAAY,SAAS,EAAO,GAElB,IAGF,EACA,EACA,EALE,EAAS,EAAU,KAAO,EAAU,KAAK,WACzC,EAAS,EACX,EAAa,EAAM,WAMnB,GADJ,GAAM,UAAY,EACb,EAQE,CACG,IAAA,EAAO,EAAU,KACvB,EAAQ,GACR,EAAW,GACNA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CAClC,IAAA,EAAI,EAAW,GACf,EAAK,EAAK,OAAO,IAAI,EAAE,YAE7B,EAAQ,IAAI,GAAM,OAAQ,EAAG,cAEzB,QAAQ,QACR,QAAQ,IAAI,gBAAkB,EAAI,OAClC,EAAM,MAAQ,GAGlB,GAAc,EAAI,EAAO,EAAQ,GAO5BA,IAJC,IAAA,EAAK,KAAK,MAAM,EAAE,GAAK,GACvB,EAAK,KAAK,MAAM,EAAE,GAAK,GACvB,EAAK,EAAM,MACX,EAAK,EAAM,SACR,EAAK,EAAG,EAAK,EAAG,OAAQ,IAAM,CAC7B,IAAA,EAAI,EAAG,GACb,EAAE,SAAW,EAAE,UAAW,EAC1B,EAAE,GAAK,EAAE,EAAI,EAAE,EAAI,EACnB,EAAE,GAAK,EAAE,EAAI,EAAE,EAAI,EAGjB,IAAA,EAAO,EAAM,OACnB,EAAM,KAAK,MAAM,EAAO,GACnBA,IAAAA,IAAI,EAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAS,KAAK,EAAG,GAAK,GAI1B,EAAM,eAAiB,EAAM,kBAE7B,EAAQ,IAAI,GAAM,OAAQ,EAAM,eAE1B,MAAQ,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAE/C,EAAM,SAAW,EAIjB,EAAM,KACF,IAAI,GAAO,EAAG,GACd,IAAI,GAAO,KAAK,MAAM,EAAM,aAAe,GAAS,IAGpD,QAAQ,QACR,QAAQ,IAAI,wBACZ,EAAM,MAAQ,GAGlB,GAAK,GAEL,EAAM,QAAU,QAjEpB,EAAQ,IAAI,GAAM,OAAQ,EAAM,cAC5B,QAAQ,QACR,QAAQ,IAAI,oBACZ,EAAM,MAAQ,GAElB,GAAc,EAAO,EAAO,EAAQ,GACpC,EAAQ,EAAM,MA+DX,OAAA,GAOX,GAAgB,SAAS,EAAO,EAAO,EAAQ,GAUtCA,IARC,IAOF,EAaA,EACA,EArBE,EAAS,EAAM,QAAU,GACzB,EAAO,EAAO,OACd,EAAQ,EAAM,MAAQ,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,GACvD,EAAW,EAAM,SAAW,GAKzB,EAAI,EAAG,EAAI,EAAM,IACtB,EAAK,EAAO,GAEZ,EAAM,GAAK,IAAI,GACX,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,mBACH,EAAG,SAQNA,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAMA,IACtB,EAAK,EAAMA,GAEN,IACD,EAAK,EACL,EAAS,KAAKA,IAGd,EAAG,oBACH,EAAG,mBAAqB,EACxB,EAAG,mBAAqB,EACxB,OAAK,IAEL,EAAK,EAAMA,EAAI,GACf,EAAG,mBAAqB,EACxB,EAAG,mBAAqB,GAI5B,IAAA,EAAM,eAAN,CAEA,GAAA,QAAQ,MAAO,CACf,QAAQ,IAAI,mBAAoB,EAAM,OACjCm5E,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAMA,IACtB,QAAQ,IAAIA,EAAG,EAAMA,GAAG,EAAG,EAAMA,GAAG,GAcxC,GAVJ,EAAM,KACF,IAAI,GAAO,EAAG,GACd,IAAI,GAAO,KAAK,MAAM,EAAM,aAAe,GAAS,IAGxD,GAAK,GAGL,EAAM,QAAU,EAEZ,QAAQ,MAAO,CACf,QAAQ,IAAI,iBAAkB,EAAM,OAC/Bm5E,IAAAA,IAAIn5E,EAAI,EAAGA,EAAI,EAAMA,IACtB,QAAQ,IAAIA,EAAG,EAAMA,GAAG,EAAG,EAAMA,GAAG,MAQhD,GAAO,SAAS,GACR,IAAA,EAAO,EAAM,KAEb,GAAC,EAAD,CAEE,IACF,EADE,EAAO,EAAK,OAGb,IAAA,EAAM,GAAK,EAAG,EAAM,GAAK,EAAM,EAAM,KAAM,CAIxC,GAHA,QAAQ,OAAO,EAAM,SACzB,EAAM,GAAiB,EAAK,EAAM,MAGxB,MAAA,IAAI,MACN,0BACA,OAAO,EAAK,EAAM,KAAK,SAAS,KAIxC,EAAI,MA+rDZ,GAAmB,CACJ,GAAM,UAAK,EAAW,IACtB,GAAM,UAAK,EAAW,IACtB,GAAO,UAAK,EAAW,IACvB,GAAO,UAAK,EAAW,IACvB,GAAO,UAAK,EAAW,IACvB,GAAO,UAAK,EAAW,IACvB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,OACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,OACA,OACA,EACA,GACA,GACA,QACA,EACA,GAAK,UAAK,EAAW,GACrB,GAAK,UAAK,EAAW,GACrB,GAAI,UAAK,EAAW,IACpB,GAAI,UAAK,EAAW,IACpB,GAAI,UAAK,EAAW,GACpB,GAAI,UAAK,EAAW,GACpB,GAAI,UAAK,EAAW,GACpB,GAAI,UAAK,EAAW,GACpB,GAAI,UAAK,EAAW,GACpB,GAAI,UAAK,EAAW,GACpB,GACA,GACA,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GACA,GACA,GAAK,UAAK,EAAW,GACrB,GAAK,UAAK,EAAW,GACrB,GACA,GACA,GACA,GACA,GACA,GACA,GAAG,UAAK,EAAW,GACnB,GAAG,UAAK,EAAW,QACnB,EACA,GAAG,UAAK,EAAW,GACnB,GAAG,UAAK,EAAW,GACnB,QACA,EACA,QACA,OACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAAU,UAAK,EAAW,GAC1B,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,QACtB,OACA,OACA,OACA,EACA,GACA,GAAU,UAAK,EAAW,GAC1B,GAAU,UAAK,EAAW,GAC1B,GAAU,UAAK,EAAW,GAC1B,GAAU,UAAK,EAAW,GAC1B,GAAU,UAAK,EAAW,GAC1B,GACA,QACA,OACA,EACA,QACA,EACA,GACA,GACA,GACA,QACA,OACA,OACA,OACA,OACA,EACA,GACA,GAAO,UAAK,EAAW,GACvB,GAAO,UAAK,EAAW,GACvB,QACA,EACA,GACA,GACA,GACA,GACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EACA,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAM,UAAK,EAAW,GACtB,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAAG,GACtC,GAAU,UAAK,EAAW,EAAG,EAAG,EAAG,EAA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","file":"dist.57433aaf.js","sourceRoot":"..","sourcesContent":["export default {\n \"triangles\": [\n  [\n   {\n    \"x\": 110.18518320719404,\n    \"y\": 53.666666666666686\n   },\n   {\n    \"x\": 110.18518320719404,\n    \"y\": 47.05555555555557\n   },\n   {\n    \"x\": 104.7407387627496,\n    \"y\": 47.44444444444446\n   }\n  ],\n  [\n   {\n    \"x\": 105.51851654052737,\n    \"y\": 53.27777777777779\n   },\n   {\n    \"x\": 110.57407209608293,\n    \"y\": 49.000000000000014\n   },\n   {\n    \"x\": 103.96296098497182,\n    \"y\": 48.222222222222236\n   }\n  ],\n  [\n   {\n    \"x\": 99.68518320719404,\n    \"y\": 53.27777777777779\n   },\n   {\n    \"x\": 108.2407387627496,\n    \"y\": 48.222222222222236\n   },\n   {\n    \"x\": 97.7407387627496,\n    \"y\": 47.83333333333335\n   }\n  ],\n  [\n   {\n    \"x\": 93.8518498738607,\n    \"y\": 55.61111111111113\n   },\n   {\n    \"x\": 102.40740542941626,\n    \"y\": 47.05555555555557\n   },\n   {\n    \"x\": 91.12962765163849,\n    \"y\": 46.66666666666668\n   }\n  ],\n  [\n   {\n    \"x\": 112.51851654052737,\n    \"y\": 48.61111111111113\n   },\n   {\n    \"x\": 107.46296098497182,\n    \"y\": 42.77777777777779\n   },\n   {\n    \"x\": 105.90740542941626,\n    \"y\": 49.38888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 111.7407387627496,\n    \"y\": 45.11111111111112\n   },\n   {\n    \"x\": 106.29629431830516,\n    \"y\": 39.27777777777779\n   },\n   {\n    \"x\": 103.57407209608293,\n    \"y\": 45.500000000000014\n   }\n  ],\n  [\n   {\n    \"x\": 110.18518320719404,\n    \"y\": 40.055555555555564\n   },\n   {\n    \"x\": 103.96296098497182,\n    \"y\": 35.3888888888889\n   },\n   {\n    \"x\": 103.57407209608293,\n    \"y\": 42.3888888888889\n   }\n  ],\n  [\n   {\n    \"x\": 110.18518320719404,\n    \"y\": 32.277777777777786\n   },\n   {\n    \"x\": 99.68518320719404,\n    \"y\": 35.777777777777786\n   },\n   {\n    \"x\": 102.40740542941626,\n    \"y\": 40.055555555555564\n   }\n  ],\n  [\n   {\n    \"x\": 109.79629431830516,\n    \"y\": 28.777777777777786\n   },\n   {\n    \"x\": 92.68518320719404,\n    \"y\": 36.94444444444446\n   },\n   {\n    \"x\": 97.3518498738607,\n    \"y\": 40.055555555555564\n   }\n  ],\n  [\n   {\n    \"x\": 99.68518320719404,\n    \"y\": 32.277777777777786\n   },\n   {\n    \"x\": 91.51851654052737,\n    \"y\": 41.222222222222236\n   },\n   {\n    \"x\": 95.79629431830514,\n    \"y\": 43.16666666666668\n   }\n  ],\n  [\n   {\n    \"x\": 88.40740542941626,\n    \"y\": 57.166666666666686\n   },\n   {\n    \"x\": 97.3518498738607,\n    \"y\": 49.77777777777779\n   },\n   {\n    \"x\": 86.07407209608293,\n    \"y\": 52.88888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 83.3518498738607,\n    \"y\": 59.50000000000002\n   },\n   {\n    \"x\": 92.29629431830514,\n    \"y\": 51.33333333333335\n   },\n   {\n    \"x\": 79.07407209608293,\n    \"y\": 53.27777777777779\n   }\n  ],\n  [\n   {\n    \"x\": 78.68518320719403,\n    \"y\": 63.00000000000002\n   },\n   {\n    \"x\": 88.01851654052737,\n    \"y\": 51.33333333333335\n   },\n   {\n    \"x\": 74.01851654052737,\n    \"y\": 57.944444444444464\n   }\n  ],\n  [\n   {\n    \"x\": 75.18518320719403,\n    \"y\": 66.11111111111113\n   },\n   {\n    \"x\": 80.62962765163847,\n    \"y\": 55.222222222222236\n   },\n   {\n    \"x\": 70.51851654052736,\n    \"y\": 61.83333333333335\n   }\n  ],\n  [\n   {\n    \"x\": 71.29629431830514,\n    \"y\": 68.44444444444447\n   },\n   {\n    \"x\": 75.96296098497182,\n    \"y\": 58.33333333333335\n   },\n   {\n    \"x\": 68.57407209608292,\n    \"y\": 63.7777777777778\n   }\n  ],\n  [\n   {\n    \"x\": 68.96296098497182,\n    \"y\": 72.72222222222224\n   },\n   {\n    \"x\": 71.29629431830514,\n    \"y\": 61.83333333333335\n   },\n   {\n    \"x\": 63.90740542941625,\n    \"y\": 69.61111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 66.24073876274959,\n    \"y\": 76.61111111111113\n   },\n   {\n    \"x\": 66.24073876274959,\n    \"y\": 65.72222222222224\n   },\n   {\n    \"x\": 61.96296098497181,\n    \"y\": 75.83333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 65.8518498738607,\n    \"y\": 81.2777777777778\n   },\n   {\n    \"x\": 62.74073876274959,\n    \"y\": 71.16666666666669\n   },\n   {\n    \"x\": 61.96296098497181,\n    \"y\": 82.83333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 98.90740542941626,\n    \"y\": 29.166666666666675\n   },\n   {\n    \"x\": 87.62962765163849,\n    \"y\": 39.27777777777779\n   },\n   {\n    \"x\": 93.8518498738607,\n    \"y\": 42.3888888888889\n   }\n  ],\n  [\n   {\n    \"x\": 96.18518320719404,\n    \"y\": 28.000000000000007\n   },\n   {\n    \"x\": 81.40740542941626,\n    \"y\": 43.16666666666668\n   },\n   {\n    \"x\": 86.46296098497182,\n    \"y\": 43.94444444444446\n   }\n  ],\n  [\n   {\n    \"x\": 88.01851654052737,\n    \"y\": 33.83333333333334\n   },\n   {\n    \"x\": 80.62962765163847,\n    \"y\": 44.722222222222236\n   },\n   {\n    \"x\": 86.07407209608293,\n    \"y\": 45.11111111111112\n   }\n  ],\n  [\n   {\n    \"x\": 87.24073876274959,\n    \"y\": 30.722222222222232\n   },\n   {\n    \"x\": 76.3518498738607,\n    \"y\": 46.66666666666668\n   },\n   {\n    \"x\": 83.74073876274959,\n    \"y\": 45.8888888888889\n   }\n  ],\n  [\n   {\n    \"x\": 81.79629431830514,\n    \"y\": 34.61111111111112\n   },\n   {\n    \"x\": 74.40740542941626,\n    \"y\": 49.77777777777779\n   },\n   {\n    \"x\": 80.62962765163847,\n    \"y\": 48.61111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 81.01851654052737,\n    \"y\": 31.50000000000001\n   },\n   {\n    \"x\": 70.90740542941626,\n    \"y\": 51.722222222222236\n   },\n   {\n    \"x\": 79.07407209608293,\n    \"y\": 47.44444444444446\n   }\n  ],\n  [\n   {\n    \"x\": 72.07407209608292,\n    \"y\": 43.16666666666668\n   },\n   {\n    \"x\": 64.68518320719403,\n    \"y\": 56.77777777777779\n   },\n   {\n    \"x\": 76.3518498738607,\n    \"y\": 50.16666666666668\n   }\n  ],\n  [\n   {\n    \"x\": 65.8518498738607,\n    \"y\": 48.61111111111113\n   },\n   {\n    \"x\": 61.96296098497181,\n    \"y\": 60.666666666666686\n   },\n   {\n    \"x\": 72.46296098497182,\n    \"y\": 53.666666666666686\n   }\n  ],\n  [\n   {\n    \"x\": 61.574072096082915,\n    \"y\": 52.88888888888891\n   },\n   {\n    \"x\": 59.24073876274959,\n    \"y\": 65.33333333333336\n   },\n   {\n    \"x\": 67.79629431830514,\n    \"y\": 56.77777777777779\n   }\n  ],\n  [\n   {\n    \"x\": 56.90740542941625,\n    \"y\": 58.33333333333335\n   },\n   {\n    \"x\": 56.90740542941625,\n    \"y\": 70.38888888888891\n   },\n   {\n    \"x\": 64.68518320719403,\n    \"y\": 61.444444444444464\n   }\n  ],\n  [\n   {\n    \"x\": 53.40740542941625,\n    \"y\": 66.88888888888891\n   },\n   {\n    \"x\": 56.12962765163847,\n    \"y\": 80.11111111111113\n   },\n   {\n    \"x\": 61.574072096082915,\n    \"y\": 68.05555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 52.88888888888891,\n    \"y\": 77.25926123725046\n   },\n   {\n    \"x\": 57.944444444444464,\n    \"y\": 83.48148345947268\n   },\n   {\n    \"x\": 59.11111111111113,\n    \"y\": 74.53703901502823\n   }\n  ],\n  [\n   {\n    \"x\": 53.666666666666686,\n    \"y\": 81.14815012613934\n   },\n   {\n    \"x\": 60.27777777777779,\n    \"y\": 88.14815012613936\n   },\n   {\n    \"x\": 57.944444444444464,\n    \"y\": 77.64815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 56.000000000000014,\n    \"y\": 86.2037056816949\n   },\n   {\n    \"x\": 64.94444444444446,\n    \"y\": 92.42592790391713\n   },\n   {\n    \"x\": 60.27777777777779,\n    \"y\": 83.87037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 56.77777777777779,\n    \"y\": 89.7037056816949\n   },\n   {\n    \"x\": 71.55555555555557,\n    \"y\": 99.81481679280601\n   },\n   {\n    \"x\": 61.83333333333335,\n    \"y\": 86.2037056816949\n   }\n  ],\n  [\n   {\n    \"x\": 106.55555555555559,\n    \"y\": 126.25926123725047\n   },\n   {\n    \"x\": 100.72222222222226,\n    \"y\": 118.4814834594727\n   },\n   {\n    \"x\": 106.55555555555559,\n    \"y\": 122.75926123725047\n   }\n  ],\n  [\n   {\n    \"x\": 110.83333333333337,\n    \"y\": 132.0925945705838\n   },\n   {\n    \"x\": 104.61111111111114,\n    \"y\": 120.03703901502824\n   },\n   {\n    \"x\": 114.33333333333337,\n    \"y\": 130.92592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 114.46296098497183,\n    \"y\": 140.25926123725048\n   },\n   {\n    \"x\": 112.12962765163849,\n    \"y\": 130.14815012613937\n   },\n   {\n    \"x\": 116.79629431830516,\n    \"y\": 139.48148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 110.18518320719404,\n    \"y\": 146.8703723483616\n   },\n   {\n    \"x\": 114.85184987386071,\n    \"y\": 135.2037056816949\n   },\n   {\n    \"x\": 116.79629431830516,\n    \"y\": 143.3703723483616\n   }\n  ],\n  [\n   {\n    \"x\": 107.07407209608293,\n    \"y\": 151.53703901502826\n   },\n   {\n    \"x\": 117.18518320719404,\n    \"y\": 141.42592790391714\n   },\n   {\n    \"x\": 114.46296098497183,\n    \"y\": 150.75926123725048\n   }\n  ],\n  [\n   {\n    \"x\": 103.57407209608293,\n    \"y\": 156.59259457058383\n   },\n   {\n    \"x\": 116.79629431830516,\n    \"y\": 146.0925945705838\n   },\n   {\n    \"x\": 111.35184987386071,\n    \"y\": 158.14815012613937\n   }\n  ],\n  [\n   {\n    \"x\": 97.0925945705838,\n    \"y\": 163.20370568169494\n   },\n   {\n    \"x\": 111.0925945705838,\n    \"y\": 153.8703723483616\n   },\n   {\n    \"x\": 104.0925945705838,\n    \"y\": 164.3703723483616\n   }\n  ],\n  [\n   {\n    \"x\": 90.0925945705838,\n    \"y\": 167.09259457058383\n   },\n   {\n    \"x\": 107.5925945705838,\n    \"y\": 160.8703723483616\n   },\n   {\n    \"x\": 93.98148345947268,\n    \"y\": 172.92592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 84.7777777777778,\n    \"y\": 169.81482272677957\n   },\n   {\n    \"x\": 98.77777777777781,\n    \"y\": 169.42593383789068\n   },\n   {\n    \"x\": 87.50000000000003,\n    \"y\": 176.81482272677957\n   }\n  ],\n  [\n   {\n    \"x\": 77.00000000000003,\n    \"y\": 173.70371161566845\n   },\n   {\n    \"x\": 94.50000000000003,\n    \"y\": 173.70371161566845\n   },\n   {\n    \"x\": 81.66666666666669,\n    \"y\": 179.1481560601129\n   }\n  ],\n  [\n   {\n    \"x\": 69.22222222222224,\n    \"y\": 176.81482272677957\n   },\n   {\n    \"x\": 86.72222222222224,\n    \"y\": 175.6481560601129\n   },\n   {\n    \"x\": 70.38888888888891,\n    \"y\": 181.8703782823351\n   }\n  ],\n  [\n   {\n    \"x\": 59.88888888888891,\n    \"y\": 177.98148939344622\n   },\n   {\n    \"x\": 77.7777777777778,\n    \"y\": 179.92593383789068\n   },\n   {\n    \"x\": 60.666666666666686,\n    \"y\": 183.42593383789068\n   }\n  ],\n  [\n   {\n    \"x\": 53.27777777777779,\n    \"y\": 177.98148939344622\n   },\n   {\n    \"x\": 67.66666666666669,\n    \"y\": 183.81482272677957\n   },\n   {\n    \"x\": 52.500000000000014,\n    \"y\": 182.6481560601129\n   }\n  ],\n  [\n   {\n    \"x\": 47.05555555555557,\n    \"y\": 176.81482272677957\n   },\n   {\n    \"x\": 58.33333333333335,\n    \"y\": 184.98148939344622\n   },\n   {\n    \"x\": 45.11111111111112,\n    \"y\": 181.09260050455734\n   }\n  ],\n  [\n   {\n    \"x\": 40.83333333333334,\n    \"y\": 172.1481560601129\n   },\n   {\n    \"x\": 50.94444444444446,\n    \"y\": 184.20371161566845\n   },\n   {\n    \"x\": 35.777777777777786,\n    \"y\": 174.09260050455734\n   }\n  ],\n  [\n   {\n    \"x\": 117.70370568169491,\n    \"y\": 163.46295505099832\n   },\n   {\n    \"x\": 120.03703901502824,\n    \"y\": 152.96295505099832\n   },\n   {\n    \"x\": 113.42592790391714,\n    \"y\": 160.7407328287761\n   }\n  ],\n  [\n   {\n    \"x\": 113.03703901502824,\n    \"y\": 170.07406616210943\n   },\n   {\n    \"x\": 117.70370568169491,\n    \"y\": 156.8518439398872\n   },\n   {\n    \"x\": 108.75926123725047,\n    \"y\": 165.40739949544275\n   }\n  ],\n  [\n   {\n    \"x\": 107.20370568169491,\n    \"y\": 175.90739949544277\n   },\n   {\n    \"x\": 113.81481679280603,\n    \"y\": 163.46295505099832\n   },\n   {\n    \"x\": 102.14815012613936,\n    \"y\": 172.40739949544275\n   }\n  ],\n  [\n   {\n    \"x\": 100.98148345947268,\n    \"y\": 181.7407328287761\n   },\n   {\n    \"x\": 108.75926123725047,\n    \"y\": 167.3518439398872\n   },\n   {\n    \"x\": 98.25926123725047,\n    \"y\": 177.07406616210943\n   }\n  ],\n  [\n   {\n    \"x\": 93.5925945705838,\n    \"y\": 186.79628838433166\n   },\n   {\n    \"x\": 102.92592790391713,\n    \"y\": 174.3518439398872\n   },\n   {\n    \"x\": 91.64815012613936,\n    \"y\": 180.96295505099832\n   }\n  ],\n  [\n   {\n    \"x\": 85.81481679280601,\n    \"y\": 189.12962171766497\n   },\n   {\n    \"x\": 96.31481679280601,\n    \"y\": 179.40739949544277\n   },\n   {\n    \"x\": 83.0925945705838,\n    \"y\": 186.0185106065539\n   }\n  ],\n  [\n   {\n    \"x\": 83.0925945705838,\n    \"y\": 193.0185106065539\n   },\n   {\n    \"x\": 85.81481679280601,\n    \"y\": 182.90739949544277\n   },\n   {\n    \"x\": 79.98148345947268,\n    \"y\": 186.79628838433166\n   }\n  ],\n  [\n   {\n    \"x\": 80.37037234836157,\n    \"y\": 195.7407328287761\n   },\n   {\n    \"x\": 82.31481679280601,\n    \"y\": 184.8518439398872\n   },\n   {\n    \"x\": 76.87037234836157,\n    \"y\": 187.18517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 78.42592790391713,\n    \"y\": 196.5185106065539\n   },\n   {\n    \"x\": 78.03703901502824,\n    \"y\": 185.62962171766497\n   },\n   {\n    \"x\": 72.98148345947268,\n    \"y\": 189.12962171766497\n   }\n  ],\n  [\n   {\n    \"x\": 76.87037234836157,\n    \"y\": 199.2407328287761\n   },\n   {\n    \"x\": 78.03703901502824,\n    \"y\": 186.79628838433166\n   },\n   {\n    \"x\": 73.75926123725046,\n    \"y\": 187.18517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 71.81481679280601,\n    \"y\": 199.629621717665\n   },\n   {\n    \"x\": 76.09259457058378,\n    \"y\": 186.40739949544277\n   },\n   {\n    \"x\": 70.25926123725046,\n    \"y\": 187.18517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 64.42592790391711,\n    \"y\": 202.3518439398872\n   },\n   {\n    \"x\": 76.09259457058378,\n    \"y\": 189.90739949544277\n   },\n   {\n    \"x\": 70.25926123725046,\n    \"y\": 189.5185106065539\n   }\n  ],\n  [\n   {\n    \"x\": 62.87037234836156,\n    \"y\": 199.629621717665\n   },\n   {\n    \"x\": 70.64815012613934,\n    \"y\": 190.68517727322055\n   },\n   {\n    \"x\": 67.53703901502823,\n    \"y\": 190.29628838433166\n   }\n  ],\n  [\n   {\n    \"x\": 58.98148345947268,\n    \"y\": 201.18517727322055\n   },\n   {\n    \"x\": 71.03703901502823,\n    \"y\": 191.07406616210943\n   },\n   {\n    \"x\": 62.48148345947268,\n    \"y\": 190.68517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 58.2037056816949,\n    \"y\": 197.68517727322055\n   },\n   {\n    \"x\": 66.75926123725046,\n    \"y\": 190.29628838433166\n   },\n   {\n    \"x\": 61.314816792806006,\n    \"y\": 190.29628838433166\n   }\n  ],\n  [\n   {\n    \"x\": 44.20370568169489,\n    \"y\": 199.2407328287761\n   },\n   {\n    \"x\": 65.2037056816949,\n    \"y\": 195.3518439398872\n   },\n   {\n    \"x\": 62.48148345947268,\n    \"y\": 192.2407328287761\n   }\n  ],\n  [\n   {\n    \"x\": 35.25926123725044,\n    \"y\": 197.68517727322055\n   },\n   {\n    \"x\": 62.48148345947268,\n    \"y\": 194.18517727322055\n   },\n   {\n    \"x\": 57.814816792806006,\n    \"y\": 190.68517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 34.09259457058378,\n    \"y\": 193.79628838433166\n   },\n   {\n    \"x\": 54.70370568169489,\n    \"y\": 192.62962171766497\n   },\n   {\n    \"x\": 53.53703901502823,\n    \"y\": 190.68517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 27.481483459472663,\n    \"y\": 193.40739949544277\n   },\n   {\n    \"x\": 53.53703901502823,\n    \"y\": 192.2407328287761\n   },\n   {\n    \"x\": 51.592594570583785,\n    \"y\": 189.90739949544277\n   }\n  ],\n  [\n   {\n    \"x\": 26.703705681694885,\n    \"y\": 189.90739949544277\n   },\n   {\n    \"x\": 48.87037234836156,\n    \"y\": 190.29628838433166\n   },\n   {\n    \"x\": 46.148150126139335,\n    \"y\": 187.57406616210943\n   }\n  ],\n  [\n   {\n    \"x\": 22.425927903917106,\n    \"y\": 187.96295505099832\n   },\n   {\n    \"x\": 48.48148345947267,\n    \"y\": 189.5185106065539\n   },\n   {\n    \"x\": 44.98148345947267,\n    \"y\": 187.18517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 19.703705681694885,\n    \"y\": 184.07406616210943\n   },\n   {\n    \"x\": 40.314816792806,\n    \"y\": 187.57406616210943\n   },\n   {\n    \"x\": 34.870372348361556,\n    \"y\": 182.12962171766497\n   }\n  ],\n  [\n   {\n    \"x\": 18.148150126139328,\n    \"y\": 180.57406616210943\n   },\n   {\n    \"x\": 35.25926123725044,\n    \"y\": 183.29628838433166\n   },\n   {\n    \"x\": 33.314816792806,\n    \"y\": 179.01851060655386\n   }\n  ],\n  [\n   {\n    \"x\": 23.981483459472663,\n    \"y\": 178.2407328287761\n   },\n   {\n    \"x\": 30.20370568169489,\n    \"y\": 181.7407328287761\n   },\n   {\n    \"x\": 30.981483459472667,\n    \"y\": 178.2407328287761\n   }\n  ],\n  [\n   {\n    \"x\": 22.814816792805996,\n    \"y\": 174.7407328287761\n   },\n   {\n    \"x\": 29.03703901502822,\n    \"y\": 177.8518439398872\n   },\n   {\n    \"x\": 29.03703901502822,\n    \"y\": 175.51851060655386\n   }\n  ],\n  [\n   {\n    \"x\": 20.092594570583774,\n    \"y\": 170.07406616210943\n   },\n   {\n    \"x\": 27.481483459472663,\n    \"y\": 179.40739949544277\n   },\n   {\n    \"x\": 27.092594570583774,\n    \"y\": 172.40739949544275\n   }\n  ],\n  [\n   {\n    \"x\": 18.925927903917106,\n    \"y\": 166.57406616210943\n   },\n   {\n    \"x\": 27.870372348361553,\n    \"y\": 175.90739949544277\n   },\n   {\n    \"x\": 29.03703901502822,\n    \"y\": 168.90739949544275\n   }\n  ],\n  [\n   {\n    \"x\": 21.259261237250442,\n    \"y\": 165.40739949544275\n   },\n   {\n    \"x\": 27.092594570583774,\n    \"y\": 174.3518439398872\n   },\n   {\n    \"x\": 29.03703901502822,\n    \"y\": 172.40739949544275\n   }\n  ],\n  [\n   {\n    \"x\": 20.481483459472663,\n    \"y\": 162.29628838433163\n   },\n   {\n    \"x\": 27.481483459472663,\n    \"y\": 172.79628838433166\n   },\n   {\n    \"x\": 29.814816792806,\n    \"y\": 169.29628838433166\n   }\n  ],\n  [\n   {\n    \"x\": 23.592594570583774,\n    \"y\": 161.90739949544275\n   },\n   {\n    \"x\": 26.703705681694885,\n    \"y\": 168.12962171766497\n   },\n   {\n    \"x\": 28.64815012613933,\n    \"y\": 161.51851060655386\n   }\n  ],\n  [\n   {\n    \"x\": 23.203705681694885,\n    \"y\": 153.7407328287761\n   },\n   {\n    \"x\": 27.870372348361553,\n    \"y\": 166.96295505099832\n   },\n   {\n    \"x\": 29.42592790391711,\n    \"y\": 154.12962171766497\n   }\n  ],\n  [\n   {\n    \"x\": 25.53703901502822,\n    \"y\": 146.7407328287761\n   },\n   {\n    \"x\": 26.703705681694885,\n    \"y\": 160.3518439398872\n   },\n   {\n    \"x\": 30.981483459472667,\n    \"y\": 147.51851060655386\n   }\n  ],\n  [\n   {\n    \"x\": 28.259261237250442,\n    \"y\": 139.7407328287761\n   },\n   {\n    \"x\": 28.259261237250442,\n    \"y\": 150.62962171766497\n   },\n   {\n    \"x\": 33.314816792806,\n    \"y\": 142.46295505099832\n   }\n  ],\n  [\n   {\n    \"x\": 30.981483459472667,\n    \"y\": 135.46295505099832\n   },\n   {\n    \"x\": 30.981483459472667,\n    \"y\": 144.40739949544275\n   },\n   {\n    \"x\": 35.648150126139335,\n    \"y\": 137.79628838433163\n   }\n  ],\n  [\n   {\n    \"x\": 34.870372348361556,\n    \"y\": 130.01851060655386\n   },\n   {\n    \"x\": 34.09259457058378,\n    \"y\": 139.7407328287761\n   },\n   {\n    \"x\": 39.92592790391711,\n    \"y\": 133.51851060655386\n   }\n  ],\n  [\n   {\n    \"x\": 40.314816792806,\n    \"y\": 126.51851060655386\n   },\n   {\n    \"x\": 36.814816792806,\n    \"y\": 135.46295505099832\n   },\n   {\n    \"x\": 44.20370568169489,\n    \"y\": 128.0740661621094\n   }\n  ],\n  [\n   {\n    \"x\": 42.648150126139335,\n    \"y\": 122.50000000000004\n   },\n   {\n    \"x\": 41.870372348361556,\n    \"y\": 129.8888888888889\n   },\n   {\n    \"x\": 45.370372348361556,\n    \"y\": 124.0555555555556\n   }\n  ],\n  [\n   {\n    \"x\": 45.370372348361556,\n    \"y\": 120.94444444444449\n   },\n   {\n    \"x\": 44.20370568169489,\n    \"y\": 124.44444444444449\n   },\n   {\n    \"x\": 47.314816792806006,\n    \"y\": 121.72222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 44.98148345947267,\n    \"y\": 113.1666666666667\n   },\n   {\n    \"x\": 47.314816792806006,\n    \"y\": 123.6666666666667\n   },\n   {\n    \"x\": 51.20370568169489,\n    \"y\": 120.55555555555559\n   }\n  ],\n  [\n   {\n    \"x\": 53.92592790391712,\n    \"y\": 108.11111111111114\n   },\n   {\n    \"x\": 47.70370568169489,\n    \"y\": 122.88888888888893\n   },\n   {\n    \"x\": 57.814816792806006,\n    \"y\": 113.1666666666667\n   }\n  ],\n  [\n   {\n    \"x\": 58.98148345947268,\n    \"y\": 105.38888888888891\n   },\n   {\n    \"x\": 52.37037234836156,\n    \"y\": 119.00000000000004\n   },\n   {\n    \"x\": 62.092594570583785,\n    \"y\": 111.22222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 63.38888888888891,\n    \"y\": 102.53703901502824\n   },\n   {\n    \"x\": 56.38888888888891,\n    \"y\": 113.42592790391714\n   },\n   {\n    \"x\": 65.33333333333336,\n    \"y\": 108.37037234836158\n   }\n  ],\n  [\n   {\n    \"x\": 67.2777777777778,\n    \"y\": 99.03703901502824\n   },\n   {\n    \"x\": 61.05555555555557,\n    \"y\": 112.25926123725047\n   },\n   {\n    \"x\": 70.38888888888891,\n    \"y\": 104.48148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 90.22222222222224,\n    \"y\": 88.14815012613936\n   },\n   {\n    \"x\": 82.83333333333336,\n    \"y\": 94.75926123725046\n   },\n   {\n    \"x\": 90.22222222222224,\n    \"y\": 93.5925945705838\n   }\n  ],\n  [\n   {\n    \"x\": 97.61111111111114,\n    \"y\": 84.64815012613934\n   },\n   {\n    \"x\": 86.33333333333336,\n    \"y\": 93.98148345947268\n   },\n   {\n    \"x\": 99.94444444444447,\n    \"y\": 88.53703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 105.38888888888891,\n    \"y\": 80.50000000000003\n   },\n   {\n    \"x\": 94.50000000000003,\n    \"y\": 91.38888888888891\n   },\n   {\n    \"x\": 108.50000000000003,\n    \"y\": 84.7777777777778\n   }\n  ],\n  [\n   {\n    \"x\": 113.94444444444449,\n    \"y\": 78.16666666666669\n   },\n   {\n    \"x\": 101.88888888888891,\n    \"y\": 86.33333333333336\n   },\n   {\n    \"x\": 108.88888888888893,\n    \"y\": 86.33333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 122.88888888888893,\n    \"y\": 76.22222222222224\n   },\n   {\n    \"x\": 111.22222222222226,\n    \"y\": 83.61111111111114\n   },\n   {\n    \"x\": 119.77777777777781,\n    \"y\": 81.66666666666669\n   }\n  ],\n  [\n   {\n    \"x\": 128.72222222222226,\n    \"y\": 73.88888888888891\n   },\n   {\n    \"x\": 116.6666666666667,\n    \"y\": 82.05555555555559\n   },\n   {\n    \"x\": 120.94444444444449,\n    \"y\": 82.83333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 132.22222222222226,\n    \"y\": 72.72222222222224\n   },\n   {\n    \"x\": 124.0555555555556,\n    \"y\": 78.94444444444447\n   },\n   {\n    \"x\": 126.38888888888893,\n    \"y\": 80.11111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 138.44444444444449,\n    \"y\": 73.50000000000003\n   },\n   {\n    \"x\": 126.00000000000004,\n    \"y\": 77.38888888888891\n   },\n   {\n    \"x\": 131.44444444444449,\n    \"y\": 78.16666666666669\n   }\n  ],\n  [\n   {\n    \"x\": 139.61111111111114,\n    \"y\": 77.38888888888891\n   },\n   {\n    \"x\": 133.00000000000003,\n    \"y\": 75.83333333333336\n   },\n   {\n    \"x\": 132.61111111111114,\n    \"y\": 78.16666666666669\n   }\n  ],\n  [\n   {\n    \"x\": 140.77777777777783,\n    \"y\": 81.66666666666669\n   },\n   {\n    \"x\": 132.61111111111114,\n    \"y\": 76.61111111111113\n   },\n   {\n    \"x\": 131.0555555555556,\n    \"y\": 78.55555555555559\n   }\n  ],\n  [\n   {\n    \"x\": 136.11111111111114,\n    \"y\": 84.00000000000003\n   },\n   {\n    \"x\": 133.00000000000003,\n    \"y\": 77.38888888888891\n   },\n   {\n    \"x\": 130.6666666666667,\n    \"y\": 82.44444444444447\n   }\n  ],\n  [\n   {\n    \"x\": 105.64815012613936,\n    \"y\": 95.92592790391713\n   },\n   {\n    \"x\": 84.64815012613934,\n    \"y\": 103.31481679280603\n   },\n   {\n    \"x\": 101.37037234836157,\n    \"y\": 92.81481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 116.92592790391714,\n    \"y\": 90.48148345947268\n   },\n   {\n    \"x\": 95.53703901502824,\n    \"y\": 96.31481679280601\n   },\n   {\n    \"x\": 112.64815012613936,\n    \"y\": 88.14815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 124.31481679280603,\n    \"y\": 87.37037234836157\n   },\n   {\n    \"x\": 125.4814834594727,\n    \"y\": 106.81481679280603\n   },\n   {\n    \"x\": 127.42592790391714,\n    \"y\": 90.48148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 123.14815012613936,\n    \"y\": 97.87037234836157\n   },\n   {\n    \"x\": 124.70370568169491,\n    \"y\": 109.53703901502824\n   },\n   {\n    \"x\": 128.5925945705838,\n    \"y\": 97.48148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 121.9814834594727,\n    \"y\": 104.48148345947268\n   },\n   {\n    \"x\": 126.25926123725047,\n    \"y\": 119.25926123725047\n   },\n   {\n    \"x\": 126.25926123725047,\n    \"y\": 104.48148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 135.5925945705838,\n    \"y\": 93.5925945705838\n   },\n   {\n    \"x\": 132.48148345947268,\n    \"y\": 105.64815012613936\n   },\n   {\n    \"x\": 131.7037056816949,\n    \"y\": 95.92592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 135.5925945705838,\n    \"y\": 99.03703901502824\n   },\n   {\n    \"x\": 131.31481679280603,\n    \"y\": 105.25926123725047\n   },\n   {\n    \"x\": 130.53703901502826,\n    \"y\": 94.37037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 136.3703723483616,\n    \"y\": 101.75926123725047\n   },\n   {\n    \"x\": 132.0925945705838,\n    \"y\": 109.53703901502824\n   },\n   {\n    \"x\": 128.98148345947268,\n    \"y\": 102.53703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 135.2037056816949,\n    \"y\": 109.14815012613936\n   },\n   {\n    \"x\": 131.31481679280603,\n    \"y\": 116.14815012613936\n   },\n   {\n    \"x\": 130.53703901502826,\n    \"y\": 107.98148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 141.81481679280603,\n    \"y\": 96.31481679280601\n   },\n   {\n    \"x\": 139.0925945705838,\n    \"y\": 108.37037234836158\n   },\n   {\n    \"x\": 143.3703723483616,\n    \"y\": 105.25926123725047\n   }\n  ],\n  [\n   {\n    \"x\": 145.7037056816949,\n    \"y\": 90.0925945705838\n   },\n   {\n    \"x\": 142.2037056816949,\n    \"y\": 102.14815012613936\n   },\n   {\n    \"x\": 148.03703901502826,\n    \"y\": 92.81481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 149.9814834594727,\n    \"y\": 81.53703901502824\n   },\n   {\n    \"x\": 146.0925945705838,\n    \"y\": 95.53703901502824\n   },\n   {\n    \"x\": 151.92592790391714,\n    \"y\": 92.42592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 152.7037056816949,\n    \"y\": 75.31481679280601\n   },\n   {\n    \"x\": 149.5925945705838,\n    \"y\": 90.0925945705838\n   },\n   {\n    \"x\": 155.81481679280603,\n    \"y\": 85.42592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 154.64815012613937,\n    \"y\": 70.25926123725046\n   },\n   {\n    \"x\": 153.09259457058383,\n    \"y\": 84.25926123725046\n   },\n   {\n    \"x\": 158.53703901502826,\n    \"y\": 80.37037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 161.64815012613937,\n    \"y\": 70.64815012613934\n   },\n   {\n    \"x\": 155.42592790391714,\n    \"y\": 73.37037234836157\n   },\n   {\n    \"x\": 158.53703901502826,\n    \"y\": 78.03703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 164.3703723483616,\n    \"y\": 72.2037056816949\n   },\n   {\n    \"x\": 157.3703723483616,\n    \"y\": 74.14815012613934\n   },\n   {\n    \"x\": 160.8703723483616,\n    \"y\": 78.42592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 167.4814834594727,\n    \"y\": 77.25926123725046\n   },\n   {\n    \"x\": 162.42592790391714,\n    \"y\": 74.14815012613934\n   },\n   {\n    \"x\": 162.42592790391714,\n    \"y\": 78.03703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 168.25926123725048,\n    \"y\": 81.14815012613934\n   },\n   {\n    \"x\": 160.8703723483616,\n    \"y\": 75.31481679280601\n   },\n   {\n    \"x\": 160.09259457058383,\n    \"y\": 81.14815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 165.92592790391714,\n    \"y\": 87.75926123725046\n   },\n   {\n    \"x\": 164.75926123725048,\n    \"y\": 79.59259457058378\n   },\n   {\n    \"x\": 160.8703723483616,\n    \"y\": 87.37037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 163.59259457058383,\n    \"y\": 84.25926123725046\n   },\n   {\n    \"x\": 164.75926123725048,\n    \"y\": 96.31481679280601\n   },\n   {\n    \"x\": 160.8703723483616,\n    \"y\": 92.42592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 162.81481679280603,\n    \"y\": 106.42592790391713\n   },\n   {\n    \"x\": 163.20370568169494,\n    \"y\": 90.48148345947268\n   },\n   {\n    \"x\": 159.31481679280603,\n    \"y\": 104.48148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 162.03703901502826,\n    \"y\": 111.87037234836158\n   },\n   {\n    \"x\": 161.25926123725048,\n    \"y\": 100.98148345947268\n   },\n   {\n    \"x\": 157.75926123725048,\n    \"y\": 110.70370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 162.03703901502826,\n    \"y\": 117.70370568169491\n   },\n   {\n    \"x\": 159.31481679280603,\n    \"y\": 105.64815012613936\n   },\n   {\n    \"x\": 157.3703723483616,\n    \"y\": 115.37037234836158\n   }\n  ],\n  [\n   {\n    \"x\": 160.8703723483616,\n    \"y\": 129.37037234836157\n   },\n   {\n    \"x\": 158.92592790391714,\n    \"y\": 113.03703901502824\n   },\n   {\n    \"x\": 157.3703723483616,\n    \"y\": 128.2037056816949\n   }\n  ],\n  [\n   {\n    \"x\": 161.25926123725048,\n    \"y\": 137.14815012613937\n   },\n   {\n    \"x\": 157.3703723483616,\n    \"y\": 124.31481679280603\n   },\n   {\n    \"x\": 156.59259457058383,\n    \"y\": 136.3703723483616\n   }\n  ],\n  [\n   {\n    \"x\": 148.42592790391714,\n    \"y\": 125.4814834594727\n   },\n   {\n    \"x\": 151.53703901502826,\n    \"y\": 106.03703901502824\n   },\n   {\n    \"x\": 151.92592790391714,\n    \"y\": 124.70370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 148.03703901502826,\n    \"y\": 135.5925945705838\n   },\n   {\n    \"x\": 151.14815012613937,\n    \"y\": 118.0925945705838\n   },\n   {\n    \"x\": 149.9814834594727,\n    \"y\": 134.81481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 149.2037056816949,\n    \"y\": 139.35184987386071\n   },\n   {\n    \"x\": 150.3703723483616,\n    \"y\": 133.1296276516385\n   },\n   {\n    \"x\": 150.75926123725048,\n    \"y\": 139.7407387627496\n   }\n  ],\n  [\n   {\n    \"x\": 149.2037056816949,\n    \"y\": 141.68518320719406\n   },\n   {\n    \"x\": 150.75926123725048,\n    \"y\": 137.01851654052737\n   },\n   {\n    \"x\": 151.53703901502826,\n    \"y\": 140.9074054294163\n   }\n  ],\n  [\n   {\n    \"x\": 150.75926123725048,\n    \"y\": 145.18518320719406\n   },\n   {\n    \"x\": 150.3703723483616,\n    \"y\": 138.96296098497183\n   },\n   {\n    \"x\": 152.31481679280603,\n    \"y\": 143.6296276516385\n   }\n  ],\n  [\n   {\n    \"x\": 153.09259457058383,\n    \"y\": 151.79629431830517\n   },\n   {\n    \"x\": 151.14815012613937,\n    \"y\": 142.07407209608294\n   },\n   {\n    \"x\": 153.8703723483616,\n    \"y\": 145.18518320719406\n   }\n  ],\n  [\n   {\n    \"x\": 156.9814834594727,\n    \"y\": 154.9074054294163\n   },\n   {\n    \"x\": 153.09259457058383,\n    \"y\": 147.9074054294163\n   },\n   {\n    \"x\": 158.92592790391714,\n    \"y\": 153.7407387627496\n   }\n  ],\n  [\n   {\n    \"x\": 160.8703723483616,\n    \"y\": 157.2407387627496\n   },\n   {\n    \"x\": 156.9814834594727,\n    \"y\": 152.96296098497183\n   },\n   {\n    \"x\": 163.20370568169494,\n    \"y\": 151.79629431830517\n   }\n  ],\n  [\n   {\n    \"x\": 167.4814834594727,\n    \"y\": 153.7407387627496\n   },\n   {\n    \"x\": 159.7037056816949,\n    \"y\": 153.7407387627496\n   },\n   {\n    \"x\": 166.70370568169494,\n    \"y\": 147.1296276516385\n   }\n  ],\n  [\n   {\n    \"x\": 172.4074054294163,\n    \"y\": 149.33333333333337\n   },\n   {\n    \"x\": 161.5185165405274,\n    \"y\": 152.0555555555556\n   },\n   {\n    \"x\": 168.5185165405274,\n    \"y\": 144.6666666666667\n   }\n  ],\n  [\n   {\n    \"x\": 175.12962765163851,\n    \"y\": 143.50000000000006\n   },\n   {\n    \"x\": 165.0185165405274,\n    \"y\": 150.50000000000006\n   },\n   {\n    \"x\": 170.85184987386071,\n    \"y\": 141.5555555555556\n   }\n  ],\n  [\n   {\n    \"x\": 175.5185165405274,\n    \"y\": 139.22222222222226\n   },\n   {\n    \"x\": 169.29629431830517,\n    \"y\": 146.61111111111114\n   },\n   {\n    \"x\": 172.79629431830517,\n    \"y\": 138.44444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 160.7407387627496,\n    \"y\": 138.83333333333337\n   },\n   {\n    \"x\": 157.2407387627496,\n    \"y\": 134.5555555555556\n   },\n   {\n    \"x\": 158.4074054294163,\n    \"y\": 141.1666666666667\n   }\n  ],\n  [\n   {\n    \"x\": 164.24073876274963,\n    \"y\": 133.38888888888894\n   },\n   {\n    \"x\": 159.57407209608294,\n    \"y\": 142.72222222222226\n   },\n   {\n    \"x\": 167.35184987386071,\n    \"y\": 136.88888888888894\n   }\n  ],\n  [\n   {\n    \"x\": 166.18518320719406,\n    \"y\": 125.61111111111114\n   },\n   {\n    \"x\": 165.0185165405274,\n    \"y\": 140.00000000000003\n   },\n   {\n    \"x\": 169.29629431830517,\n    \"y\": 130.6666666666667\n   }\n  ],\n  [\n   {\n    \"x\": 169.1666666666667,\n    \"y\": 119.97222222222226\n   },\n   {\n    \"x\": 168.00000000000006,\n    \"y\": 134.75000000000003\n   },\n   {\n    \"x\": 173.0555555555556,\n    \"y\": 124.63888888888893\n   }\n  ],\n  [\n   {\n    \"x\": 173.0555555555556,\n    \"y\": 110.63888888888893\n   },\n   {\n    \"x\": 169.94444444444449,\n    \"y\": 130.08333333333337\n   },\n   {\n    \"x\": 175.77777777777783,\n    \"y\": 119.97222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 176.1666666666667,\n    \"y\": 104.4166666666667\n   },\n   {\n    \"x\": 173.44444444444449,\n    \"y\": 118.4166666666667\n   },\n   {\n    \"x\": 178.88888888888894,\n    \"y\": 113.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 193.27777777777783,\n    \"y\": 81.86111111111114\n   },\n   {\n    \"x\": 187.8333333333334,\n    \"y\": 76.41666666666669\n   },\n   {\n    \"x\": 187.0555555555556,\n    \"y\": 82.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 193.6666666666667,\n    \"y\": 85.36111111111114\n   },\n   {\n    \"x\": 187.4444444444445,\n    \"y\": 79.5277777777778\n   },\n   {\n    \"x\": 187.4444444444445,\n    \"y\": 86.5277777777778\n   }\n  ],\n  [\n   {\n    \"x\": 194.4444444444445,\n    \"y\": 94.30555555555559\n   },\n   {\n    \"x\": 189.77777777777783,\n    \"y\": 79.5277777777778\n   },\n   {\n    \"x\": 187.0555555555556,\n    \"y\": 85.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 194.8333333333334,\n    \"y\": 112.8425945705838\n   },\n   {\n    \"x\": 190.9444444444445,\n    \"y\": 130.73148345947268\n   },\n   {\n    \"x\": 191.3333333333334,\n    \"y\": 115.17592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 194.05555555555563,\n    \"y\": 122.17592790391714\n   },\n   {\n    \"x\": 190.1666666666667,\n    \"y\": 131.1203723483616\n   },\n   {\n    \"x\": 189.77777777777783,\n    \"y\": 119.06481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 194.8333333333334,\n    \"y\": 125.28703901502826\n   },\n   {\n    \"x\": 192.50000000000006,\n    \"y\": 133.8425945705838\n   },\n   {\n    \"x\": 189.00000000000006,\n    \"y\": 123.3425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 194.8333333333334,\n    \"y\": 130.73148345947268\n   },\n   {\n    \"x\": 192.50000000000006,\n    \"y\": 143.56481679280603\n   },\n   {\n    \"x\": 189.38888888888894,\n    \"y\": 129.9537056816949\n   }\n  ],\n  [\n   {\n    \"x\": 194.4444444444445,\n    \"y\": 142.39815012613937\n   },\n   {\n    \"x\": 192.50000000000006,\n    \"y\": 150.56481679280603\n   },\n   {\n    \"x\": 190.9444444444445,\n    \"y\": 143.56481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 194.4444444444445,\n    \"y\": 150.17592790391714\n   },\n   {\n    \"x\": 191.3333333333334,\n    \"y\": 156.00926123725048\n   },\n   {\n    \"x\": 191.3333333333334,\n    \"y\": 150.17592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 195.22222222222229,\n    \"y\": 154.06481679280603\n   },\n   {\n    \"x\": 190.1666666666667,\n    \"y\": 164.56481679280603\n   },\n   {\n    \"x\": 189.77777777777783,\n    \"y\": 153.67592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 193.5370449490018,\n    \"y\": 162.6203723483616\n   },\n   {\n    \"x\": 187.70371161566845,\n    \"y\": 173.1203723483616\n   },\n   {\n    \"x\": 188.48148939344622,\n    \"y\": 162.2314834594727\n   }\n  ],\n  [\n   {\n    \"x\": 191.72222222222229,\n    \"y\": 170.7870449490018\n   },\n   {\n    \"x\": 185.88888888888894,\n    \"y\": 177.3981560601129\n   },\n   {\n    \"x\": 185.88888888888894,\n    \"y\": 171.56482272677957\n   }\n  ],\n  [\n   {\n    \"x\": 190.1666666666667,\n    \"y\": 175.06482272677957\n   },\n   {\n    \"x\": 183.5555555555556,\n    \"y\": 180.8981560601129\n   },\n   {\n    \"x\": 186.27777777777783,\n    \"y\": 171.95371161566845\n   }\n  ],\n  [\n   {\n    \"x\": 190.9444444444445,\n    \"y\": 178.17593383789068\n   },\n   {\n    \"x\": 181.22222222222229,\n    \"y\": 188.2870449490018\n   },\n   {\n    \"x\": 183.1666666666667,\n    \"y\": 178.56482272677957\n   }\n  ],\n  [\n   {\n    \"x\": 180.96295505099832,\n    \"y\": 192.43517727322055\n   },\n   {\n    \"x\": 177.8518439398872,\n    \"y\": 187.7685106065539\n   },\n   {\n    \"x\": 184.07406616210943,\n    \"y\": 183.4907328287761\n   }\n  ],\n  [\n   {\n    \"x\": 174.7407328287761,\n    \"y\": 195.15739949544277\n   },\n   {\n    \"x\": 180.57406616210943,\n    \"y\": 186.9907328287761\n   },\n   {\n    \"x\": 175.90739949544277,\n    \"y\": 186.6018439398872\n   }\n  ],\n  [\n   {\n    \"x\": 172.01851060655386,\n    \"y\": 193.9907328287761\n   },\n   {\n    \"x\": 179.79628838433166,\n    \"y\": 186.21295505099832\n   },\n   {\n    \"x\": 170.8518439398872,\n    \"y\": 185.04628838433166\n   }\n  ],\n  [\n   {\n    \"x\": 165.01851060655386,\n    \"y\": 192.82406616210943\n   },\n   {\n    \"x\": 173.57406616210943,\n    \"y\": 188.54628838433166\n   },\n   {\n    \"x\": 171.2407328287761,\n    \"y\": 186.9907328287761\n   }\n  ],\n  [\n   {\n    \"x\": 164.2407328287761,\n    \"y\": 187.7685106065539\n   },\n   {\n    \"x\": 172.40739949544275,\n    \"y\": 189.32406616210943\n   },\n   {\n    \"x\": 172.40739949544275,\n    \"y\": 186.6018439398872\n   }\n  ],\n  [\n   {\n    \"x\": 164.62962171766497,\n    \"y\": 189.32406616210943\n   },\n   {\n    \"x\": 168.90739949544275,\n    \"y\": 184.2685106065539\n   },\n   {\n    \"x\": 169.29628838433166,\n    \"y\": 186.6018439398872\n   }\n  ],\n  [\n   {\n    \"x\": 163.46295505099832,\n    \"y\": 184.2685106065539\n   },\n   {\n    \"x\": 170.46295505099832,\n    \"y\": 185.82406616210943\n   },\n   {\n    \"x\": 169.68517727322055,\n    \"y\": 182.71295505099832\n   }\n  ],\n  [\n   {\n    \"x\": 164.2407328287761,\n    \"y\": 179.21295505099832\n   },\n   {\n    \"x\": 168.90739949544275,\n    \"y\": 185.04628838433166\n   },\n   {\n    \"x\": 169.29628838433166,\n    \"y\": 181.15739949544277\n   }\n  ],\n  [\n   {\n    \"x\": 163.07406616210943,\n    \"y\": 175.71295505099832\n   },\n   {\n    \"x\": 167.3518439398872,\n    \"y\": 183.4907328287761\n   },\n   {\n    \"x\": 168.51851060655386,\n    \"y\": 179.21295505099832\n   }\n  ],\n  [\n   {\n    \"x\": 166.18517727322055,\n    \"y\": 167.54628838433166\n   },\n   {\n    \"x\": 166.96295505099832,\n    \"y\": 179.9907328287761\n   },\n   {\n    \"x\": 169.68517727322055,\n    \"y\": 171.43517727322055\n   }\n  ],\n  [\n   {\n    \"x\": 168.90739949544275,\n    \"y\": 160.15739949544275\n   },\n   {\n    \"x\": 167.7407328287761,\n    \"y\": 173.37962171766497\n   },\n   {\n    \"x\": 172.40739949544275,\n    \"y\": 162.87962171766497\n   }\n  ],\n  [\n   {\n    \"x\": 170.8518439398872,\n    \"y\": 151.21295505099832\n   },\n   {\n    \"x\": 168.90739949544275,\n    \"y\": 166.76851060655386\n   },\n   {\n    \"x\": 172.40739949544275,\n    \"y\": 156.65739949544275\n   }\n  ],\n  [\n   {\n    \"x\": 173.57406616210943,\n    \"y\": 144.6018439398872\n   },\n   {\n    \"x\": 171.62962171766497,\n    \"y\": 156.65739949544275\n   },\n   {\n    \"x\": 176.68517727322055,\n    \"y\": 146.93517727322052\n   }\n  ],\n  [\n   {\n    \"x\": 217.129621717665,\n    \"y\": 77.97222222222224\n   },\n   {\n    \"x\": 208.18517727322055,\n    \"y\": 79.91666666666669\n   },\n   {\n    \"x\": 212.46295505099832,\n    \"y\": 82.25000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 221.79628838433166,\n    \"y\": 81.47222222222224\n   },\n   {\n    \"x\": 214.0185106065539,\n    \"y\": 79.5277777777778\n   },\n   {\n    \"x\": 214.79628838433166,\n    \"y\": 82.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 227.629621717665,\n    \"y\": 86.13888888888891\n   },\n   {\n    \"x\": 218.68517727322055,\n    \"y\": 81.08333333333336\n   },\n   {\n    \"x\": 217.90739949544277,\n    \"y\": 86.13888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 228.0185106065539,\n    \"y\": 89.25000000000003\n   },\n   {\n    \"x\": 221.79628838433166,\n    \"y\": 85.75000000000003\n   },\n   {\n    \"x\": 221.40739949544277,\n    \"y\": 87.69444444444447\n   }\n  ],\n  [\n   {\n    \"x\": 227.629621717665,\n    \"y\": 90.4166666666667\n   },\n   {\n    \"x\": 222.18517727322055,\n    \"y\": 86.13888888888891\n   },\n   {\n    \"x\": 222.18517727322055,\n    \"y\": 89.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 227.37037828233514,\n    \"y\": 107.39815012613936\n   },\n   {\n    \"x\": 226.20371161566848,\n    \"y\": 97.67592790391713\n   },\n   {\n    \"x\": 224.6481560601129,\n    \"y\": 103.50926123725047\n   }\n  ],\n  [\n   {\n    \"x\": 226.20371161566848,\n    \"y\": 112.45370568169491\n   },\n   {\n    \"x\": 225.8148227267796,\n    \"y\": 103.12037234836157\n   },\n   {\n    \"x\": 223.09260050455737,\n    \"y\": 107.39815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 223.48148939344625,\n    \"y\": 118.28703901502824\n   },\n   {\n    \"x\": 225.0370449490018,\n    \"y\": 107.39815012613936\n   },\n   {\n    \"x\": 221.1481560601129,\n    \"y\": 111.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 221.1481560601129,\n    \"y\": 122.56481679280603\n   },\n   {\n    \"x\": 222.70371161566848,\n    \"y\": 110.89815012613936\n   },\n   {\n    \"x\": 218.42593383789068,\n    \"y\": 115.17592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 199.75926717122402,\n    \"y\": 104.28703901502824\n   },\n   {\n    \"x\": 195.87037828233514,\n    \"y\": 112.8425945705838\n   },\n   {\n    \"x\": 201.31482272677957,\n    \"y\": 108.56481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 204.0370449490018,\n    \"y\": 101.95370568169491\n   },\n   {\n    \"x\": 199.37037828233514,\n    \"y\": 107.00926123725047\n   },\n   {\n    \"x\": 202.48148939344625,\n    \"y\": 107.39815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 207.5370449490018,\n    \"y\": 100.00926123725047\n   },\n   {\n    \"x\": 202.87037828233514,\n    \"y\": 105.45370568169491\n   },\n   {\n    \"x\": 207.5370449490018,\n    \"y\": 104.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 212.98148939344625,\n    \"y\": 98.45370568169491\n   },\n   {\n    \"x\": 206.37037828233514,\n    \"y\": 102.73148345947268\n   },\n   {\n    \"x\": 212.20371161566845,\n    \"y\": 101.95370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 216.87037828233514,\n    \"y\": 96.89815012613936\n   },\n   {\n    \"x\": 210.6481560601129,\n    \"y\": 100.78703901502824\n   },\n   {\n    \"x\": 215.31482272677957,\n    \"y\": 101.17592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 230.87037828233514,\n    \"y\": 90.67592790391713\n   },\n   {\n    \"x\": 227.37037828233514,\n    \"y\": 94.95370568169491\n   },\n   {\n    \"x\": 231.6481560601129,\n    \"y\": 93.78703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 233.98148939344625,\n    \"y\": 87.56481679280601\n   },\n   {\n    \"x\": 230.48148939344625,\n    \"y\": 93.78703901502824\n   },\n   {\n    \"x\": 234.75926717122402,\n    \"y\": 91.06481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 236.70371161566848,\n    \"y\": 82.12037234836157\n   },\n   {\n    \"x\": 233.59260050455737,\n    \"y\": 91.8425945705838\n   },\n   {\n    \"x\": 239.0370449490018,\n    \"y\": 83.28703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 239.4259338378907,\n    \"y\": 77.4537056816949\n   },\n   {\n    \"x\": 236.70371161566848,\n    \"y\": 85.23148345947268\n   },\n   {\n    \"x\": 240.59260050455737,\n    \"y\": 81.73148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 241.75926717122402,\n    \"y\": 102.73148345947268\n   },\n   {\n    \"x\": 241.75926717122402,\n    \"y\": 96.50926123725046\n   },\n   {\n    \"x\": 237.87037828233514,\n    \"y\": 102.3425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 241.75926717122402,\n    \"y\": 105.8425945705838\n   },\n   {\n    \"x\": 239.0370449490018,\n    \"y\": 100.00926123725047\n   },\n   {\n    \"x\": 236.3148227267796,\n    \"y\": 105.06481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 240.59260050455737,\n    \"y\": 109.3425945705838\n   },\n   {\n    \"x\": 238.6481560601129,\n    \"y\": 102.73148345947268\n   },\n   {\n    \"x\": 236.3148227267796,\n    \"y\": 108.95370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 241.37037828233514,\n    \"y\": 108.95370568169491\n   },\n   {\n    \"x\": 237.87037828233514,\n    \"y\": 111.67592790391713\n   },\n   {\n    \"x\": 241.75926717122402,\n    \"y\": 112.8425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 244.87037828233514,\n    \"y\": 105.8425945705838\n   },\n   {\n    \"x\": 240.20371161566848,\n    \"y\": 112.8425945705838\n   },\n   {\n    \"x\": 247.98148939344625,\n    \"y\": 108.56481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 248.75926717122402,\n    \"y\": 102.3425945705838\n   },\n   {\n    \"x\": 244.09260050455737,\n    \"y\": 110.50926123725047\n   },\n   {\n    \"x\": 252.6481560601129,\n    \"y\": 104.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 251.87037828233514,\n    \"y\": 99.62037234836157\n   },\n   {\n    \"x\": 248.37037828233514,\n    \"y\": 108.56481679280603\n   },\n   {\n    \"x\": 255.37037828233514,\n    \"y\": 102.3425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 255.37037828233514,\n    \"y\": 96.12037234836157\n   },\n   {\n    \"x\": 252.25926717122402,\n    \"y\": 105.45370568169491\n   },\n   {\n    \"x\": 256.9259338378907,\n    \"y\": 98.45370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 258.87037828233514,\n    \"y\": 91.8425945705838\n   },\n   {\n    \"x\": 254.59260050455737,\n    \"y\": 102.3425945705838\n   },\n   {\n    \"x\": 263.1481560601129,\n    \"y\": 94.56481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 261.20371161566845,\n    \"y\": 88.3425945705838\n   },\n   {\n    \"x\": 260.4259338378907,\n    \"y\": 96.89815012613936\n   },\n   {\n    \"x\": 267.8148227267796,\n    \"y\": 89.12037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 245.25926717122402,\n    \"y\": 120.2314834594727\n   },\n   {\n    \"x\": 237.48148939344625,\n    \"y\": 118.67592790391714\n   },\n   {\n    \"x\": 242.1481560601129,\n    \"y\": 117.12037234836158\n   }\n  ],\n  [\n   {\n    \"x\": 249.53704494900182,\n    \"y\": 117.12037234836158\n   },\n   {\n    \"x\": 240.98148939344625,\n    \"y\": 119.06481679280603\n   },\n   {\n    \"x\": 246.4259338378907,\n    \"y\": 114.78703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 256.5370449490018,\n    \"y\": 112.06481679280603\n   },\n   {\n    \"x\": 244.87037828233514,\n    \"y\": 117.89815012613936\n   },\n   {\n    \"x\": 249.9259338378907,\n    \"y\": 110.89815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 260.0370449490018,\n    \"y\": 107.00926123725047\n   },\n   {\n    \"x\": 248.75926717122402,\n    \"y\": 114.39815012613936\n   },\n   {\n    \"x\": 254.98148939344625,\n    \"y\": 105.06481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 264.3148227267796,\n    \"y\": 101.56481679280601\n   },\n   {\n    \"x\": 252.25926717122402,\n    \"y\": 110.89815012613936\n   },\n   {\n    \"x\": 260.0370449490018,\n    \"y\": 101.17592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 268.2037116156685,\n    \"y\": 96.12037234836157\n   },\n   {\n    \"x\": 258.09260050455737,\n    \"y\": 104.67592790391713\n   },\n   {\n    \"x\": 263.9259338378907,\n    \"y\": 96.50926123725046\n   }\n  ],\n  [\n   {\n    \"x\": 286.87037828233514,\n    \"y\": 66.43518320719403\n   },\n   {\n    \"x\": 274.8148227267796,\n    \"y\": 85.87962765163849\n   },\n   {\n    \"x\": 282.59260050455737,\n    \"y\": 64.49073876274959\n   }\n  ],\n  [\n   {\n    \"x\": 289.59260050455737,\n    \"y\": 60.21296098497181\n   },\n   {\n    \"x\": 282.2037116156685,\n    \"y\": 68.76851654052736\n   },\n   {\n    \"x\": 285.3148227267796,\n    \"y\": 58.65740542941625\n   }\n  ],\n  [\n   {\n    \"x\": 290.75926717122405,\n    \"y\": 54.37962765163847\n   },\n   {\n    \"x\": 284.1481560601129,\n    \"y\": 64.49073876274959\n   },\n   {\n    \"x\": 285.7037116156685,\n    \"y\": 56.324072096082915\n   }\n  ],\n  [\n   {\n    \"x\": 290.37037828233514,\n    \"y\": 48.54629431830514\n   },\n   {\n    \"x\": 287.6481560601129,\n    \"y\": 57.101849873860694\n   },\n   {\n    \"x\": 286.09260050455737,\n    \"y\": 50.87962765163847\n   }\n  ],\n  [\n   {\n    \"x\": 289.59260050455737,\n    \"y\": 44.657405429416244\n   },\n   {\n    \"x\": 286.87037828233514,\n    \"y\": 53.99073876274958\n   },\n   {\n    \"x\": 285.3148227267796,\n    \"y\": 48.93518320719402\n   }\n  ],\n  [\n   {\n    \"x\": 286.87037828233514,\n    \"y\": 40.76851654052736\n   },\n   {\n    \"x\": 287.25926717122405,\n    \"y\": 50.101849873860694\n   },\n   {\n    \"x\": 281.4259338378907,\n    \"y\": 46.2129609849718\n   }\n  ],\n  [\n   {\n    \"x\": 282.2037116156685,\n    \"y\": 38.43518320719402\n   },\n   {\n    \"x\": 285.7037116156685,\n    \"y\": 46.99073876274958\n   },\n   {\n    \"x\": 281.4259338378907,\n    \"y\": 44.26851654052736\n   }\n  ],\n  [\n   {\n    \"x\": 278.3148227267796,\n    \"y\": 38.04629431830514\n   },\n   {\n    \"x\": 282.9814893934463,\n    \"y\": 42.7129609849718\n   },\n   {\n    \"x\": 278.3148227267796,\n    \"y\": 43.49073876274958\n   }\n  ],\n  [\n   {\n    \"x\": 274.0370449490018,\n    \"y\": 39.60184987386069\n   },\n   {\n    \"x\": 283.75926717122405,\n    \"y\": 43.10184987386069\n   },\n   {\n    \"x\": 273.6481560601129,\n    \"y\": 46.2129609849718\n   }\n  ],\n  [\n   {\n    \"x\": 269.75926717122405,\n    \"y\": 42.7129609849718\n   },\n   {\n    \"x\": 277.9259338378907,\n    \"y\": 41.93518320719402\n   },\n   {\n    \"x\": 274.4259338378907,\n    \"y\": 46.2129609849718\n   }\n  ],\n  [\n   {\n    \"x\": 267.8148227267796,\n    \"y\": 46.601849873860694\n   },\n   {\n    \"x\": 275.2037116156685,\n    \"y\": 42.324072096082915\n   },\n   {\n    \"x\": 273.6481560601129,\n    \"y\": 48.93518320719402\n   }\n  ],\n  [\n   {\n    \"x\": 264.3148227267796,\n    \"y\": 50.49073876274958\n   },\n   {\n    \"x\": 272.09260050455737,\n    \"y\": 45.824072096082915\n   },\n   {\n    \"x\": 268.2037116156685,\n    \"y\": 52.824072096082915\n   }\n  ],\n  [\n   {\n    \"x\": 261.9814893934463,\n    \"y\": 54.76851654052736\n   },\n   {\n    \"x\": 270.5370449490018,\n    \"y\": 47.76851654052736\n   },\n   {\n    \"x\": 265.87037828233514,\n    \"y\": 56.71296098497181\n   }\n  ],\n  [\n   {\n    \"x\": 260.0370449490018,\n    \"y\": 59.43518320719403\n   },\n   {\n    \"x\": 266.6481560601129,\n    \"y\": 52.824072096082915\n   },\n   {\n    \"x\": 265.4814893934463,\n    \"y\": 60.21296098497181\n   }\n  ],\n  [\n   {\n    \"x\": 258.4814893934463,\n    \"y\": 66.04629431830514\n   },\n   {\n    \"x\": 263.5370449490018,\n    \"y\": 57.87962765163847\n   },\n   {\n    \"x\": 263.9259338378907,\n    \"y\": 64.87962765163847\n   }\n  ],\n  [\n   {\n    \"x\": 258.09260050455737,\n    \"y\": 70.32407209608292\n   },\n   {\n    \"x\": 262.75926717122405,\n    \"y\": 62.546294318305144\n   },\n   {\n    \"x\": 261.59260050455737,\n    \"y\": 71.1018498738607\n   }\n  ],\n  [\n   {\n    \"x\": 273.7777777777779,\n    \"y\": 98.8425945705838\n   },\n   {\n    \"x\": 274.55555555555566,\n    \"y\": 108.56481679280603\n   },\n   {\n    \"x\": 277.66666666666674,\n    \"y\": 105.06481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 270.66666666666674,\n    \"y\": 105.8425945705838\n   },\n   {\n    \"x\": 273.00000000000006,\n    \"y\": 114.78703901502824\n   },\n   {\n    \"x\": 278.05555555555566,\n    \"y\": 105.45370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 269.88888888888897,\n    \"y\": 110.89815012613936\n   },\n   {\n    \"x\": 271.4444444444445,\n    \"y\": 121.78703901502824\n   },\n   {\n    \"x\": 276.88888888888897,\n    \"y\": 110.89815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 265.6111111111112,\n    \"y\": 119.06481679280603\n   },\n   {\n    \"x\": 269.50000000000006,\n    \"y\": 133.06481679280603\n   },\n   {\n    \"x\": 275.3333333333334,\n    \"y\": 115.17592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 264.96295505099835,\n    \"y\": 126.8425945705838\n   },\n   {\n    \"x\": 268.46295505099835,\n    \"y\": 138.89815012613937\n   },\n   {\n    \"x\": 273.5185106065539,\n    \"y\": 126.45370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 261.46295505099835,\n    \"y\": 129.9537056816949\n   },\n   {\n    \"x\": 267.6851772732206,\n    \"y\": 143.17592790391714\n   },\n   {\n    \"x\": 271.57406616210943,\n    \"y\": 133.06481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 262.2407328287761,\n    \"y\": 133.8425945705838\n   },\n   {\n    \"x\": 268.07406616210943,\n    \"y\": 144.3425945705838\n   },\n   {\n    \"x\": 270.0185106065539,\n    \"y\": 136.17592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 262.2407328287761,\n    \"y\": 139.28703901502826\n   },\n   {\n    \"x\": 267.6851772732206,\n    \"y\": 147.06481679280603\n   },\n   {\n    \"x\": 270.79628838433166,\n    \"y\": 139.28703901502826\n   }\n  ],\n  [\n   {\n    \"x\": 263.4073994954428,\n    \"y\": 143.17592790391714\n   },\n   {\n    \"x\": 268.85184393988726,\n    \"y\": 148.6203723483616\n   },\n   {\n    \"x\": 270.0185106065539,\n    \"y\": 140.8425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 260.6851772732206,\n    \"y\": 145.50926123725048\n   },\n   {\n    \"x\": 269.2407328287761,\n    \"y\": 153.28703901502826\n   },\n   {\n    \"x\": 270.79628838433166,\n    \"y\": 144.7314834594727\n   }\n  ],\n  [\n   {\n    \"x\": 261.8518439398872,\n    \"y\": 149.78703901502826\n   },\n   {\n    \"x\": 269.62962171766503,\n    \"y\": 155.2314834594727\n   },\n   {\n    \"x\": 270.4073994954428,\n    \"y\": 147.4537056816949\n   }\n  ],\n  [\n   {\n    \"x\": 263.0185106065539,\n    \"y\": 152.25000000000006\n   },\n   {\n    \"x\": 270.79628838433166,\n    \"y\": 159.63888888888894\n   },\n   {\n    \"x\": 269.2407328287761,\n    \"y\": 150.3055555555556\n   }\n  ],\n  [\n   {\n    \"x\": 263.79628838433166,\n    \"y\": 155.75000000000006\n   },\n   {\n    \"x\": 272.35184393988726,\n    \"y\": 164.3055555555556\n   },\n   {\n    \"x\": 268.46295505099835,\n    \"y\": 152.25000000000006\n   }\n  ],\n  [\n   {\n    \"x\": 282.07406616210943,\n    \"y\": 132.4166666666667\n   },\n   {\n    \"x\": 279.35184393988726,\n    \"y\": 145.25000000000006\n   },\n   {\n    \"x\": 284.4073994954428,\n    \"y\": 140.19444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 298.79628838433166,\n    \"y\": 130.47222222222226\n   },\n   {\n    \"x\": 287.12962171766503,\n    \"y\": 151.47222222222226\n   },\n   {\n    \"x\": 292.96295505099835,\n    \"y\": 129.69444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 286.35184393988726,\n    \"y\": 123.47222222222226\n   },\n   {\n    \"x\": 282.46295505099835,\n    \"y\": 139.02777777777783\n   },\n   {\n    \"x\": 287.9073994954428,\n    \"y\": 131.25000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 301.9073994954428,\n    \"y\": 123.86111111111114\n   },\n   {\n    \"x\": 291.4073994954428,\n    \"y\": 135.9166666666667\n   },\n   {\n    \"x\": 295.6851772732206,\n    \"y\": 121.52777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 291.0185106065539,\n    \"y\": 114.52777777777781\n   },\n   {\n    \"x\": 286.7407328287761,\n    \"y\": 130.08333333333337\n   },\n   {\n    \"x\": 293.35184393988726,\n    \"y\": 127.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 304.75926717122405,\n    \"y\": 117.25000000000003\n   },\n   {\n    \"x\": 295.42593383789074,\n    \"y\": 126.19444444444449\n   },\n   {\n    \"x\": 300.09260050455737,\n    \"y\": 114.9166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 295.8148227267796,\n    \"y\": 107.13888888888891\n   },\n   {\n    \"x\": 291.92593383789074,\n    \"y\": 120.36111111111114\n   },\n   {\n    \"x\": 297.37037828233514,\n    \"y\": 117.25000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 297.37037828233514,\n    \"y\": 117.25000000000003\n   },\n   {\n    \"x\": 298.5370449490018,\n    \"y\": 111.4166666666667\n   },\n   {\n    \"x\": 300.09260050455737,\n    \"y\": 113.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 298.5370449490018,\n    \"y\": 102.47222222222226\n   },\n   {\n    \"x\": 296.59260050455737,\n    \"y\": 114.9166666666667\n   },\n   {\n    \"x\": 300.09260050455737,\n    \"y\": 107.9166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 307.4814893934463,\n    \"y\": 113.36111111111114\n   },\n   {\n    \"x\": 298.1481560601129,\n    \"y\": 118.4166666666667\n   },\n   {\n    \"x\": 306.3148227267796,\n    \"y\": 104.02777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 309.0370449490018,\n    \"y\": 107.9166666666667\n   },\n   {\n    \"x\": 302.8148227267796,\n    \"y\": 113.75000000000003\n   },\n   {\n    \"x\": 308.64815606011297,\n    \"y\": 99.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 302.0370449490018,\n    \"y\": 95.47222222222226\n   },\n   {\n    \"x\": 298.5370449490018,\n    \"y\": 110.25000000000003\n   },\n   {\n    \"x\": 303.2037116156685,\n    \"y\": 105.97222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 304.75926717122405,\n    \"y\": 89.25000000000003\n   },\n   {\n    \"x\": 302.42593383789074,\n    \"y\": 102.86111111111114\n   },\n   {\n    \"x\": 305.92593383789074,\n    \"y\": 100.52777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 307.87037828233514,\n    \"y\": 86.5277777777778\n   },\n   {\n    \"x\": 304.37037828233514,\n    \"y\": 99.75000000000003\n   },\n   {\n    \"x\": 309.0370449490018,\n    \"y\": 95.08333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 311.37037828233514,\n    \"y\": 102.86111111111114\n   },\n   {\n    \"x\": 305.92593383789074,\n    \"y\": 104.4166666666667\n   },\n   {\n    \"x\": 309.8148227267796,\n    \"y\": 98.58333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 313.7037116156685,\n    \"y\": 98.97222222222226\n   },\n   {\n    \"x\": 307.09260050455737,\n    \"y\": 103.25000000000003\n   },\n   {\n    \"x\": 310.59260050455737,\n    \"y\": 96.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 316.42593383789074,\n    \"y\": 90.80555555555559\n   },\n   {\n    \"x\": 311.75926717122405,\n    \"y\": 97.02777777777781\n   },\n   {\n    \"x\": 311.37037828233514,\n    \"y\": 92.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 326.4073994954428,\n    \"y\": 101.95370568169491\n   },\n   {\n    \"x\": 328.7407328287761,\n    \"y\": 123.7314834594727\n   },\n   {\n    \"x\": 333.01851060655395,\n    \"y\": 108.17592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 328.35184393988726,\n    \"y\": 89.50926123725046\n   },\n   {\n    \"x\": 330.2962883843317,\n    \"y\": 111.28703901502824\n   },\n   {\n    \"x\": 335.7407328287761,\n    \"y\": 100.00926123725047\n   }\n  ],\n  [\n   {\n    \"x\": 331.46295505099835,\n    \"y\": 80.17592790391713\n   },\n   {\n    \"x\": 332.2407328287761,\n    \"y\": 99.62037234836157\n   },\n   {\n    \"x\": 338.85184393988726,\n    \"y\": 87.9537056816949\n   }\n  ],\n  [\n   {\n    \"x\": 331.85184393988726,\n    \"y\": 69.67592790391713\n   },\n   {\n    \"x\": 335.35184393988726,\n    \"y\": 92.23148345947268\n   },\n   {\n    \"x\": 340.4073994954428,\n    \"y\": 75.89815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 333.4073994954428,\n    \"y\": 61.12037234836156\n   },\n   {\n    \"x\": 338.46295505099835,\n    \"y\": 84.8425945705838\n   },\n   {\n    \"x\": 340.4073994954428,\n    \"y\": 65.78703901502823\n   }\n  ],\n  [\n   {\n    \"x\": 347.4073994954428,\n    \"y\": 88.3425945705838\n   },\n   {\n    \"x\": 340.4073994954428,\n    \"y\": 105.06481679280603\n   },\n   {\n    \"x\": 342.35184393988726,\n    \"y\": 90.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 350.9073994954428,\n    \"y\": 76.28703901502824\n   },\n   {\n    \"x\": 341.1851772732206,\n    \"y\": 97.28703901502824\n   },\n   {\n    \"x\": 343.9073994954428,\n    \"y\": 77.84259457058378\n   }\n  ],\n  [\n   {\n    \"x\": 360.62962171766503,\n    \"y\": 62.28703901502823\n   },\n   {\n    \"x\": 344.2962883843317,\n    \"y\": 80.17592790391713\n   },\n   {\n    \"x\": 348.5740661621095,\n    \"y\": 63.064816792806006\n   }\n  ],\n  [\n   {\n    \"x\": 334.1851772732206,\n    \"y\": 48.67592790391711\n   },\n   {\n    \"x\": 338.46295505099835,\n    \"y\": 69.67592790391713\n   },\n   {\n    \"x\": 341.5740661621095,\n    \"y\": 55.28703901502823\n   }\n  ],\n  [\n   {\n    \"x\": 361.01851060655395,\n    \"y\": 56.842594570583785\n   },\n   {\n    \"x\": 352.85184393988726,\n    \"y\": 66.17592790391713\n   },\n   {\n    \"x\": 352.85184393988726,\n    \"y\": 57.23148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 330.2962883843317,\n    \"y\": 41.28703901502823\n   },\n   {\n    \"x\": 340.01851060655395,\n    \"y\": 59.9537056816949\n   },\n   {\n    \"x\": 342.35184393988726,\n    \"y\": 54.89815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 364.9073994954428,\n    \"y\": 52.17592790391711\n   },\n   {\n    \"x\": 351.6851772732206,\n    \"y\": 61.12037234836156\n   },\n   {\n    \"x\": 355.1851772732206,\n    \"y\": 52.95370568169489\n   }\n  ],\n  [\n   {\n    \"x\": 329.64815606011297,\n    \"y\": 37.1388888888889\n   },\n   {\n    \"x\": 339.3703782823352,\n    \"y\": 56.194444444444464\n   },\n   {\n    \"x\": 342.4814893934463,\n    \"y\": 50.36111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 330.42593383789074,\n    \"y\": 25.861111111111118\n   },\n   {\n    \"x\": 340.92593383789074,\n    \"y\": 52.69444444444446\n   },\n   {\n    \"x\": 342.8703782823352,\n    \"y\": 48.80555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 330.0370449490018,\n    \"y\": 22.361111111111118\n   },\n   {\n    \"x\": 342.09260050455737,\n    \"y\": 49.972222222222236\n   },\n   {\n    \"x\": 344.42593383789074,\n    \"y\": 45.69444444444446\n   }\n  ],\n  [\n   {\n    \"x\": 333.66666666666674,\n    \"y\": 12.898150126139328\n   },\n   {\n    \"x\": 340.66666666666674,\n    \"y\": 40.120372348361556\n   },\n   {\n    \"x\": 344.55555555555566,\n    \"y\": 37.398150126139335\n   }\n  ],\n  [\n   {\n    \"x\": 346.5000000000001,\n    \"y\": 11.34259457058377\n   },\n   {\n    \"x\": 340.2777777777779,\n    \"y\": 31.95370568169489\n   },\n   {\n    \"x\": 344.94444444444457,\n    \"y\": 30.009261237250442\n   }\n  ],\n  [\n   {\n    \"x\": 347.6666666666668,\n    \"y\": 14.453705681694883\n   },\n   {\n    \"x\": 343.0000000000001,\n    \"y\": 30.78703901502822\n   },\n   {\n    \"x\": 345.3333333333334,\n    \"y\": 33.120372348361556\n   }\n  ],\n  [\n   {\n    \"x\": 351.1666666666668,\n    \"y\": 25.731483459472663\n   },\n   {\n    \"x\": 343.7777777777779,\n    \"y\": 30.39815012613933\n   },\n   {\n    \"x\": 346.1111111111112,\n    \"y\": 35.45370568169489\n   }\n  ],\n  [\n   {\n    \"x\": 351.94444444444457,\n    \"y\": 29.231483459472663\n   },\n   {\n    \"x\": 345.3333333333334,\n    \"y\": 33.120372348361556\n   },\n   {\n    \"x\": 348.05555555555566,\n    \"y\": 36.23148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 354.2777777777779,\n    \"y\": 32.73148345947266\n   },\n   {\n    \"x\": 346.5000000000001,\n    \"y\": 31.564816792806\n   },\n   {\n    \"x\": 346.88888888888897,\n    \"y\": 35.45370568169489\n   }\n  ],\n  [\n   {\n    \"x\": 355.44444444444457,\n    \"y\": 35.84259457058378\n   },\n   {\n    \"x\": 348.05555555555566,\n    \"y\": 33.898150126139335\n   },\n   {\n    \"x\": 349.22222222222234,\n    \"y\": 40.120372348361556\n   }\n  ],\n  [\n   {\n    \"x\": 355.44444444444457,\n    \"y\": 41.28703901502823\n   },\n   {\n    \"x\": 350.7777777777779,\n    \"y\": 36.620372348361556\n   },\n   {\n    \"x\": 349.6111111111112,\n    \"y\": 40.50926123725045\n   }\n  ],\n  [\n   {\n    \"x\": 357.0000000000001,\n    \"y\": 36.620372348361556\n   },\n   {\n    \"x\": 351.55555555555566,\n    \"y\": 44.398150126139335\n   },\n   {\n    \"x\": 355.05555555555566,\n    \"y\": 44.00926123725045\n   }\n  ],\n  [\n   {\n    \"x\": 363.6111111111112,\n    \"y\": 31.17592790391711\n   },\n   {\n    \"x\": 355.05555555555566,\n    \"y\": 41.28703901502823\n   },\n   {\n    \"x\": 360.5000000000001,\n    \"y\": 40.50926123725045\n   }\n  ],\n  [\n   {\n    \"x\": 373.72222222222234,\n    \"y\": 27.67592790391711\n   },\n   {\n    \"x\": 360.88888888888897,\n    \"y\": 37.00926123725044\n   },\n   {\n    \"x\": 366.72222222222234,\n    \"y\": 38.17592790391711\n   }\n  ],\n  [\n   {\n    \"x\": 374.5000000000001,\n    \"y\": 31.17592790391711\n   },\n   {\n    \"x\": 369.05555555555566,\n    \"y\": 35.064816792806\n   },\n   {\n    \"x\": 371.388888888889,\n    \"y\": 36.620372348361556\n   }\n  ],\n  [\n   {\n    \"x\": 382.6666666666668,\n    \"y\": 32.34259457058378\n   },\n   {\n    \"x\": 371.388888888889,\n    \"y\": 33.50926123725044\n   },\n   {\n    \"x\": 372.94444444444457,\n    \"y\": 36.620372348361556\n   }\n  ],\n  [\n   {\n    \"x\": 383.05555555555566,\n    \"y\": 35.84259457058378\n   },\n   {\n    \"x\": 374.888888888889,\n    \"y\": 35.84259457058378\n   },\n   {\n    \"x\": 376.44444444444457,\n    \"y\": 38.564816792806\n   }\n  ],\n  [\n   {\n    \"x\": 388.5000000000001,\n    \"y\": 40.50926123725045\n   },\n   {\n    \"x\": 376.44444444444457,\n    \"y\": 35.064816792806\n   },\n   {\n    \"x\": 376.8333333333334,\n    \"y\": 39.73148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 389.2777777777779,\n    \"y\": 44.00926123725045\n   },\n   {\n    \"x\": 379.94444444444457,\n    \"y\": 38.95370568169489\n   },\n   {\n    \"x\": 383.8333333333334,\n    \"y\": 43.23148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 390.44444444444457,\n    \"y\": 45.564816792806006\n   },\n   {\n    \"x\": 381.5000000000001,\n    \"y\": 40.50926123725045\n   },\n   {\n    \"x\": 383.8333333333334,\n    \"y\": 46.73148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 391.22222222222234,\n    \"y\": 49.064816792806006\n   },\n   {\n    \"x\": 383.8333333333334,\n    \"y\": 45.564816792806006\n   },\n   {\n    \"x\": 383.05555555555566,\n    \"y\": 50.23148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 391.61111111111126,\n    \"y\": 52.95370568169489\n   },\n   {\n    \"x\": 384.6111111111112,\n    \"y\": 46.73148345947267\n   },\n   {\n    \"x\": 383.44444444444457,\n    \"y\": 52.95370568169489\n   }\n  ],\n  [\n   {\n    \"x\": 392.388888888889,\n    \"y\": 56.842594570583785\n   },\n   {\n    \"x\": 384.22222222222234,\n    \"y\": 49.064816792806006\n   },\n   {\n    \"x\": 382.2777777777779,\n    \"y\": 54.89815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 387.72222222222234,\n    \"y\": 63.4537056816949\n   },\n   {\n    \"x\": 383.8333333333334,\n    \"y\": 51.78703901502823\n   },\n   {\n    \"x\": 379.94444444444457,\n    \"y\": 59.564816792806006\n   }\n  ],\n  [\n   {\n    \"x\": 383.05555555555566,\n    \"y\": 66.56481679280601\n   },\n   {\n    \"x\": 381.888888888889,\n    \"y\": 56.4537056816949\n   },\n   {\n    \"x\": 379.1666666666668,\n    \"y\": 59.564816792806006\n   }\n  ],\n  [\n   {\n    \"x\": 378.0000000000001,\n    \"y\": 73.56481679280601\n   },\n   {\n    \"x\": 382.2777777777779,\n    \"y\": 58.00926123725045\n   },\n   {\n    \"x\": 376.44444444444457,\n    \"y\": 63.842594570583785\n   }\n  ],\n  [\n   {\n    \"x\": 373.72222222222234,\n    \"y\": 75.89815012613934\n   },\n   {\n    \"x\": 378.0000000000001,\n    \"y\": 64.62037234836157\n   },\n   {\n    \"x\": 372.55555555555566,\n    \"y\": 69.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 366.46295505099835,\n    \"y\": 95.3425945705838\n   },\n   {\n    \"x\": 354.4073994954428,\n    \"y\": 87.9537056816949\n   },\n   {\n    \"x\": 362.96295505099835,\n    \"y\": 87.17592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 373.85184393988726,\n    \"y\": 91.06481679280601\n   },\n   {\n    \"x\": 362.96295505099835,\n    \"y\": 91.06481679280601\n   },\n   {\n    \"x\": 370.35184393988726,\n    \"y\": 85.62037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 383.1851772732206,\n    \"y\": 91.06481679280601\n   },\n   {\n    \"x\": 366.85184393988726,\n    \"y\": 87.56481679280601\n   },\n   {\n    \"x\": 382.01851060655395,\n    \"y\": 86.39815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 389.7962883843317,\n    \"y\": 93.39815012613936\n   },\n   {\n    \"x\": 378.12962171766503,\n    \"y\": 85.62037234836157\n   },\n   {\n    \"x\": 387.0740661621095,\n    \"y\": 86.39815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 387.85184393988726,\n    \"y\": 77.06481679280601\n   },\n   {\n    \"x\": 370.35184393988726,\n    \"y\": 77.06481679280601\n   },\n   {\n    \"x\": 378.51851060655395,\n    \"y\": 81.3425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 396.7962883843317,\n    \"y\": 84.06481679280601\n   },\n   {\n    \"x\": 383.9629550509984,\n    \"y\": 79.00926123725046\n   },\n   {\n    \"x\": 382.4073994954428,\n    \"y\": 83.28703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 401.85184393988726,\n    \"y\": 91.06481679280601\n   },\n   {\n    \"x\": 391.7407328287762,\n    \"y\": 83.67592790391713\n   },\n   {\n    \"x\": 391.7407328287762,\n    \"y\": 86.78703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 384.35184393988726,\n    \"y\": 165.73148939344622\n   },\n   {\n    \"x\": 394.0740661621095,\n    \"y\": 147.45371161566845\n   },\n   {\n    \"x\": 386.2962883843317,\n    \"y\": 153.67593383789068\n   }\n  ],\n  [\n   {\n    \"x\": 376.5740661621095,\n    \"y\": 174.67593383789068\n   },\n   {\n    \"x\": 384.35184393988726,\n    \"y\": 161.06482272677957\n   },\n   {\n    \"x\": 376.1851772732206,\n    \"y\": 164.17593383789068\n   }\n  ],\n  [\n   {\n    \"x\": 371.51851060655395,\n    \"y\": 177.7870449490018\n   },\n   {\n    \"x\": 376.9629550509984,\n    \"y\": 168.06482272677957\n   },\n   {\n    \"x\": 371.9073994954428,\n    \"y\": 169.6203782823351\n   }\n  ],\n  [\n   {\n    \"x\": 361.4073994954428,\n    \"y\": 185.17593383789068\n   },\n   {\n    \"x\": 372.2962883843317,\n    \"y\": 171.95371161566845\n   },\n   {\n    \"x\": 364.51851060655395,\n    \"y\": 174.2870449490018\n   }\n  ],\n  [\n   {\n    \"x\": 360.62962171766503,\n    \"y\": 181.2870449490018\n   },\n   {\n    \"x\": 365.2962883843317,\n    \"y\": 176.6203782823351\n   },\n   {\n    \"x\": 360.62962171766503,\n    \"y\": 177.3981560601129\n   }\n  ],\n  [\n   {\n    \"x\": 352.85184393988726,\n    \"y\": 184.7870449490018\n   },\n   {\n    \"x\": 364.12962171766503,\n    \"y\": 177.7870449490018\n   },\n   {\n    \"x\": 355.1851772732206,\n    \"y\": 179.34260050455734\n   }\n  ],\n  [\n   {\n    \"x\": 339.62962171766503,\n    \"y\": 186.73148939344622\n   },\n   {\n    \"x\": 356.35184393988726,\n    \"y\": 181.2870449490018\n   },\n   {\n    \"x\": 343.51851060655395,\n    \"y\": 179.34260050455734\n   }\n  ],\n  [\n   {\n    \"x\": 326.4073994954428,\n    \"y\": 184.3981560601129\n   },\n   {\n    \"x\": 345.85184393988726,\n    \"y\": 183.62037828233514\n   },\n   {\n    \"x\": 339.62962171766503,\n    \"y\": 180.1203782823351\n   }\n  ],\n  [\n   {\n    \"x\": 307.7407328287761,\n    \"y\": 175.84260050455734\n   },\n   {\n    \"x\": 337.2962883843317,\n    \"y\": 182.45371161566845\n   },\n   {\n    \"x\": 336.9073994954428,\n    \"y\": 178.95371161566845\n   }\n  ],\n  [\n   {\n    \"x\": 306.5740661621095,\n    \"y\": 171.56482272677957\n   },\n   {\n    \"x\": 334.5740661621095,\n    \"y\": 178.95371161566845\n   },\n   {\n    \"x\": 334.96295505099835,\n    \"y\": 177.3981560601129\n   }\n  ],\n  [\n   {\n    \"x\": 313.1851772732206,\n    \"y\": 171.56482272677957\n   },\n   {\n    \"x\": 333.7962883843317,\n    \"y\": 181.2870449490018\n   },\n   {\n    \"x\": 334.1851772732206,\n    \"y\": 177.7870449490018\n   }\n  ],\n  [\n   {\n    \"x\": 312.0185106065539,\n    \"y\": 167.67593383789068\n   },\n   {\n    \"x\": 328.35184393988726,\n    \"y\": 176.23148939344622\n   },\n   {\n    \"x\": 328.7407328287761,\n    \"y\": 174.2870449490018\n   }\n  ],\n  [\n   {\n    \"x\": 315.5185106065539,\n    \"y\": 168.45371161566845\n   },\n   {\n    \"x\": 327.96295505099835,\n    \"y\": 175.45371161566845\n   },\n   {\n    \"x\": 328.35184393988726,\n    \"y\": 173.8981560601129\n   }\n  ],\n  [\n   {\n    \"x\": 314.7407328287761,\n    \"y\": 164.95371161566845\n   },\n   {\n    \"x\": 321.35184393988726,\n    \"y\": 170.3981560601129\n   },\n   {\n    \"x\": 321.7407328287761,\n    \"y\": 167.67593383789068\n   }\n  ],\n  [\n   {\n    \"x\": 315.5185106065539,\n    \"y\": 162.23148939344622\n   },\n   {\n    \"x\": 319.4073994954428,\n    \"y\": 170.009267171224\n   },\n   {\n    \"x\": 321.35184393988726,\n    \"y\": 167.2870449490018\n   }\n  ],\n  [\n   {\n    \"x\": 314.7407328287761,\n    \"y\": 158.34260050455734\n   },\n   {\n    \"x\": 319.0185106065539,\n    \"y\": 166.8981560601129\n   },\n   {\n    \"x\": 320.5740661621095,\n    \"y\": 164.17593383789068\n   }\n  ],\n  [\n   {\n    \"x\": 315.5185106065539,\n    \"y\": 145.509267171224\n   },\n   {\n    \"x\": 318.2407328287761,\n    \"y\": 164.17593383789068\n   },\n   {\n    \"x\": 320.1851772732206,\n    \"y\": 153.2870449490018\n   }\n  ],\n  [\n   {\n    \"x\": 318.62962171766503,\n    \"y\": 142.78704494900177\n   },\n   {\n    \"x\": 317.46295505099835,\n    \"y\": 151.73148939344622\n   },\n   {\n    \"x\": 322.12962171766503,\n    \"y\": 148.6203782823351\n   }\n  ],\n  [\n   {\n    \"x\": 320.1851772732206,\n    \"y\": 137.34260050455734\n   },\n   {\n    \"x\": 320.1851772732206,\n    \"y\": 149.009267171224\n   },\n   {\n    \"x\": 324.0740661621095,\n    \"y\": 146.28704494900177\n   }\n  ],\n  [\n   {\n    \"x\": 323.2962883843317,\n    \"y\": 138.1203782823351\n   },\n   {\n    \"x\": 321.35184393988726,\n    \"y\": 143.95371161566845\n   },\n   {\n    \"x\": 326.01851060655395,\n    \"y\": 142.78704494900177\n   }\n  ],\n  [\n   {\n    \"x\": 326.4073994954428,\n    \"y\": 130.34260050455734\n   },\n   {\n    \"x\": 324.0740661621095,\n    \"y\": 142.39815606011288\n   },\n   {\n    \"x\": 329.51851060655395,\n    \"y\": 140.45371161566845\n   }\n  ],\n  [\n   {\n    \"x\": 334.96295505099835,\n    \"y\": 126.06482272677955\n   },\n   {\n    \"x\": 326.7962883843317,\n    \"y\": 136.17593383789065\n   },\n   {\n    \"x\": 333.4073994954428,\n    \"y\": 136.95371161566845\n   }\n  ],\n  [\n   {\n    \"x\": 358.94444444444457,\n    \"y\": 113.10184987386071\n   },\n   {\n    \"x\": 375.2777777777779,\n    \"y\": 102.60184987386071\n   },\n   {\n    \"x\": 376.44444444444457,\n    \"y\": 104.54629431830516\n   }\n  ],\n  [\n   {\n    \"x\": 376.44444444444457,\n    \"y\": 104.15740542941626\n   },\n   {\n    \"x\": 383.8333333333334,\n    \"y\": 98.32407209608293\n   },\n   {\n    \"x\": 384.22222222222234,\n    \"y\": 100.26851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 390.8333333333334,\n    \"y\": 95.9907387627496\n   },\n   {\n    \"x\": 383.44444444444457,\n    \"y\": 100.65740542941626\n   },\n   {\n    \"x\": 390.8333333333334,\n    \"y\": 99.1018498738607\n   }\n  ],\n  [\n   {\n    \"x\": 367.1111111111112,\n    \"y\": 124.76851654052739\n   },\n   {\n    \"x\": 352.72222222222234,\n    \"y\": 130.21296098497183\n   },\n   {\n    \"x\": 354.6666666666668,\n    \"y\": 123.21296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 377.22222222222234,\n    \"y\": 118.93518320719404\n   },\n   {\n    \"x\": 360.1111111111112,\n    \"y\": 125.15740542941627\n   },\n   {\n    \"x\": 364.7777777777779,\n    \"y\": 119.32407209608293\n   }\n  ],\n  [\n   {\n    \"x\": 381.888888888889,\n    \"y\": 116.60184987386071\n   },\n   {\n    \"x\": 367.1111111111112,\n    \"y\": 120.10184987386071\n   },\n   {\n    \"x\": 374.1111111111112,\n    \"y\": 114.26851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 386.55555555555566,\n    \"y\": 115.43518320719404\n   },\n   {\n    \"x\": 373.72222222222234,\n    \"y\": 115.82407209608293\n   },\n   {\n    \"x\": 378.388888888889,\n    \"y\": 111.93518320719404\n   }\n  ],\n  [\n   {\n    \"x\": 394.72222222222234,\n    \"y\": 109.60184987386071\n   },\n   {\n    \"x\": 375.6666666666668,\n    \"y\": 115.82407209608293\n   },\n   {\n    \"x\": 384.6111111111112,\n    \"y\": 107.65740542941627\n   }\n  ],\n  [\n   {\n    \"x\": 409.5000000000001,\n    \"y\": 90.54629431830514\n   },\n   {\n    \"x\": 397.44444444444457,\n    \"y\": 95.9907387627496\n   },\n   {\n    \"x\": 405.22222222222234,\n    \"y\": 96.76851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 430.5000000000001,\n    \"y\": 94.82407209608293\n   },\n   {\n    \"x\": 414.1666666666668,\n    \"y\": 98.71296098497182\n   },\n   {\n    \"x\": 416.888888888889,\n    \"y\": 94.43518320719404\n   }\n  ],\n  [\n   {\n    \"x\": 434.388888888889,\n    \"y\": 90.15740542941626\n   },\n   {\n    \"x\": 425.05555555555566,\n    \"y\": 95.21296098497182\n   },\n   {\n    \"x\": 427.0000000000001,\n    \"y\": 89.76851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 437.888888888889,\n    \"y\": 84.71296098497182\n   },\n   {\n    \"x\": 429.3333333333335,\n    \"y\": 90.54629431830514\n   },\n   {\n    \"x\": 430.888888888889,\n    \"y\": 84.32407209608293\n   }\n  ],\n  [\n   {\n    \"x\": 436.72222222222234,\n    \"y\": 78.1018498738607\n   },\n   {\n    \"x\": 433.22222222222234,\n    \"y\": 86.65740542941626\n   },\n   {\n    \"x\": 431.6666666666668,\n    \"y\": 81.21296098497182\n   }\n  ],\n  [\n   {\n    \"x\": 437.11111111111126,\n    \"y\": 81.21296098497182\n   },\n   {\n    \"x\": 430.11111111111126,\n    \"y\": 86.26851654052737\n   },\n   {\n    \"x\": 430.5000000000001,\n    \"y\": 81.99073876274959\n   }\n  ],\n  [\n   {\n    \"x\": 435.94444444444457,\n    \"y\": 74.99073876274959\n   },\n   {\n    \"x\": 431.6666666666668,\n    \"y\": 82.37962765163849\n   },\n   {\n    \"x\": 430.888888888889,\n    \"y\": 76.93518320719403\n   }\n  ],\n  [\n   {\n    \"x\": 433.61111111111126,\n    \"y\": 71.87962765163847\n   },\n   {\n    \"x\": 432.44444444444457,\n    \"y\": 80.04629431830514\n   },\n   {\n    \"x\": 429.72222222222234,\n    \"y\": 78.1018498738607\n   }\n  ],\n  [\n   {\n    \"x\": 428.94444444444457,\n    \"y\": 70.32407209608292\n   },\n   {\n    \"x\": 432.8333333333335,\n    \"y\": 76.15740542941626\n   },\n   {\n    \"x\": 429.72222222222234,\n    \"y\": 76.93518320719403\n   }\n  ],\n  [\n   {\n    \"x\": 422.72222222222234,\n    \"y\": 71.87962765163847\n   },\n   {\n    \"x\": 430.11111111111126,\n    \"y\": 73.43518320719403\n   },\n   {\n    \"x\": 425.44444444444457,\n    \"y\": 75.76851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 414.94444444444457,\n    \"y\": 75.76851654052737\n   },\n   {\n    \"x\": 423.888888888889,\n    \"y\": 73.04629431830514\n   },\n   {\n    \"x\": 422.3333333333335,\n    \"y\": 76.54629431830514\n   }\n  ],\n  [\n   {\n    \"x\": 413.7777777777779,\n    \"y\": 82.37962765163849\n   },\n   {\n    \"x\": 419.61111111111126,\n    \"y\": 75.76851654052737\n   },\n   {\n    \"x\": 417.2777777777779,\n    \"y\": 82.37962765163849\n   }\n  ],\n  [\n   {\n    \"x\": 407.81482272677965,\n    \"y\": 114.13888888888893\n   },\n   {\n    \"x\": 408.2037116156685,\n    \"y\": 102.47222222222226\n   },\n   {\n    \"x\": 409.7592671712241,\n    \"y\": 112.19444444444447\n   }\n  ],\n  [\n   {\n    \"x\": 408.9814893934463,\n    \"y\": 117.25000000000003\n   },\n   {\n    \"x\": 408.5926005045574,\n    \"y\": 109.86111111111114\n   },\n   {\n    \"x\": 411.31482272677965,\n    \"y\": 114.52777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 412.4814893934463,\n    \"y\": 120.36111111111114\n   },\n   {\n    \"x\": 409.7592671712241,\n    \"y\": 113.36111111111114\n   },\n   {\n    \"x\": 413.2592671712241,\n    \"y\": 114.13888888888893\n   }\n  ],\n  [\n   {\n    \"x\": 417.14815606011297,\n    \"y\": 121.9166666666667\n   },\n   {\n    \"x\": 410.5370449490019,\n    \"y\": 115.30555555555559\n   },\n   {\n    \"x\": 416.7592671712241,\n    \"y\": 116.47222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 423.3703782823352,\n    \"y\": 121.13888888888893\n   },\n   {\n    \"x\": 413.64815606011297,\n    \"y\": 118.80555555555559\n   },\n   {\n    \"x\": 418.31482272677965,\n    \"y\": 116.47222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 428.42593383789074,\n    \"y\": 118.02777777777781\n   },\n   {\n    \"x\": 417.92593383789074,\n    \"y\": 118.80555555555559\n   },\n   {\n    \"x\": 422.5926005045574,\n    \"y\": 115.69444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 428.42593383789074,\n    \"y\": 116.86111111111114\n   },\n   {\n    \"x\": 421.81482272677965,\n    \"y\": 116.47222222222226\n   },\n   {\n    \"x\": 425.7037116156685,\n    \"y\": 112.58333333333337\n   }\n  ],\n  [\n   {\n    \"x\": 430.3703782823352,\n    \"y\": 115.69444444444449\n   },\n   {\n    \"x\": 423.3703782823352,\n    \"y\": 114.13888888888893\n   },\n   {\n    \"x\": 429.2037116156685,\n    \"y\": 110.25000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 433.8703782823352,\n    \"y\": 114.52777777777781\n   },\n   {\n    \"x\": 424.14815606011297,\n    \"y\": 111.80555555555559\n   },\n   {\n    \"x\": 429.2037116156685,\n    \"y\": 109.08333333333337\n   }\n  ],\n  [\n   {\n    \"x\": 436.2037116156685,\n    \"y\": 109.08333333333337\n   },\n   {\n    \"x\": 426.8703782823352,\n    \"y\": 113.36111111111114\n   },\n   {\n    \"x\": 431.14815606011297,\n    \"y\": 108.30555555555559\n   }\n  ],\n  [\n   {\n    \"x\": 424.5370449490019,\n    \"y\": 105.19444444444447\n   },\n   {\n    \"x\": 417.14815606011297,\n    \"y\": 111.4166666666667\n   },\n   {\n    \"x\": 425.31482272677965,\n    \"y\": 108.30555555555559\n   }\n  ],\n  [\n   {\n    \"x\": 450.3333333333335,\n    \"y\": 78.75000000000003\n   },\n   {\n    \"x\": 444.888888888889,\n    \"y\": 84.19444444444447\n   },\n   {\n    \"x\": 449.1666666666668,\n    \"y\": 84.58333333333336\n   }\n  ],\n  [\n   {\n    \"x\": 454.22222222222234,\n    \"y\": 77.97222222222224\n   },\n   {\n    \"x\": 448.7777777777779,\n    \"y\": 81.08333333333336\n   },\n   {\n    \"x\": 451.5000000000001,\n    \"y\": 82.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 458.888888888889,\n    \"y\": 78.36111111111113\n   },\n   {\n    \"x\": 451.5000000000001,\n    \"y\": 80.30555555555559\n   },\n   {\n    \"x\": 455.388888888889,\n    \"y\": 81.86111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 463.5555555555557,\n    \"y\": 78.75000000000003\n   },\n   {\n    \"x\": 456.1666666666668,\n    \"y\": 80.30555555555559\n   },\n   {\n    \"x\": 459.6666666666668,\n    \"y\": 81.86111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 466.27777777777794,\n    \"y\": 79.5277777777778\n   },\n   {\n    \"x\": 459.6666666666668,\n    \"y\": 80.69444444444447\n   },\n   {\n    \"x\": 460.8333333333335,\n    \"y\": 82.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 469.388888888889,\n    \"y\": 82.63888888888891\n   },\n   {\n    \"x\": 464.72222222222234,\n    \"y\": 80.30555555555559\n   },\n   {\n    \"x\": 464.72222222222234,\n    \"y\": 83.41666666666669\n   }\n  ],\n  [\n   {\n    \"x\": 470.5555555555557,\n    \"y\": 86.13888888888891\n   },\n   {\n    \"x\": 465.5000000000001,\n    \"y\": 83.41666666666669\n   },\n   {\n    \"x\": 464.72222222222234,\n    \"y\": 86.13888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 471.3333333333335,\n    \"y\": 89.25000000000003\n   },\n   {\n    \"x\": 465.888888888889,\n    \"y\": 83.41666666666669\n   },\n   {\n    \"x\": 464.72222222222234,\n    \"y\": 86.9166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 471.72222222222234,\n    \"y\": 92.36111111111114\n   },\n   {\n    \"x\": 465.5000000000001,\n    \"y\": 85.75000000000003\n   },\n   {\n    \"x\": 465.11111111111126,\n    \"y\": 89.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 468.61111111111126,\n    \"y\": 99.75000000000003\n   },\n   {\n    \"x\": 466.6666666666668,\n    \"y\": 87.30555555555559\n   },\n   {\n    \"x\": 464.72222222222234,\n    \"y\": 92.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 467.8333333333335,\n    \"y\": 105.58333333333337\n   },\n   {\n    \"x\": 466.27777777777794,\n    \"y\": 95.08333333333336\n   },\n   {\n    \"x\": 464.3333333333335,\n    \"y\": 100.52777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 467.0555555555557,\n    \"y\": 107.13888888888891\n   },\n   {\n    \"x\": 465.5000000000001,\n    \"y\": 101.30555555555559\n   },\n   {\n    \"x\": 462.77777777777794,\n    \"y\": 105.19444444444447\n   }\n  ],\n  [\n   {\n    \"x\": 466.6666666666668,\n    \"y\": 115.69444444444449\n   },\n   {\n    \"x\": 463.94444444444457,\n    \"y\": 102.47222222222226\n   },\n   {\n    \"x\": 460.8333333333335,\n    \"y\": 109.86111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 452.27777777777794,\n    \"y\": 100.39815012613936\n   },\n   {\n    \"x\": 448.388888888889,\n    \"y\": 110.12037234836158\n   },\n   {\n    \"x\": 452.6666666666668,\n    \"y\": 106.23148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 448.7777777777779,\n    \"y\": 106.62037234836157\n   },\n   {\n    \"x\": 446.8333333333335,\n    \"y\": 110.89815012613936\n   },\n   {\n    \"x\": 451.11111111111126,\n    \"y\": 110.12037234836158\n   }\n  ],\n  [\n   {\n    \"x\": 438.2777777777779,\n    \"y\": 112.06481679280603\n   },\n   {\n    \"x\": 438.2777777777779,\n    \"y\": 104.28703901502824\n   },\n   {\n    \"x\": 440.61111111111126,\n    \"y\": 105.06481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 439.44444444444457,\n    \"y\": 115.56481679280603\n   },\n   {\n    \"x\": 439.0555555555557,\n    \"y\": 107.39815012613936\n   },\n   {\n    \"x\": 442.94444444444457,\n    \"y\": 107.39815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 442.1666666666668,\n    \"y\": 117.89815012613936\n   },\n   {\n    \"x\": 440.22222222222234,\n    \"y\": 109.73148345947268\n   },\n   {\n    \"x\": 443.3333333333335,\n    \"y\": 112.45370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 444.888888888889,\n    \"y\": 120.62037234836158\n   },\n   {\n    \"x\": 441.7777777777779,\n    \"y\": 113.23148345947268\n   },\n   {\n    \"x\": 446.0555555555557,\n    \"y\": 114.39815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 449.1666666666668,\n    \"y\": 121.78703901502824\n   },\n   {\n    \"x\": 444.5000000000001,\n    \"y\": 114.78703901502824\n   },\n   {\n    \"x\": 449.1666666666668,\n    \"y\": 115.17592790391714\n   }\n  ],\n  [\n   {\n    \"x\": 452.27777777777794,\n    \"y\": 119.45370568169491\n   },\n   {\n    \"x\": 445.2777777777779,\n    \"y\": 117.50926123725047\n   },\n   {\n    \"x\": 451.888888888889,\n    \"y\": 114.78703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 453.31482272677965,\n    \"y\": 120.75000000000004\n   },\n   {\n    \"x\": 453.31482272677965,\n    \"y\": 116.08333333333337\n   },\n   {\n    \"x\": 456.0370449490019,\n    \"y\": 121.52777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 453.70371161566857,\n    \"y\": 125.02777777777781\n   },\n   {\n    \"x\": 454.0926005045574,\n    \"y\": 118.4166666666667\n   },\n   {\n    \"x\": 456.81482272677965,\n    \"y\": 125.02777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 454.0926005045574,\n    \"y\": 133.97222222222226\n   },\n   {\n    \"x\": 454.0926005045574,\n    \"y\": 121.9166666666667\n   },\n   {\n    \"x\": 455.64815606011297,\n    \"y\": 122.30555555555559\n   }\n  ],\n  [\n   {\n    \"x\": 454.8703782823352,\n    \"y\": 137.08333333333337\n   },\n   {\n    \"x\": 454.8703782823352,\n    \"y\": 129.3055555555556\n   },\n   {\n    \"x\": 457.20371161566857,\n    \"y\": 130.08333333333337\n   }\n  ],\n  [\n   {\n    \"x\": 457.98148939344634,\n    \"y\": 142.13888888888894\n   },\n   {\n    \"x\": 455.2592671712241,\n    \"y\": 134.75000000000003\n   },\n   {\n    \"x\": 457.5926005045574,\n    \"y\": 134.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 460.70371161566857,\n    \"y\": 144.47222222222226\n   },\n   {\n    \"x\": 457.5926005045574,\n    \"y\": 138.25000000000003\n   },\n   {\n    \"x\": 462.64815606011297,\n    \"y\": 140.19444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 466.92593383789074,\n    \"y\": 146.02777777777783\n   },\n   {\n    \"x\": 459.92593383789074,\n    \"y\": 140.97222222222226\n   },\n   {\n    \"x\": 465.7592671712241,\n    \"y\": 139.8055555555556\n   }\n  ],\n  [\n   {\n    \"x\": 470.81482272677965,\n    \"y\": 142.52777777777783\n   },\n   {\n    \"x\": 465.7592671712241,\n    \"y\": 143.69444444444449\n   },\n   {\n    \"x\": 469.2592671712241,\n    \"y\": 137.08333333333337\n   }\n  ],\n  [\n   {\n    \"x\": 479.3703782823352,\n    \"y\": 132.4166666666667\n   },\n   {\n    \"x\": 468.0926005045574,\n    \"y\": 141.36111111111114\n   },\n   {\n    \"x\": 469.64815606011297,\n    \"y\": 134.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 478.5926005045574,\n    \"y\": 128.9166666666667\n   },\n   {\n    \"x\": 470.81482272677965,\n    \"y\": 135.52777777777783\n   },\n   {\n    \"x\": 471.98148939344634,\n    \"y\": 129.3055555555556\n   }\n  ],\n  [\n   {\n    \"x\": 479.3703782823352,\n    \"y\": 124.25000000000004\n   },\n   {\n    \"x\": 473.9259338378908,\n    \"y\": 131.63888888888894\n   },\n   {\n    \"x\": 473.9259338378908,\n    \"y\": 127.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 479.7592671712241,\n    \"y\": 119.58333333333337\n   },\n   {\n    \"x\": 477.0370449490019,\n    \"y\": 125.4166666666667\n   },\n   {\n    \"x\": 477.0370449490019,\n    \"y\": 118.4166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 483.2592671712241,\n    \"y\": 117.63888888888893\n   },\n   {\n    \"x\": 476.64815606011297,\n    \"y\": 119.58333333333337\n   },\n   {\n    \"x\": 478.20371161566857,\n    \"y\": 115.69444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 482.0926005045574,\n    \"y\": 114.13888888888893\n   },\n   {\n    \"x\": 477.0370449490019,\n    \"y\": 114.9166666666667\n   },\n   {\n    \"x\": 477.4259338378908,\n    \"y\": 113.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 484.4259338378908,\n    \"y\": 107.13888888888891\n   },\n   {\n    \"x\": 475.8703782823352,\n    \"y\": 123.08333333333337\n   },\n   {\n    \"x\": 479.7592671712241,\n    \"y\": 108.30555555555559\n   }\n  ],\n  [\n   {\n    \"x\": 468.48148939344634,\n    \"y\": 121.52777777777781\n   },\n   {\n    \"x\": 467.70371161566857,\n    \"y\": 130.08333333333337\n   },\n   {\n    \"x\": 470.42593383789074,\n    \"y\": 122.69444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 470.0370449490019,\n    \"y\": 114.13888888888893\n   },\n   {\n    \"x\": 470.0370449490019,\n    \"y\": 123.86111111111114\n   },\n   {\n    \"x\": 474.70371161566857,\n    \"y\": 115.69444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 473.5370449490019,\n    \"y\": 107.9166666666667\n   },\n   {\n    \"x\": 471.98148939344634,\n    \"y\": 118.4166666666667\n   },\n   {\n    \"x\": 477.0370449490019,\n    \"y\": 109.08333333333337\n   }\n  ],\n  [\n   {\n    \"x\": 479.50000000000017,\n    \"y\": 88.99073876274959\n   },\n   {\n    \"x\": 478.72222222222234,\n    \"y\": 97.93518320719404\n   },\n   {\n    \"x\": 482.61111111111126,\n    \"y\": 90.15740542941626\n   }\n  ],\n  [\n   {\n    \"x\": 480.27777777777794,\n    \"y\": 84.71296098497182\n   },\n   {\n    \"x\": 480.6666666666668,\n    \"y\": 92.1018498738607\n   },\n   {\n    \"x\": 484.1666666666668,\n    \"y\": 86.65740542941626\n   }\n  ],\n  [\n   {\n    \"x\": 481.0555555555557,\n    \"y\": 81.6018498738607\n   },\n   {\n    \"x\": 481.8333333333335,\n    \"y\": 90.54629431830514\n   },\n   {\n    \"x\": 484.1666666666668,\n    \"y\": 87.82407209608293\n   }\n  ],\n  [\n   {\n    \"x\": 484.1666666666668,\n    \"y\": 77.71296098497182\n   },\n   {\n    \"x\": 481.8333333333335,\n    \"y\": 83.93518320719403\n   },\n   {\n    \"x\": 485.3333333333335,\n    \"y\": 84.71296098497182\n   }\n  ],\n  [\n   {\n    \"x\": 489.61111111111126,\n    \"y\": 72.26851654052737\n   },\n   {\n    \"x\": 484.5555555555557,\n    \"y\": 79.26851654052737\n   },\n   {\n    \"x\": 491.5555555555557,\n    \"y\": 77.71296098497182\n   }\n  ],\n  [\n   {\n    \"x\": 492.7222222222224,\n    \"y\": 69.54629431830514\n   },\n   {\n    \"x\": 488.0555555555557,\n    \"y\": 76.93518320719403\n   },\n   {\n    \"x\": 493.11111111111126,\n    \"y\": 76.15740542941626\n   }\n  ],\n  [\n   {\n    \"x\": 496.61111111111126,\n    \"y\": 68.76851654052736\n   },\n   {\n    \"x\": 491.1666666666668,\n    \"y\": 74.6018498738607\n   },\n   {\n    \"x\": 496.2222222222224,\n    \"y\": 73.43518320719403\n   }\n  ],\n  [\n   {\n    \"x\": 502.0555555555557,\n    \"y\": 66.82407209608292\n   },\n   {\n    \"x\": 494.6666666666668,\n    \"y\": 71.49073876274959\n   },\n   {\n    \"x\": 498.5555555555557,\n    \"y\": 72.26851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 510.61111111111126,\n    \"y\": 67.21296098497182\n   },\n   {\n    \"x\": 500.888888888889,\n    \"y\": 69.15740542941626\n   },\n   {\n    \"x\": 503.2222222222224,\n    \"y\": 74.6018498738607\n   }\n  ],\n  [\n   {\n    \"x\": 516.0555555555557,\n    \"y\": 73.17592790391713\n   },\n   {\n    \"x\": 508.6666666666668,\n    \"y\": 69.67592790391713\n   },\n   {\n    \"x\": 507.888888888889,\n    \"y\": 72.00926123725046\n   }\n  ],\n  [\n   {\n    \"x\": 517.2222222222224,\n    \"y\": 79.78703901502824\n   },\n   {\n    \"x\": 511.388888888889,\n    \"y\": 72.00926123725046\n   },\n   {\n    \"x\": 509.8333333333335,\n    \"y\": 73.56481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 516.4444444444446,\n    \"y\": 76.28703901502824\n   },\n   {\n    \"x\": 510.61111111111126,\n    \"y\": 73.56481679280601\n   },\n   {\n    \"x\": 509.8333333333335,\n    \"y\": 75.50926123725046\n   }\n  ],\n  [\n   {\n    \"x\": 518.388888888889,\n    \"y\": 83.67592790391713\n   },\n   {\n    \"x\": 512.1666666666669,\n    \"y\": 75.12037234836157\n   },\n   {\n    \"x\": 510.61111111111126,\n    \"y\": 76.28703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 511.77777777777794,\n    \"y\": 81.73148345947268\n   },\n   {\n    \"x\": 512.9444444444446,\n    \"y\": 76.67592790391713\n   },\n   {\n    \"x\": 511.388888888889,\n    \"y\": 76.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 508.27777777777794,\n    \"y\": 84.06481679280601\n   },\n   {\n    \"x\": 512.1666666666669,\n    \"y\": 77.84259457058378\n   },\n   {\n    \"x\": 509.0555555555557,\n    \"y\": 77.06481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 505.1666666666668,\n    \"y\": 84.4537056816949\n   },\n   {\n    \"x\": 509.8333333333335,\n    \"y\": 79.39815012613934\n   },\n   {\n    \"x\": 505.5555555555557,\n    \"y\": 78.23148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 488.0555555555557,\n    \"y\": 100.00926123725047\n   },\n   {\n    \"x\": 484.5555555555557,\n    \"y\": 101.95370568169491\n   },\n   {\n    \"x\": 485.72222222222234,\n    \"y\": 98.45370568169491\n   }\n  ],\n  [\n   {\n    \"x\": 495.0555555555557,\n    \"y\": 101.17592790391713\n   },\n   {\n    \"x\": 488.44444444444457,\n    \"y\": 96.12037234836157\n   },\n   {\n    \"x\": 492.7222222222224,\n    \"y\": 94.17592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 500.11111111111126,\n    \"y\": 101.56481679280601\n   },\n   {\n    \"x\": 491.1666666666668,\n    \"y\": 96.89815012613936\n   },\n   {\n    \"x\": 496.2222222222224,\n    \"y\": 95.3425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 505.1666666666668,\n    \"y\": 102.73148345947268\n   },\n   {\n    \"x\": 495.8333333333335,\n    \"y\": 97.67592790391713\n   },\n   {\n    \"x\": 501.27777777777794,\n    \"y\": 95.73148345947268\n   }\n  ],\n  [\n   {\n    \"x\": 497.77777777777794,\n    \"y\": 88.73148345947268\n   },\n   {\n    \"x\": 492.7222222222224,\n    \"y\": 88.73148345947268\n   },\n   {\n    \"x\": 493.11111111111126,\n    \"y\": 89.89815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 499.3333333333335,\n    \"y\": 89.89815012613936\n   },\n   {\n    \"x\": 494.6666666666668,\n    \"y\": 89.50926123725046\n   },\n   {\n    \"x\": 496.2222222222224,\n    \"y\": 90.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 502.44444444444457,\n    \"y\": 89.89815012613936\n   },\n   {\n    \"x\": 498.1666666666668,\n    \"y\": 90.28703901502824\n   },\n   {\n    \"x\": 500.50000000000017,\n    \"y\": 91.8425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 507.50000000000017,\n    \"y\": 90.28703901502824\n   },\n   {\n    \"x\": 500.50000000000017,\n    \"y\": 90.67592790391713\n   },\n   {\n    \"x\": 504.00000000000017,\n    \"y\": 92.62037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 511.77777777777794,\n    \"y\": 90.67592790391713\n   },\n   {\n    \"x\": 502.8333333333335,\n    \"y\": 91.8425945705838\n   },\n   {\n    \"x\": 505.5555555555557,\n    \"y\": 93.78703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 512.1666666666669,\n    \"y\": 92.62037234836157\n   },\n   {\n    \"x\": 503.2222222222224,\n    \"y\": 92.62037234836157\n   },\n   {\n    \"x\": 505.1666666666668,\n    \"y\": 94.17592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 514.1111111111113,\n    \"y\": 94.17592790391713\n   },\n   {\n    \"x\": 509.0555555555557,\n    \"y\": 94.95370568169491\n   },\n   {\n    \"x\": 509.8333333333335,\n    \"y\": 96.12037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 512.9444444444446,\n    \"y\": 93.39815012613936\n   },\n   {\n    \"x\": 508.27777777777794,\n    \"y\": 93.39815012613936\n   },\n   {\n    \"x\": 509.0555555555557,\n    \"y\": 94.56481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 514.5000000000001,\n    \"y\": 95.3425945705838\n   },\n   {\n    \"x\": 511.00000000000017,\n    \"y\": 94.95370568169491\n   },\n   {\n    \"x\": 512.5555555555557,\n    \"y\": 97.67592790391713\n   }\n  ],\n  [\n   {\n    \"x\": 518.0000000000001,\n    \"y\": 98.06481679280601\n   },\n   {\n    \"x\": 512.1666666666669,\n    \"y\": 95.73148345947268\n   },\n   {\n    \"x\": 515.6666666666669,\n    \"y\": 100.39815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 527.2037116156686,\n    \"y\": 130.9907387627496\n   },\n   {\n    \"x\": 525.2592671712241,\n    \"y\": 121.65740542941627\n   },\n   {\n    \"x\": 522.5370449490019,\n    \"y\": 126.32407209608294\n   }\n  ],\n  [\n   {\n    \"x\": 526.4259338378907,\n    \"y\": 137.60184987386071\n   },\n   {\n    \"x\": 524.8703782823352,\n    \"y\": 126.71296098497183\n   },\n   {\n    \"x\": 522.5370449490019,\n    \"y\": 130.21296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 524.4814893934464,\n    \"y\": 143.43518320719406\n   },\n   {\n    \"x\": 524.4814893934464,\n    \"y\": 132.1574054294163\n   },\n   {\n    \"x\": 520.5926005045575,\n    \"y\": 137.9907387627496\n   }\n  ],\n  [\n   {\n    \"x\": 522.5370449490019,\n    \"y\": 148.10184987386071\n   },\n   {\n    \"x\": 522.9259338378907,\n    \"y\": 136.82407209608294\n   },\n   {\n    \"x\": 519.0370449490019,\n    \"y\": 142.6574054294163\n   }\n  ],\n  [\n   {\n    \"x\": 519.8148227267797,\n    \"y\": 153.93518320719406\n   },\n   {\n    \"x\": 521.7592671712241,\n    \"y\": 141.8796276516385\n   },\n   {\n    \"x\": 518.2592671712241,\n    \"y\": 143.04629431830517\n   }\n  ],\n  [\n   {\n    \"x\": 514.3703782823352,\n    \"y\": 160.54629431830517\n   },\n   {\n    \"x\": 519.8148227267797,\n    \"y\": 144.9907387627496\n   },\n   {\n    \"x\": 513.5926005045575,\n    \"y\": 151.21296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 511.2592671712241,\n    \"y\": 162.49073876274963\n   },\n   {\n    \"x\": 515.148156060113,\n    \"y\": 153.1574054294163\n   },\n   {\n    \"x\": 507.7592671712241,\n    \"y\": 158.21296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 508.9259338378908,\n    \"y\": 165.21296098497183\n   },\n   {\n    \"x\": 512.0370449490019,\n    \"y\": 157.82407209608294\n   },\n   {\n    \"x\": 506.5926005045574,\n    \"y\": 158.21296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 506.20371161566857,\n    \"y\": 166.7685165405274\n   },\n   {\n    \"x\": 509.31482272677965,\n    \"y\": 160.1574054294163\n   },\n   {\n    \"x\": 504.2592671712241,\n    \"y\": 159.7685165405274\n   }\n  ],\n  [\n   {\n    \"x\": 502.31482272677965,\n    \"y\": 167.93518320719406\n   },\n   {\n    \"x\": 508.5370449490019,\n    \"y\": 161.71296098497183\n   },\n   {\n    \"x\": 501.9259338378908,\n    \"y\": 162.10184987386071\n   }\n  ],\n  [\n   {\n    \"x\": 494.148156060113,\n    \"y\": 171.82407209608294\n   },\n   {\n    \"x\": 506.5926005045574,\n    \"y\": 164.04629431830517\n   },\n   {\n    \"x\": 497.2592671712241,\n    \"y\": 164.43518320719406\n   }\n  ],\n  [\n   {\n    \"x\": 482.8703782823352,\n    \"y\": 169.87962765163851\n   },\n   {\n    \"x\": 496.0926005045574,\n    \"y\": 168.32407209608294\n   },\n   {\n    \"x\": 492.98148939344634,\n    \"y\": 165.60184987386071\n   }\n  ],\n  [\n   {\n    \"x\": 471.20371161566857,\n    \"y\": 164.43518320719406\n   },\n   {\n    \"x\": 489.48148939344634,\n    \"y\": 167.1574054294163\n   },\n   {\n    \"x\": 487.9259338378908,\n    \"y\": 163.6574054294163\n   }\n  ],\n  [\n   {\n    \"x\": 462.2592671712241,\n    \"y\": 158.60184987386071\n   },\n   {\n    \"x\": 482.8703782823352,\n    \"y\": 163.6574054294163\n   },\n   {\n    \"x\": 482.8703782823352,\n    \"y\": 161.71296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 461.8703782823352,\n    \"y\": 155.4907387627496\n   },\n   {\n    \"x\": 483.2592671712241,\n    \"y\": 160.54629431830517\n   },\n   {\n    \"x\": 483.64815606011297,\n    \"y\": 158.60184987386071\n   }\n  ],\n  [\n   {\n    \"x\": 473.5370449490019,\n    \"y\": 153.1574054294163\n   },\n   {\n    \"x\": 484.4259338378908,\n    \"y\": 164.43518320719406\n   },\n   {\n    \"x\": 485.5926005045574,\n    \"y\": 162.87962765163851\n   }\n  ],\n  [\n   {\n    \"x\": 472.3703782823352,\n    \"y\": 149.6574054294163\n   },\n   {\n    \"x\": 484.0370449490019,\n    \"y\": 161.71296098497183\n   },\n   {\n    \"x\": 484.81482272677965,\n    \"y\": 160.1574054294163\n   }\n  ],\n  [\n   {\n    \"x\": 473.9259338378908,\n    \"y\": 142.6574054294163\n   },\n   {\n    \"x\": 477.81482272677965,\n    \"y\": 153.93518320719406\n   },\n   {\n    \"x\": 480.9259338378908,\n    \"y\": 152.37962765163851\n   }\n  ],\n  [\n   {\n    \"x\": 478.98148939344634,\n    \"y\": 141.10184987386071\n   },\n   {\n    \"x\": 478.98148939344634,\n    \"y\": 152.7685165405274\n   },\n   {\n    \"x\": 481.31482272677965,\n    \"y\": 152.7685165405274\n   }\n  ],\n  [\n   {\n    \"x\": 480.5370449490019,\n    \"y\": 130.60184987386071\n   },\n   {\n    \"x\": 480.14815606011297,\n    \"y\": 144.21296098497183\n   },\n   {\n    \"x\": 483.2592671712241,\n    \"y\": 144.21296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 484.81482272677965,\n    \"y\": 129.82407209608294\n   },\n   {\n    \"x\": 482.0926005045574,\n    \"y\": 141.10184987386071\n   },\n   {\n    \"x\": 485.20371161566857,\n    \"y\": 141.10184987386071\n   }\n  ],\n  [\n   {\n    \"x\": 485.98148939344634,\n    \"y\": 132.93518320719406\n   },\n   {\n    \"x\": 484.4259338378908,\n    \"y\": 137.9907387627496\n   },\n   {\n    \"x\": 486.7592671712241,\n    \"y\": 137.9907387627496\n   }\n  ],\n  [\n   {\n    \"x\": 488.70371161566857,\n    \"y\": 128.26851654052737\n   },\n   {\n    \"x\": 485.5926005045574,\n    \"y\": 135.26851654052737\n   },\n   {\n    \"x\": 487.5370449490019,\n    \"y\": 135.26851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 490.64815606011297,\n    \"y\": 155.4907387627496\n   },\n   {\n    \"x\": 490.64815606011297,\n    \"y\": 158.60184987386071\n   },\n   {\n    \"x\": 488.70371161566857,\n    \"y\": 157.04629431830517\n   }\n  ],\n  [\n   {\n    \"x\": 491.4259338378908,\n    \"y\": 151.9907387627496\n   },\n   {\n    \"x\": 488.31482272677965,\n    \"y\": 156.6574054294163\n   },\n   {\n    \"x\": 488.31482272677965,\n    \"y\": 151.9907387627496\n   }\n  ],\n  [\n   {\n    \"x\": 492.5926005045574,\n    \"y\": 148.4907387627496\n   },\n   {\n    \"x\": 489.0926005045574,\n    \"y\": 151.9907387627496\n   },\n   {\n    \"x\": 489.0926005045574,\n    \"y\": 147.71296098497183\n   }\n  ],\n  [\n   {\n    \"x\": 494.148156060113,\n    \"y\": 143.04629431830517\n   },\n   {\n    \"x\": 489.8703782823352,\n    \"y\": 148.8796276516385\n   },\n   {\n    \"x\": 490.2592671712241,\n    \"y\": 143.43518320719406\n   }\n  ],\n  [\n   {\n    \"x\": 495.31482272677965,\n    \"y\": 138.76851654052737\n   },\n   {\n    \"x\": 490.2592671712241,\n    \"y\": 145.3796276516385\n   },\n   {\n    \"x\": 492.20371161566857,\n    \"y\": 138.76851654052737\n   }\n  ],\n  [\n   {\n    \"x\": 498.0370449490019,\n    \"y\": 134.8796276516385\n   },\n   {\n    \"x\": 492.20371161566857,\n    \"y\": 139.54629431830517\n   },\n   {\n    \"x\": 492.98148939344634,\n    \"y\": 134.8796276516385\n   }\n  ],\n  [\n   {\n    \"x\": 502.31482272677965,\n    \"y\": 130.60184987386071\n   },\n   {\n    \"x\": 494.9259338378908,\n    \"y\": 135.26851654052737\n   },\n   {\n    \"x\": 496.48148939344634,\n    \"y\": 130.60184987386071\n   }\n  ],\n  [\n   {\n    \"x\": 503.48148939344634,\n    \"y\": 128.26851654052737\n   },\n   {\n    \"x\": 496.0926005045574,\n    \"y\": 132.54629431830517\n   },\n   {\n    \"x\": 496.8703782823352,\n    \"y\": 127.87962765163849\n   }\n  ],\n  [\n   {\n    \"x\": 505.0370449490019,\n    \"y\": 125.15740542941627\n   },\n   {\n    \"x\": 496.8703782823352,\n    \"y\": 130.21296098497183\n   },\n   {\n    \"x\": 501.5370449490019,\n    \"y\": 121.65740542941627\n   }\n  ],\n  [\n   {\n    \"x\": 509.31482272677965,\n    \"y\": 121.65740542941627\n   },\n   {\n    \"x\": 499.5926005045574,\n    \"y\": 126.71296098497183\n   },\n   {\n    \"x\": 505.0370449490019,\n    \"y\": 118.15740542941627\n   }\n  ],\n  [\n   {\n    \"x\": 513.2037116156686,\n    \"y\": 116.21296098497183\n   },\n   {\n    \"x\": 503.0926005045574,\n    \"y\": 122.43518320719404\n   },\n   {\n    \"x\": 506.5926005045574,\n    \"y\": 115.43518320719404\n   }\n  ],\n  [\n   {\n    \"x\": 527.8518676757814,\n    \"y\": 90.0277777777778\n   },\n   {\n    \"x\": 522.4074232313369,\n    \"y\": 97.02777777777781\n   },\n   {\n    \"x\": 529.407423231337,\n    \"y\": 94.69444444444447\n   }\n  ],\n  [\n   {\n    \"x\": 530.5740898980036,\n    \"y\": 84.19444444444447\n   },\n   {\n    \"x\": 527.8518676757814,\n    \"y\": 94.69444444444447\n   },\n   {\n    \"x\": 530.9629787868926,\n    \"y\": 93.9166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 532.907423231337,\n    \"y\": 81.86111111111114\n   },\n   {\n    \"x\": 530.1852010091147,\n    \"y\": 92.36111111111114\n   },\n   {\n    \"x\": 534.4629787868926,\n    \"y\": 90.4166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 535.2407565646703,\n    \"y\": 70.97222222222224\n   },\n   {\n    \"x\": 533.2963121202258,\n    \"y\": 90.0277777777778\n   },\n   {\n    \"x\": 539.5185343424481,\n    \"y\": 85.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 537.1852010091147,\n    \"y\": 65.5277777777778\n   },\n   {\n    \"x\": 536.7963121202258,\n    \"y\": 80.69444444444447\n   },\n   {\n    \"x\": 541.0740898980036,\n    \"y\": 78.36111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 534.4629787868926,\n    \"y\": 60.47222222222224\n   },\n   {\n    \"x\": 522.4074232313369,\n    \"y\": 62.0277777777778\n   },\n   {\n    \"x\": 525.1296454535592,\n    \"y\": 58.13888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 524.3518676757814,\n    \"y\": 63.58333333333335\n   },\n   {\n    \"x\": 513.0740898980036,\n    \"y\": 63.194444444444464\n   },\n   {\n    \"x\": 521.2407565646703,\n    \"y\": 56.97222222222224\n   }\n  ],\n  [\n   {\n    \"x\": 518.1296454535592,\n    \"y\": 65.91666666666669\n   },\n   {\n    \"x\": 505.68520100911473,\n    \"y\": 65.13888888888891\n   },\n   {\n    \"x\": 511.90742323133696,\n    \"y\": 58.916666666666686\n   }\n  ],\n  [\n   {\n    \"x\": 508.40742323133696,\n    \"y\": 66.69444444444447\n   },\n   {\n    \"x\": 490.51853434244805,\n    \"y\": 64.75000000000001\n   },\n   {\n    \"x\": 504.90742323133696,\n    \"y\": 60.86111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 475.3518676757814,\n    \"y\": 48.80555555555557\n   },\n   {\n    \"x\": 479.6296454535592,\n    \"y\": 59.30555555555557\n   },\n   {\n    \"x\": 481.9629787868925,\n    \"y\": 58.52777777777779\n   }\n  ],\n  [\n   {\n    \"x\": 474.9629787868925,\n    \"y\": 45.69444444444446\n   },\n   {\n    \"x\": 478.8518676757814,\n    \"y\": 56.194444444444464\n   },\n   {\n    \"x\": 480.7963121202258,\n    \"y\": 54.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 476.51853434244805,\n    \"y\": 41.41666666666668\n   },\n   {\n    \"x\": 478.4629787868925,\n    \"y\": 53.472222222222236\n   },\n   {\n    \"x\": 480.7963121202258,\n    \"y\": 52.69444444444446\n   }\n  ],\n  [\n   {\n    \"x\": 478.8518676757814,\n    \"y\": 39.472222222222236\n   },\n   {\n    \"x\": 478.4629787868925,\n    \"y\": 48.80555555555557\n   },\n   {\n    \"x\": 480.7963121202258,\n    \"y\": 48.80555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 484.68520100911473,\n    \"y\": 42.58333333333334\n   },\n   {\n    \"x\": 479.2407565646703,\n    \"y\": 44.91666666666668\n   },\n   {\n    \"x\": 481.5740898980036,\n    \"y\": 48.02777777777779\n   }\n  ],\n  [\n   {\n    \"x\": 487.7963121202258,\n    \"y\": 44.52777777777779\n   },\n   {\n    \"x\": 480.7963121202258,\n    \"y\": 46.08333333333335\n   },\n   {\n    \"x\": 482.7407565646703,\n    \"y\": 49.972222222222236\n   }\n  ],\n  [\n   {\n    \"x\": 488.18520100911473,\n    \"y\": 48.02777777777779\n   },\n   {\n    \"x\": 481.5740898980036,\n    \"y\": 48.02777777777779\n   },\n   {\n    \"x\": 483.1296454535592,\n    \"y\": 51.52777777777779\n   }\n  ],\n  [\n   {\n    \"x\": 493.6296454535592,\n    \"y\": 50.750000000000014\n   },\n   {\n    \"x\": 484.68520100911473,\n    \"y\": 49.972222222222236\n   },\n   {\n    \"x\": 485.8518676757814,\n    \"y\": 52.30555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 498.2963121202258,\n    \"y\": 51.13888888888891\n   },\n   {\n    \"x\": 488.5740898980036,\n    \"y\": 52.30555555555557\n   },\n   {\n    \"x\": 489.3518676757814,\n    \"y\": 54.63888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 509.18520100911473,\n    \"y\": 51.13888888888891\n   },\n   {\n    \"x\": 494.40742323133696,\n    \"y\": 52.69444444444446\n   },\n   {\n    \"x\": 497.90742323133696,\n    \"y\": 56.194444444444464\n   }\n  ],\n  [\n   {\n    \"x\": 520.8518676757814,\n    \"y\": 51.13888888888891\n   },\n   {\n    \"x\": 504.51853434244805,\n    \"y\": 53.08333333333335\n   },\n   {\n    \"x\": 512.6852010091147,\n    \"y\": 55.02777777777779\n   }\n  ],\n  [\n   {\n    \"x\": 606.7963121202258,\n    \"y\": 39.53703901502822\n   },\n   {\n    \"x\": 597.8518676757815,\n    \"y\": 43.42592790391711\n   },\n   {\n    \"x\": 604.8518676757815,\n    \"y\": 44.20370568169489\n   }\n  ],\n  [\n   {\n    \"x\": 612.6296454535592,\n    \"y\": 40.314816792806\n   },\n   {\n    \"x\": 603.2963121202258,\n    \"y\": 43.03703901502823\n   },\n   {\n    \"x\": 610.6852010091147,\n    \"y\": 44.20370568169489\n   }\n  ],\n  [\n   {\n    \"x\": 619.6296454535592,\n    \"y\": 39.148150126139335\n   },\n   {\n    \"x\": 610.2963121202259,\n    \"y\": 43.42592790391711\n   },\n   {\n    \"x\": 617.2963121202259,\n    \"y\": 43.42592790391711\n   }\n  ],\n  [\n   {\n    \"x\": 633.6296454535592,\n    \"y\": 38.370372348361556\n   },\n   {\n    \"x\": 617.2963121202259,\n    \"y\": 41.48148345947267\n   },\n   {\n    \"x\": 625.4629787868926,\n    \"y\": 43.814816792806006\n   }\n  ],\n  [\n   {\n    \"x\": 638.2963121202259,\n    \"y\": 39.148150126139335\n   },\n   {\n    \"x\": 626.6296454535592,\n    \"y\": 41.870372348361556\n   },\n   {\n    \"x\": 634.0185343424481,\n    \"y\": 43.42592790391711\n   }\n  ],\n  [\n   {\n    \"x\": 642.5740898980036,\n    \"y\": 38.75926123725045\n   },\n   {\n    \"x\": 634.407423231337,\n    \"y\": 41.48148345947267\n   },\n   {\n    \"x\": 639.8518676757815,\n    \"y\": 43.42592790391711\n   }\n  ],\n  [\n   {\n    \"x\": 648.407423231337,\n    \"y\": 39.148150126139335\n   },\n   {\n    \"x\": 638.6852010091147,\n    \"y\": 41.48148345947267\n   },\n   {\n    \"x\": 644.5185343424481,\n    \"y\": 42.648150126139335\n   }\n  ],\n  [\n   {\n    \"x\": 650.7407565646704,\n    \"y\": 40.314816792806\n   },\n   {\n    \"x\": 644.1296454535592,\n    \"y\": 41.870372348361556\n   },\n   {\n    \"x\": 650.7407565646704,\n    \"y\": 43.814816792806006\n   }\n  ],\n  [\n   {\n    \"x\": 655.407423231337,\n    \"y\": 39.53703901502822\n   },\n   {\n    \"x\": 649.5740898980036,\n    \"y\": 42.648150126139335\n   },\n   {\n    \"x\": 653.8518676757815,\n    \"y\": 43.814816792806006\n   }\n  ],\n  [\n   {\n    \"x\": 658.907423231337,\n    \"y\": 41.870372348361556\n   },\n   {\n    \"x\": 650.7407565646704,\n    \"y\": 42.648150126139335\n   },\n   {\n    \"x\": 657.7407565646704,\n    \"y\": 44.98148345947267\n   }\n  ],\n  [\n   {\n    \"x\": 663.9629787868926,\n    \"y\": 43.42592790391711\n   },\n   {\n    \"x\": 656.5740898980036,\n    \"y\": 43.42592790391711\n   },\n   {\n    \"x\": 658.907423231337,\n    \"y\": 46.148150126139335\n   }\n  ],\n  [\n   {\n    \"x\": 668.2407565646704,\n    \"y\": 44.20370568169489\n   },\n   {\n    \"x\": 657.7407565646704,\n    \"y\": 43.814816792806006\n   },\n   {\n    \"x\": 659.2963121202259,\n    \"y\": 46.148150126139335\n   }\n  ],\n  [\n   {\n    \"x\": 677.9629787868926,\n    \"y\": 49.77777777777779\n   },\n   {\n    \"x\": 664.3518676757815,\n    \"y\": 44.722222222222236\n   },\n   {\n    \"x\": 663.5740898980036,\n    \"y\": 47.05555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 678.7407565646704,\n    \"y\": 52.500000000000014\n   },\n   {\n    \"x\": 667.8518676757815,\n    \"y\": 49.000000000000014\n   },\n   {\n    \"x\": 667.8518676757815,\n    \"y\": 50.16666666666668\n   }\n  ],\n  [\n   {\n    \"x\": 680.2963121202259,\n    \"y\": 58.33333333333335\n   },\n   {\n    \"x\": 670.5740898980036,\n    \"y\": 48.61111111111113\n   },\n   {\n    \"x\": 667.8518676757815,\n    \"y\": 50.55555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 680.6852010091147,\n    \"y\": 61.444444444444464\n   },\n   {\n    \"x\": 669.7963121202259,\n    \"y\": 49.77777777777779\n   },\n   {\n    \"x\": 669.7963121202259,\n    \"y\": 53.666666666666686\n   }\n  ],\n  [\n   {\n    \"x\": 675.2407565646704,\n    \"y\": 63.7777777777778\n   },\n   {\n    \"x\": 672.1296454535592,\n    \"y\": 54.05555555555557\n   },\n   {\n    \"x\": 670.5740898980036,\n    \"y\": 56.000000000000014\n   }\n  ],\n  [\n   {\n    \"x\": 673.6852010091147,\n    \"y\": 67.66666666666669\n   },\n   {\n    \"x\": 672.1296454535592,\n    \"y\": 57.55555555555557\n   },\n   {\n    \"x\": 670.5740898980036,\n    \"y\": 59.11111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 668.2407565646704,\n    \"y\": 69.61111111111113\n   },\n   {\n    \"x\": 672.1296454535592,\n    \"y\": 61.444444444444464\n   },\n   {\n    \"x\": 668.6296454535592,\n    \"y\": 62.22222222222224\n   }\n  ],\n  [\n   {\n    \"x\": 663.5740898980036,\n    \"y\": 70.7777777777778\n   },\n   {\n    \"x\": 670.5740898980036,\n    \"y\": 64.55555555555557\n   },\n   {\n    \"x\": 666.6852010091147,\n    \"y\": 63.38888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 657.3518676757815,\n    \"y\": 69.22222222222224\n   },\n   {\n    \"x\": 666.6852010091147,\n    \"y\": 66.50000000000001\n   },\n   {\n    \"x\": 662.7963121202259,\n    \"y\": 63.38888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 653.8518676757815,\n    \"y\": 67.66666666666669\n   },\n   {\n    \"x\": 662.7963121202259,\n    \"y\": 66.88888888888891\n   },\n   {\n    \"x\": 662.0185343424481,\n    \"y\": 64.94444444444446\n   }\n  ],\n  [\n   {\n    \"x\": 656.5740898980036,\n    \"y\": 65.72222222222224\n   },\n   {\n    \"x\": 662.407423231337,\n    \"y\": 64.94444444444446\n   },\n   {\n    \"x\": 659.2963121202259,\n    \"y\": 62.61111111111113\n   }\n  ],\n  [\n   {\n    \"x\": 653.0740898980036,\n    \"y\": 64.16666666666669\n   },\n   {\n    \"x\": 657.7407565646704,\n    \"y\": 61.83333333333335\n   },\n   {\n    \"x\": 660.8518676757815,\n    \"y\": 64.16666666666669\n   }\n  ],\n  [\n   {\n    \"x\": 666.6852010091147,\n    \"y\": 56.77777777777779\n   },\n   {\n    \"x\": 659.6852010091147,\n    \"y\": 50.94444444444446\n   },\n   {\n    \"x\": 667.8518676757815,\n    \"y\": 53.666666666666686\n   }\n  ],\n  [\n   {\n    \"x\": 660.8518676757815,\n    \"y\": 53.27777777777779\n   },\n   {\n    \"x\": 651.5185343424481,\n    \"y\": 48.61111111111113\n   },\n   {\n    \"x\": 660.4629787868926,\n    \"y\": 49.38888888888891\n   }\n  ],\n  [\n   {\n    \"x\": 655.0185343424481,\n    \"y\": 52.500000000000014\n   },\n   {\n    \"x\": 643.7407565646703,\n    \"y\": 47.44444444444446\n   },\n   {\n    \"x\": 651.5185343424481,\n    \"y\": 47.05555555555557\n   }\n  ],\n  [\n   {\n    \"x\": 650.7407565646704,\n    \"y\": 51.722222222222236\n   },\n   {\n    \"x\": 636.7407565646703,\n    \"y\": 48.61111111111113\n   },\n   {\n    \"x\": 646.0740898980036,\n    \"y\": 45.8888888888889\n   }\n  ],\n  [\n   {\n    \"x\": 641.7963121202259,\n    \"y\": 51.722222222222236\n   },\n   {\n    \"x\": 625.8518676757815,\n    \"y\": 49.38888888888891\n   },\n   {\n    \"x\": 634.407423231337,\n    \"y\": 44.722222222222236\n   }\n  ],\n  [\n   {\n    \"x\": 549.5000000000001,\n    \"y\": 81.08333333333336\n   },\n   {\n    \"x\": 545.6111111111113,\n    \"y\": 91.58333333333336\n   },\n   {\n    \"x\": 544.4444444444446,\n    \"y\": 85.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 549.1111111111113,\n    \"y\": 86.5277777777778\n   },\n   {\n    \"x\": 544.8333333333335,\n    \"y\": 96.63888888888891\n   },\n   {\n    \"x\": 543.2777777777779,\n    \"y\": 90.0277777777778\n   }\n  ],\n  [\n   {\n    \"x\": 549.888888888889,\n    \"y\": 90.4166666666667\n   },\n   {\n    \"x\": 543.6666666666669,\n    \"y\": 103.25000000000003\n   },\n   {\n    \"x\": 543.2777777777779,\n    \"y\": 92.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 547.9444444444446,\n    \"y\": 99.75000000000003\n   },\n   {\n    \"x\": 542.888888888889,\n    \"y\": 106.75000000000003\n   },\n   {\n    \"x\": 542.1111111111113,\n    \"y\": 99.75000000000003\n   }\n  ],\n  [\n   {\n    \"x\": 547.9444444444446,\n    \"y\": 103.63888888888891\n   },\n   {\n    \"x\": 539.7777777777779,\n    \"y\": 118.02777777777781\n   },\n   {\n    \"x\": 540.1666666666669,\n    \"y\": 104.02777777777781\n   }\n  ],\n  [\n   {\n    \"x\": 544.8333333333335,\n    \"y\": 111.02777777777781\n   },\n   {\n    \"x\": 539.0000000000001,\n    \"y\": 116.08333333333337\n   },\n   {\n    \"x\": 540.5555555555558,\n    \"y\": 109.47222222222226\n   }\n  ],\n  [\n   {\n    \"x\": 546.0000000000001,\n    \"y\": 114.52777777777781\n   },\n   {\n    \"x\": 539.7777777777779,\n    \"y\": 122.30555555555559\n   },\n   {\n    \"x\": 541.3333333333335,\n    \"y\": 112.58333333333337\n   }\n  ],\n  [\n   {\n    \"x\": 522.9259101019967,\n    \"y\": 165.86111111111117\n   },\n   {\n    \"x\": 525.2592434353301,\n    \"y\": 154.19444444444449\n   },\n   {\n    \"x\": 527.2036878797745,\n    \"y\": 156.9166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 523.7036878797744,\n    \"y\": 169.75000000000006\n   },\n   {\n    \"x\": 525.6481323242189,\n    \"y\": 160.4166666666667\n   },\n   {\n    \"x\": 527.5925767686633,\n    \"y\": 162.75000000000006\n   }\n  ],\n  [\n   {\n    \"x\": 524.0925767686633,\n    \"y\": 174.02777777777783\n   },\n   {\n    \"x\": 525.2592434353301,\n    \"y\": 165.47222222222229\n   },\n   {\n    \"x\": 527.5925767686633,\n    \"y\": 166.63888888888894\n   }\n  ],\n  [\n   {\n    \"x\": 524.8703545464411,\n    \"y\": 177.52777777777783\n   },\n   {\n    \"x\": 526.4259101019967,\n    \"y\": 168.19444444444449\n   },\n   {\n    \"x\": 529.1481323242189,\n    \"y\": 169.75000000000006\n   }\n  ],\n  [\n   {\n    \"x\": 529.9259101019967,\n    \"y\": 183.36111111111117\n   },\n   {\n    \"x\": 527.2036878797745,\n    \"y\": 172.86111111111117\n   },\n   {\n    \"x\": 530.7036878797745,\n    \"y\": 173.63888888888894\n   }\n  ],\n  [\n   {\n    \"x\": 541.5925767686633,\n    \"y\": 191.52777777777783\n   },\n   {\n    \"x\": 529.9259101019967,\n    \"y\": 177.9166666666667\n   },\n   {\n    \"x\": 533.8147989908856,\n    \"y\": 175.19444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 540.8147989908856,\n    \"y\": 187.63888888888894\n   },\n   {\n    \"x\": 533.0370212131078,\n    \"y\": 178.3055555555556\n   },\n   {\n    \"x\": 535.3703545464411,\n    \"y\": 176.75000000000006\n   }\n  ],\n  [\n   {\n    \"x\": 554.0370212131078,\n    \"y\": 182.97222222222229\n   },\n   {\n    \"x\": 536.5370212131078,\n    \"y\": 181.4166666666667\n   },\n   {\n    \"x\": 538.4814656575522,\n    \"y\": 176.75000000000006\n   }\n  ],\n  [\n   {\n    \"x\": 552.8703545464411,\n    \"y\": 179.0833333333334\n   },\n   {\n    \"x\": 540.4259101019967,\n    \"y\": 178.3055555555556\n   },\n   {\n    \"x\": 541.2036878797745,\n    \"y\": 175.97222222222229\n   }\n  ],\n  [\n   {\n    \"x\": 552.8703545464411,\n    \"y\": 174.4166666666667\n   },\n   {\n    \"x\": 541.9814656575522,\n    \"y\": 179.0833333333334\n   },\n   {\n    \"x\": 541.9814656575522,\n    \"y\": 174.02777777777783\n   }\n  ],\n  [\n   {\n    \"x\": 555.2036878797745,\n    \"y\": 168.19444444444449\n   },\n   {\n    \"x\": 543.9259101019967,\n    \"y\": 174.4166666666667\n   },\n   {\n    \"x\": 546.2592434353301,\n    \"y\": 165.86111111111117\n   }\n  ],\n  [\n   {\n    \"x\": 554.4259101019967,\n    \"y\": 164.69444444444449\n   },\n   {\n    \"x\": 546.6481323242189,\n    \"y\": 168.58333333333337\n   },\n   {\n    \"x\": 547.8147989908856,\n    \"y\": 163.52777777777783\n   }\n  ],\n  [\n   {\n    \"x\": 559.0925767686633,\n    \"y\": 157.3055555555556\n   },\n   {\n    \"x\": 550.1481323242189,\n    \"y\": 167.4166666666667\n   },\n   {\n    \"x\": 548.2036878797745,\n    \"y\": 163.9166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 558.3147989908856,\n    \"y\": 153.8055555555556\n   },\n   {\n    \"x\": 550.9259101019967,\n    \"y\": 161.97222222222226\n   },\n   {\n    \"x\": 550.5370212131078,\n    \"y\": 157.69444444444449\n   }\n  ],\n  [\n   {\n    \"x\": 560.6481323242189,\n    \"y\": 146.02777777777783\n   },\n   {\n    \"x\": 550.1481323242189,\n    \"y\": 161.97222222222226\n   },\n   {\n    \"x\": 552.0925767686633,\n    \"y\": 150.3055555555556\n   }\n  ],\n  [\n   {\n    \"x\": 561.8147989908856,\n    \"y\": 139.4166666666667\n   },\n   {\n    \"x\": 552.8703545464411,\n    \"y\": 154.97222222222226\n   },\n   {\n    \"x\": 554.8147989908856,\n    \"y\": 141.36111111111114\n   }\n  ],\n  [\n   {\n    \"x\": 562.5925767686633,\n    \"y\": 133.19444444444449\n   },\n   {\n    \"x\": 556.3703545464411,\n    \"y\": 140.97222222222226\n   },\n   {\n    \"x\": 558.3147989908856,\n    \"y\": 132.4166666666667\n   }\n  ],\n  [\n   {\n    \"x\": 567.0000000000002,\n    \"y\": 118.28703901502824\n   },\n   {\n    \"x\": 563.888888888889,\n    \"y\": 120.62037234836158\n   },\n   {\n    \"x\": 564.6666666666669,\n    \"y\": 114.78703901502824\n   }\n  ],\n  [\n   {\n    \"x\": 567.7777777777779,\n    \"y\": 114.78703901502824\n   },\n   {\n    \"x\": 564.6666666666669,\n    \"y\": 118.28703901502824\n   },\n   {\n    \"x\": 564.6666666666669,\n    \"y\": 112.8425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 569.7222222222224,\n    \"y\": 110.50926123725047\n   },\n   {\n    \"x\": 565.4444444444446,\n    \"y\": 115.56481679280603\n   },\n   {\n    \"x\": 567.7777777777779,\n    \"y\": 108.56481679280603\n   }\n  ],\n  [\n   {\n    \"x\": 572.8333333333335,\n    \"y\": 105.06481679280603\n   },\n   {\n    \"x\": 567.0000000000002,\n    \"y\": 111.28703901502824\n   },\n   {\n    \"x\": 568.9444444444446,\n    \"y\": 103.89815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 575.5555555555558,\n    \"y\": 98.8425945705838\n   },\n   {\n    \"x\": 569.3333333333335,\n    \"y\": 106.23148345947268\n   },\n   {\n    \"x\": 572.4444444444446,\n    \"y\": 96.89815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 578.2777777777779,\n    \"y\": 93.39815012613936\n   },\n   {\n    \"x\": 570.888888888889,\n    \"y\": 101.17592790391713\n   },\n   {\n    \"x\": 575.1666666666669,\n    \"y\": 91.8425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 578.6666666666669,\n    \"y\": 88.73148345947268\n   },\n   {\n    \"x\": 575.5555555555558,\n    \"y\": 93.78703901502824\n   },\n   {\n    \"x\": 576.7222222222224,\n    \"y\": 87.9537056816949\n   }\n  ],\n  [\n   {\n    \"x\": 565.8333333333335,\n    \"y\": 97.28703901502824\n   },\n   {\n    \"x\": 562.7222222222224,\n    \"y\": 108.95370568169491\n   },\n   {\n    \"x\": 567.0000000000002,\n    \"y\": 103.50926123725047\n   }\n  ],\n  [\n   {\n    \"x\": 568.5555555555558,\n    \"y\": 90.67592790391713\n   },\n   {\n    \"x\": 565.0555555555558,\n    \"y\": 104.67592790391713\n   },\n   {\n    \"x\": 570.1111111111113,\n    \"y\": 96.89815012613936\n   }\n  ],\n  [\n   {\n    \"x\": 569.3333333333335,\n    \"y\": 87.56481679280601\n   },\n   {\n    \"x\": 569.3333333333335,\n    \"y\": 94.56481679280601\n   },\n   {\n    \"x\": 571.2777777777779,\n    \"y\": 92.62037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 570.888888888889,\n    \"y\": 83.28703901502824\n   },\n   {\n    \"x\": 570.5000000000002,\n    \"y\": 92.62037234836157\n   },\n   {\n    \"x\": 572.4444444444446,\n    \"y\": 91.8425945705838\n   }\n  ],\n  [\n   {\n    \"x\": 572.0555555555558,\n    \"y\": 83.67592790391713\n   },\n   {\n    \"x\": 572.4444444444446,\n    \"y\": 88.73148345947268\n   },\n   {\n    \"x\": 574.7777777777779,\n    \"y\": 86.39815012613934\n   }\n  ],\n  [\n   {\n    \"x\": 574.0000000000002,\n    \"y\": 78.62037234836157\n   },\n   {\n    \"x\": 573.2222222222224,\n    \"y\": 87.9537056816949\n   },\n   {\n    \"x\": 575.5555555555558,\n    \"y\": 85.62037234836157\n   }\n  ],\n  [\n   {\n    \"x\": 576.7222222222224,\n    \"y\": 77.06481679280601\n   },\n   {\n    \"x\": 574.0000000000002,\n    \"y\": 84.06481679280601\n   },\n   {\n    \"x\": 576.7222222222224,\n    \"y\": 84.06481679280601\n   }\n  ],\n  [\n   {\n    \"x\": 581.0000000000002,\n    \"y\": 74.34259457058378\n   },\n   {\n    \"x\": 575.5555555555558,\n    \"y\": 82.50926123725046\n   },\n   {\n    \"x\": 578.6666666666669,\n    \"y\": 82.12037234836157\n   }\n  ]\n ]\n}\n","// requestAnim shim layer by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/\n// requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller\n// fixes from Paul Irish and Tino Zijdel\nwindow.requestAnimationFrame = (() =>\n  window.requestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame ||\n  window.oRequestAnimationFrame ||\n  window.msRequestAnimationFrame ||\n  ((callback, element) => {\n    // should '60' here be framerate?\n    window.setTimeout(callback, 1000 / 60);\n  }))();\n\n/**\n * shim for Uint8ClampedArray.slice\n * (allows arrayCopy to work with pixels[])\n * with thanks to http://halfpapstudios.com/blog/tag/html5-canvas/\n * Enumerable set to false to protect for...in from\n * Uint8ClampedArray.prototype pollution.\n */\n(() => {\n  if (\n    typeof Uint8ClampedArray !== 'undefined' &&\n    !Uint8ClampedArray.prototype.slice\n  ) {\n    Object.defineProperty(Uint8ClampedArray.prototype, 'slice', {\n      value: Array.prototype.slice,\n      writable: true,\n      configurable: true,\n      enumerable: false\n    });\n  }\n})();\n\n/**\n * this is implementation of Object.assign() which is unavailable in\n * IE11 and (non-Chrome) Android browsers.\n * The assign() method is used to copy the values of all enumerable\n * own properties from one or more source objects to a target object.\n * It will return the target object.\n * Modified from https://github.com/ljharb/object.assign\n */\n(() => {\n  if (!Object.assign) {\n    const keys = Object.keys;\n    const defineProperty = Object.defineProperty;\n    const canBeObject = obj => typeof obj !== 'undefined' && obj !== null;\n    const hasSymbols =\n      typeof Symbol === 'function' && typeof Symbol() === 'symbol';\n    const propIsEnumerable = Object.prototype.propertyIsEnumerable;\n    const isEnumerableOn = obj =>\n      function isEnumerable(prop) {\n        return propIsEnumerable.call(obj, prop);\n      };\n\n    // per ES6 spec, this function has to have a length of 2\n    const assignShim = function assign(target, source1) {\n      if (!canBeObject(target)) {\n        throw new TypeError('target must be an object');\n      }\n      const objTarget = Object(target);\n      let s, source, i, props;\n      for (s = 1; s < arguments.length; ++s) {\n        source = Object(arguments[s]);\n        props = keys(source);\n        if (hasSymbols && Object.getOwnPropertySymbols) {\n          props.push.apply(\n            props,\n            Object.getOwnPropertySymbols(source).filter(isEnumerableOn(source))\n          );\n        }\n        for (i = 0; i < props.length; ++i) {\n          objTarget[props[i]] = source[props[i]];\n        }\n      }\n      return objTarget;\n    };\n\n    defineProperty(Object, 'assign', {\n      value: assignShim,\n      configurable: true,\n      enumerable: false,\n      writable: true\n    });\n  }\n})();\n","/**\n * @module Constants\n * @submodule Constants\n * @for p5\n */\n\nconst _PI = Math.PI;\n\n// GRAPHICS RENDERER\n/**\n * The default, two-dimensional renderer.\n * @property {String} P2D\n * @final\n */\nexport const P2D = 'p2d';\n/**\n * One of the two render modes in p5.js: P2D (default renderer) and WEBGL\n * Enables 3D render by introducing the third dimension: Z\n * @property {String} WEBGL\n * @final\n */\nexport const WEBGL = 'webgl';\n\n// ENVIRONMENT\n/**\n * @property {String} ARROW\n * @final\n */\nexport const ARROW = 'default';\n/**\n * @property {String} CROSS\n * @final\n */\nexport const CROSS = 'crosshair';\n/**\n * @property {String} HAND\n * @final\n */\nexport const HAND = 'pointer';\n/**\n * @property {String} MOVE\n * @final\n */\nexport const MOVE = 'move';\n/**\n * @property {String} TEXT\n * @final\n */\nexport const TEXT = 'text';\n/**\n * @property {String} WAIT\n * @final\n */\nexport const WAIT = 'wait';\n\n// TRIGONOMETRY\n\n/**\n * HALF_PI is a mathematical constant with the value\n * 1.57079632679489661923. It is half the ratio of the\n * circumference of a circle to its diameter. It is useful in\n * combination with the trigonometric functions <a href=\"#/p5/sin\">sin()</a> and <a href=\"#/p5/cos\">cos()</a>.\n *\n * @property {Number} HALF_PI\n * @final\n *\n * @example\n * <div><code>\n * arc(50, 50, 80, 80, 0, HALF_PI);\n * </code></div>\n *\n * @alt\n * 80x80 white quarter-circle with curve toward bottom right of canvas.\n *\n */\nexport const HALF_PI = _PI / 2;\n/**\n * PI is a mathematical constant with the value\n * 3.14159265358979323846. It is the ratio of the circumference\n * of a circle to its diameter. It is useful in combination with\n * the trigonometric functions <a href=\"#/p5/sin\">sin()</a> and <a href=\"#/p5/cos\">cos()</a>.\n *\n * @property {Number} PI\n * @final\n *\n * @example\n * <div><code>\n * arc(50, 50, 80, 80, 0, PI);\n * </code></div>\n *\n * @alt\n * white half-circle with curve toward bottom of canvas.\n *\n */\nexport const PI = _PI;\n/**\n * QUARTER_PI is a mathematical constant with the value 0.7853982.\n * It is one quarter the ratio of the circumference of a circle to\n * its diameter. It is useful in combination with the trigonometric\n * functions <a href=\"#/p5/sin\">sin()</a> and <a href=\"#/p5/cos\">cos()</a>.\n *\n * @property {Number} QUARTER_PI\n * @final\n *\n * @example\n * <div><code>\n * arc(50, 50, 80, 80, 0, QUARTER_PI);\n * </code></div>\n *\n * @alt\n * white eighth-circle rotated about 40 degrees with curve bottom right canvas.\n *\n */\nexport const QUARTER_PI = _PI / 4;\n/**\n * TAU is an alias for TWO_PI, a mathematical constant with the\n * value 6.28318530717958647693. It is twice the ratio of the\n * circumference of a circle to its diameter. It is useful in\n * combination with the trigonometric functions <a href=\"#/p5/sin\">sin()</a> and <a href=\"#/p5/cos\">cos()</a>.\n *\n * @property {Number} TAU\n * @final\n *\n * @example\n * <div><code>\n * arc(50, 50, 80, 80, 0, TAU);\n * </code></div>\n *\n * @alt\n * 80x80 white ellipse shape in center of canvas.\n *\n */\nexport const TAU = _PI * 2;\n/**\n * TWO_PI is a mathematical constant with the value\n * 6.28318530717958647693. It is twice the ratio of the\n * circumference of a circle to its diameter. It is useful in\n * combination with the trigonometric functions <a href=\"#/p5/sin\">sin()</a> and <a href=\"#/p5/cos\">cos()</a>.\n *\n * @property {Number} TWO_PI\n * @final\n *\n * @example\n * <div><code>\n * arc(50, 50, 80, 80, 0, TWO_PI);\n * </code></div>\n *\n * @alt\n * 80x80 white ellipse shape in center of canvas.\n *\n */\nexport const TWO_PI = _PI * 2;\n/**\n * Constant to be used with <a href=\"#/p5/angleMode\">angleMode()</a> function, to set the mode which\n * p5.js interprates and calculates angles (either DEGREES or RADIANS).\n * @property {String} DEGREES\n * @final\n *\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   angleMode(DEGREES);\n * }\n * </code></div>\n */\nexport const DEGREES = 'degrees';\n/**\n * Constant to be used with <a href=\"#/p5/angleMode\">angleMode()</a> function, to set the mode which\n * p5.js interprates and calculates angles (either RADIANS or DEGREES).\n * @property {String} RADIANS\n * @final\n *\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   angleMode(RADIANS);\n * }\n * </code></div>\n */\nexport const RADIANS = 'radians';\nexport const DEG_TO_RAD = _PI / 180.0;\nexport const RAD_TO_DEG = 180.0 / _PI;\n\n// SHAPE\n/**\n * @property {String} CORNER\n * @final\n */\nexport const CORNER = 'corner';\n/**\n * @property {String} CORNERS\n * @final\n */\nexport const CORNERS = 'corners';\n/**\n * @property {String} RADIUS\n * @final\n */\nexport const RADIUS = 'radius';\n/**\n * @property {String} RIGHT\n * @final\n */\nexport const RIGHT = 'right';\n/**\n * @property {String} LEFT\n * @final\n */\nexport const LEFT = 'left';\n/**\n * @property {String} CENTER\n * @final\n */\nexport const CENTER = 'center';\n/**\n * @property {String} TOP\n * @final\n */\nexport const TOP = 'top';\n/**\n * @property {String} BOTTOM\n * @final\n */\nexport const BOTTOM = 'bottom';\n/**\n * @property {String} BASELINE\n * @final\n * @default alphabetic\n */\nexport const BASELINE = 'alphabetic';\n/**\n * @property {Number} POINTS\n * @final\n * @default 0x0000\n */\nexport const POINTS = 0x0000;\n/**\n * @property {Number} LINES\n * @final\n * @default 0x0001\n */\nexport const LINES = 0x0001;\n/**\n * @property {Number} LINE_STRIP\n * @final\n * @default 0x0003\n */\nexport const LINE_STRIP = 0x0003;\n/**\n * @property {Number} LINE_LOOP\n * @final\n * @default 0x0002\n */\nexport const LINE_LOOP = 0x0002;\n/**\n * @property {Number} TRIANGLES\n * @final\n * @default 0x0004\n */\nexport const TRIANGLES = 0x0004;\n/**\n * @property {Number} TRIANGLE_FAN\n * @final\n * @default 0x0006\n */\nexport const TRIANGLE_FAN = 0x0006;\n/**\n * @property {Number} TRIANGLE_STRIP\n * @final\n * @default 0x0005\n */\nexport const TRIANGLE_STRIP = 0x0005;\n/**\n * @property {String} QUADS\n * @final\n */\nexport const QUADS = 'quads';\n/**\n * @property {String} QUAD_STRIP\n * @final\n * @default quad_strip\n */\nexport const QUAD_STRIP = 'quad_strip';\n/**\n * @property {String} TESS\n * @final\n * @default tess\n */\nexport const TESS = 'tess';\n/**\n * @property {String} CLOSE\n * @final\n */\nexport const CLOSE = 'close';\n/**\n * @property {String} OPEN\n * @final\n */\nexport const OPEN = 'open';\n/**\n * @property {String} CHORD\n * @final\n */\nexport const CHORD = 'chord';\n/**\n * @property {String} PIE\n * @final\n */\nexport const PIE = 'pie';\n/**\n * @property {String} PROJECT\n * @final\n * @default square\n */\nexport const PROJECT = 'square'; // PEND: careful this is counterintuitive\n/**\n * @property {String} SQUARE\n * @final\n * @default butt\n */\nexport const SQUARE = 'butt';\n/**\n * @property {String} ROUND\n * @final\n */\nexport const ROUND = 'round';\n/**\n * @property {String} BEVEL\n * @final\n */\nexport const BEVEL = 'bevel';\n/**\n * @property {String} MITER\n * @final\n */\nexport const MITER = 'miter';\n\n// COLOR\n/**\n * @property {String} RGB\n * @final\n */\nexport const RGB = 'rgb';\n/**\n * @property {String} HSB\n * @final\n */\nexport const HSB = 'hsb';\n/**\n * @property {String} HSL\n * @final\n */\nexport const HSL = 'hsl';\n\n// DOM EXTENSION\n/**\n * AUTO allows us to automatically set the width or height of an element (but not both),\n * based on the current height and width of the element. Only one parameter can\n * be passed to the <a href=\"/#/p5.Element/size\">size</a> function as AUTO, at a time.\n *\n * @property {String} AUTO\n * @final\n */\nexport const AUTO = 'auto';\n\n/**\n * @property {Number} ALT\n * @final\n */\n// INPUT\nexport const ALT = 18;\n/**\n * @property {Number} BACKSPACE\n * @final\n */\nexport const BACKSPACE = 8;\n/**\n * @property {Number} CONTROL\n * @final\n */\nexport const CONTROL = 17;\n/**\n * @property {Number} DELETE\n * @final\n */\nexport const DELETE = 46;\n/**\n * @property {Number} DOWN_ARROW\n * @final\n */\nexport const DOWN_ARROW = 40;\n/**\n * @property {Number} ENTER\n * @final\n */\nexport const ENTER = 13;\n/**\n * @property {Number} ESCAPE\n * @final\n */\nexport const ESCAPE = 27;\n/**\n * @property {Number} LEFT_ARROW\n * @final\n */\nexport const LEFT_ARROW = 37;\n/**\n * @property {Number} OPTION\n * @final\n */\nexport const OPTION = 18;\n/**\n * @property {Number} RETURN\n * @final\n */\nexport const RETURN = 13;\n/**\n * @property {Number} RIGHT_ARROW\n * @final\n */\nexport const RIGHT_ARROW = 39;\n/**\n * @property {Number} SHIFT\n * @final\n */\nexport const SHIFT = 16;\n/**\n * @property {Number} TAB\n * @final\n */\nexport const TAB = 9;\n/**\n * @property {Number} UP_ARROW\n * @final\n */\nexport const UP_ARROW = 38;\n\n// RENDERING\n/**\n * @property {String} BLEND\n * @final\n * @default source-over\n */\nexport const BLEND = 'source-over';\n/**\n * @property {String} REMOVE\n * @final\n * @default destination-out\n */\nexport const REMOVE = 'destination-out';\n/**\n * @property {String} ADD\n * @final\n * @default lighter\n */\nexport const ADD = 'lighter';\n//ADD: 'add', //\n//SUBTRACT: 'subtract', //\n/**\n * @property {String} DARKEST\n * @final\n */\nexport const DARKEST = 'darken';\n/**\n * @property {String} LIGHTEST\n * @final\n * @default lighten\n */\nexport const LIGHTEST = 'lighten';\n/**\n * @property {String} DIFFERENCE\n * @final\n */\nexport const DIFFERENCE = 'difference';\n/**\n * @property {String} SUBTRACT\n * @final\n */\nexport const SUBTRACT = 'subtract';\n/**\n * @property {String} EXCLUSION\n * @final\n */\nexport const EXCLUSION = 'exclusion';\n/**\n * @property {String} MULTIPLY\n * @final\n */\nexport const MULTIPLY = 'multiply';\n/**\n * @property {String} SCREEN\n * @final\n */\nexport const SCREEN = 'screen';\n/**\n * @property {String} REPLACE\n * @final\n * @default copy\n */\nexport const REPLACE = 'copy';\n/**\n * @property {String} OVERLAY\n * @final\n */\nexport const OVERLAY = 'overlay';\n/**\n * @property {String} HARD_LIGHT\n * @final\n */\nexport const HARD_LIGHT = 'hard-light';\n/**\n * @property {String} SOFT_LIGHT\n * @final\n */\nexport const SOFT_LIGHT = 'soft-light';\n/**\n * @property {String} DODGE\n * @final\n * @default color-dodge\n */\nexport const DODGE = 'color-dodge';\n/**\n * @property {String} BURN\n * @final\n * @default color-burn\n */\nexport const BURN = 'color-burn';\n\n// FILTERS\n/**\n * @property {String} THRESHOLD\n * @final\n */\nexport const THRESHOLD = 'threshold';\n/**\n * @property {String} GRAY\n * @final\n */\nexport const GRAY = 'gray';\n/**\n * @property {String} OPAQUE\n * @final\n */\nexport const OPAQUE = 'opaque';\n/**\n * @property {String} INVERT\n * @final\n */\nexport const INVERT = 'invert';\n/**\n * @property {String} POSTERIZE\n * @final\n */\nexport const POSTERIZE = 'posterize';\n/**\n * @property {String} DILATE\n * @final\n */\nexport const DILATE = 'dilate';\n/**\n * @property {String} ERODE\n * @final\n */\nexport const ERODE = 'erode';\n/**\n * @property {String} BLUR\n * @final\n */\nexport const BLUR = 'blur';\n\n// TYPOGRAPHY\n/**\n * @property {String} NORMAL\n * @final\n */\nexport const NORMAL = 'normal';\n/**\n * @property {String} ITALIC\n * @final\n */\nexport const ITALIC = 'italic';\n/**\n * @property {String} BOLD\n * @final\n */\nexport const BOLD = 'bold';\n/**\n * @property {String} BOLDITALIC\n * @final\n */\nexport const BOLDITALIC = 'bold italic';\n\n// TYPOGRAPHY-INTERNAL\nexport const _DEFAULT_TEXT_FILL = '#000000';\nexport const _DEFAULT_LEADMULT = 1.25;\nexport const _CTX_MIDDLE = 'middle';\n\n// VERTICES\n/**\n * @property {String} LINEAR\n * @final\n */\nexport const LINEAR = 'linear';\n/**\n * @property {String} QUADRATIC\n * @final\n */\nexport const QUADRATIC = 'quadratic';\n/**\n * @property {String} BEZIER\n * @final\n */\nexport const BEZIER = 'bezier';\n/**\n * @property {String} CURVE\n * @final\n */\nexport const CURVE = 'curve';\n\n// WEBGL DRAWMODES\n/**\n * @property {String} STROKE\n * @final\n */\nexport const STROKE = 'stroke';\n/**\n * @property {String} FILL\n * @final\n */\nexport const FILL = 'fill';\n/**\n * @property {String} TEXTURE\n * @final\n */\nexport const TEXTURE = 'texture';\n/**\n * @property {String} IMMEDIATE\n * @final\n */\nexport const IMMEDIATE = 'immediate';\n\n// WEBGL TEXTURE MODE\n// NORMAL already exists for typography\n/**\n * @property {String} IMAGE\n * @final\n */\nexport const IMAGE = 'image';\n\n// WEBGL TEXTURE WRAP AND FILTERING\n// LINEAR already exists above\n/**\n * @property {String} NEAREST\n * @final\n */\nexport const NEAREST = 'nearest';\n/**\n * @property {String} REPEAT\n * @final\n */\nexport const REPEAT = 'repeat';\n/**\n * @property {String} CLAMP\n * @final\n */\nexport const CLAMP = 'clamp';\n/**\n * @property {String} MIRROR\n * @final\n */\nexport const MIRROR = 'mirror';\n\n// DEVICE-ORIENTATION\n/**\n * @property {String} LANDSCAPE\n * @final\n */\nexport const LANDSCAPE = 'landscape';\n/**\n * @property {String} PORTRAIT\n * @final\n */\nexport const PORTRAIT = 'portrait';\n\n// DEFAULTS\nexport const _DEFAULT_STROKE = '#000000';\nexport const _DEFAULT_FILL = '#FFFFFF';\n\n/**\n * @property {String} GRID\n * @final\n */\nexport const GRID = 'grid';\n\n/**\n * @property {String} AXES\n * @final\n */\nexport const AXES = 'axes';\n","/**\n * @module Structure\n * @submodule Structure\n * @for p5\n * @requires constants\n */\n\nimport './shim';\n\n// Core needs the PVariables object\nimport * as constants from './constants';\n\n/**\n * This is the p5 instance constructor.\n *\n * A p5 instance holds all the properties and methods related to\n * a p5 sketch.  It expects an incoming sketch closure and it can also\n * take an optional node parameter for attaching the generated p5 canvas\n * to a node.  The sketch closure takes the newly created p5 instance as\n * its sole argument and may optionally set <a href=\"#/p5/preload\">preload()</a>,\n * <a href=\"#/p5/setup\">setup()</a>, and/or\n * <a href=\"#/p5/draw\">draw()</a> properties on it for running a sketch.\n *\n * A p5 sketch can run in \"global\" or \"instance\" mode:\n * \"global\"   - all properties and methods are attached to the window\n * \"instance\" - all properties and methods are bound to this p5 object\n *\n * @class p5\n * @constructor\n * @param  {function}           sketch a closure that can set optional <a href=\"#/p5/preload\">preload()</a>,\n *                              <a href=\"#/p5/setup\">setup()</a>, and/or <a href=\"#/p5/draw\">draw()</a> properties on the\n *                              given p5 instance\n * @param  {HTMLElement}        [node] element to attach canvas to\n * @return {p5}                 a p5 instance\n */\nclass p5 {\n  constructor(sketch, node, sync) {\n    //////////////////////////////////////////////\n    // PUBLIC p5 PROPERTIES AND METHODS\n    //////////////////////////////////////////////\n\n    /**\n     * Called directly before <a href=\"#/p5/setup\">setup()</a>, the <a href=\"#/p5/preload\">preload()</a> function is used to handle\n     * asynchronous loading of external files in a blocking way. If a preload\n     * function is defined, <a href=\"#/p5/setup\">setup()</a> will wait until any load calls within have\n     * finished. Nothing besides load calls (<a href=\"#/p5/loadImage\">loadImage</a>, <a href=\"#/p5/loadJSON\">loadJSON</a>, <a href=\"#/p5/loadFont\">loadFont</a>,\n     * <a href=\"#/p5/loadStrings\">loadStrings</a>, etc.) should be inside the preload function. If asynchronous\n     * loading is preferred, the load methods can instead be called in <a href=\"#/p5/setup\">setup()</a>\n     * or anywhere else with the use of a callback parameter.\n     *\n     * By default the text \"loading...\" will be displayed. To make your own\n     * loading page, include an HTML element with id \"p5_loading\" in your\n     * page. More information <a href=\"http://bit.ly/2kQ6Nio\">here</a>.\n     *\n     * @method preload\n     * @example\n     * <div><code>\n     * let img;\n     * let c;\n     * function preload() {\n     *   // preload() runs once\n     *   img = loadImage('assets/laDefense.jpg');\n     * }\n     *\n     * function setup() {\n     *   // setup() waits until preload() is done\n     *   img.loadPixels();\n     *   // get color of middle pixel\n     *   c = img.get(img.width / 2, img.height / 2);\n     * }\n     *\n     * function draw() {\n     *   background(c);\n     *   image(img, 25, 25, 50, 50);\n     * }\n     * </code></div>\n     *\n     * @alt\n     * nothing displayed\n     *\n     */\n\n    /**\n     * The <a href=\"#/p5/setup\">setup()</a> function is called once when the program starts. It's used to\n     * define initial environment properties such as screen size and background\n     * color and to load media such as images and fonts as the program starts.\n     * There can only be one <a href=\"#/p5/setup\">setup()</a> function for each program and it shouldn't\n     * be called again after its initial execution.\n     * <br><br>\n     * Note: Variables declared within <a href=\"#/p5/setup\">setup()</a> are not accessible within other\n     * functions, including <a href=\"#/p5/draw\">draw()</a>.\n     *\n     * @method setup\n     * @example\n     * <div><code>\n     * let a = 0;\n     *\n     * function setup() {\n     *   background(0);\n     *   noStroke();\n     *   fill(102);\n     * }\n     *\n     * function draw() {\n     *   rect(a++ % width, 10, 2, 80);\n     * }\n     * </code></div>\n     *\n     * @alt\n     * nothing displayed\n     *\n     */\n\n    /**\n     * Called directly after <a href=\"#/p5/setup\">setup()</a>, the <a href=\"#/p5/draw\">draw()</a> function continuously executes\n     * the lines of code contained inside its block until the program is stopped\n     * or <a href=\"#/p5/noLoop\">noLoop()</a> is called. Note if <a href=\"#/p5/noLoop\">noLoop()</a> is called in <a href=\"#/p5/setup\">setup()</a>, <a href=\"#/p5/draw\">draw()</a> will\n     * still be executed once before stopping. <a href=\"#/p5/draw\">draw()</a> is called automatically and\n     * should never be called explicitly.\n     * <br><br>\n     * It should always be controlled with <a href=\"#/p5/noLoop\">noLoop()</a>, <a href=\"#/p5/redraw\">redraw()</a> and <a href=\"#/p5/loop\">loop()</a>. After\n     * <a href=\"#/p5/noLoop\">noLoop()</a> stops the code in <a href=\"#/p5/draw\">draw()</a> from executing, <a href=\"#/p5/redraw\">redraw()</a> causes the\n     * code inside <a href=\"#/p5/draw\">draw()</a> to execute once, and <a href=\"#/p5/loop\">loop()</a> will cause the code\n     * inside <a href=\"#/p5/draw\">draw()</a> to resume executing continuously.\n     * <br><br>\n     * The number of times <a href=\"#/p5/draw\">draw()</a> executes in each second may be controlled with\n     * the <a href=\"#/p5/frameRate\">frameRate()</a> function.\n     * <br><br>\n     * There can only be one <a href=\"#/p5/draw\">draw()</a> function for each sketch, and <a href=\"#/p5/draw\">draw()</a> must\n     * exist if you want the code to run continuously, or to process events such\n     * as <a href=\"#/p5/mousePressed\">mousePressed()</a>. Sometimes, you might have an empty call to <a href=\"#/p5/draw\">draw()</a> in\n     * your program, as shown in the above example.\n     * <br><br>\n     * It is important to note that the drawing coordinate system will be reset\n     * at the beginning of each <a href=\"#/p5/draw\">draw()</a> call. If any transformations are performed\n     * within <a href=\"#/p5/draw\">draw()</a> (ex: scale, rotate, translate), their effects will be\n     * undone at the beginning of <a href=\"#/p5/draw\">draw()</a>, so transformations will not accumulate\n     * over time. On the other hand, styling applied (ex: fill, stroke, etc) will\n     * remain in effect.\n     *\n     * @method draw\n     * @example\n     * <div><code>\n     * let yPos = 0;\n     * function setup() {\n     *   // setup() runs once\n     *   frameRate(30);\n     * }\n     * function draw() {\n     *   // draw() loops forever, until stopped\n     *   background(204);\n     *   yPos = yPos - 1;\n     *   if (yPos < 0) {\n     *     yPos = height;\n     *   }\n     *   line(0, yPos, width, yPos);\n     * }\n     * </code></div>\n     *\n     * @alt\n     * nothing displayed\n     *\n     */\n\n    //////////////////////////////////////////////\n    // PRIVATE p5 PROPERTIES AND METHODS\n    //////////////////////////////////////////////\n\n    this._setupDone = false;\n    // for handling hidpi\n    this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1;\n    this._userNode = node;\n    this._curElement = null;\n    this._elements = [];\n    this._glAttributes = null;\n    this._requestAnimId = 0;\n    this._preloadCount = 0;\n    this._isGlobal = false;\n    this._loop = true;\n    this._initializeInstanceVariables();\n    this._defaultCanvasSize = {\n      width: 100,\n      height: 100\n    };\n    this._events = {\n      // keep track of user-events for unregistering later\n      mousemove: null,\n      mousedown: null,\n      mouseup: null,\n      dragend: null,\n      dragover: null,\n      click: null,\n      dblclick: null,\n      mouseover: null,\n      mouseout: null,\n      keydown: null,\n      keyup: null,\n      keypress: null,\n      touchstart: null,\n      touchmove: null,\n      touchend: null,\n      resize: null,\n      blur: null\n    };\n    this._millisStart = -1;\n\n    // States used in the custom random generators\n    this._lcg_random_state = null;\n    this._gaussian_previous = false;\n\n    this._events.wheel = null;\n    this._loadingScreenId = 'p5_loading';\n\n    // Allows methods to be registered on an instance that\n    // are instance-specific.\n    this._registeredMethods = {};\n    const methods = Object.getOwnPropertyNames(p5.prototype._registeredMethods);\n\n    for (const prop of methods) {\n      this._registeredMethods[prop] = p5.prototype._registeredMethods[\n        prop\n      ].slice();\n    }\n\n    if (window.DeviceOrientationEvent) {\n      this._events.deviceorientation = null;\n    }\n    if (window.DeviceMotionEvent && !window._isNodeWebkit) {\n      this._events.devicemotion = null;\n    }\n\n    this._start = () => {\n      // Find node if id given\n      if (this._userNode) {\n        if (typeof this._userNode === 'string') {\n          this._userNode = document.getElementById(this._userNode);\n        }\n      }\n\n      const context = this._isGlobal ? window : this;\n      const userPreload = context.preload;\n      if (userPreload) {\n        // Setup loading screen\n        // Set loading screen into dom if not present\n        // Otherwise displays and removes user provided loading screen\n        let loadingScreen = document.getElementById(this._loadingScreenId);\n        if (!loadingScreen) {\n          loadingScreen = document.createElement('div');\n          loadingScreen.innerHTML = 'Loading...';\n          loadingScreen.style.position = 'absolute';\n          loadingScreen.id = this._loadingScreenId;\n          const node = this._userNode || document.body;\n          node.appendChild(loadingScreen);\n        }\n        const methods = this._preloadMethods;\n        for (const method in methods) {\n          // default to p5 if no object defined\n          methods[method] = methods[method] || p5;\n          let obj = methods[method];\n          //it's p5, check if it's global or instance\n          if (obj === p5.prototype || obj === p5) {\n            if (this._isGlobal) {\n              window[method] = this._wrapPreload(this, method);\n            }\n            obj = this;\n          }\n          this._registeredPreloadMethods[method] = obj[method];\n          obj[method] = this._wrapPreload(obj, method);\n        }\n\n        userPreload();\n        this._runIfPreloadsAreDone();\n      } else {\n        this._setup();\n        this._draw();\n      }\n    };\n\n    this._runIfPreloadsAreDone = function() {\n      const context = this._isGlobal ? window : this;\n      if (context._preloadCount === 0) {\n        const loadingScreen = document.getElementById(context._loadingScreenId);\n        if (loadingScreen) {\n          loadingScreen.parentNode.removeChild(loadingScreen);\n        }\n        this._lastFrameTime = window.performance.now();\n        context._setup();\n        context._draw();\n      }\n    };\n\n    this._decrementPreload = function() {\n      const context = this._isGlobal ? window : this;\n      if (typeof context.preload === 'function') {\n        context._setProperty('_preloadCount', context._preloadCount - 1);\n        context._runIfPreloadsAreDone();\n      }\n    };\n\n    this._wrapPreload = function(obj, fnName) {\n      return (...args) => {\n        //increment counter\n        this._incrementPreload();\n        //call original function\n        return this._registeredPreloadMethods[fnName].apply(obj, args);\n      };\n    };\n\n    this._incrementPreload = function() {\n      const context = this._isGlobal ? window : this;\n      context._setProperty('_preloadCount', context._preloadCount + 1);\n    };\n\n    this._setup = () => {\n      // Always create a default canvas.\n      // Later on if the user calls createCanvas, this default one\n      // will be replaced\n      this.createCanvas(\n        this._defaultCanvasSize.width,\n        this._defaultCanvasSize.height,\n        'p2d'\n      );\n\n      // return preload functions to their normal vals if switched by preload\n      const context = this._isGlobal ? window : this;\n      if (typeof context.preload === 'function') {\n        for (const f in this._preloadMethods) {\n          context[f] = this._preloadMethods[f][f];\n          if (context[f] && this) {\n            context[f] = context[f].bind(this);\n          }\n        }\n      }\n\n      // Record the time when sketch starts\n      this._millisStart = window.performance.now();\n\n      // Short-circuit on this, in case someone used the library in \"global\"\n      // mode earlier\n      if (typeof context.setup === 'function') {\n        context.setup();\n      }\n\n      // unhide any hidden canvases that were created\n      const canvases = document.getElementsByTagName('canvas');\n\n      for (const k of canvases) {\n        if (k.dataset.hidden === 'true') {\n          k.style.visibility = '';\n          delete k.dataset.hidden;\n        }\n      }\n\n      this._lastFrameTime = window.performance.now();\n      this._setupDone = true;\n    };\n\n    this._draw = () => {\n      const now = window.performance.now();\n      const time_since_last = now - this._lastFrameTime;\n      const target_time_between_frames = 1000 / this._targetFrameRate;\n\n      // only draw if we really need to; don't overextend the browser.\n      // draw if we're within 5ms of when our next frame should paint\n      // (this will prevent us from giving up opportunities to draw\n      // again when it's really about time for us to do so). fixes an\n      // issue where the frameRate is too low if our refresh loop isn't\n      // in sync with the browser. note that we have to draw once even\n      // if looping is off, so we bypass the time delay if that\n      // is the case.\n      const epsilon = 5;\n      if (\n        !this._loop ||\n        time_since_last >= target_time_between_frames - epsilon\n      ) {\n        //mandatory update values(matrixs and stack)\n        this.redraw();\n        this._frameRate = 1000.0 / (now - this._lastFrameTime);\n        this.deltaTime = now - this._lastFrameTime;\n        this._setProperty('deltaTime', this.deltaTime);\n        this._lastFrameTime = now;\n\n        // If the user is actually using mouse module, then update\n        // coordinates, otherwise skip. We can test this by simply\n        // checking if any of the mouse functions are available or not.\n        // NOTE : This reflects only in complete build or modular build.\n        if (typeof this._updateMouseCoords !== 'undefined') {\n          this._updateMouseCoords();\n\n          //reset delta values so they reset even if there is no mouse event to set them\n          // for example if the mouse is outside the screen\n          this._setProperty('movedX', 0);\n          this._setProperty('movedY', 0);\n        }\n      }\n\n      // get notified the next time the browser gives us\n      // an opportunity to draw.\n      if (this._loop) {\n        this._requestAnimId = window.requestAnimationFrame(this._draw);\n      }\n    };\n\n    this._setProperty = (prop, value) => {\n      this[prop] = value;\n      if (this._isGlobal) {\n        window[prop] = value;\n      }\n    };\n\n    /**\n     * Removes the entire p5 sketch. This will remove the canvas and any\n     * elements created by p5.js. It will also stop the draw loop and unbind\n     * any properties or methods from the window global scope. It will\n     * leave a variable p5 in case you wanted to create a new p5 sketch.\n     * If you like, you can set p5 = null to erase it. While all functions and\n     * variables and objects created by the p5 library will be removed, any\n     * other global variables created by your code will remain.\n     *\n     * @method remove\n     * @example\n     * <div class='norender'><code>\n     * function draw() {\n     *   ellipse(50, 50, 10, 10);\n     * }\n     *\n     * function mousePressed() {\n     *   remove(); // remove whole sketch on mouse press\n     * }\n     * </code></div>\n     *\n     * @alt\n     * nothing displayed\n     *\n     */\n    this.remove = () => {\n      const loadingScreen = document.getElementById(this._loadingScreenId);\n      if (loadingScreen) {\n        loadingScreen.parentNode.removeChild(loadingScreen);\n        // Add 1 to preload counter to prevent the sketch ever executing setup()\n        this._incrementPreload();\n      }\n      if (this._curElement) {\n        // stop draw\n        this._loop = false;\n        if (this._requestAnimId) {\n          window.cancelAnimationFrame(this._requestAnimId);\n        }\n\n        // unregister events sketch-wide\n        for (const ev in this._events) {\n          window.removeEventListener(ev, this._events[ev]);\n        }\n\n        // remove DOM elements created by p5, and listeners\n        for (const e of this._elements) {\n          if (e.elt && e.elt.parentNode) {\n            e.elt.parentNode.removeChild(e.elt);\n          }\n          for (const elt_ev in e._events) {\n            e.elt.removeEventListener(elt_ev, e._events[elt_ev]);\n          }\n        }\n\n        // call any registered remove functions\n        const self = this;\n        this._registeredMethods.remove.forEach(f => {\n          if (typeof f !== 'undefined') {\n            f.call(self);\n          }\n        });\n      }\n      // remove window bound properties and methods\n      if (this._isGlobal) {\n        for (const p in p5.prototype) {\n          try {\n            delete window[p];\n          } catch (x) {\n            window[p] = undefined;\n          }\n        }\n        for (const p2 in this) {\n          if (this.hasOwnProperty(p2)) {\n            try {\n              delete window[p2];\n            } catch (x) {\n              window[p2] = undefined;\n            }\n          }\n        }\n        p5.instance = null;\n      }\n    };\n\n    // call any registered init functions\n    this._registeredMethods.init.forEach(function(f) {\n      if (typeof f !== 'undefined') {\n        f.call(this);\n      }\n    }, this);\n    // Set up promise preloads\n    this._setupPromisePreloads();\n\n    const friendlyBindGlobal = this._createFriendlyGlobalFunctionBinder();\n\n    // If the user has created a global setup or draw function,\n    // assume \"global\" mode and make everything global (i.e. on the window)\n    if (!sketch) {\n      this._isGlobal = true;\n      p5.instance = this;\n      // Loop through methods on the prototype and attach them to the window\n      for (const p in p5.prototype) {\n        if (typeof p5.prototype[p] === 'function') {\n          const ev = p.substring(2);\n          if (!this._events.hasOwnProperty(ev)) {\n            if (Math.hasOwnProperty(p) && Math[p] === p5.prototype[p]) {\n              // Multiple p5 methods are just native Math functions. These can be\n              // called without any binding.\n              friendlyBindGlobal(p, p5.prototype[p]);\n            } else {\n              friendlyBindGlobal(p, p5.prototype[p].bind(this));\n            }\n          }\n        } else {\n          friendlyBindGlobal(p, p5.prototype[p]);\n        }\n      }\n      // Attach its properties to the window\n      for (const p2 in this) {\n        if (this.hasOwnProperty(p2)) {\n          friendlyBindGlobal(p2, this[p2]);\n        }\n      }\n    } else {\n      // Else, the user has passed in a sketch closure that may set\n      // user-provided 'setup', 'draw', etc. properties on this instance of p5\n      sketch(this);\n    }\n\n    // Bind events to window (not using container div bc key events don't work)\n\n    for (const e in this._events) {\n      const f = this[`_on${e}`];\n      if (f) {\n        const m = f.bind(this);\n        window.addEventListener(e, m, { passive: false });\n        this._events[e] = m;\n      }\n    }\n\n    const focusHandler = () => {\n      this._setProperty('focused', true);\n    };\n    const blurHandler = () => {\n      this._setProperty('focused', false);\n    };\n    window.addEventListener('focus', focusHandler);\n    window.addEventListener('blur', blurHandler);\n    this.registerMethod('remove', () => {\n      window.removeEventListener('focus', focusHandler);\n      window.removeEventListener('blur', blurHandler);\n    });\n\n    if (document.readyState === 'complete') {\n      this._start();\n    } else {\n      window.addEventListener('load', this._start.bind(this), false);\n    }\n  }\n\n  _initializeInstanceVariables() {\n    this._styles = [];\n\n    this._bezierDetail = 20;\n    this._curveDetail = 20;\n\n    this._colorMode = constants.RGB;\n    this._colorMaxes = {\n      rgb: [255, 255, 255, 255],\n      hsb: [360, 100, 100, 1],\n      hsl: [360, 100, 100, 1]\n    };\n\n    this._downKeys = {}; //Holds the key codes of currently pressed keys\n  }\n\n  registerPreloadMethod(fnString, obj) {\n    // obj = obj || p5.prototype;\n    if (!p5.prototype._preloadMethods.hasOwnProperty(fnString)) {\n      p5.prototype._preloadMethods[fnString] = obj;\n    }\n  }\n\n  registerMethod(name, m) {\n    const target = this || p5.prototype;\n    if (!target._registeredMethods.hasOwnProperty(name)) {\n      target._registeredMethods[name] = [];\n    }\n    target._registeredMethods[name].push(m);\n  }\n\n  // create a function which provides a standardized process for binding\n  // globals; this is implemented as a factory primarily so that there's a\n  // way to redefine what \"global\" means for the binding function so it\n  // can be used in scenarios like unit testing where the window object\n  // might not exist\n  _createFriendlyGlobalFunctionBinder(options = {}) {\n    const globalObject = options.globalObject || window;\n    const log = options.log || console.log.bind(console);\n    const propsToForciblyOverwrite = {\n      // p5.print actually always overwrites an existing global function,\n      // albeit one that is very unlikely to be used:\n      //\n      //   https://developer.mozilla.org/en-US/docs/Web/API/Window/print\n      print: true\n    };\n\n    return (prop, value) => {\n      if (\n        !p5.disableFriendlyErrors &&\n        typeof IS_MINIFIED === 'undefined' &&\n        typeof value === 'function' &&\n        !(prop in p5.prototype._preloadMethods)\n      ) {\n        try {\n          // Because p5 has so many common function names, it's likely\n          // that users may accidentally overwrite global p5 functions with\n          // their own variables. Let's allow this but log a warning to\n          // help users who may be doing this unintentionally.\n          //\n          // For more information, see:\n          //\n          //   https://github.com/processing/p5.js/issues/1317\n\n          if (prop in globalObject && !(prop in propsToForciblyOverwrite)) {\n            throw new Error(`global \"${prop}\" already exists`);\n          }\n\n          // It's possible that this might throw an error because there\n          // are a lot of edge-cases in which `Object.defineProperty` might\n          // not succeed; since this functionality is only intended to\n          // help beginners anyways, we'll just catch such an exception\n          // if it occurs, and fall back to legacy behavior.\n          Object.defineProperty(globalObject, prop, {\n            configurable: true,\n            enumerable: true,\n            get() {\n              return value;\n            },\n            set(newValue) {\n              Object.defineProperty(globalObject, prop, {\n                configurable: true,\n                enumerable: true,\n                value: newValue,\n                writable: true\n              });\n              log(\n                `You just changed the value of \"${prop}\", which was a p5 function. This could cause problems later if you're not careful.`\n              );\n            }\n          });\n        } catch (e) {\n          log(\n            `p5 had problems creating the global function \"${prop}\", possibly because your code is already using that name as a variable. You may want to rename your variable to something else.`\n          );\n          globalObject[prop] = value;\n        }\n      } else {\n        globalObject[prop] = value;\n      }\n    };\n  }\n}\n\n// This is a pointer to our global mode p5 instance, if we're in\n// global mode.\np5.instance = null;\n\n/**\n * Allows for the friendly error system (FES) to be turned off when creating a sketch,\n * which can give a significant boost to performance when needed.\n * See <a href='https://github.com/processing/p5.js/wiki/Optimizing-p5.js-Code-for-Performance#disable-the-friendly-error-system-fes'>\n * disabling the friendly error system</a>.\n *\n * @property {Boolean} disableFriendlyErrors\n * @example\n * <div class=\"norender notest\"><code>\n * p5.disableFriendlyErrors = true;\n *\n * function setup() {\n *   createCanvas(100, 50);\n * }\n * </code></div>\n */\np5.disableFriendlyErrors = false;\n\n// attach constants to p5 prototype\nfor (const k in constants) {\n  p5.prototype[k] = constants[k];\n}\n\n// functions that cause preload to wait\n// more can be added by using registerPreloadMethod(func)\np5.prototype._preloadMethods = {\n  loadJSON: p5.prototype,\n  loadImage: p5.prototype,\n  loadStrings: p5.prototype,\n  loadXML: p5.prototype,\n  loadBytes: p5.prototype,\n  loadTable: p5.prototype,\n  loadFont: p5.prototype,\n  loadModel: p5.prototype,\n  loadShader: p5.prototype\n};\n\np5.prototype._registeredMethods = { init: [], pre: [], post: [], remove: [] };\n\np5.prototype._registeredPreloadMethods = {};\n\nexport default p5;\n","/**\n * @module Environment\n * @submodule Environment\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from './main';\nimport * as C from './constants';\n\nconst standardCursors = [C.ARROW, C.CROSS, C.HAND, C.MOVE, C.TEXT, C.WAIT];\n\np5.prototype._frameRate = 0;\np5.prototype._lastFrameTime = window.performance.now();\np5.prototype._targetFrameRate = 60;\n\nconst _windowPrint = window.print;\n\n/**\n * The <a href=\"#/p5/print\">print()</a> function writes to the console area of\n * your browser. This function is often helpful for looking at the data a program\n * is producing. This function creates a new line of text for each call to\n * the function. Individual elements can be separated with quotes (\"\") and joined\n * with the addition operator (+).\n *\n * Note that calling print() without any arguments invokes the window.print()\n * function which opens the browser's print dialog. To print a blank line\n * to console you can write print('\\n').\n *\n * @method print\n * @param {Any} contents any combination of Number, String, Object, Boolean,\n *                       Array to print\n * @example\n * <div><code class='norender'>\n * let x = 10;\n * print('The value of x is ' + x);\n * // prints \"The value of x is 10\"\n * </code></div>\n *\n * @alt\n * default grey canvas\n */\np5.prototype.print = function(...args) {\n  if (!args.length) {\n    _windowPrint();\n  } else {\n    console.log(...args);\n  }\n};\n\n/**\n * The system variable <a href=\"#/p5/frameCount\">frameCount</a> contains the\n * number of frames that have been displayed since the program started. Inside\n * <a href=\"#/p5/setup\">setup()</a> the value is 0, after the first iteration\n * of draw it is 1, etc.\n *\n * @property {Integer} frameCount\n * @readOnly\n * @example\n * <div><code>\n * function setup() {\n *   frameRate(30);\n *   textSize(30);\n *   textAlign(CENTER);\n * }\n *\n * function draw() {\n *   background(200);\n *   text(frameCount, width / 2, height / 2);\n * }\n * </code></div>\n *\n * @alt\n * numbers rapidly counting upward with frame count set to 30.\n *\n */\np5.prototype.frameCount = 0;\n\n/**\n * The system variable <a href=\"#/p5/deltaTime\">deltaTime</a> contains the time\n * difference between the beginning of the previous frame and the beginning\n * of the current frame in milliseconds.\n *\n * This variable is useful for creating time sensitive animation or physics\n * calculation that should stay constant regardless of frame rate.\n *\n * @property {Integer} deltaTime\n * @readOnly\n * @example\n * <div><code>\n * let rectX = 0;\n * let fr = 30; //starting FPS\n * let clr;\n *\n * function setup() {\n *   background(200);\n *   frameRate(fr); // Attempt to refresh at starting FPS\n *   clr = color(255, 0, 0);\n * }\n *\n * function draw() {\n *   background(200);\n *   rectX = rectX + 1 * (deltaTime / 50); // Move Rectangle in relation to deltaTime\n *\n *   if (rectX >= width) {\n *     // If you go off screen.\n *     if (fr === 30) {\n *       clr = color(0, 0, 255);\n *       fr = 10;\n *       frameRate(fr); // make frameRate 10 FPS\n *     } else {\n *       clr = color(255, 0, 0);\n *       fr = 30;\n *       frameRate(fr); // make frameRate 30 FPS\n *     }\n *     rectX = 0;\n *   }\n *   fill(clr);\n *   rect(rectX, 40, 20, 20);\n * }\n * </code></div>\n *\n * @alt\n * red rect moves left to right, followed by blue rect moving at the same speed\n * with a lower frame rate. Loops.\n *\n */\np5.prototype.deltaTime = 0;\n\n/**\n * Confirms if the window a p5.js program is in is \"focused,\" meaning that\n * the sketch will accept mouse or keyboard input. This variable is\n * \"true\" if the window is focused and \"false\" if not.\n *\n * @property {Boolean} focused\n * @readOnly\n * @example\n * <div><code>\n * // To demonstrate, put two windows side by side.\n * // Click on the window that the p5 sketch isn't in!\n * function draw() {\n *   background(200);\n *   noStroke();\n *   fill(0, 200, 0);\n *   ellipse(25, 25, 50, 50);\n *\n *   if (!focused) {\n    // or \"if (focused === false)\"\n *     stroke(200, 0, 0);\n *     line(0, 0, 100, 100);\n *     line(100, 0, 0, 100);\n *   }\n * }\n * </code></div>\n *\n * @alt\n * green 50x50 ellipse at top left. Red X covers canvas when page focus changes\n *\n */\np5.prototype.focused = document.hasFocus();\n\n/**\n * Sets the cursor to a predefined symbol or an image, or makes it visible\n * if already hidden. If you are trying to set an image as the cursor, the\n * recommended size is 16x16 or 32x32 pixels. The values for parameters x and y\n * must be less than the dimensions of the image.\n *\n * @method cursor\n * @param {String|Constant} type Built-In: either ARROW, CROSS, HAND, MOVE, TEXT and WAIT\n *                               Native CSS properties: 'grab', 'progress', 'cell' etc.\n *                               External: path for cursor's images\n *                               (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\n *                               For more information on Native CSS cursors and url visit:\n *                               https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n * @param {Number}          [x]  the horizontal active spot of the cursor (must be less than 32)\n * @param {Number}          [y]  the vertical active spot of the cursor (must be less than 32)\n * @example\n * <div><code>\n * // Move the mouse across the quadrants\n * // to see the cursor change\n * function draw() {\n *   line(width / 2, 0, width / 2, height);\n *   line(0, height / 2, width, height / 2);\n *   if (mouseX < 50 && mouseY < 50) {\n *     cursor(CROSS);\n *   } else if (mouseX > 50 && mouseY < 50) {\n *     cursor('progress');\n *   } else if (mouseX > 50 && mouseY > 50) {\n *     cursor('https://s3.amazonaws.com/mupublicdata/cursor.cur');\n *   } else {\n *     cursor('grab');\n *   }\n * }\n * </code></div>\n *\n * @alt\n * canvas is divided into four quadrants. cursor on first is a cross, second is a progress,\n * third is a custom cursor using path to the cursor and fourth is a grab.\n *\n */\np5.prototype.cursor = function(type, x, y) {\n  let cursor = 'auto';\n  const canvas = this._curElement.elt;\n  if (standardCursors.includes(type)) {\n    // Standard css cursor\n    cursor = type;\n  } else if (typeof type === 'string') {\n    let coords = '';\n    if (x && y && (typeof x === 'number' && typeof y === 'number')) {\n      // Note that x and y values must be unit-less positive integers < 32\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n      coords = `${x} ${y}`;\n    }\n    if (\n      type.substring(0, 7) === 'http://' ||\n      type.substring(0, 8) === 'https://'\n    ) {\n      // Image (absolute url)\n      cursor = `url(${type}) ${coords}, auto`;\n    } else if (/\\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(type)) {\n      // Image file (relative path) - Separated for performance reasons\n      cursor = `url(${type}) ${coords}, auto`;\n    } else {\n      // Any valid string for the css cursor property\n      cursor = type;\n    }\n  }\n  canvas.style.cursor = cursor;\n};\n\n/**\n * Specifies the number of frames to be displayed every second. For example,\n * the function call frameRate(30) will attempt to refresh 30 times a second.\n * If the processor is not fast enough to maintain the specified rate, the\n * frame rate will not be achieved. Setting the frame rate within \n * <a href=\"#/p5/setup\">setup()</a> is recommended. The default frame rate is\n * based on the frame rate of the display (here also called \"refresh rate\"), \n * which is set to 60 frames per second on most computers. A frame rate of 24\n * frames per second (usual for movies) or above will be enough for smooth \n * animations. This is the same as setFrameRate(val).\n * \n * Calling <a href=\"#/p5/frameRate\">frameRate()</a> with no arguments returns\n * the current framerate. The draw function must run at least once before it will\n * return a value. This is the same as <a href=\"#/p5/getFrameRate\">getFrameRate()</a>.\n *\n * Calling <a href=\"#/p5/frameRate\">frameRate()</a> with arguments that are not\n * of the type numbers or are non positive also returns current framerate.\n *\n * @method frameRate\n * @param  {Number} fps number of frames to be displayed every second\n * @chainable\n *\n * @example\n *\n * <div><code>\n * let rectX = 0;\n * let fr = 30; //starting FPS\n * let clr;\n *\n * function setup() {\n *   background(200);\n *   frameRate(fr); // Attempt to refresh at starting FPS\n *   clr = color(255, 0, 0);\n * }\n *\n * function draw() {\n *   background(200);\n *   rectX = rectX += 1; // Move Rectangle\n *\n *   if (rectX >= width) {\n    // If you go off screen.\n *     if (fr === 30) {\n *       clr = color(0, 0, 255);\n *       fr = 10;\n *       frameRate(fr); // make frameRate 10 FPS\n *     } else {\n *       clr = color(255, 0, 0);\n *       fr = 30;\n *       frameRate(fr); // make frameRate 30 FPS\n *     }\n *     rectX = 0;\n *   }\n *   fill(clr);\n *   rect(rectX, 40, 20, 20);\n * }\n * </code></div>\n *\n * @alt\n * blue rect moves left to right, followed by red rect moving faster. Loops.\n *\n */\n/**\n * @method frameRate\n * @return {Number}       current frameRate\n */\np5.prototype.frameRate = function(fps) {\n  p5._validateParameters('frameRate', arguments);\n  if (typeof fps !== 'number' || fps < 0) {\n    return this._frameRate;\n  } else {\n    this._setProperty('_targetFrameRate', fps);\n    if (fps === 0) {\n      this._setProperty('_frameRate', fps);\n    }\n    return this;\n  }\n};\n\n/**\n * Returns the current framerate.\n *\n * @private\n * @return {Number} current frameRate\n */\np5.prototype.getFrameRate = function() {\n  return this.frameRate();\n};\n\n/**\n * Specifies the number of frames to be displayed every second. For example,\n * the function call frameRate(30) will attempt to refresh 30 times a second.\n * If the processor is not fast enough to maintain the specified rate, the\n * frame rate will not be achieved. Setting the frame rate within <a href=\"#/p5/setup\">setup()</a> is\n * recommended. The default rate is 60 frames per second.\n *\n * Calling <a href=\"#/p5/frameRate\">frameRate()</a> with no arguments returns the current framerate.\n *\n * @private\n * @param {Number} [fps] number of frames to be displayed every second\n */\np5.prototype.setFrameRate = function(fps) {\n  return this.frameRate(fps);\n};\n\n/**\n * Hides the cursor from view.\n *\n * @method noCursor\n * @example\n * <div><code>\n * function setup() {\n *   noCursor();\n * }\n *\n * function draw() {\n *   background(200);\n *   ellipse(mouseX, mouseY, 10, 10);\n * }\n * </code></div>\n *\n *\n * @alt\n * cursor becomes 10x 10 white ellipse the moves with mouse x and y.\n *\n */\np5.prototype.noCursor = function() {\n  this._curElement.elt.style.cursor = 'none';\n};\n\n/**\n * System variable that stores the width of the screen display according to The\n * default <a href=\"#/p5/pixelDensity\">pixelDensity</a>. This is used to run a\n * full-screen program on any display size. To return actual screen size,\n * multiply this by pixelDensity.\n *\n * @property {Number} displayWidth\n * @readOnly\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(displayWidth, displayHeight);\n * </code></div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.displayWidth = screen.width;\n\n/**\n * System variable that stores the height of the screen display according to The\n * default <a href=\"#/p5/pixelDensity\">pixelDensity</a>. This is used to run a\n * full-screen program on any display size. To return actual screen size,\n * multiply this by pixelDensity.\n *\n * @property {Number} displayHeight\n * @readOnly\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(displayWidth, displayHeight);\n * </code></div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.displayHeight = screen.height;\n\n/**\n * System variable that stores the width of the inner window, it maps to\n * window.innerWidth.\n *\n * @property {Number} windowWidth\n * @readOnly\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(windowWidth, windowHeight);\n * </code></div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.windowWidth = getWindowWidth();\n/**\n * System variable that stores the height of the inner window, it maps to\n * window.innerHeight.\n *\n * @property {Number} windowHeight\n * @readOnly\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(windowWidth, windowHeight);\n * </code></div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.windowHeight = getWindowHeight();\n\n/**\n * The <a href=\"#/p5/windowResized\">windowResized()</a> function is called once\n * every time the browser window is resized. This is a good place to resize the\n * canvas or do any other adjustments to accommodate the new window size.\n *\n * @method windowResized\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   createCanvas(windowWidth, windowHeight);\n * }\n *\n * function draw() {\n *   background(0, 100, 200);\n * }\n *\n * function windowResized() {\n *   resizeCanvas(windowWidth, windowHeight);\n * }\n * </code></div>\n * @alt\n * This example does not render anything.\n */\np5.prototype._onresize = function(e) {\n  this._setProperty('windowWidth', getWindowWidth());\n  this._setProperty('windowHeight', getWindowHeight());\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  if (typeof context.windowResized === 'function') {\n    executeDefault = context.windowResized(e);\n    if (executeDefault !== undefined && !executeDefault) {\n      e.preventDefault();\n    }\n  }\n};\n\nfunction getWindowWidth() {\n  return (\n    window.innerWidth ||\n    (document.documentElement && document.documentElement.clientWidth) ||\n    (document.body && document.body.clientWidth) ||\n    0\n  );\n}\n\nfunction getWindowHeight() {\n  return (\n    window.innerHeight ||\n    (document.documentElement && document.documentElement.clientHeight) ||\n    (document.body && document.body.clientHeight) ||\n    0\n  );\n}\n\n/**\n * System variable that stores the width of the drawing canvas. This value\n * is set by the first parameter of the <a href=\"#/p5/createCanvas\">createCanvas()</a> function.\n * For example, the function call createCanvas(320, 240) sets the width\n * variable to the value 320. The value of width defaults to 100 if\n * <a href=\"#/p5/createCanvas\">createCanvas()</a> is not used in a program.\n *\n * @property {Number} width\n * @readOnly\n */\np5.prototype.width = 0;\n\n/**\n * System variable that stores the height of the drawing canvas. This value\n * is set by the second parameter of the <a href=\"#/p5/createCanvas\">createCanvas()</a> function. For\n * example, the function call createCanvas(320, 240) sets the height\n * variable to the value 240. The value of height defaults to 100 if\n * <a href=\"#/p5/createCanvas\">createCanvas()</a> is not used in a program.\n *\n * @property {Number} height\n * @readOnly\n */\np5.prototype.height = 0;\n\n/**\n * If argument is given, sets the sketch to fullscreen or not based on the\n * value of the argument. If no argument is given, returns the current\n * fullscreen state. Note that due to browser restrictions this can only\n * be called on user input, for example, on mouse press like the example\n * below.\n *\n * @method fullscreen\n * @param  {Boolean} [val] whether the sketch should be in fullscreen mode\n * or not\n * @return {Boolean} current fullscreen state\n * @example\n * <div>\n * <code>\n * // Clicking in the box toggles fullscreen on and off.\n * function setup() {\n *   background(200);\n * }\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n *     let fs = fullscreen();\n *     fullscreen(!fs);\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.fullscreen = function(val) {\n  p5._validateParameters('fullscreen', arguments);\n  // no arguments, return fullscreen or not\n  if (typeof val === 'undefined') {\n    return (\n      document.fullscreenElement ||\n      document.webkitFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.msFullscreenElement\n    );\n  } else {\n    // otherwise set to fullscreen or not\n    if (val) {\n      launchFullscreen(document.documentElement);\n    } else {\n      exitFullscreen();\n    }\n  }\n};\n\n/**\n * Sets the pixel scaling for high pixel density displays. By default\n * pixel density is set to match display density, call pixelDensity(1)\n * to turn this off. Calling <a href=\"#/p5/pixelDensity\">pixelDensity()</a> with no arguments returns\n * the current pixel density of the sketch.\n *\n * @method pixelDensity\n * @param  {Number} val whether or how much the sketch should scale\n * @chainable\n * @example\n * <div>\n * <code>\n * function setup() {\n *   pixelDensity(1);\n *   createCanvas(100, 100);\n *   background(200);\n *   ellipse(width / 2, height / 2, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   pixelDensity(3.0);\n *   createCanvas(100, 100);\n *   background(200);\n *   ellipse(width / 2, height / 2, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * fuzzy 50x50 white ellipse with black outline in center of canvas.\n * sharp 50x50 white ellipse with black outline in center of canvas.\n */\n/**\n * @method pixelDensity\n * @returns {Number} current pixel density of the sketch\n */\np5.prototype.pixelDensity = function(val) {\n  p5._validateParameters('pixelDensity', arguments);\n  let returnValue;\n  if (typeof val === 'number') {\n    if (val !== this._pixelDensity) {\n      this._pixelDensity = val;\n    }\n    returnValue = this;\n    this.resizeCanvas(this.width, this.height, true); // as a side effect, it will clear the canvas\n  } else {\n    returnValue = this._pixelDensity;\n  }\n  return returnValue;\n};\n\n/**\n * Returns the pixel density of the current display the sketch is running on.\n *\n * @method displayDensity\n * @returns {Number} current pixel density of the display\n * @example\n * <div>\n * <code>\n * function setup() {\n *   let density = displayDensity();\n *   pixelDensity(density);\n *   createCanvas(100, 100);\n *   background(200);\n *   ellipse(width / 2, height / 2, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 white ellipse with black outline in center of canvas.\n */\np5.prototype.displayDensity = () => window.devicePixelRatio;\n\nfunction launchFullscreen(element) {\n  const enabled =\n    document.fullscreenEnabled ||\n    document.webkitFullscreenEnabled ||\n    document.mozFullScreenEnabled ||\n    document.msFullscreenEnabled;\n  if (!enabled) {\n    throw new Error('Fullscreen not enabled in this browser.');\n  }\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  }\n}\n\nfunction exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n\n/**\n * Gets the current URL.\n * @method getURL\n * @return {String} url\n * @example\n * <div>\n * <code>\n * let url;\n * let x = 100;\n *\n * function setup() {\n *   fill(0);\n *   noStroke();\n *   url = getURL();\n * }\n *\n * function draw() {\n *   background(200);\n *   text(url, x, height / 2);\n *   x--;\n * }\n * </code>\n * </div>\n *\n * @alt\n * current url (http://p5js.org/reference/#/p5/getURL) moves right to left.\n *\n */\np5.prototype.getURL = () => location.href;\n/**\n * Gets the current URL path as an array.\n * @method getURLPath\n * @return {String[]} path components\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   let urlPath = getURLPath();\n *   for (let i = 0; i < urlPath.length; i++) {\n *     text(urlPath[i], 10, i * 20 + 20);\n *   }\n * }\n * </code></div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.getURLPath = () =>\n  location.pathname.split('/').filter(v => v !== '');\n/**\n * Gets the current URL params as an Object.\n * @method getURLParams\n * @return {Object} URL params\n * @example\n * <div class='norender notest'>\n * <code>\n * // Example: http://p5js.org?year=2014&month=May&day=15\n *\n * function setup() {\n *   let params = getURLParams();\n *   text(params.day, 10, 20);\n *   text(params.month, 10, 40);\n *   text(params.year, 10, 60);\n * }\n * </code>\n * </div>\n *\n * @alt\n * This example does not render anything.\n *\n */\np5.prototype.getURLParams = function() {\n  const re = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim;\n  let m;\n  const v = {};\n  while ((m = re.exec(location.search)) != null) {\n    if (m.index === re.lastIndex) {\n      re.lastIndex++;\n    }\n    v[m[1]] = m[2];\n  }\n  return v;\n};\n\nexport default p5;\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _toArray from '@babel/runtime/helpers/esm/toArray';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\n\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    var _console;\n\n    /* eslint no-console: 0 */\n    if (console && console[type]) (_console = console)[type].apply(_console, _toConsumableArray(args));\n  }\n};\n\nvar Logger =\n/*#__PURE__*/\nfunction () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Logger);\n\n    this.init(concreteLogger, options);\n  }\n\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }, this.options));\n    }\n  }]);\n\n  return Logger;\n}();\n\nvar baseLogger = new Logger();\n\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n// http://lea.verou.me/2016/12/resolve-promises-externally-with-this-one-weird-trick/\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  /* eslint prefer-template: 0 */\n\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    object = object[key];\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\n\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath.obj,\n      k = _getLastOfPath.k;\n\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath2.obj,\n      k = _getLastOfPath2.k;\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n      obj = _getLastOfPath3.obj,\n      k = _getLastOfPath3.k;\n\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n\n  if (value !== undefined) {\n    return value;\n  } // Fallback to default values\n\n\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  /* eslint no-restricted-syntax: 0 */\n  for (var prop in source) {\n    if (prop in target) {\n      // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch\n      if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n        if (overwrite) target[prop] = source[prop];\n      } else {\n        deepExtend(target[prop], source[prop], overwrite);\n      }\n    } else {\n      target[prop] = source[prop];\n    }\n  }\n\n  return target;\n}\nfunction regexEscape(str) {\n  /* eslint no-useless-escape: 0 */\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n/* eslint-disable */\n\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\n/* eslint-enable */\n\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\n\nvar ResourceStore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n\n  function ResourceStore(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n\n    _classCallCheck(this, ResourceStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStore).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    _this.data = data || {};\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    return _this;\n  }\n\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n\n      return getPath(this.data, path);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n\n      /* eslint no-restricted-syntax: 0 */\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread({}, pack, resources);\n      }\n\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS; // COMPATIBILITY: remove extend in v2.1.0\n\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread({}, {}, this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nvar checkedLoadedFor = {};\n\nvar Translator =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n\n  function Translator(services) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Translator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Translator).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS;\n\n      if (nsSeparator && key.indexOf(nsSeparator) > -1) {\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options) {\n      var _this2 = this;\n\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        /* eslint prefer-rest-params: 0 */\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n\n      if (!options) options = {}; // non valid keys handling\n\n      if (keys === undefined || keys === null\n      /* || keys === ''*/\n      ) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)]; // separators\n\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator; // get namespace(s)\n\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n          key = _this$extractFromKey.key,\n          namespaces = _this$extractFromKey.namespaces;\n\n      var namespace = namespaces[namespaces.length - 1]; // return key on CIMode\n\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          return namespace + nsSeparator + key;\n        }\n\n        return key;\n      } // resolve from store\n\n\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays; // object\n\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, options) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n        } // if we got a separator we loop over children - else we just return object as is\n        // as having it set to false means no hierarchy so no lookup for nested values\n\n\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy$$1 = resTypeIsArray ? [] : {}; // apply child translation on a copy\n\n          /* eslint no-restricted-syntax: 0 */\n\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy$$1[m] = this.translate(deepKey, _objectSpread({}, options, {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy$$1[m] === deepKey) copy$$1[m] = res[m]; // if nothing found use orginal value as fallback\n            }\n          }\n\n          res = copy$$1;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        // array special treatment\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options);\n      } else {\n        // string, empty or null\n        var usedDefault = false;\n        var usedKey = false; // fallback value\n\n        if (!this.isValidLookup(res) && options.defaultValue !== undefined) {\n          usedDefault = true;\n\n          if (options.count !== undefined) {\n            var suffix = this.pluralResolver.getSuffix(lng, options.count);\n            res = options[\"defaultValue\".concat(suffix)];\n          }\n\n          if (!res) res = options.defaultValue;\n        }\n\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        } // save missing\n\n\n        var updateMissing = options.defaultValue && options.defaultValue !== res && this.options.updateMissing;\n\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? options.defaultValue : res);\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n\n          var send = function send(l, k) {\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? options.defaultValue : res, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? options.defaultValue : res, updateMissing, options);\n            }\n\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n\n          if (this.options.saveMissing) {\n            var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (l) {\n                var plurals = _this2.pluralResolver.getPluralFormsOfKey(l, key);\n\n                plurals.forEach(function (p) {\n                  return send([l], p);\n                });\n              });\n            } else {\n              send(lngs, key);\n            }\n          }\n        } // extend\n\n\n        res = this.extendTranslation(res, keys, options, resolved); // append namespace if still key\n\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key); // parseMissingKeyHandler\n\n        if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);\n      } // return\n\n\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved) {\n      var _this3 = this;\n\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        // i18next.parsing\n        if (options.interpolation) this.interpolator.init(_objectSpread({}, options, {\n          interpolation: _objectSpread({}, this.options.interpolation, options.interpolation)\n        })); // interpolate\n\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread({}, this.options.interpolation.defaultVariables, data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options); // nesting\n\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          return _this3.translate.apply(_this3, arguments);\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      } // post process\n\n\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey; // plain key\n\n      var exactUsedKey; // key with context / plural\n\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys]; // forEach possible key\n\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n\n        var extracted = _this4.extractFromKey(k, options);\n\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for namespace \\\"\").concat(usedNS, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace was not yet loaded\"), 'This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKey = key;\n            var finalKeys = [finalKey];\n\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count); // fallback for plural if context not found\n\n              if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix); // get key for context if needed\n\n              if (needsContextHandling) finalKeys.push(finalKey += \"\".concat(_this4.options.contextSeparator).concat(options.context)); // get key for plural if needed\n\n              if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);\n            } // iterate over finalKeys starting with most specific pluralkey (-> contextkey only) -> singularkey only\n\n\n            var possibleKey;\n            /* eslint no-cond-assign: 0 */\n\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }]);\n\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil =\n/*#__PURE__*/\nfunction () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || []; // asume we have an object defining fallbacks\n\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this.isWhitelisted(c)) {\n          codes.push(c);\n        } else {\n          _this.logger.warn(\"rejecting non-whitelisted language code: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\n/* eslint-disable */\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'id', 'ja', 'jbo', 'ka', 'kk', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n === 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n === 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n === 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n === 1 ? 0 : n === 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\n/* eslint-enable */\n\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nvar PluralResolver =\n/*#__PURE__*/\nfunction () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PluralResolver);\n\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.rules = createRules();\n  }\n\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var rule = this.getRule(code);\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      var _this = this;\n\n      var ret = [];\n      var rule = this.getRule(code);\n      if (!rule) return ret;\n      rule.numbers.forEach(function (n) {\n        var suffix = _this.getSuffix(code, n);\n\n        ret.push(\"\".concat(key).concat(suffix));\n      });\n      return ret;\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var _this2 = this;\n\n      var rule = this.getRule(code);\n\n      if (rule) {\n        // if (rule.numbers.length === 1) return ''; // only singular\n        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n        var suffix = rule.numbers[idx]; // special treatment for lngs only having singular and plural\n\n        if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          if (suffix === 2) {\n            suffix = 'plural';\n          } else if (suffix === 1) {\n            suffix = '';\n          }\n        }\n\n        var returnSuffix = function returnSuffix() {\n          return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n        }; // COMPATIBILITY JSON\n        // v1\n\n\n        if (this.options.compatibilityJSON === 'v1') {\n          if (suffix === 1) return '';\n          if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n          return returnSuffix();\n        } else if (\n        /* v2 */\n        this.options.compatibilityJSON === 'v2') {\n          return returnSuffix();\n        } else if (\n        /* v3 - gettext index */\n        this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          return returnSuffix();\n        }\n\n        return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n      }\n\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }]);\n\n  return PluralResolver;\n}();\n\nvar Interpolator =\n/*#__PURE__*/\nfunction () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n\n    this.init(options);\n  }\n  /* eslint no-param-reassign: 0 */\n\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false; // the regexp\n\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      // the regexp\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng) : path;\n        }\n\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, options);\n      };\n\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      replaces = 0; // unescape if has unescapePrefix/Suffix\n\n      /* eslint no-cond-assign: 0 */\n\n      while (match = this.regexpUnescape.exec(str)) {\n        value = handleFormat(match[1].trim());\n\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            var temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n\n        str = str.replace(match[0], regexSafe(value));\n        this.regexpUnescape.lastIndex = 0;\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n\n      replaces = 0; // regular escape on demand\n\n      while (match = this.regexp.exec(str)) {\n        value = handleFormat(match[1].trim());\n\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            var _temp = missingInterpolationHandler(str, match, options);\n\n            value = typeof _temp === 'string' ? _temp : '';\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n\n        value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n\n      var clonedOptions = _objectSpread({}, options);\n\n      clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n\n      delete clonedOptions.defaultValue; // assert we do not get a endless loop on interpolating defaultValue again and again\n      // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        } // assert we do not get a endless loop on interpolating defaultValue again and again\n\n\n        delete clonedOptions.defaultValue;\n        return key;\n      } // regular escape on demand\n\n\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        /**\n         * If there is more than one parameter (contains the format separator). E.g.:\n         *   - t(a, b)\n         *   - t(a, b, c)\n         *\n         * And those parameters are not dynamic values (parameters do not include curly braces). E.g.:\n         *   - Not t(a, { \"key\": \"{{variable}}\" })\n         *   - Not t(a, b, {\"keyA\": \"valueA\", \"keyB\": \"valueB\"})\n         */\n\n        if (match[0].includes(this.formatSeparator) && !/{.*}/.test(match[1])) {\n          var _match$1$split$map = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n\n          var _match$1$split$map2 = _toArray(_match$1$split$map);\n\n          match[1] = _match$1$split$map2[0];\n          formatters = _match$1$split$map2.slice(1);\n        }\n\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions); // is only the nesting key (key1 = '$(key2)') return the value without stringify\n\n        if (value && match[0] === str && typeof value !== 'string') return value; // no string to include or empty\n\n        if (typeof value !== 'string') value = makeString(value);\n\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n\n        value = formatters.reduce(function (v, f) {\n          return _this2.format(v, f, options.lng, options);\n        }, value.trim()); // Nested keys should not be escaped by default #854\n        // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n\n      return str;\n    }\n  }]);\n\n  return Interpolator;\n}();\n\nfunction remove(arr, what) {\n  var found = arr.indexOf(what);\n\n  while (found !== -1) {\n    arr.splice(found, 1);\n    found = arr.indexOf(what);\n  }\n}\n\nvar Connector =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n\n  function Connector(backend, store, services) {\n    var _this;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, Connector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.state = {};\n    _this.queue = [];\n\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n\n    return _this;\n  }\n\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n\n      // find what needs to be loaded\n      var toLoad = [];\n      var pending = [];\n      var toLoadLanguages = [];\n      var toLoadNamespaces = [];\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2; // loaded\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending.indexOf(name) < 0) pending.push(name);\n          } else {\n            _this2.state[name] = 1; // pending\n\n            hasAllNamespaces = false;\n            if (pending.indexOf(name) < 0) pending.push(name);\n            if (toLoad.indexOf(name) < 0) toLoad.push(name);\n            if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages.push(lng);\n      });\n\n      if (toLoad.length || pending.length) {\n        this.queue.push({\n          pending: pending,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n\n      return {\n        toLoad: toLoad,\n        pending: pending,\n        toLoadLanguages: toLoadLanguages,\n        toLoadNamespaces: toLoadNamespaces\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var _name$split = name.split('|'),\n          _name$split2 = _slicedToArray(_name$split, 2),\n          lng = _name$split2[0],\n          ns = _name$split2[1];\n\n      if (err) this.emit('failedLoading', lng, ns, err);\n\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      } // set loaded\n\n\n      this.state[name] = err ? -1 : 2; // consolidated loading done in this run - only emit once for a loaded namespace\n\n      var loaded = {}; // callback if ready\n\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        remove(q.pending, name);\n        if (err) q.errors.push(err);\n\n        if (q.pending.length === 0 && !q.done) {\n          // only do once per loaded -> this.emit('loaded', q.loaded);\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = [];\n\n            if (q.loaded[l].length) {\n              q.loaded[l].forEach(function (ns) {\n                if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);\n              });\n            }\n          });\n          /* eslint no-param-reassign: 0 */\n\n          q.done = true;\n\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      }); // emit consolidated loaded event\n\n      this.emit('loaded', loaded); // remove done load requests\n\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {}); // noting to load\n\n      return this.backend[fcName](lng, ns, function (err, data) {\n        if (err && data\n        /* = retryFlag */\n        && tried < 5) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n\n        callback(err, data);\n      });\n    }\n    /* eslint consistent-return: 0 */\n\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback(); // nothing to load and no pendings...callback now\n\n        return null; // pendings will trigger callback\n      }\n\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var _name$split3 = name.split('|'),\n          _name$split4 = _slicedToArray(_name$split3, 2),\n          lng = _name$split4[0],\n          ns = _name$split4[1];\n\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" for namespace \\\"\").concat(namespace, \"\\\" as the namespace was not yet loaded\"), 'This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      } // ignore non valid keys\n\n\n      if (key === undefined || key === null || key === '') return;\n\n      if (this.backend && this.backend.create) {\n        this.backend.create(languages, namespace, key, fallbackValue, null\n        /* unused callback */\n        , _objectSpread({}, options, {\n          isUpdate: isUpdate\n        }));\n      } // write to store to avoid resending\n\n\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    // string or array of namespaces\n    whitelist: false,\n    // array with whitelisted languages\n    nonExplicitWhitelist: false,\n    load: 'all',\n    // | currentOnly | languageOnly\n    preload: false,\n    // array with preload languages\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    // allow bundling certain languages that are not remotely fetched\n    saveMissing: false,\n    // enable to send missing values\n    updateMissing: false,\n    // enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)\n    saveMissingTo: 'fallback',\n    // 'current' || 'all'\n    saveMissingPlurals: true,\n    // will save all forms not only singular key\n    missingKeyHandler: false,\n    // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n    missingInterpolationHandler: false,\n    // function(str, match)\n    postProcess: false,\n    // string or array of postProcessor names\n    postProcessPassResolved: false,\n    // pass resolved object into 'options.i18nResolved' for postprocessor\n    returnNull: true,\n    // allows null value as valid translation\n    returnEmptyString: true,\n    // allows empty string value as valid translation\n    returnObjects: false,\n    joinArrays: false,\n    // or string to join array\n    returnedObjectHandler: false,\n    // function(key, value, options) triggered if key returns object but returnObjects is set to false\n    parseMissingKeyHandler: false,\n    // function(key) parsed a key that was not found in t() before returning\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      // prefixEscaped: '{{',\n      // suffixEscaped: '}}',\n      // unescapeSuffix: '',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      // nestingPrefixEscaped: '$t(',\n      // nestingSuffixEscaped: ')',\n      // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n      maxReplaces: 1000 // max replaces to prevent endless loop\n\n    }\n  };\n}\n/* eslint no-param-reassign: 0 */\n\nfunction transformOptions(options) {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS]; // extend whitelist with cimode\n\n  if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n    options.whitelist = options.whitelist.concat(['cimode']);\n  }\n\n  return options;\n}\n\nfunction noop() {}\n\nvar I18n =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n\n  function I18n() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, I18n);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(I18n).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this)); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n\n    if (callback && !_this.isInitialized && !options.isClone) {\n      // https://github.com/i18next/i18next/issues/879\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n\n    return _this;\n  }\n\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = _objectSpread({}, get(), this.options, transformOptions(options));\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      } // init services\n\n\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options); // pipe events from backendConnector\n\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          s.languageDetector.init(s, this.options.detection, this.options);\n        }\n\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n\n        this.translator = new Translator(this.services, this.options); // pipe events from translator\n\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n\n      if (!this.modules.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      } // append api\n\n\n      var storeApi = ['getResource', 'addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var deferred = defer();\n\n      var load = function load() {\n        _this2.changeLanguage(_this2.options.lng, function (err, t) {\n          _this2.isInitialized = true;\n\n          _this2.logger.log('initialized', _this2.options);\n\n          _this2.emit('initialized', _this2.options);\n\n          deferred.resolve(t); // not rejecting on err (as err is only a loading translation failed warning)\n\n          callback(err, t);\n        });\n      };\n\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n\n      return deferred;\n    }\n    /* eslint consistent-return: 0 */\n\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback(); // avoid loading resources for cimode\n\n        var toLoad = [];\n\n        var append = function append(lng) {\n          if (!lng) return;\n\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n\n        if (!usedLng) {\n          // at least load fallbacks in this case\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n\n        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve(); // not rejecting on err (as err is only a loading translation failed warning)\n\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n\n      var done = function done(err, l) {\n        if (l) {\n          _this4.language = l;\n          _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n\n          _this4.translator.changeLanguage(l);\n\n          _this4.isLanguageChangingTo = undefined;\n\n          _this4.emit('languageChanged', l);\n\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n\n      var setLng = function setLng(l) {\n        if (l) {\n          if (!_this4.language) {\n            _this4.language = l;\n            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n          }\n\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        this.services.languageDetector.detect(setLng);\n      } else {\n        setLng(lng);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns) {\n      var _this5 = this;\n\n      var fixedT = function fixedT(key, opts) {\n        var options;\n\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        return _this5.t(key, options);\n      };\n\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n\n      fixedT.ns = ns;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n\n      var lng = this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1]; // we're in cimode so this shall pass\n\n      if (lng.toLowerCase() === 'cimode') return true;\n\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n\n        return loadState === -1 || loadState === 2;\n      }; // loaded -> SUCCESS\n\n\n      if (this.hasResourceBundle(lng, ns)) return true; // were not loading at all -> SEMI SUCCESS\n\n      if (!this.services.backendConnector.backend) return true; // failed loading ns - but at least fallback is not pending -> SEMI SUCCESS\n\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n\n      var deferred = defer();\n\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      }); // Exit early if all given languages are already preloaded\n\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];\n      return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n    }\n    /* eslint class-methods-use-this: 0 */\n\n  }, {\n    key: \"createInstance\",\n    value: function createInstance() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      return new I18n(options, callback);\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n      var mergedOptions = _objectSpread({}, this.options, options, {\n        isClone: true\n      });\n\n      var clone = new I18n(mergedOptions);\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options; // sync options\n\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }]);\n\n  return I18n;\n}(EventEmitter);\n\nvar i18next = new I18n();\n\nexport default i18next;\n","import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\nvar cookie = {\n  create: function create(name, value, minutes, domain) {\n    var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/'\n    };\n    var expires;\n\n    if (minutes) {\n      var date = new Date();\n      date.setTime(date.getTime() + minutes * 60 * 1000);\n      expires = '; expires=' + date.toUTCString();\n    } else expires = '';\n\n    domain = domain ? 'domain=' + domain + ';' : '';\n    cookieOptions = Object.keys(cookieOptions).reduce(function (acc, key) {\n      return acc + ';' + key.replace(/([A-Z])/g, function ($1) {\n        return '-' + $1.toLowerCase();\n      }) + '=' + cookieOptions[key];\n    }, '');\n    document.cookie = name + '=' + encodeURIComponent(value) + expires + ';' + domain + cookieOptions;\n  },\n  read: function read(name) {\n    var nameEQ = name + '=';\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1, c.length);\n      }\n\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n\n    return null;\n  },\n  remove: function remove(name) {\n    this.create(name, '', -1);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  lookup: function lookup(options) {\n    var found;\n\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      var c = cookie.read(options.lookupCookie);\n      if (c) found = c;\n    }\n\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  lookup: function lookup(options) {\n    var found;\n\n    if (typeof window !== 'undefined') {\n      var query = window.location.search.substring(1);\n      var params = query.split('&');\n\n      for (var i = 0; i < params.length; i++) {\n        var pos = params[i].indexOf('=');\n\n        if (pos > 0) {\n          var key = params[i].substring(0, pos);\n\n          if (key === options.lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n\n    return found;\n  }\n};\n\nvar hasLocalStorageSupport;\n\ntry {\n  hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\n  var testKey = 'i18next.translate.boo';\n  window.localStorage.setItem(testKey, 'foo');\n  window.localStorage.removeItem(testKey);\n} catch (e) {\n  hasLocalStorageSupport = false;\n}\n\nvar localStorage = {\n  name: 'localStorage',\n  lookup: function lookup(options) {\n    var found;\n\n    if (options.lookupLocalStorage && hasLocalStorageSupport) {\n      var lng = window.localStorage.getItem(options.lookupLocalStorage);\n      if (lng) found = lng;\n    }\n\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupLocalStorage && hasLocalStorageSupport) {\n      window.localStorage.setItem(options.lookupLocalStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup: function lookup(options) {\n    var found = [];\n\n    if (typeof navigator !== 'undefined') {\n      if (navigator.languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (var i = 0; i < navigator.languages.length; i++) {\n          found.push(navigator.languages[i]);\n        }\n      }\n\n      if (navigator.userLanguage) {\n        found.push(navigator.userLanguage);\n      }\n\n      if (navigator.language) {\n        found.push(navigator.language);\n      }\n    }\n\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  lookup: function lookup(options) {\n    var found;\n    var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n\n    if (htmlTag && typeof htmlTag.getAttribute === 'function') {\n      found = htmlTag.getAttribute('lang');\n    }\n\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  lookup: function lookup(options) {\n    var found;\n\n    if (typeof window !== 'undefined') {\n      var language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n\n      if (language instanceof Array) {\n        if (typeof options.lookupFromPathIndex === 'number') {\n          if (typeof language[options.lookupFromPathIndex] !== 'string') {\n            return undefined;\n          }\n\n          found = language[options.lookupFromPathIndex].replace('/', '');\n        } else {\n          found = language[0].replace('/', '');\n        }\n      }\n    }\n\n    return found;\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup: function lookup(options) {\n    var found;\n\n    if (typeof window !== 'undefined') {\n      var language = window.location.href.match(/(?:http[s]*\\:\\/\\/)*(.*?)\\.(?=[^\\/]*\\..{2,5})/gi);\n\n      if (language instanceof Array) {\n        if (typeof options.lookupFromSubdomainIndex === 'number') {\n          found = language[options.lookupFromSubdomainIndex].replace('http://', '').replace('https://', '').replace('.', '');\n        } else {\n          found = language[0].replace('http://', '').replace('https://', '').replace('.', '');\n        }\n      }\n    }\n\n    return found;\n  }\n};\n\nfunction getDefaults() {\n  return {\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag'],\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    // cache user language\n    caches: ['localStorage'],\n    excludeCacheFor: ['cimode'],\n    //cookieMinutes: 10,\n    //cookieDomain: 'myDomain'\n    checkWhitelist: true\n  };\n}\n\nvar Browser =\n/*#__PURE__*/\nfunction () {\n  function Browser(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Browser);\n\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n\n  _createClass(Browser, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults()); // backwards compatibility\n\n      if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n      this.i18nOptions = i18nOptions;\n      this.addDetector(cookie$1);\n      this.addDetector(querystring);\n      this.addDetector(localStorage);\n      this.addDetector(navigator$1);\n      this.addDetector(htmlTag);\n      this.addDetector(path);\n      this.addDetector(subdomain);\n    }\n  }, {\n    key: \"addDetector\",\n    value: function addDetector(detector) {\n      this.detectors[detector.name] = detector;\n    }\n  }, {\n    key: \"detect\",\n    value: function detect(detectionOrder) {\n      var _this = this;\n\n      if (!detectionOrder) detectionOrder = this.options.order;\n      var detected = [];\n      detectionOrder.forEach(function (detectorName) {\n        if (_this.detectors[detectorName]) {\n          var lookup = _this.detectors[detectorName].lookup(_this.options);\n\n          if (lookup && typeof lookup === 'string') lookup = [lookup];\n          if (lookup) detected = detected.concat(lookup);\n        }\n      });\n      var found;\n      detected.forEach(function (lng) {\n        if (found) return;\n\n        var cleanedLng = _this.services.languageUtils.formatLanguageCode(lng);\n\n        if (!_this.options.checkWhitelist || _this.services.languageUtils.isWhitelisted(cleanedLng)) found = cleanedLng;\n      });\n\n      if (!found) {\n        var fallbacks = this.i18nOptions.fallbackLng;\n        if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n        if (!fallbacks) fallbacks = [];\n\n        if (Object.prototype.toString.apply(fallbacks) === '[object Array]') {\n          found = fallbacks[0];\n        } else {\n          found = fallbacks[0] || fallbacks[\"default\"] && fallbacks[\"default\"][0];\n        }\n      }\n\n      return found;\n    }\n  }, {\n    key: \"cacheUserLanguage\",\n    value: function cacheUserLanguage(lng, caches) {\n      var _this2 = this;\n\n      if (!caches) caches = this.options.caches;\n      if (!caches) return;\n      if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n      caches.forEach(function (cacheName) {\n        if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\n      });\n    }\n  }]);\n\n  return Browser;\n}();\n\nBrowser.type = 'languageDetector';\n\nexport default Browser;\n","import i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// import resources from '../../translations';\nlet resources = undefined\n\n/**\n * This is our translation function. Give it a key and\n * it will retreive the appropriate string\n * (within supported languages) according to the\n * user's browser's language settings.\n * @function translator\n * @param {String} key a key that corresponds to a message in our translation files\n * @param {Object} values values for use in the message under the given `key`\n * @returns {String} message (with values inserted) in the user's browser language\n * @private\n */\nexport let translator = () => {\n  console.debug('p5.js translator called before translations were loaded');\n  return '';\n};\n// (We'll set this to a real value in the init function below!)\n\n/**\n * Set up our translation function, with loaded languages\n */\nexport const initialize = () =>\n  new Promise((resolve, reject) => {\n    i18next\n      .use(LanguageDetector)\n      .init({\n        fallbackLng: 'en',\n        nestingPrefix: '$tr(',\n        nestingSuffix: ')',\n        defaultNS: 'translation',\n        interpolation: {\n          escapeValue: false\n        },\n        detection: {\n          checkWhitelist: false\n        },\n        resources\n      })\n      .then(\n        translateFn => {\n          translator = function() {};\n\t\t\t\t\tresolve();\n        },\n        e => reject(`Translations failed to load (${e})`)\n      );\n  });\n","/**\n * @for p5\n * @requires core\n *\n * This is the main file for the Friendly Error System (FES). Here is a\n * brief outline of the functions called in this system.\n *\n * The FES may be invoked by a call to either (1) _validateParameters,\n * (2) _friendlyFileLoadError, (3) _friendlyError, or (4) helpForMisusedAtTopLevelCode.\n *\n * helpForMisusedAtTopLevelCode is called by this file on window load to check for use\n * of p5.js functions outside of setup() or draw()\n * Items 1-3 above are called by functions in the p5 library located in other files.\n *\n * _friendlyFileLoadError is called by the loadX() methods.\n * _friendlyError can be called by any function to offer a helpful error message.\n *\n * _validateParameters is called by functions in the p5.js API to help users ensure\n * ther are calling p5 function with the right parameter types. The property\n * disableFriendlyErrors = false can be set from a p5.js sketch to turn off parameter\n * checking. The call sequence from _validateParameters looks something like this:\n *\n * _validateParameters\n *   lookupParamDoc\n *   scoreOverload\n *     testParamTypes\n *     testParamType\n *   getOverloadErrors\n *   _friendlyParamError\n *     ValidationError\n *     report\n *       friendlyWelcome\n *\n * The call sequences to _friendlyFileLoadError and _friendlyError are like this:\n * _friendlyFileLoadError\n *   report\n *\n * _friendlyError\n *   report\n *\n * report() is the main function that prints directly to console with the output\n * of the error helper message. Note: friendlyWelcome() also prints to console directly.\n */\nimport p5 from './main';\nimport * as constants from './constants';\nimport { translator } from './internationalization';\n\n// p5.js blue, p5.js orange, auto dark green; fallback p5.js darkened magenta\n// See testColors below for all the color codes and names\nconst typeColors = ['#2D7BB6', '#EE9900', '#4DB200', '#C83C00'];\n\nif (typeof IS_MINIFIED !== 'undefined') {\n  p5._validateParameters = p5._friendlyFileLoadError = p5._friendlyError = () => {};\n} else {\n  let doFriendlyWelcome = false; // TEMP until we get it all working LM\n  // for parameter validation\n  // const dataDoc = require('../../docs/reference/data.json');\n  const dataDoc = '';\n  const arrDoc = JSON.parse(JSON.stringify(dataDoc));\n\n  // -- Borrowed from jQuery 1.11.3 --\n  const class2type = {};\n  const toString = class2type.toString;\n  const names = [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Object',\n    'Error'\n  ];\n  for (let n = 0; n < names.length; n++) {\n    class2type[`[object ${names[n]}]`] = names[n].toLowerCase();\n  }\n  const getType = obj => {\n    if (obj == null) {\n      return `${obj}`;\n    }\n    return typeof obj === 'object' || typeof obj === 'function'\n      ? class2type[toString.call(obj)] || 'object'\n      : typeof obj;\n  };\n\n  // -- End borrow --\n\n  const friendlyWelcome = () => {\n    // p5.js brand - magenta: #ED225D\n    //const astrixBgColor = 'transparent';\n    //const astrixTxtColor = '#ED225D';\n    //const welcomeBgColor = '#ED225D';\n    //const welcomeTextColor = 'white';\n    const welcomeMessage = translator('fes.pre', {\n      message: translator('fes.welcome')\n    });\n    console.log(\n      '    _ \\n' +\n        ' /\\\\| |/\\\\ \\n' +\n        \" \\\\ ` ' /  \\n\" +\n        ' / , . \\\\  \\n' +\n        ' \\\\/|_|\\\\/ ' +\n        '\\n\\n' +\n        welcomeMessage\n    );\n  };\n\n  /**\n   * Prints out a fancy, colorful message to the console log\n   *\n   * @method report\n   * @private\n   * @param  {String}               message the words to be said\n   * @param  {String}               func    the name of the function to link\n   * @param  {Number|String} color   CSS color string or error type\n   *\n   * @return console logs\n   */\n  const report = (message, func, color) => {\n    if (doFriendlyWelcome) {\n      friendlyWelcome();\n      doFriendlyWelcome = false;\n    }\n    if ('undefined' === getType(color)) {\n      color = '#B40033'; // dark magenta\n    } else if (getType(color) === 'number') {\n      // Type to color\n      color = typeColors[color];\n    }\n    if (func.substring(0, 4) === 'load') {\n      console.log(translator('fes.pre', { message }));\n    } else {\n      console.log(\n        translator('fes.pre', {\n          message: `${message} (http://p5js.org/reference/#p5/${func})`\n        })\n      );\n    }\n  };\n\n  // mapping used by `_friendlyFileLoadError`\n  const fileLoadErrorCases = (num, filePath) => {\n    const suggestion = translator('fes.fileLoadError.suggestion', {\n      filePath,\n      link: 'https://github.com/processing/p5.js/wiki/Local-server'\n    });\n    switch (num) {\n      case 0:\n        return {\n          message: translator('fes.fileLoadError.image', {\n            suggestion\n          }),\n          method: 'loadImage'\n        };\n      case 1:\n        return {\n          message: translator('fes.fileLoadError.xml', {\n            suggestion\n          }),\n          method: 'loadXML'\n        };\n      case 2:\n        return {\n          message: translator('fes.fileLoadError.table', {\n            suggestion\n          }),\n          method: 'loadTable'\n        };\n      case 3:\n        return {\n          message: translator('fes.fileLoadError.strings', {\n            suggestion\n          }),\n          method: 'loadStrings'\n        };\n      case 4:\n        return {\n          message: translator('fes.fileLoadError.font', {\n            suggestion\n          }),\n          method: 'loadFont'\n        };\n      case 5:\n        return {\n          message: translator('fes.fileLoadError.json', {\n            suggestion\n          }),\n          method: 'loadJSON'\n        };\n      case 6:\n        return {\n          message: translator('fes.fileLoadError.bytes', {\n            suggestion\n          }),\n          method: 'loadBytes'\n        };\n      case 7:\n        return {\n          message: translator('fes.fileLoadError.large'),\n          method: 'loadX'\n        };\n      case 8:\n        return {\n          message: translator('fes.fileLoadError.gif'),\n          method: 'loadImage'\n        };\n    }\n  };\n\n  /**\n   * This is called internally if there is a error during file loading.\n   *\n   * @method _friendlyFileLoadError\n   * @private\n   * @param  {Number} errorType\n   * @param  {String} filePath\n   */\n  p5._friendlyFileLoadError = function(errorType, filePath) {\n    const { message, method } = fileLoadErrorCases(errorType, filePath);\n    report(message, method, 3);\n  };\n\n  /**\n   * This is a generic method that can be called from anywhere in the p5\n   * library to alert users to a common error.\n   *\n   * @method _friendlyError\n   * @private\n   * @param  {Number} message message to be printed\n   * @param  {String} method name of method\n   */\n  p5._friendlyError = function(message, method) {\n    report(message, method);\n  };\n\n  /**\n   * This is called internally if there is a error with autoplay.\n   *\n   * @method _friendlyAutoplayError\n   * @private\n   */\n  p5._friendlyAutoplayError = function(src) {\n    const message = translator('fes.autoplay', {\n      src,\n      link: 'https://developer.mozilla.org/docs/Web/Media/Autoplay_guide'\n    });\n    console.log(translator('fes.pre', { message }));\n  };\n\n  const docCache = {};\n  const builtinTypes = [\n    'null',\n    'number',\n    'string',\n    'boolean',\n    'constant',\n    'function',\n    'any',\n    'integer'\n  ];\n\n  // validateParameters() helper functions:\n  // lookupParamDoc() for querying data.json\n  const lookupParamDoc = func => {\n    // look for the docs in the `data.json` datastructure\n\n    const ichDot = func.lastIndexOf('.');\n    const funcName = func.substr(ichDot + 1);\n    const funcClass = func.substr(0, ichDot) || 'p5';\n\n    let queryResult;\n    const classitems = arrDoc.classitems;\n\n    for (const x of classitems) {\n      if (x.name === funcName && x.class === funcClass) {\n        queryResult = x;\n        break;\n      }\n    }\n\n    // different JSON structure for funct with multi-format\n    const overloads = [];\n    if (queryResult.hasOwnProperty('overloads')) {\n      // add all the overloads\n      for (let i = 0; i < queryResult.overloads.length; i++) {\n        overloads.push({ formats: queryResult.overloads[i].params });\n      }\n    } else {\n      // no overloads, just add the main method definition\n      overloads.push({ formats: queryResult.params || [] });\n    }\n\n    // parse the parameter types for each overload\n    const mapConstants = {};\n    let maxParams = 0;\n    overloads.forEach(overload => {\n      const formats = overload.formats;\n\n      // keep a record of the maximum number of arguments\n      // this method requires.\n      if (maxParams < formats.length) {\n        maxParams = formats.length;\n      }\n\n      // calculate the minimum number of arguments\n      // this overload requires.\n      let minParams = formats.length;\n      while (minParams > 0 && formats[minParams - 1].optional) {\n        minParams--;\n      }\n      overload.minParams = minParams;\n\n      // loop through each parameter position, and parse its types\n      formats.forEach(format => {\n        // split this parameter's types\n        format.types = format.type.split('|').map(function ct(type) {\n          // array\n          if (type.substr(type.length - 2, 2) === '[]') {\n            return {\n              name: type,\n              array: ct(type.substr(0, type.length - 2))\n            };\n          }\n\n          let lowerType = type.toLowerCase();\n\n          // contant\n          if (lowerType === 'constant') {\n            let constant;\n            if (mapConstants.hasOwnProperty(format.name)) {\n              constant = mapConstants[format.name];\n            } else {\n              // parse possible constant values from description\n              const myRe = /either\\s+(?:[A-Z0-9_]+\\s*,?\\s*(?:or)?\\s*)+/g;\n              const values = {};\n              const names = [];\n\n              constant = mapConstants[format.name] = {\n                values,\n                names\n              };\n\n              const myArray = myRe.exec(format.description);\n              if (func === 'endShape' && format.name === 'mode') {\n                values[constants.CLOSE] = true;\n                names.push('CLOSE');\n              } else {\n                const match = myArray[0];\n                const reConst = /[A-Z0-9_]+/g;\n                let matchConst;\n                while ((matchConst = reConst.exec(match)) !== null) {\n                  const name = matchConst[0];\n                  if (constants.hasOwnProperty(name)) {\n                    values[constants[name]] = true;\n                    names.push(name);\n                  }\n                }\n              }\n            }\n            return {\n              name: type,\n              builtin: lowerType,\n              names: constant.names,\n              values: constant.values\n            };\n          }\n\n          // function\n          if (lowerType.substr(0, 'function'.length) === 'function') {\n            lowerType = 'function';\n          }\n          // builtin\n          if (builtinTypes.includes(lowerType)) {\n            return { name: type, builtin: lowerType };\n          }\n\n          // find type's prototype\n          let t = window;\n          const typeParts = type.split('.');\n\n          // special-case 'p5' since it may be non-global\n          if (typeParts[0] === 'p5') {\n            t = p5;\n            typeParts.shift();\n          }\n\n          typeParts.forEach(p => {\n            t = t && t[p];\n          });\n          if (t) {\n            return { name: type, prototype: t };\n          }\n\n          return { name: type, type: lowerType };\n        });\n      });\n    });\n    return {\n      overloads,\n      maxParams\n    };\n  };\n\n  const isNumber = param => {\n    switch (typeof param) {\n      case 'number':\n        return true;\n      case 'string':\n        return !isNaN(param);\n      default:\n        return false;\n    }\n  };\n\n  const testParamType = (param, type) => {\n    const isArray = param instanceof Array;\n    let matches = true;\n    if (type.array && isArray) {\n      for (let i = 0; i < param.length; i++) {\n        const error = testParamType(param[i], type.array);\n        if (error) return error / 2; // half error for elements\n      }\n    } else if (type.prototype) {\n      matches = param instanceof type.prototype;\n    } else if (type.builtin) {\n      switch (type.builtin) {\n        case 'number':\n          matches = isNumber(param);\n          break;\n        case 'integer':\n          matches = isNumber(param) && Number(param) === Math.floor(param);\n          break;\n        case 'boolean':\n        case 'any':\n          matches = true;\n          break;\n        case 'array':\n          matches = isArray;\n          break;\n        case 'string':\n          matches = /*typeof param === 'number' ||*/ typeof param === 'string';\n          break;\n        case 'constant':\n          matches = type.values.hasOwnProperty(param);\n          break;\n        case 'function':\n          matches = param instanceof Function;\n          break;\n        case 'null':\n          matches = param === null;\n          break;\n      }\n    } else {\n      matches = typeof param === type.t;\n    }\n    return matches ? 0 : 1;\n  };\n\n  // testType() for non-object type parameter validation\n  const testParamTypes = (param, types) => {\n    let minScore = 9999;\n    for (let i = 0; minScore > 0 && i < types.length; i++) {\n      const score = testParamType(param, types[i]);\n      if (minScore > score) minScore = score;\n    }\n    return minScore;\n  };\n\n  // generate a score (higher is worse) for applying these args to\n  // this overload.\n  const scoreOverload = (args, argCount, overload, minScore) => {\n    let score = 0;\n    const formats = overload.formats;\n    const minParams = overload.minParams;\n\n    // check for too few/many args\n    // the score is double number of extra/missing args\n    if (argCount < minParams) {\n      score = (minParams - argCount) * 2;\n    } else if (argCount > formats.length) {\n      score = (argCount - formats.length) * 2;\n    }\n\n    // loop through the formats, adding up the error score for each arg.\n    // quit early if the score gets higher than the previous best overload.\n    for (let p = 0; score <= minScore && p < formats.length; p++) {\n      const arg = args[p];\n      const format = formats[p];\n      // '== null' checks for 'null' and typeof 'undefined'\n      if (arg == null) {\n        // handle non-optional and non-trailing undefined args\n        if (!format.optional || p < minParams || p < argCount) {\n          score += 1;\n        }\n      } else {\n        score += testParamTypes(arg, format.types);\n      }\n    }\n    return score;\n  };\n\n  // gets a list of errors for this overload\n  const getOverloadErrors = (args, argCount, overload) => {\n    const formats = overload.formats;\n    const minParams = overload.minParams;\n\n    // check for too few/many args\n    if (argCount < minParams) {\n      return [\n        {\n          type: 'TOO_FEW_ARGUMENTS',\n          argCount,\n          minParams\n        }\n      ];\n    } else if (argCount > formats.length) {\n      return [\n        {\n          type: 'TOO_MANY_ARGUMENTS',\n          argCount,\n          maxParams: formats.length\n        }\n      ];\n    }\n\n    const errorArray = [];\n    for (let p = 0; p < formats.length; p++) {\n      const arg = args[p];\n      const format = formats[p];\n      // '== null' checks for 'null' and typeof 'undefined'\n      if (arg == null) {\n        // handle non-optional and non-trailing undefined args\n        if (!format.optional || p < minParams || p < argCount) {\n          errorArray.push({\n            type: 'EMPTY_VAR',\n            position: p,\n            format\n          });\n        }\n      } else if (testParamTypes(arg, format.types) > 0) {\n        errorArray.push({\n          type: 'WRONG_TYPE',\n          position: p,\n          format,\n          arg\n        });\n      }\n    }\n\n    return errorArray;\n  };\n\n  // a custom error type, used by the mocha\n  // tests when expecting validation errors\n  p5.ValidationError = (name => {\n    class err extends Error {\n      constructor(message, func) {\n        super();\n        this.message = message;\n        this.func = func;\n        if ('captureStackTrace' in Error) Error.captureStackTrace(this, err);\n        else this.stack = new Error().stack;\n      }\n    }\n\n    err.prototype.name = name;\n    return err;\n  })('ValidationError');\n\n  // function for generating console.log() msg\n  p5._friendlyParamError = function(errorObj, func) {\n    let message;\n\n    function formatType() {\n      const format = errorObj.format;\n      return format.types\n        .map(type => (type.names ? type.names.join('|') : type.name))\n        .join('|');\n    }\n\n    switch (errorObj.type) {\n      case 'EMPTY_VAR': {\n        message = `${func}() was expecting ${formatType()} for parameter #${\n          errorObj.position\n        } (zero-based index), received an empty variable instead. If not intentional, this is often a problem with scope: [https://p5js.org/examples/data-variable-scope.html]`;\n        break;\n      }\n      case 'WRONG_TYPE': {\n        const arg = errorObj.arg;\n        const argType =\n          arg instanceof Array\n            ? 'array'\n            : arg === null ? 'null' : arg.name || typeof arg;\n        message = `${func}() was expecting ${formatType()} for parameter #${\n          errorObj.position\n        } (zero-based index), received ${argType} instead`;\n        break;\n      }\n      case 'TOO_FEW_ARGUMENTS': {\n        message = `${func}() was expecting at least ${\n          errorObj.minParams\n        } arguments, but received only ${errorObj.argCount}`;\n        break;\n      }\n      case 'TOO_MANY_ARGUMENTS': {\n        message = `${func}() was expecting no more than ${\n          errorObj.maxParams\n        } arguments, but received ${errorObj.argCount}`;\n        break;\n      }\n    }\n\n    if (message) {\n      if (p5._throwValidationErrors) {\n        throw new p5.ValidationError(message);\n      }\n\n      try {\n        const re = /Function\\.validateParameters.*[\\r\\n].*[\\r\\n].*\\(([^)]*)/;\n        const location = re.exec(new Error().stack)[1];\n        if (location) {\n          message += ` at ${location}`;\n        }\n      } catch (err) {}\n\n      report(`${message}.`, func, 3);\n    }\n  };\n\n  /**\n   * Validates parameters\n   * param  {String}               func    the name of the function\n   * param  {Array}                args    user input arguments\n   *\n   * example:\n   *  const a;\n   *  ellipse(10,10,a,5);\n   * console ouput:\n   *  \"It looks like ellipse received an empty variable in spot #2.\"\n   *\n   * example:\n   *  ellipse(10,\"foo\",5,5);\n   * console output:\n   *  \"ellipse was expecting a number for parameter #1,\n   *           received \"foo\" instead.\"\n   */\n  p5._validateParameters = function validateParameters(func, args) {\n    if (p5.disableFriendlyErrors) {\n      return; // skip FES\n    }\n\n    // lookup the docs in the 'data.json' file\n    const docs = docCache[func] || (docCache[func] = lookupParamDoc(func));\n    const overloads = docs.overloads;\n\n    // ignore any trailing `undefined` arguments\n    let argCount = args.length;\n    // '== null' checks for 'null' and typeof 'undefined'\n    while (argCount > 0 && args[argCount - 1] == null) argCount--;\n\n    // find the overload with the best score\n    let minScore = 99999;\n    let minOverload;\n    for (let i = 0; i < overloads.length; i++) {\n      const score = scoreOverload(args, argCount, overloads[i], minScore);\n      if (score === 0) {\n        return; // done!\n      } else if (minScore > score) {\n        // this score is better that what we have so far...\n        minScore = score;\n        minOverload = i;\n      }\n    }\n\n    // this should _always_ be true here...\n    if (minScore > 0) {\n      // get the errors for the best overload\n      const errorArray = getOverloadErrors(\n        args,\n        argCount,\n        overloads[minOverload]\n      );\n\n      // generate err msg\n      for (let n = 0; n < errorArray.length; n++) {\n        p5._friendlyParamError(errorArray[n], func);\n      }\n    }\n  };\n\n  /**\n   * Prints out all the colors in the color pallete with white text.\n   * For color blindness testing.\n   */\n  /* function testColors() {\n    const str = 'A box of biscuits, a box of mixed biscuits and a biscuit mixer';\n    report(str, 'print', '#ED225D'); // p5.js magenta\n    report(str, 'print', '#2D7BB6'); // p5.js blue\n    report(str, 'print', '#EE9900'); // p5.js orange\n    report(str, 'print', '#A67F59'); // p5.js light brown\n    report(str, 'print', '#704F21'); // p5.js gold\n    report(str, 'print', '#1CC581'); // auto cyan\n    report(str, 'print', '#FF6625'); // auto orange\n    report(str, 'print', '#79EB22'); // auto green\n    report(str, 'print', '#B40033'); // p5.js darkened magenta\n    report(str, 'print', '#084B7F'); // p5.js darkened blue\n    report(str, 'print', '#945F00'); // p5.js darkened orange\n    report(str, 'print', '#6B441D'); // p5.js darkened brown\n    report(str, 'print', '#2E1B00'); // p5.js darkened gold\n    report(str, 'print', '#008851'); // auto dark cyan\n    report(str, 'print', '#C83C00'); // auto dark orange\n    report(str, 'print', '#4DB200'); // auto dark green\n  } */\n\n  p5.prototype._validateParameters = p5.validateParameters;\n}\n\n// This is a lazily-defined list of p5 symbols that may be\n// misused by beginners at top-level code, outside of setup/draw. We'd like\n// to detect these errors and help the user by suggesting they move them\n// into setup/draw.\n//\n// For more details, see https://github.com/processing/p5.js/issues/1121.\nlet misusedAtTopLevelCode = null;\nconst FAQ_URL =\n  'https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup';\n\nconst defineMisusedAtTopLevelCode = () => {\n  const uniqueNamesFound = {};\n\n  const getSymbols = obj =>\n    Object.getOwnPropertyNames(obj)\n      .filter(name => {\n        if (name[0] === '_') {\n          return false;\n        }\n        if (name in uniqueNamesFound) {\n          return false;\n        }\n\n        uniqueNamesFound[name] = true;\n\n        return true;\n      })\n      .map(name => {\n        let type;\n\n        if (typeof obj[name] === 'function') {\n          type = 'function';\n        } else if (name === name.toUpperCase()) {\n          type = 'constant';\n        } else {\n          type = 'variable';\n        }\n\n        return { name, type };\n      });\n\n  misusedAtTopLevelCode = [].concat(\n    getSymbols(p5.prototype),\n    // At present, p5 only adds its constants to p5.prototype during\n    // construction, which may not have happened at the time a\n    // ReferenceError is thrown, so we'll manually add them to our list.\n    // getSymbols(require('./constants'))\n  );\n\n  // This will ultimately ensure that we report the most specific error\n  // possible to the user, e.g. advising them about HALF_PI instead of PI\n  // when their code misuses the former.\n  misusedAtTopLevelCode.sort((a, b) => b.name.length - a.name.length);\n};\n\nconst helpForMisusedAtTopLevelCode = (e, log) => {\n  if (!log) {\n    log = console.log.bind(console);\n  }\n\n  if (!misusedAtTopLevelCode) {\n    defineMisusedAtTopLevelCode();\n  }\n\n  // If we find that we're logging lots of false positives, we can\n  // uncomment the following code to avoid displaying anything if the\n  // user's code isn't likely to be using p5's global mode. (Note that\n  // setup/draw are more likely to be defined due to JS function hoisting.)\n  //\n  //if (!('setup' in window || 'draw' in window)) {\n  //  return;\n  //}\n\n  misusedAtTopLevelCode.some(symbol => {\n    // Note that while just checking for the occurrence of the\n    // symbol name in the error message could result in false positives,\n    // a more rigorous test is difficult because different browsers\n    // log different messages, and the format of those messages may\n    // change over time.\n    //\n    // For example, if the user uses 'PI' in their code, it may result\n    // in any one of the following messages:\n    //\n    //   * 'PI' is undefined                           (Microsoft Edge)\n    //   * ReferenceError: PI is undefined             (Firefox)\n    //   * Uncaught ReferenceError: PI is not defined  (Chrome)\n\n    if (e.message && e.message.match(`\\\\W?${symbol.name}\\\\W`) !== null) {\n      const symbolName =\n        symbol.type === 'function' ? `${symbol.name}()` : symbol.name;\n      if (typeof IS_MINIFIED !== 'undefined') {\n        log(\n          `Did you just try to use p5.js's ${symbolName} ${\n            symbol.type\n          }? If so, you may want to move it into your sketch's setup() function.\\n\\nFor more details, see: ${FAQ_URL}`\n        );\n      } else {\n        log(\n          translator('fes.misusedTopLevel', {\n            symbolName,\n            symbolType: symbol.type,\n            link: FAQ_URL\n          })\n        );\n      }\n      return true;\n    }\n  });\n};\n\n// Exposing this primarily for unit testing.\np5.prototype._helpForMisusedAtTopLevelCode = helpForMisusedAtTopLevelCode;\n\nif (document.readyState !== 'complete') {\n  window.addEventListener('error', helpForMisusedAtTopLevelCode, false);\n\n  // Our job is only to catch ReferenceErrors that are thrown when\n  // global (non-instance mode) p5 APIs are used at the top-level\n  // scope of a file, so we'll unbind our error listener now to make\n  // sure we don't log false positives later.\n  window.addEventListener('load', () => {\n    window.removeEventListener('error', helpForMisusedAtTopLevelCode, false);\n  });\n}\n\nexport default p5;\n","/**\n * @requires constants\n */\n\nimport * as constants from './constants';\n\nfunction modeAdjust(a, b, c, d, mode) {\n  if (mode === constants.CORNER) {\n    return { x: a, y: b, w: c, h: d };\n  } else if (mode === constants.CORNERS) {\n    return { x: a, y: b, w: c - a, h: d - b };\n  } else if (mode === constants.RADIUS) {\n    return { x: a - c, y: b - d, w: 2 * c, h: 2 * d };\n  } else if (mode === constants.CENTER) {\n    return { x: a - c * 0.5, y: b - d * 0.5, w: c, h: d };\n  }\n}\n\nexport default { modeAdjust };\n","/**\n * @for p5\n * @requires core\n * These are functions that are part of the Processing API but are not part of\n * the p5.js API. In some cases they have a new name, in others, they are\n * removed completely. Not all unsupported Processing functions are listed here\n * but we try to include ones that a user coming from Processing might likely\n * call.\n */\n\nimport p5 from './main';\n\np5.prototype.pushStyle = function() {\n  throw new Error('pushStyle() not used, see push()');\n};\n\np5.prototype.popStyle = function() {\n  throw new Error('popStyle() not used, see pop()');\n};\n\np5.prototype.popMatrix = function() {\n  throw new Error('popMatrix() not used, see pop()');\n};\n\np5.prototype.pushMatrix = function() {\n  throw new Error('pushMatrix() not used, see push()');\n};\n\nexport default p5;\n","'use strict';\n\nimport p5 from './main';\n\np5.prototype._promisePreloads = [\n  /* Example object\n  {\n    target: p5.prototype, // The target object to have the method modified\n    method: 'loadXAsync', // The name of the preload function to wrap\n    addCallbacks: true,   // Whether to automatically handle the p5 callbacks\n    legacyPreloadSetup: { // Optional object to generate a legacy-style preload\n      method: 'loadX',    // The name of the legacy preload function to generate\n      createBaseObject: function() {\n        return {};\n      } // An optional function to create the base object for the legacy preload.\n    }\n  }\n  */\n];\n\np5.prototype.registerPromisePreload = function(setup) {\n  p5.prototype._promisePreloads.push(setup);\n};\n\nlet initialSetupRan = false;\n\np5.prototype._setupPromisePreloads = function() {\n  for (const preloadSetup of this._promisePreloads) {\n    let thisValue = this;\n    let { method, addCallbacks, legacyPreloadSetup } = preloadSetup;\n    // Get the target object that the preload gets assigned to by default,\n    // that is the current object.\n    let target = preloadSetup.target || this;\n    let sourceFunction = target[method].bind(target);\n    // If the target is the p5 prototype, then only set it up on the first run per page\n    if (target === p5.prototype) {\n      if (initialSetupRan) {\n        continue;\n      }\n      thisValue = null;\n      sourceFunction = target[method];\n    }\n\n    // Replace the original method with a wrapped version\n    target[method] = this._wrapPromisePreload(\n      thisValue,\n      sourceFunction,\n      addCallbacks\n    );\n    // If a legacy preload is required\n    if (legacyPreloadSetup) {\n      // What is the name for this legacy preload\n      const legacyMethod = legacyPreloadSetup.method;\n      // Wrap the already wrapped Promise-returning method with the legacy setup\n      target[legacyMethod] = this._legacyPreloadGenerator(\n        thisValue,\n        legacyPreloadSetup,\n        target[method]\n      );\n    }\n  }\n  initialSetupRan = true;\n};\n\np5.prototype._wrapPromisePreload = function(thisValue, fn, addCallbacks) {\n  let replacementFunction = function(...args) {\n    // Uses the current preload counting mechanism for now.\n    this._incrementPreload();\n    // A variable for the callback function if specified\n    let callback = null;\n    // A variable for the errorCallback function if specified\n    let errorCallback = null;\n    if (addCallbacks) {\n      // Loop from the end of the args array, pulling up to two functions off of\n      // the end and putting them in fns\n      for (let i = args.length - 1; i >= 0 && !errorCallback; i--) {\n        if (typeof args[i] !== 'function') {\n          break;\n        }\n        errorCallback = callback;\n        callback = args.pop();\n      }\n    }\n    // Call the underlying funciton and pass it to Promise.resolve,\n    // so that even if it didn't return a promise we can still\n    // act on the result as if it did.\n    const promise = Promise.resolve(fn.apply(this, args));\n    // Add the optional callbacks\n    if (callback) {\n      promise.then(callback);\n    }\n    if (errorCallback) {\n      promise.catch(errorCallback);\n    }\n    // Decrement the preload counter only if the promise resolved\n    promise.then(() => this._decrementPreload());\n    // Return the original promise so that neither callback changes the result.\n    return promise;\n  };\n  if (thisValue) {\n    replacementFunction = replacementFunction.bind(thisValue);\n  }\n  return replacementFunction;\n};\n\nconst objectCreator = function() {\n  return {};\n};\n\np5.prototype._legacyPreloadGenerator = function(\n  thisValue,\n  legacyPreloadSetup,\n  fn\n) {\n  // Create a function that will generate an object before the preload is\n  // launched. For example, if the object should be an array or be an instance\n  // of a specific class.\n  const baseValueGenerator =\n    legacyPreloadSetup.createBaseObject || objectCreator;\n  let returnedFunction = function() {\n    // Our then clause needs to run before setup, so we also increment the preload counter\n    this._incrementPreload();\n    // Generate the return value based on the generator.\n    const returnValue = baseValueGenerator.apply(this, arguments);\n    // Run the original wrapper\n    fn.apply(this, arguments).then(data => {\n      // Copy each key from the resolved value into returnValue\n      Object.assign(returnValue, data);\n      // Decrement the preload counter, to allow setup to continue.\n      this._decrementPreload();\n    });\n    return returnValue;\n  };\n  if (thisValue) {\n    returnedFunction = returnedFunction.bind(thisValue);\n  }\n  return returnedFunction;\n};\n","/**\n * @module DOM\n * @submodule DOM\n * @for p5.Element\n */\n\nimport p5 from './main';\n\n/**\n * Base class for all elements added to a sketch, including canvas,\n * graphics buffers, and other HTML elements. It is not called directly, but <a href=\"#/p5.Element\">p5.Element</a>\n * objects are created by calling <a href=\"#/p5/createCanvas\">createCanvas</a>, <a href=\"#/p5/createGraphics\">createGraphics</a>,\n * <a href=\"#/p5/createDiv\">createDiv</a>, <a href=\"#/p5/createImg\">createImg</a>, <a href=\"#/p5/createInput\">createInput</a>, etc.\n *\n * @class p5.Element\n * @constructor\n * @param {String} elt DOM node that is wrapped\n * @param {p5} [pInst] pointer to p5 instance\n */\np5.Element = function(elt, pInst) {\n  /**\n   * Underlying HTML element. All normal HTML methods can be called on this.\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   let c = createCanvas(50, 50);\n   *   c.elt.style.border = '5px solid red';\n   * }\n   *\n   * function draw() {\n   *   background(220);\n   * }\n   * </code>\n   * </div>\n   *\n   * @property elt\n   * @readOnly\n   */\n  this.elt = elt;\n  this._pInst = this._pixelsState = pInst;\n  this._events = {};\n  this.width = this.elt.offsetWidth;\n  this.height = this.elt.offsetHeight;\n};\n\n/**\n *\n * Attaches the element to the parent specified. A way of setting\n * the container for the element. Accepts either a string ID, DOM\n * node, or <a href=\"#/p5.Element\">p5.Element</a>. If no arguments given, parent node is returned.\n * For more ways to position the canvas, see the\n * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n * positioning the canvas</a> wiki page.\n *\n * @method parent\n * @param  {String|p5.Element|Object} parent the ID, DOM node, or <a href=\"#/p5.Element\">p5.Element</a>\n *                         of desired parent element\n * @chainable\n *\n * @example\n * <div class=\"norender notest\"><code>\n * // Add the following comment to html file.\n * // &lt;div id=\"myContainer\">&lt;/div>\n *\n * // The js code\n * let cnv = createCanvas(100, 100);\n * cnv.parent('myContainer');\n * </code></div>\n *\n * <div class='norender'><code>\n * let div0 = createDiv('this is the parent');\n * let div1 = createDiv('this is the child');\n * div1.parent(div0); // use p5.Element\n * </code></div>\n *\n * <div class='norender'><code>\n * let div0 = createDiv('this is the parent');\n * div0.id('apples');\n * let div1 = createDiv('this is the child');\n * div1.parent('apples'); // use id\n * </code></div>\n *\n * <div class='norender notest'><code>\n * let elt = document.getElementById('myParentDiv');\n * let div1 = createDiv('this is the child');\n * div1.parent(elt); // use element from page\n * </code></div>\n *\n * @alt\n * no display.\n */\n/**\n * @method parent\n * @return {p5.Element}\n *\n */\np5.Element.prototype.parent = function(p) {\n  if (typeof p === 'undefined') {\n    return this.elt.parentNode;\n  }\n\n  if (typeof p === 'string') {\n    if (p[0] === '#') {\n      p = p.substring(1);\n    }\n    p = document.getElementById(p);\n  } else if (p instanceof p5.Element) {\n    p = p.elt;\n  }\n  p.appendChild(this.elt);\n  return this;\n};\n\n/**\n *\n * Sets the ID of the element. If no ID argument is passed in, it instead\n * returns the current ID of the element.\n * Note that only one element can have a particular id in a page.\n * The <a href=\"#/p5.Element/class\">.class()</a> function can be used\n * to identify multiple elements with the same class name.\n *\n * @method id\n * @param  {String} id ID of the element\n * @chainable\n *\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   let cnv = createCanvas(100, 100);\n *   // Assigns a CSS selector ID to\n *   // the canvas element.\n *   cnv.id('mycanvas');\n * }\n * </code></div>\n *\n * @alt\n * no display.\n */\n/**\n * @method id\n * @return {String} the id of the element\n */\np5.Element.prototype.id = function(id) {\n  if (typeof id === 'undefined') {\n    return this.elt.id;\n  }\n\n  this.elt.id = id;\n  this.width = this.elt.offsetWidth;\n  this.height = this.elt.offsetHeight;\n  return this;\n};\n\n/**\n *\n * Adds given class to the element. If no class argument is passed in, it\n * instead returns a string containing the current class(es) of the element.\n *\n * @method class\n * @param  {String} class class to add\n * @chainable\n *\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   let cnv = createCanvas(100, 100);\n *   // Assigns a CSS selector class 'small'\n *   // to the canvas element.\n *   cnv.class('small');\n * }\n * </code></div>\n *\n * @alt\n * no display.\n */\n/**\n * @method class\n * @return {String} the class of the element\n */\np5.Element.prototype.class = function(c) {\n  if (typeof c === 'undefined') {\n    return this.elt.className;\n  }\n\n  this.elt.className = c;\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/mousePressed\">mousePressed()</a> function is called\n * once after every time a mouse button is pressed over the element. Some mobile\n * browsers may also trigger this event on a touch screen, if the user performs\n * a quick tap. This can be used to attach element specific event listeners.\n *\n * @method mousePressed\n * @param  {Function|Boolean} fxn function to be fired when mouse is\n *                                pressed over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv, d, g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mousePressed(changeGray); // attach listener for\n *   // canvas click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires with any click anywhere\n * function mousePressed() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mousePressed = function(fxn) {\n  // Prepend the mouse property setters to the event-listener.\n  // This is required so that mouseButton is set correctly prior to calling the callback (fxn).\n  // For details, see https://github.com/processing/p5.js/issues/3087.\n  const eventPrependedFxn = function(event) {\n    this._pInst._setProperty('mouseIsPressed', true);\n    this._pInst._setMouseButton(event);\n    // Pass along the return-value of the callback:\n    return fxn.call(this);\n  };\n  // Pass along the event-prepended form of the callback.\n  p5.Element._adjustListener('mousedown', eventPrependedFxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/doubleClicked\">doubleClicked()</a> function is called once after every time a\n * mouse button is pressed twice over the element. This can be used to\n * attach element and action specific event listeners.\n *\n * @method doubleClicked\n * @param  {Function|Boolean} fxn function to be fired when mouse is\n *                                double clicked over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * let cnv, d, g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.doubleClicked(changeGray); // attach listener for\n *   // canvas double click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires with any double click anywhere\n * function doubleClicked() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is double clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.doubleClicked = function(fxn) {\n  p5.Element._adjustListener('dblclick', fxn, this);\n  return this;\n};\n\n/**\n * The <a href=\"#/p5.Element/mouseWheel\">mouseWheel()</a> function is called\n * once after every time a mouse wheel is scrolled over the element. This can\n * be used to attach element specific event listeners.\n *\n * The function accepts a callback function as argument which will be executed\n * when the `wheel` event is triggered on the element, the callback function is\n * passed one argument `event`. The `event.deltaY` property returns negative\n * values if the mouse wheel is rotated up or away from the user and positive\n * in the other direction. The `event.deltaX` does the same as `event.deltaY`\n * except it reads the horizontal wheel scroll of the mouse wheel.\n *\n * On OS X with \"natural\" scrolling enabled, the `event.deltaY` values are\n * reversed.\n *\n * @method mouseWheel\n * @param  {Function|Boolean} fxn function to be fired when mouse is\n *                                scrolled over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv, d, g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseWheel(changeSize); // attach listener for\n *   // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires with mousewheel movement\n * // anywhere on screen\n * function mouseWheel() {\n *   g = g + 10;\n * }\n *\n * // this function fires with mousewheel movement\n * // over canvas only\n * function changeSize(event) {\n *   if (event.deltaY > 0) {\n *     d = d + 10;\n *   } else {\n *     d = d - 10;\n *   }\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseWheel = function(fxn) {\n  p5.Element._adjustListener('wheel', fxn, this);\n  return this;\n};\n\n/**\n * The <a href=\"#/p5.Element/mouseReleased\">mouseReleased()</a> function is\n * called once after every time a mouse button is released over the element.\n * Some mobile browsers may also trigger this event on a touch screen, if the\n * user performs a quick tap. This can be used to attach element specific event listeners.\n *\n * @method mouseReleased\n * @param  {Function|Boolean} fxn function to be fired when mouse is\n *                                released over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv, d, g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseReleased(changeGray); // attach listener for\n *   // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires after the mouse has been\n * // released\n * function mouseReleased() {\n *   d = d + 10;\n * }\n *\n * // this function fires after the mouse has been\n * // released while on canvas\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseReleased = function(fxn) {\n  p5.Element._adjustListener('mouseup', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/mouseClicked\">mouseClicked()</a> function is\n * called once after a mouse button is pressed and released over the element.\n * Some mobile browsers may also trigger this event on a touch screen, if the\n * user performs a quick tap.This can be used to attach element specific event listeners.\n *\n * @method mouseClicked\n * @param  {Function|Boolean} fxn function to be fired when mouse is\n *                                clicked over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let cnv, d, g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseClicked(changeGray); // attach listener for\n *   // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires after the mouse has been\n * // clicked anywhere\n * function mouseClicked() {\n *   d = d + 10;\n * }\n *\n * // this function fires after the mouse has been\n * // clicked on canvas\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code>\n * </div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseClicked = function(fxn) {\n  p5.Element._adjustListener('click', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/mouseMoved\">mouseMoved()</a> function is called once every time a\n * mouse moves over the element. This can be used to attach an\n * element specific event listener.\n *\n * @method mouseMoved\n * @param  {Function|Boolean} fxn function to be fired when a mouse moves\n *                                over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv;\n * let d = 30;\n * let g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseMoved(changeSize); // attach listener for\n *   // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   fill(200);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires when mouse moves anywhere on\n * // page\n * function mouseMoved() {\n *   g = g + 5;\n *   if (g > 255) {\n *     g = 0;\n *   }\n * }\n *\n * // this function fires when mouse moves over canvas\n * function changeSize() {\n *   d = d + 2;\n *   if (d > 100) {\n *     d = 0;\n *   }\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseMoved = function(fxn) {\n  p5.Element._adjustListener('mousemove', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/mouseOver\">mouseOver()</a> function is called once after every time a\n * mouse moves onto the element. This can be used to attach an\n * element specific event listener.\n *\n * @method mouseOver\n * @param  {Function|Boolean} fxn function to be fired when a mouse moves\n *                                onto the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv;\n * let d;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseOver(changeGray);\n *   d = 10;\n * }\n *\n * function draw() {\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * function changeGray() {\n *   d = d + 10;\n *   if (d > 100) {\n *     d = 0;\n *   }\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseOver = function(fxn) {\n  p5.Element._adjustListener('mouseover', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/mouseOut\">mouseOut()</a> function is called once after every time a\n * mouse moves off the element. This can be used to attach an\n * element specific event listener.\n *\n * @method mouseOut\n * @param  {Function|Boolean} fxn function to be fired when a mouse\n *                                moves off of an element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv;\n * let d;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseOut(changeGray);\n *   d = 10;\n * }\n *\n * function draw() {\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * function changeGray() {\n *   d = d + 10;\n *   if (d > 100) {\n *     d = 0;\n *   }\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseOut = function(fxn) {\n  p5.Element._adjustListener('mouseout', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/touchStarted\">touchStarted()</a> function is called once after every time a touch is\n * registered. This can be used to attach element specific event listeners.\n *\n * @method touchStarted\n * @param  {Function|Boolean} fxn function to be fired when a touch\n *                                starts over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv;\n * let d;\n * let g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.touchStarted(changeGray); // attach listener for\n *   // canvas click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires with any touch anywhere\n * function touchStarted() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.touchStarted = function(fxn) {\n  p5.Element._adjustListener('touchstart', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/touchMoved\">touchMoved()</a> function is called once after every time a touch move is\n * registered. This can be used to attach element specific event listeners.\n *\n * @method touchMoved\n * @param  {Function|Boolean} fxn function to be fired when a touch moves over\n *                                the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv;\n * let g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.touchMoved(changeGray); // attach listener for\n *   // canvas click only\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.touchMoved = function(fxn) {\n  p5.Element._adjustListener('touchmove', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/touchEnded\">touchEnded()</a> function is called once after every time a touch is\n * registered. This can be used to attach element specific event listeners.\n *\n * @method touchEnded\n * @param  {Function|Boolean} fxn function to be fired when a touch ends\n *                                over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * let cnv;\n * let d;\n * let g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.touchEnded(changeGray); // attach listener for\n *   // canvas click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width / 2, height / 2, d, d);\n * }\n *\n * // this function fires with any touch anywhere\n * function touchEnded() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.touchEnded = function(fxn) {\n  p5.Element._adjustListener('touchend', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/dragOver\">dragOver()</a> function is called once after every time a\n * file is dragged over the element. This can be used to attach an\n * element specific event listener.\n *\n * @method dragOver\n * @param  {Function|Boolean} fxn function to be fired when a file is\n *                                dragged over the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div><code>\n * // To test this sketch, simply drag a\n * // file over the canvas\n * function setup() {\n *   let c = createCanvas(100, 100);\n *   background(200);\n *   textAlign(CENTER);\n *   text('Drag file', width / 2, height / 2);\n *   c.dragOver(dragOverCallback);\n * }\n *\n * // This function will be called whenever\n * // a file is dragged over the canvas\n * function dragOverCallback() {\n *   background(240);\n *   text('Dragged over', width / 2, height / 2);\n * }\n * </code></div>\n * @alt\n * nothing displayed\n */\np5.Element.prototype.dragOver = function(fxn) {\n  p5.Element._adjustListener('dragover', fxn, this);\n  return this;\n};\n\n/**\n * The .dragLeave() function is called once after every time a\n * dragged file leaves the element area. This can be used to attach an\n * element specific event listener.\n *\n * @method dragLeave\n * @param  {Function|Boolean} fxn function to be fired when a file is\n *                                dragged off the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div><code>\n * // To test this sketch, simply drag a file\n * // over and then out of the canvas area\n * function setup() {\n *   let c = createCanvas(100, 100);\n *   background(200);\n *   textAlign(CENTER);\n *   text('Drag file', width / 2, height / 2);\n *   c.dragLeave(dragLeaveCallback);\n * }\n *\n * // This function will be called whenever\n * // a file is dragged out of the canvas\n * function dragLeaveCallback() {\n *   background(240);\n *   text('Dragged off', width / 2, height / 2);\n * }\n * </code></div>\n * @alt\n * nothing displayed\n */\np5.Element.prototype.dragLeave = function(fxn) {\n  p5.Element._adjustListener('dragleave', fxn, this);\n  return this;\n};\n\n// General handler for event attaching and detaching\np5.Element._adjustListener = function(ev, fxn, ctx) {\n  if (fxn === false) {\n    p5.Element._detachListener(ev, ctx);\n  } else {\n    p5.Element._attachListener(ev, fxn, ctx);\n  }\n  return this;\n};\n\np5.Element._attachListener = function(ev, fxn, ctx) {\n  // detach the old listener if there was one\n  if (ctx._events[ev]) {\n    p5.Element._detachListener(ev, ctx);\n  }\n  const f = fxn.bind(ctx);\n  ctx.elt.addEventListener(ev, f, false);\n  ctx._events[ev] = f;\n};\n\np5.Element._detachListener = function(ev, ctx) {\n  const f = ctx._events[ev];\n  ctx.elt.removeEventListener(ev, f, false);\n  ctx._events[ev] = null;\n};\n\n/**\n * Helper fxn for sharing pixel methods\n *\n */\np5.Element.prototype._setProperty = function(prop, value) {\n  this[prop] = value;\n};\n\nexport default p5.Element;\n","/**\n * @module Rendering\n * @submodule Rendering\n * @for p5\n */\n\nimport p5 from './main';\nimport * as constants from './constants';\n\n/**\n * Thin wrapper around a renderer, to be used for creating a\n * graphics buffer object. Use this class if you need\n * to draw into an off-screen graphics buffer. The two parameters define the\n * width and height in pixels. The fields and methods for this class are\n * extensive, but mirror the normal drawing API for p5.\n *\n * @class p5.Graphics\n * @constructor\n * @extends p5.Element\n * @param {Number} w            width\n * @param {Number} h            height\n * @param {Constant} renderer   the renderer to use, either P2D or WEBGL\n * @param {p5} [pInst]          pointer to p5 instance\n */\np5.Graphics = function(w, h, renderer, pInst) {\n  const r = renderer || constants.P2D;\n\n  this.canvas = document.createElement('canvas');\n  const node = pInst._userNode || document.body;\n  node.appendChild(this.canvas);\n\n  p5.Element.call(this, this.canvas, pInst);\n\n  // bind methods and props of p5 to the new object\n  for (const p in p5.prototype) {\n    if (!this[p]) {\n      if (typeof p5.prototype[p] === 'function') {\n        this[p] = p5.prototype[p].bind(this);\n      } else {\n        this[p] = p5.prototype[p];\n      }\n    }\n  }\n\n  p5.prototype._initializeInstanceVariables.apply(this);\n  this.width = w;\n  this.height = h;\n  this._pixelDensity = pInst._pixelDensity;\n\n  if (r === constants.WEBGL) {\n    this._renderer = new p5.RendererGL(this.canvas, this, false);\n  } else {\n    this._renderer = new p5.Renderer2D(this.canvas, this, false);\n  }\n  pInst._elements.push(this);\n\n  Object.defineProperty(this, 'deltaTime', {\n    get: function() {\n      return this._pInst.deltaTime;\n    }\n  });\n\n  this._renderer.resize(w, h);\n  this._renderer._applyDefaults();\n  return this;\n};\n\np5.Graphics.prototype = Object.create(p5.Element.prototype);\n\n/**\n * Resets certain values such as those modified by functions in the Transform category\n * and in the Lights category that are not automatically reset\n * with graphics buffer objects. Calling this in <a href='#/p5/draw'>draw()</a> will copy the behavior\n * of the standard canvas.\n *\n * @method reset\n * @example\n *\n * <div><code>\n * let pg;\n * function setup() {\n *   createCanvas(100, 100);\n *   background(0);\n *   pg = createGraphics(50, 100);\n *   pg.fill(0);\n *   frameRate(5);\n * }\n *\n * function draw() {\n *   image(pg, width / 2, 0);\n *   pg.background(255);\n *   // p5.Graphics object behave a bit differently in some cases\n *   // The normal canvas on the left resets the translate\n *   // with every loop through draw()\n *   // the graphics object on the right doesn't automatically reset\n *   // so translate() is additive and it moves down the screen\n *   rect(0, 0, width / 2, 5);\n *   pg.rect(0, 0, width / 2, 5);\n *   translate(0, 5, 0);\n *   pg.translate(0, 5, 0);\n * }\n * function mouseClicked() {\n *   // if you click you will see that\n *   // reset() resets the translate back to the initial state\n *   // of the Graphics object\n *   pg.reset();\n * }\n * </code></div>\n *\n * @alt\n * A white line on a black background stays still on the top-left half.\n * A black line animates from top to bottom on a white background on the right half.\n * When clicked, the black line starts back over at the top.\n *\n */\np5.Graphics.prototype.reset = function() {\n  this._renderer.resetMatrix();\n  if (this._renderer.isP3D) {\n    this._renderer._update();\n  }\n};\n\n/**\n * Removes a Graphics object from the page and frees any resources\n * associated with it.\n *\n * @method remove\n *\n * @example\n * <div class='norender'><code>\n * let bg;\n * function setup() {\n *   bg = createCanvas(100, 100);\n *   bg.background(0);\n *   image(bg, 0, 0);\n *   bg.remove();\n * }\n * </code></div>\n *\n * <div><code>\n * let bg;\n * function setup() {\n *   pixelDensity(1);\n *   createCanvas(100, 100);\n *   stroke(255);\n *   fill(0);\n *\n *   // create and draw the background image\n *   bg = createGraphics(100, 100);\n *   bg.background(200);\n *   bg.ellipse(50, 50, 80, 80);\n * }\n * function draw() {\n *   let t = millis() / 1000;\n *   // draw the background\n *   if (bg) {\n *     image(bg, frameCount % 100, 0);\n *     image(bg, frameCount % 100 - 100, 0);\n *   }\n *   // draw the foreground\n *   let p = p5.Vector.fromAngle(t, 35).add(50, 50);\n *   ellipse(p.x, p.y, 30);\n * }\n * function mouseClicked() {\n *   // remove the background\n *   if (bg) {\n *     bg.remove();\n *     bg = null;\n *   }\n * }\n * </code></div>\n *\n * @alt\n * no image\n * a multi-colored circle moving back and forth over a scrolling background.\n *\n */\np5.Graphics.prototype.remove = function() {\n  if (this.elt.parentNode) {\n    this.elt.parentNode.removeChild(this.elt);\n  }\n  const idx = this._pInst._elements.indexOf(this);\n  if (idx !== -1) {\n    this._pInst._elements.splice(idx, 1);\n  }\n  for (const elt_ev in this._events) {\n    this.elt.removeEventListener(elt_ev, this._events[elt_ev]);\n  }\n};\n\nexport default p5.Graphics;\n","/**\n * @module Rendering\n * @submodule Rendering\n * @for p5\n */\n\nimport p5 from './main';\nimport * as constants from '../core/constants';\n\n/**\n * Main graphics and rendering context, as well as the base API\n * implementation for p5.js \"core\". To be used as the superclass for\n * Renderer2D and Renderer3D classes, respecitvely.\n *\n * @class p5.Renderer\n * @constructor\n * @extends p5.Element\n * @param {String} elt DOM node that is wrapped\n * @param {p5} [pInst] pointer to p5 instance\n * @param {Boolean} [isMainCanvas] whether we're using it as main canvas\n */\np5.Renderer = function(elt, pInst, isMainCanvas) {\n  p5.Element.call(this, elt, pInst);\n  this.canvas = elt;\n  this._pixelsState = pInst;\n  if (isMainCanvas) {\n    this._isMainCanvas = true;\n    // for pixel method sharing with pimage\n    this._pInst._setProperty('_curElement', this);\n    this._pInst._setProperty('canvas', this.canvas);\n    this._pInst._setProperty('width', this.width);\n    this._pInst._setProperty('height', this.height);\n  } else {\n    // hide if offscreen buffer by default\n    this.canvas.style.display = 'none';\n    this._styles = []; // non-main elt styles stored in p5.Renderer\n  }\n\n  this._textSize = 12;\n  this._textLeading = 15;\n  this._textFont = 'sans-serif';\n  this._textStyle = constants.NORMAL;\n  this._textAscent = null;\n  this._textDescent = null;\n  this._textAlign = constants.LEFT;\n  this._textBaseline = constants.BASELINE;\n\n  this._rectMode = constants.CORNER;\n  this._ellipseMode = constants.CENTER;\n  this._curveTightness = 0;\n  this._imageMode = constants.CORNER;\n\n  this._tint = null;\n  this._doStroke = true;\n  this._doFill = true;\n  this._strokeSet = false;\n  this._fillSet = false;\n};\n\np5.Renderer.prototype = Object.create(p5.Element.prototype);\n\n// the renderer should return a 'style' object that it wishes to\n// store on the push stack.\np5.Renderer.prototype.push = function() {\n  return {\n    properties: {\n      _doStroke: this._doStroke,\n      _strokeSet: this._strokeSet,\n      _doFill: this._doFill,\n      _fillSet: this._fillSet,\n      _tint: this._tint,\n      _imageMode: this._imageMode,\n      _rectMode: this._rectMode,\n      _ellipseMode: this._ellipseMode,\n      _textFont: this._textFont,\n      _textLeading: this._textLeading,\n      _textSize: this._textSize,\n      _textAlign: this._textAlign,\n      _textBaseline: this._textBaseline,\n      _textStyle: this._textStyle\n    }\n  };\n};\n\n// a pop() operation is in progress\n// the renderer is passed the 'style' object that it returned\n// from its push() method.\np5.Renderer.prototype.pop = function(style) {\n  if (style.properties) {\n    // copy the style properties back into the renderer\n    Object.assign(this, style.properties);\n  }\n};\n\n/**\n * Resize our canvas element.\n */\np5.Renderer.prototype.resize = function(w, h) {\n  this.width = w;\n  this.height = h;\n  this.elt.width = w * this._pInst._pixelDensity;\n  this.elt.height = h * this._pInst._pixelDensity;\n  this.elt.style.width = `${w}px`;\n  this.elt.style.height = `${h}px`;\n  if (this._isMainCanvas) {\n    this._pInst._setProperty('width', this.width);\n    this._pInst._setProperty('height', this.height);\n  }\n};\n\np5.Renderer.prototype.get = function(x, y, w, h) {\n  const pixelsState = this._pixelsState;\n  const pd = pixelsState._pixelDensity;\n  const canvas = this.canvas;\n\n  if (typeof x === 'undefined' && typeof y === 'undefined') {\n    // get()\n    x = y = 0;\n    w = pixelsState.width;\n    h = pixelsState.height;\n  } else {\n    x *= pd;\n    y *= pd;\n\n    if (typeof w === 'undefined' && typeof h === 'undefined') {\n      // get(x,y)\n      if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n        return [0, 0, 0, 0];\n      }\n\n      return this._getPixel(x, y);\n    }\n    // get(x,y,w,h)\n  }\n\n  const region = new p5.Image(w, h);\n  region.canvas\n    .getContext('2d')\n    .drawImage(canvas, x, y, w * pd, h * pd, 0, 0, w, h);\n\n  return region;\n};\n\np5.Renderer.prototype.textLeading = function(l) {\n  if (typeof l === 'number') {\n    this._setProperty('_textLeading', l);\n    return this._pInst;\n  }\n\n  return this._textLeading;\n};\n\np5.Renderer.prototype.textSize = function(s) {\n  if (typeof s === 'number') {\n    this._setProperty('_textSize', s);\n    this._setProperty('_textLeading', s * constants._DEFAULT_LEADMULT);\n    return this._applyTextProperties();\n  }\n\n  return this._textSize;\n};\n\np5.Renderer.prototype.textStyle = function(s) {\n  if (s) {\n    if (\n      s === constants.NORMAL ||\n      s === constants.ITALIC ||\n      s === constants.BOLD ||\n      s === constants.BOLDITALIC\n    ) {\n      this._setProperty('_textStyle', s);\n    }\n\n    return this._applyTextProperties();\n  }\n\n  return this._textStyle;\n};\n\np5.Renderer.prototype.textAscent = function() {\n  if (this._textAscent === null) {\n    this._updateTextMetrics();\n  }\n  return this._textAscent;\n};\n\np5.Renderer.prototype.textDescent = function() {\n  if (this._textDescent === null) {\n    this._updateTextMetrics();\n  }\n  return this._textDescent;\n};\n\np5.Renderer.prototype.textAlign = function(h, v) {\n  if (typeof h !== 'undefined') {\n    this._setProperty('_textAlign', h);\n\n    if (typeof v !== 'undefined') {\n      this._setProperty('_textBaseline', v);\n    }\n\n    return this._applyTextProperties();\n  } else {\n    return {\n      horizontal: this._textAlign,\n      vertical: this._textBaseline\n    };\n  }\n};\n\np5.Renderer.prototype.text = function(str, x, y, maxWidth, maxHeight) {\n  const p = this._pInst;\n  let cars;\n  let n;\n  let ii;\n  let jj;\n  let line;\n  let testLine;\n  let testWidth;\n  let words;\n  let totalHeight;\n  let finalMaxHeight = Number.MAX_VALUE;\n\n  if (!(this._doFill || this._doStroke)) {\n    return;\n  }\n\n  if (typeof str === 'undefined') {\n    return;\n  } else if (typeof str !== 'string') {\n    str = str.toString();\n  }\n\n  str = str.replace(/(\\t)/g, '  ');\n  cars = str.split('\\n');\n\n  if (typeof maxWidth !== 'undefined') {\n    totalHeight = 0;\n    for (ii = 0; ii < cars.length; ii++) {\n      line = '';\n      words = cars[ii].split(' ');\n      for (n = 0; n < words.length; n++) {\n        testLine = `${line + words[n]} `;\n        testWidth = this.textWidth(testLine);\n        if (testWidth > maxWidth) {\n          line = `${words[n]} `;\n          totalHeight += p.textLeading();\n        } else {\n          line = testLine;\n        }\n      }\n    }\n\n    if (this._rectMode === constants.CENTER) {\n      x -= maxWidth / 2;\n      y -= maxHeight / 2;\n    }\n\n    switch (this._textAlign) {\n      case constants.CENTER:\n        x += maxWidth / 2;\n        break;\n      case constants.RIGHT:\n        x += maxWidth;\n        break;\n    }\n\n    let baselineHacked = false;\n    if (typeof maxHeight !== 'undefined') {\n      switch (this._textBaseline) {\n        case constants.BOTTOM:\n          y += maxHeight - totalHeight;\n          break;\n        case constants.CENTER:\n          y += (maxHeight - totalHeight) / 2;\n          break;\n        case constants.BASELINE:\n          baselineHacked = true;\n          this._textBaseline = constants.TOP;\n          break;\n      }\n\n      // remember the max-allowed y-position for any line (fix to #928)\n      finalMaxHeight = y + maxHeight - p.textAscent();\n    }\n\n    for (ii = 0; ii < cars.length; ii++) {\n      line = '';\n      words = cars[ii].split(' ');\n      for (n = 0; n < words.length; n++) {\n        testLine = `${line + words[n]} `;\n        testWidth = this.textWidth(testLine);\n        if (testWidth > maxWidth && line.length > 0) {\n          this._renderText(p, line, x, y, finalMaxHeight);\n          line = `${words[n]} `;\n          y += p.textLeading();\n        } else {\n          line = testLine;\n        }\n      }\n\n      this._renderText(p, line, x, y, finalMaxHeight);\n      y += p.textLeading();\n\n      if (baselineHacked) {\n        this._textBaseline = constants.BASELINE;\n      }\n    }\n  } else {\n    // Offset to account for vertically centering multiple lines of text - no\n    // need to adjust anything for vertical align top or baseline\n    let offset = 0;\n\n    const vAlign = p.textAlign().vertical;\n    if (vAlign === constants.CENTER) {\n      offset = (cars.length - 1) * p.textLeading() / 2;\n    } else if (vAlign === constants.BOTTOM) {\n      offset = (cars.length - 1) * p.textLeading();\n    }\n\n    for (jj = 0; jj < cars.length; jj++) {\n      this._renderText(p, cars[jj], x, y - offset, finalMaxHeight);\n      y += p.textLeading();\n    }\n  }\n\n  return p;\n};\n\np5.Renderer.prototype._applyDefaults = function() {\n  return this;\n};\n\n/**\n * Helper fxn to check font type (system or otf)\n */\np5.Renderer.prototype._isOpenType = function(f = this._textFont) {\n  return typeof f === 'object' && f.font && f.font.supported;\n};\n\np5.Renderer.prototype._updateTextMetrics = function() {\n  if (this._isOpenType()) {\n    this._setProperty('_textAscent', this._textFont._textAscent());\n    this._setProperty('_textDescent', this._textFont._textDescent());\n    return this;\n  }\n\n  // Adapted from http://stackoverflow.com/a/25355178\n  const text = document.createElement('span');\n  text.style.fontFamily = this._textFont;\n  text.style.fontSize = `${this._textSize}px`;\n  text.innerHTML = 'ABCjgq|';\n\n  const block = document.createElement('div');\n  block.style.display = 'inline-block';\n  block.style.width = '1px';\n  block.style.height = '0px';\n\n  const container = document.createElement('div');\n  container.appendChild(text);\n  container.appendChild(block);\n\n  container.style.height = '0px';\n  container.style.overflow = 'hidden';\n  document.body.appendChild(container);\n\n  block.style.verticalAlign = 'baseline';\n  let blockOffset = calculateOffset(block);\n  let textOffset = calculateOffset(text);\n  const ascent = blockOffset[1] - textOffset[1];\n\n  block.style.verticalAlign = 'bottom';\n  blockOffset = calculateOffset(block);\n  textOffset = calculateOffset(text);\n  const height = blockOffset[1] - textOffset[1];\n  const descent = height - ascent;\n\n  document.body.removeChild(container);\n\n  this._setProperty('_textAscent', ascent);\n  this._setProperty('_textDescent', descent);\n\n  return this;\n};\n\n/**\n * Helper fxn to measure ascent and descent.\n * Adapted from http://stackoverflow.com/a/25355178\n */\nfunction calculateOffset(object) {\n  let currentLeft = 0,\n    currentTop = 0;\n  if (object.offsetParent) {\n    do {\n      currentLeft += object.offsetLeft;\n      currentTop += object.offsetTop;\n    } while ((object = object.offsetParent));\n  } else {\n    currentLeft += object.offsetLeft;\n    currentTop += object.offsetTop;\n  }\n  return [currentLeft, currentTop];\n}\n\nexport default p5.Renderer;\n","/*global ImageData:false */\n\n/**\n * This module defines the filters for use with image buffers.\n *\n * This module is basically a collection of functions stored in an object\n * as opposed to modules. The functions are destructive, modifying\n * the passed in canvas rather than creating a copy.\n *\n * Generally speaking users of this module will use the Filters.apply method\n * on a canvas to create an effect.\n *\n * A number of functions are borrowed/adapted from\n * http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n * or the java processing implementation.\n */\n\nconst Filters = {};\n\n/*\n * Helper functions\n */\n\n/**\n * Returns the pixel buffer for a canvas\n *\n * @private\n *\n * @param  {Canvas|ImageData} canvas the canvas to get pixels from\n * @return {Uint8ClampedArray}       a one-dimensional array containing\n *                                   the data in thc RGBA order, with integer\n *                                   values between 0 and 255\n */\nFilters._toPixels = function(canvas) {\n  if (canvas instanceof ImageData) {\n    return canvas.data;\n  } else {\n    return canvas\n      .getContext('2d')\n      .getImageData(0, 0, canvas.width, canvas.height).data;\n  }\n};\n\n/**\n * Returns a 32 bit number containing ARGB data at ith pixel in the\n * 1D array containing pixels data.\n *\n * @private\n *\n * @param  {Uint8ClampedArray} data array returned by _toPixels()\n * @param  {Integer}           i    index of a 1D Image Array\n * @return {Integer}                32 bit integer value representing\n *                                  ARGB value.\n */\nFilters._getARGB = function(data, i) {\n  const offset = i * 4;\n  return (\n    ((data[offset + 3] << 24) & 0xff000000) |\n    ((data[offset] << 16) & 0x00ff0000) |\n    ((data[offset + 1] << 8) & 0x0000ff00) |\n    (data[offset + 2] & 0x000000ff)\n  );\n};\n\n/**\n * Modifies pixels RGBA values to values contained in the data object.\n *\n * @private\n *\n * @param {Uint8ClampedArray} pixels array returned by _toPixels()\n * @param {Int32Array}        data   source 1D array where each value\n *                                   represents ARGB values\n */\nFilters._setPixels = function(pixels, data) {\n  let offset = 0;\n  for (let i = 0, al = pixels.length; i < al; i++) {\n    offset = i * 4;\n    pixels[offset + 0] = (data[i] & 0x00ff0000) >>> 16;\n    pixels[offset + 1] = (data[i] & 0x0000ff00) >>> 8;\n    pixels[offset + 2] = data[i] & 0x000000ff;\n    pixels[offset + 3] = (data[i] & 0xff000000) >>> 24;\n  }\n};\n\n/**\n * Returns the ImageData object for a canvas\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n *\n * @private\n *\n * @param  {Canvas|ImageData} canvas canvas to get image data from\n * @return {ImageData}               Holder of pixel data (and width and\n *                                   height) for a canvas\n */\nFilters._toImageData = function(canvas) {\n  if (canvas instanceof ImageData) {\n    return canvas;\n  } else {\n    return canvas\n      .getContext('2d')\n      .getImageData(0, 0, canvas.width, canvas.height);\n  }\n};\n\n/**\n * Returns a blank ImageData object.\n *\n * @private\n *\n * @param  {Integer} width\n * @param  {Integer} height\n * @return {ImageData}\n */\nFilters._createImageData = function(width, height) {\n  Filters._tmpCanvas = document.createElement('canvas');\n  Filters._tmpCtx = Filters._tmpCanvas.getContext('2d');\n  return this._tmpCtx.createImageData(width, height);\n};\n\n/**\n * Applys a filter function to a canvas.\n *\n * The difference between this and the actual filter functions defined below\n * is that the filter functions generally modify the pixel buffer but do\n * not actually put that data back to the canvas (where it would actually\n * update what is visible). By contrast this method does make the changes\n * actually visible in the canvas.\n *\n * The apply method is the method that callers of this module would generally\n * use. It has been separated from the actual filters to support an advanced\n * use case of creating a filter chain that executes without actually updating\n * the canvas in between everystep.\n *\n * @private\n * @param  {HTMLCanvasElement} canvas [description]\n * @param  {function(ImageData,Object)} func   [description]\n * @param  {Object} filterParam  [description]\n */\nFilters.apply = function(canvas, func, filterParam) {\n  const pixelsState = canvas.getContext('2d');\n  const imageData = pixelsState.getImageData(0, 0, canvas.width, canvas.height);\n\n  //Filters can either return a new ImageData object, or just modify\n  //the one they received.\n  const newImageData = func(imageData, filterParam);\n  if (newImageData instanceof ImageData) {\n    pixelsState.putImageData(\n      newImageData,\n      0,\n      0,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  } else {\n    pixelsState.putImageData(\n      imageData,\n      0,\n      0,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n};\n\n/*\n * Filters\n */\n\n/**\n * Converts the image to black and white pixels depending if they are above or\n * below the threshold defined by the level parameter. The parameter must be\n * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n *\n * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n *\n * @private\n * @param  {Canvas} canvas\n * @param  {Float} level\n */\nFilters.threshold = function(canvas, level) {\n  const pixels = Filters._toPixels(canvas);\n\n  if (level === undefined) {\n    level = 0.5;\n  }\n  const thresh = Math.floor(level * 255);\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    const r = pixels[i];\n    const g = pixels[i + 1];\n    const b = pixels[i + 2];\n    const gray = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    let val;\n    if (gray >= thresh) {\n      val = 255;\n    } else {\n      val = 0;\n    }\n    pixels[i] = pixels[i + 1] = pixels[i + 2] = val;\n  }\n};\n\n/**\n * Converts any colors in the image to grayscale equivalents.\n * No parameter is used.\n *\n * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n *\n * @private\n * @param {Canvas} canvas\n */\nFilters.gray = function(canvas) {\n  const pixels = Filters._toPixels(canvas);\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    const r = pixels[i];\n    const g = pixels[i + 1];\n    const b = pixels[i + 2];\n\n    // CIE luminance for RGB\n    const gray = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    pixels[i] = pixels[i + 1] = pixels[i + 2] = gray;\n  }\n};\n\n/**\n * Sets the alpha channel to entirely opaque. No parameter is used.\n *\n * @private\n * @param {Canvas} canvas\n */\nFilters.opaque = function(canvas) {\n  const pixels = Filters._toPixels(canvas);\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    pixels[i + 3] = 255;\n  }\n\n  return pixels;\n};\n\n/**\n * Sets each pixel to its inverse value. No parameter is used.\n * @private\n * @param  {Canvas} canvas\n */\nFilters.invert = function(canvas) {\n  const pixels = Filters._toPixels(canvas);\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    pixels[i] = 255 - pixels[i];\n    pixels[i + 1] = 255 - pixels[i + 1];\n    pixels[i + 2] = 255 - pixels[i + 2];\n  }\n};\n\n/**\n * Limits each channel of the image to the number of colors specified as\n * the parameter. The parameter can be set to values between 2 and 255, but\n * results are most noticeable in the lower ranges.\n *\n * Adapted from java based processing implementation\n *\n * @private\n * @param  {Canvas} canvas\n * @param  {Integer} level\n */\nFilters.posterize = function(canvas, level) {\n  const pixels = Filters._toPixels(canvas);\n\n  if (level < 2 || level > 255) {\n    throw new Error(\n      'Level must be greater than 2 and less than 255 for posterize'\n    );\n  }\n\n  const levels1 = level - 1;\n  for (let i = 0; i < pixels.length; i += 4) {\n    const rlevel = pixels[i];\n    const glevel = pixels[i + 1];\n    const blevel = pixels[i + 2];\n\n    pixels[i] = ((rlevel * level) >> 8) * 255 / levels1;\n    pixels[i + 1] = ((glevel * level) >> 8) * 255 / levels1;\n    pixels[i + 2] = ((blevel * level) >> 8) * 255 / levels1;\n  }\n};\n\n/**\n * reduces the bright areas in an image\n * @private\n * @param  {Canvas} canvas\n *\n */\nFilters.dilate = function(canvas) {\n  const pixels = Filters._toPixels(canvas);\n  let currIdx = 0;\n  const maxIdx = pixels.length ? pixels.length / 4 : 0;\n  const out = new Int32Array(maxIdx);\n  let currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n\n  let idxRight, idxLeft, idxUp, idxDown;\n  let colRight, colLeft, colUp, colDown;\n  let lumRight, lumLeft, lumUp, lumDown;\n\n  while (currIdx < maxIdx) {\n    currRowIdx = currIdx;\n    maxRowIdx = currIdx + canvas.width;\n    while (currIdx < maxRowIdx) {\n      colOrig = colOut = Filters._getARGB(pixels, currIdx);\n      idxLeft = currIdx - 1;\n      idxRight = currIdx + 1;\n      idxUp = currIdx - canvas.width;\n      idxDown = currIdx + canvas.width;\n\n      if (idxLeft < currRowIdx) {\n        idxLeft = currIdx;\n      }\n      if (idxRight >= maxRowIdx) {\n        idxRight = currIdx;\n      }\n      if (idxUp < 0) {\n        idxUp = 0;\n      }\n      if (idxDown >= maxIdx) {\n        idxDown = currIdx;\n      }\n      colUp = Filters._getARGB(pixels, idxUp);\n      colLeft = Filters._getARGB(pixels, idxLeft);\n      colDown = Filters._getARGB(pixels, idxDown);\n      colRight = Filters._getARGB(pixels, idxRight);\n\n      //compute luminance\n      currLum =\n        77 * ((colOrig >> 16) & 0xff) +\n        151 * ((colOrig >> 8) & 0xff) +\n        28 * (colOrig & 0xff);\n      lumLeft =\n        77 * ((colLeft >> 16) & 0xff) +\n        151 * ((colLeft >> 8) & 0xff) +\n        28 * (colLeft & 0xff);\n      lumRight =\n        77 * ((colRight >> 16) & 0xff) +\n        151 * ((colRight >> 8) & 0xff) +\n        28 * (colRight & 0xff);\n      lumUp =\n        77 * ((colUp >> 16) & 0xff) +\n        151 * ((colUp >> 8) & 0xff) +\n        28 * (colUp & 0xff);\n      lumDown =\n        77 * ((colDown >> 16) & 0xff) +\n        151 * ((colDown >> 8) & 0xff) +\n        28 * (colDown & 0xff);\n\n      if (lumLeft > currLum) {\n        colOut = colLeft;\n        currLum = lumLeft;\n      }\n      if (lumRight > currLum) {\n        colOut = colRight;\n        currLum = lumRight;\n      }\n      if (lumUp > currLum) {\n        colOut = colUp;\n        currLum = lumUp;\n      }\n      if (lumDown > currLum) {\n        colOut = colDown;\n        currLum = lumDown;\n      }\n      out[currIdx++] = colOut;\n    }\n  }\n  Filters._setPixels(pixels, out);\n};\n\n/**\n * increases the bright areas in an image\n * @private\n * @param  {Canvas} canvas\n *\n */\nFilters.erode = function(canvas) {\n  const pixels = Filters._toPixels(canvas);\n  let currIdx = 0;\n  const maxIdx = pixels.length ? pixels.length / 4 : 0;\n  const out = new Int32Array(maxIdx);\n  let currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n  let idxRight, idxLeft, idxUp, idxDown;\n  let colRight, colLeft, colUp, colDown;\n  let lumRight, lumLeft, lumUp, lumDown;\n\n  while (currIdx < maxIdx) {\n    currRowIdx = currIdx;\n    maxRowIdx = currIdx + canvas.width;\n    while (currIdx < maxRowIdx) {\n      colOrig = colOut = Filters._getARGB(pixels, currIdx);\n      idxLeft = currIdx - 1;\n      idxRight = currIdx + 1;\n      idxUp = currIdx - canvas.width;\n      idxDown = currIdx + canvas.width;\n\n      if (idxLeft < currRowIdx) {\n        idxLeft = currIdx;\n      }\n      if (idxRight >= maxRowIdx) {\n        idxRight = currIdx;\n      }\n      if (idxUp < 0) {\n        idxUp = 0;\n      }\n      if (idxDown >= maxIdx) {\n        idxDown = currIdx;\n      }\n      colUp = Filters._getARGB(pixels, idxUp);\n      colLeft = Filters._getARGB(pixels, idxLeft);\n      colDown = Filters._getARGB(pixels, idxDown);\n      colRight = Filters._getARGB(pixels, idxRight);\n\n      //compute luminance\n      currLum =\n        77 * ((colOrig >> 16) & 0xff) +\n        151 * ((colOrig >> 8) & 0xff) +\n        28 * (colOrig & 0xff);\n      lumLeft =\n        77 * ((colLeft >> 16) & 0xff) +\n        151 * ((colLeft >> 8) & 0xff) +\n        28 * (colLeft & 0xff);\n      lumRight =\n        77 * ((colRight >> 16) & 0xff) +\n        151 * ((colRight >> 8) & 0xff) +\n        28 * (colRight & 0xff);\n      lumUp =\n        77 * ((colUp >> 16) & 0xff) +\n        151 * ((colUp >> 8) & 0xff) +\n        28 * (colUp & 0xff);\n      lumDown =\n        77 * ((colDown >> 16) & 0xff) +\n        151 * ((colDown >> 8) & 0xff) +\n        28 * (colDown & 0xff);\n\n      if (lumLeft < currLum) {\n        colOut = colLeft;\n        currLum = lumLeft;\n      }\n      if (lumRight < currLum) {\n        colOut = colRight;\n        currLum = lumRight;\n      }\n      if (lumUp < currLum) {\n        colOut = colUp;\n        currLum = lumUp;\n      }\n      if (lumDown < currLum) {\n        colOut = colDown;\n        currLum = lumDown;\n      }\n\n      out[currIdx++] = colOut;\n    }\n  }\n  Filters._setPixels(pixels, out);\n};\n\n// BLUR\n\n// internal kernel stuff for the gaussian blur filter\nlet blurRadius;\nlet blurKernelSize;\nlet blurKernel;\nlet blurMult;\n\n/*\n * Port of https://github.com/processing/processing/blob/\n * master/core/src/processing/core/PImage.java#L1250\n *\n * Optimized code for building the blur kernel.\n * further optimized blur code (approx. 15% for radius=20)\n * bigger speed gains for larger radii (~30%)\n * added support for various image types (ALPHA, RGB, ARGB)\n * [toxi 050728]\n */\nfunction buildBlurKernel(r) {\n  let radius = (r * 3.5) | 0;\n  radius = radius < 1 ? 1 : radius < 248 ? radius : 248;\n\n  if (blurRadius !== radius) {\n    blurRadius = radius;\n    blurKernelSize = (1 + blurRadius) << 1;\n    blurKernel = new Int32Array(blurKernelSize);\n    blurMult = new Array(blurKernelSize);\n    for (let l = 0; l < blurKernelSize; l++) {\n      blurMult[l] = new Int32Array(256);\n    }\n\n    let bk, bki;\n    let bm, bmi;\n\n    for (let i = 1, radiusi = radius - 1; i < radius; i++) {\n      blurKernel[radius + i] = blurKernel[radiusi] = bki = radiusi * radiusi;\n      bm = blurMult[radius + i];\n      bmi = blurMult[radiusi--];\n      for (let j = 0; j < 256; j++) {\n        bm[j] = bmi[j] = bki * j;\n      }\n    }\n    bk = blurKernel[radius] = radius * radius;\n    bm = blurMult[radius];\n\n    for (let k = 0; k < 256; k++) {\n      bm[k] = bk * k;\n    }\n  }\n}\n\n// Port of https://github.com/processing/processing/blob/\n// master/core/src/processing/core/PImage.java#L1433\nfunction blurARGB(canvas, radius) {\n  const pixels = Filters._toPixels(canvas);\n  const width = canvas.width;\n  const height = canvas.height;\n  const numPackedPixels = width * height;\n  const argb = new Int32Array(numPackedPixels);\n  for (let j = 0; j < numPackedPixels; j++) {\n    argb[j] = Filters._getARGB(pixels, j);\n  }\n  let sum, cr, cg, cb, ca;\n  let read, ri, ym, ymi, bk0;\n  const a2 = new Int32Array(numPackedPixels);\n  const r2 = new Int32Array(numPackedPixels);\n  const g2 = new Int32Array(numPackedPixels);\n  const b2 = new Int32Array(numPackedPixels);\n  let yi = 0;\n  buildBlurKernel(radius);\n  let x, y, i;\n  let bm;\n  for (y = 0; y < height; y++) {\n    for (x = 0; x < width; x++) {\n      cb = cg = cr = ca = sum = 0;\n      read = x - blurRadius;\n      if (read < 0) {\n        bk0 = -read;\n        read = 0;\n      } else {\n        if (read >= width) {\n          break;\n        }\n        bk0 = 0;\n      }\n      for (i = bk0; i < blurKernelSize; i++) {\n        if (read >= width) {\n          break;\n        }\n        const c = argb[read + yi];\n        bm = blurMult[i];\n        ca += bm[(c & -16777216) >>> 24];\n        cr += bm[(c & 16711680) >> 16];\n        cg += bm[(c & 65280) >> 8];\n        cb += bm[c & 255];\n        sum += blurKernel[i];\n        read++;\n      }\n      ri = yi + x;\n      a2[ri] = ca / sum;\n      r2[ri] = cr / sum;\n      g2[ri] = cg / sum;\n      b2[ri] = cb / sum;\n    }\n    yi += width;\n  }\n  yi = 0;\n  ym = -blurRadius;\n  ymi = ym * width;\n  for (y = 0; y < height; y++) {\n    for (x = 0; x < width; x++) {\n      cb = cg = cr = ca = sum = 0;\n      if (ym < 0) {\n        bk0 = ri = -ym;\n        read = x;\n      } else {\n        if (ym >= height) {\n          break;\n        }\n        bk0 = 0;\n        ri = ym;\n        read = x + ymi;\n      }\n      for (i = bk0; i < blurKernelSize; i++) {\n        if (ri >= height) {\n          break;\n        }\n        bm = blurMult[i];\n        ca += bm[a2[read]];\n        cr += bm[r2[read]];\n        cg += bm[g2[read]];\n        cb += bm[b2[read]];\n        sum += blurKernel[i];\n        ri++;\n        read += width;\n      }\n      argb[x + yi] =\n        ((ca / sum) << 24) |\n        ((cr / sum) << 16) |\n        ((cg / sum) << 8) |\n        (cb / sum);\n    }\n    yi += width;\n    ymi += width;\n    ym++;\n  }\n  Filters._setPixels(pixels, argb);\n}\n\nFilters.blur = function(canvas, radius) {\n  blurARGB(canvas, radius);\n};\n\nexport default Filters;\n","import p5 from './main';\nimport * as constants from './constants';\nimport filters from '../image/filters';\n\nimport './p5.Renderer';\n\n/**\n * p5.Renderer2D\n * The 2D graphics canvas renderer class.\n * extends p5.Renderer\n */\nconst styleEmpty = 'rgba(0,0,0,0)';\n// const alphaThreshold = 0.00125; // minimum visible\n\np5.Renderer2D = function(elt, pInst, isMainCanvas) {\n  p5.Renderer.call(this, elt, pInst, isMainCanvas);\n  this.drawingContext = this.canvas.getContext('2d');\n  this._pInst._setProperty('drawingContext', this.drawingContext);\n  return this;\n};\n\np5.Renderer2D.prototype = Object.create(p5.Renderer.prototype);\n\np5.Renderer2D.prototype._applyDefaults = function() {\n  this._cachedFillStyle = this._cachedStrokeStyle = undefined;\n  this._cachedBlendMode = constants.BLEND;\n  this._setFill(constants._DEFAULT_FILL);\n  this._setStroke(constants._DEFAULT_STROKE);\n  this.drawingContext.lineCap = constants.ROUND;\n  this.drawingContext.font = 'normal 12px sans-serif';\n};\n\np5.Renderer2D.prototype.resize = function(w, h) {\n  p5.Renderer.prototype.resize.call(this, w, h);\n  this.drawingContext.scale(\n    this._pInst._pixelDensity,\n    this._pInst._pixelDensity\n  );\n};\n\n//////////////////////////////////////////////\n// COLOR | Setting\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.background = function(...args) {\n  this.drawingContext.save();\n  this.resetMatrix();\n\n  if (args[0] instanceof p5.Image) {\n    this._pInst.image(args[0], 0, 0, this.width, this.height);\n  } else {\n    const curFill = this._getFill();\n    // create background rect\n    const color = this._pInst.color(...args);\n    const newFill = color.toString();\n    this._setFill(newFill);\n\n    if (this._isErasing) {\n      this.blendMode(this._cachedBlendMode);\n    }\n\n    this.drawingContext.fillRect(0, 0, this.width, this.height);\n    // reset fill\n    this._setFill(curFill);\n\n    if (this._isErasing) {\n      this._pInst.erase();\n    }\n  }\n  this.drawingContext.restore();\n};\n\np5.Renderer2D.prototype.clear = function() {\n  this.drawingContext.save();\n  this.resetMatrix();\n  this.drawingContext.clearRect(0, 0, this.width, this.height);\n  this.drawingContext.restore();\n};\n\np5.Renderer2D.prototype.fill = function(...args) {\n  const color = this._pInst.color(...args);\n  this._setFill(color.toString());\n};\n\np5.Renderer2D.prototype.stroke = function(...args) {\n  const color = this._pInst.color(...args);\n  this._setStroke(color.toString());\n};\n\np5.Renderer2D.prototype.erase = function(opacityFill, opacityStroke) {\n  if (!this._isErasing) {\n    // cache the fill style\n    this._cachedFillStyle = this.drawingContext.fillStyle;\n    const newFill = this._pInst.color(255, opacityFill).toString();\n    this.drawingContext.fillStyle = newFill;\n\n    //cache the stroke style\n    this._cachedStrokeStyle = this.drawingContext.strokeStyle;\n    const newStroke = this._pInst.color(255, opacityStroke).toString();\n    this.drawingContext.strokeStyle = newStroke;\n\n    //cache blendMode\n    const tempBlendMode = this._cachedBlendMode;\n    this.blendMode(constants.REMOVE);\n    this._cachedBlendMode = tempBlendMode;\n\n    this._isErasing = true;\n  }\n};\n\np5.Renderer2D.prototype.noErase = function() {\n  if (this._isErasing) {\n    this.drawingContext.fillStyle = this._cachedFillStyle;\n    this.drawingContext.strokeStyle = this._cachedStrokeStyle;\n\n    this.blendMode(this._cachedBlendMode);\n    this._isErasing = false;\n  }\n};\n\n//////////////////////////////////////////////\n// IMAGE | Loading & Displaying\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.image = function(\n  img,\n  sx,\n  sy,\n  sWidth,\n  sHeight,\n  dx,\n  dy,\n  dWidth,\n  dHeight\n) {\n  let cnv;\n  if (img.gifProperties) {\n    img._animateGif(this._pInst);\n  }\n\n  try {\n    if (this._tint) {\n      if (p5.MediaElement && img instanceof p5.MediaElement) {\n        img.loadPixels();\n      }\n      if (img.canvas) {\n        cnv = this._getTintedImageCanvas(img);\n      }\n    }\n    if (!cnv) {\n      cnv = img.canvas || img.elt;\n    }\n    let s = 1;\n    if (img.width && img.width > 0) {\n      s = cnv.width / img.width;\n    }\n    if (this._isErasing) {\n      this.blendMode(this._cachedBlendMode);\n    }\n    this.drawingContext.drawImage(\n      cnv,\n      s * sx,\n      s * sy,\n      s * sWidth,\n      s * sHeight,\n      dx,\n      dy,\n      dWidth,\n      dHeight\n    );\n    if (this._isErasing) {\n      this._pInst.erase();\n    }\n  } catch (e) {\n    if (e.name !== 'NS_ERROR_NOT_AVAILABLE') {\n      throw e;\n    }\n  }\n};\n\np5.Renderer2D.prototype._getTintedImageCanvas = function(img) {\n  if (!img.canvas) {\n    return img;\n  }\n  const pixels = filters._toPixels(img.canvas);\n  const tmpCanvas = document.createElement('canvas');\n  tmpCanvas.width = img.canvas.width;\n  tmpCanvas.height = img.canvas.height;\n  const tmpCtx = tmpCanvas.getContext('2d');\n  const id = tmpCtx.createImageData(img.canvas.width, img.canvas.height);\n  const newPixels = id.data;\n  for (let i = 0; i < pixels.length; i += 4) {\n    const r = pixels[i];\n    const g = pixels[i + 1];\n    const b = pixels[i + 2];\n    const a = pixels[i + 3];\n    newPixels[i] = r * this._tint[0] / 255;\n    newPixels[i + 1] = g * this._tint[1] / 255;\n    newPixels[i + 2] = b * this._tint[2] / 255;\n    newPixels[i + 3] = a * this._tint[3] / 255;\n  }\n  tmpCtx.putImageData(id, 0, 0);\n  return tmpCanvas;\n};\n\n//////////////////////////////////////////////\n// IMAGE | Pixels\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.blendMode = function(mode) {\n  if (mode === constants.SUBTRACT) {\n    console.warn('blendMode(SUBTRACT) only works in WEBGL mode.');\n  } else if (\n    mode === constants.BLEND ||\n    mode === constants.REMOVE ||\n    mode === constants.DARKEST ||\n    mode === constants.LIGHTEST ||\n    mode === constants.DIFFERENCE ||\n    mode === constants.MULTIPLY ||\n    mode === constants.EXCLUSION ||\n    mode === constants.SCREEN ||\n    mode === constants.REPLACE ||\n    mode === constants.OVERLAY ||\n    mode === constants.HARD_LIGHT ||\n    mode === constants.SOFT_LIGHT ||\n    mode === constants.DODGE ||\n    mode === constants.BURN ||\n    mode === constants.ADD\n  ) {\n    this._cachedBlendMode = mode;\n    this.drawingContext.globalCompositeOperation = mode;\n  } else {\n    throw new Error(`Mode ${mode} not recognized.`);\n  }\n};\n\np5.Renderer2D.prototype.blend = function(...args) {\n  const currBlend = this.drawingContext.globalCompositeOperation;\n  const blendMode = args[args.length - 1];\n\n  const copyArgs = Array.prototype.slice.call(args, 0, args.length - 1);\n\n  this.drawingContext.globalCompositeOperation = blendMode;\n\n  p5.prototype.copy.apply(this, copyArgs);\n\n  this.drawingContext.globalCompositeOperation = currBlend;\n};\n\n// p5.Renderer2D.prototype.get = p5.Renderer.prototype.get;\n// .get() is not overridden\n\n// x,y are canvas-relative (pre-scaled by _pixelDensity)\np5.Renderer2D.prototype._getPixel = function(x, y) {\n  let imageData, index;\n  imageData = this.drawingContext.getImageData(x, y, 1, 1).data;\n  index = 0;\n  return [\n    imageData[index + 0],\n    imageData[index + 1],\n    imageData[index + 2],\n    imageData[index + 3]\n  ];\n};\n\np5.Renderer2D.prototype.loadPixels = function() {\n  const pixelsState = this._pixelsState; // if called by p5.Image\n\n  const pd = pixelsState._pixelDensity;\n  const w = this.width * pd;\n  const h = this.height * pd;\n  const imageData = this.drawingContext.getImageData(0, 0, w, h);\n  // @todo this should actually set pixels per object, so diff buffers can\n  // have diff pixel arrays.\n  pixelsState._setProperty('imageData', imageData);\n  pixelsState._setProperty('pixels', imageData.data);\n};\n\np5.Renderer2D.prototype.set = function(x, y, imgOrCol) {\n  // round down to get integer numbers\n  x = Math.floor(x);\n  y = Math.floor(y);\n  const pixelsState = this._pixelsState;\n  if (imgOrCol instanceof p5.Image) {\n    this.drawingContext.save();\n    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n    this.drawingContext.scale(\n      pixelsState._pixelDensity,\n      pixelsState._pixelDensity\n    );\n    this.drawingContext.drawImage(imgOrCol.canvas, x, y);\n    this.drawingContext.restore();\n  } else {\n    let r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n    let idx =\n      4 *\n      (y *\n        pixelsState._pixelDensity *\n        (this.width * pixelsState._pixelDensity) +\n        x * pixelsState._pixelDensity);\n    if (!pixelsState.imageData) {\n      pixelsState.loadPixels.call(pixelsState);\n    }\n    if (typeof imgOrCol === 'number') {\n      if (idx < pixelsState.pixels.length) {\n        r = imgOrCol;\n        g = imgOrCol;\n        b = imgOrCol;\n        a = 255;\n        //this.updatePixels.call(this);\n      }\n    } else if (imgOrCol instanceof Array) {\n      if (imgOrCol.length < 4) {\n        throw new Error('pixel array must be of the form [R, G, B, A]');\n      }\n      if (idx < pixelsState.pixels.length) {\n        r = imgOrCol[0];\n        g = imgOrCol[1];\n        b = imgOrCol[2];\n        a = imgOrCol[3];\n        //this.updatePixels.call(this);\n      }\n    } else if (imgOrCol instanceof p5.Color) {\n      if (idx < pixelsState.pixels.length) {\n        r = imgOrCol.levels[0];\n        g = imgOrCol.levels[1];\n        b = imgOrCol.levels[2];\n        a = imgOrCol.levels[3];\n        //this.updatePixels.call(this);\n      }\n    }\n    // loop over pixelDensity * pixelDensity\n    for (let i = 0; i < pixelsState._pixelDensity; i++) {\n      for (let j = 0; j < pixelsState._pixelDensity; j++) {\n        // loop over\n        idx =\n          4 *\n          ((y * pixelsState._pixelDensity + j) *\n            this.width *\n            pixelsState._pixelDensity +\n            (x * pixelsState._pixelDensity + i));\n        pixelsState.pixels[idx] = r;\n        pixelsState.pixels[idx + 1] = g;\n        pixelsState.pixels[idx + 2] = b;\n        pixelsState.pixels[idx + 3] = a;\n      }\n    }\n  }\n};\n\np5.Renderer2D.prototype.updatePixels = function(x, y, w, h) {\n  const pixelsState = this._pixelsState;\n  const pd = pixelsState._pixelDensity;\n  if (\n    x === undefined &&\n    y === undefined &&\n    w === undefined &&\n    h === undefined\n  ) {\n    x = 0;\n    y = 0;\n    w = this.width;\n    h = this.height;\n  }\n  x *= pd;\n  y *= pd;\n  w *= pd;\n  h *= pd;\n\n  if (this.gifProperties) {\n    this.gifProperties.frames[this.gifProperties.displayIndex].image =\n      pixelsState.imageData;\n  }\n\n  this.drawingContext.putImageData(pixelsState.imageData, x, y, 0, 0, w, h);\n};\n\n//////////////////////////////////////////////\n// SHAPE | 2D Primitives\n//////////////////////////////////////////////\n\n/**\n * Generate a cubic Bezier representing an arc on the unit circle of total\n * angle `size` radians, beginning `start` radians above the x-axis. Up to\n * four of these curves are combined to make a full arc.\n *\n * See www.joecridge.me/bezier.pdf for an explanation of the method.\n */\np5.Renderer2D.prototype._acuteArcToBezier = function _acuteArcToBezier(\n  start,\n  size\n) {\n  // Evaluate constants.\n  const alpha = size / 2.0,\n    cos_alpha = Math.cos(alpha),\n    sin_alpha = Math.sin(alpha),\n    cot_alpha = 1.0 / Math.tan(alpha),\n    // This is how far the arc needs to be rotated.\n    phi = start + alpha,\n    cos_phi = Math.cos(phi),\n    sin_phi = Math.sin(phi),\n    lambda = (4.0 - cos_alpha) / 3.0,\n    mu = sin_alpha + (cos_alpha - lambda) * cot_alpha;\n\n  // Return rotated waypoints.\n  return {\n    ax: Math.cos(start).toFixed(7),\n    ay: Math.sin(start).toFixed(7),\n    bx: (lambda * cos_phi + mu * sin_phi).toFixed(7),\n    by: (lambda * sin_phi - mu * cos_phi).toFixed(7),\n    cx: (lambda * cos_phi - mu * sin_phi).toFixed(7),\n    cy: (lambda * sin_phi + mu * cos_phi).toFixed(7),\n    dx: Math.cos(start + size).toFixed(7),\n    dy: Math.sin(start + size).toFixed(7)\n  };\n};\n\n/*\n * This function requires that:\n *\n *   0 <= start < TWO_PI\n *\n *   start <= stop < start + TWO_PI\n */\np5.Renderer2D.prototype.arc = function(x, y, w, h, start, stop, mode) {\n  const ctx = this.drawingContext;\n  const rx = w / 2.0;\n  const ry = h / 2.0;\n  const epsilon = 0.00001; // Smallest visible angle on displays up to 4K.\n  let arcToDraw = 0;\n  const curves = [];\n\n  x += rx;\n  y += ry;\n\n  // Create curves\n  while (stop - start >= epsilon) {\n    arcToDraw = Math.min(stop - start, constants.HALF_PI);\n    curves.push(this._acuteArcToBezier(start, arcToDraw));\n    start += arcToDraw;\n  }\n\n  // Fill curves\n  if (this._doFill) {\n    ctx.beginPath();\n    curves.forEach((curve, index) => {\n      if (index === 0) {\n        ctx.moveTo(x + curve.ax * rx, y + curve.ay * ry);\n      }\n      // prettier-ignore\n      ctx.bezierCurveTo(x + curve.bx * rx, y + curve.by * ry,\n                          x + curve.cx * rx, y + curve.cy * ry,\n                          x + curve.dx * rx, y + curve.dy * ry);\n    });\n    if (mode === constants.PIE || mode == null) {\n      ctx.lineTo(x, y);\n    }\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  // Stroke curves\n  if (this._doStroke) {\n    ctx.beginPath();\n    curves.forEach((curve, index) => {\n      if (index === 0) {\n        ctx.moveTo(x + curve.ax * rx, y + curve.ay * ry);\n      }\n      // prettier-ignore\n      ctx.bezierCurveTo(x + curve.bx * rx, y + curve.by * ry,\n                          x + curve.cx * rx, y + curve.cy * ry,\n                          x + curve.dx * rx, y + curve.dy * ry);\n    });\n    if (mode === constants.PIE) {\n      ctx.lineTo(x, y);\n      ctx.closePath();\n    } else if (mode === constants.CHORD) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.ellipse = function(args) {\n  const ctx = this.drawingContext;\n  const doFill = this._doFill,\n    doStroke = this._doStroke;\n  const x = parseFloat(args[0]),\n    y = parseFloat(args[1]),\n    w = parseFloat(args[2]),\n    h = parseFloat(args[3]);\n  if (doFill && !doStroke) {\n    if (this._getFill() === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n  }\n  const kappa = 0.5522847498,\n    // control point offset horizontal\n    ox = w / 2 * kappa,\n    // control point offset vertical\n    oy = h / 2 * kappa,\n    // x-end\n    xe = x + w,\n    // y-end\n    ye = y + h,\n    // x-middle\n    xm = x + w / 2,\n    ym = y + h / 2; // y-middle\n  ctx.beginPath();\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n  if (doFill) {\n    ctx.fill();\n  }\n  if (doStroke) {\n    ctx.stroke();\n  }\n};\n\np5.Renderer2D.prototype.line = function(x1, y1, x2, y2) {\n  const ctx = this.drawingContext;\n  if (!this._doStroke) {\n    return this;\n  } else if (this._getStroke() === styleEmpty) {\n    return this;\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.stroke();\n  return this;\n};\n\np5.Renderer2D.prototype.point = function(x, y) {\n  const ctx = this.drawingContext;\n  if (!this._doStroke) {\n    return this;\n  } else if (this._getStroke() === styleEmpty) {\n    return this;\n  }\n  const s = this._getStroke();\n  const f = this._getFill();\n  x = Math.round(x);\n  y = Math.round(y);\n  // swapping fill color to stroke and back after for correct point rendering\n  this._setFill(s);\n  if (ctx.lineWidth > 1) {\n    ctx.beginPath();\n    ctx.arc(x, y, ctx.lineWidth / 2, 0, constants.TWO_PI, false);\n    ctx.fill();\n  } else {\n    ctx.fillRect(x, y, 1, 1);\n  }\n  this._setFill(f);\n};\n\np5.Renderer2D.prototype.quad = function(x1, y1, x2, y2, x3, y3, x4, y4) {\n  const ctx = this.drawingContext;\n  const doFill = this._doFill,\n    doStroke = this._doStroke;\n  if (doFill && !doStroke) {\n    if (this._getFill() === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x3, y3);\n  ctx.lineTo(x4, y4);\n  ctx.closePath();\n  if (doFill) {\n    ctx.fill();\n  }\n  if (doStroke) {\n    ctx.stroke();\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.rect = function(args) {\n  const x = args[0];\n  const y = args[1];\n  const w = args[2];\n  const h = args[3];\n  let tl = args[4];\n  let tr = args[5];\n  let br = args[6];\n  let bl = args[7];\n  const ctx = this.drawingContext;\n  const doFill = this._doFill,\n    doStroke = this._doStroke;\n  if (doFill && !doStroke) {\n    if (this._getFill() === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n  }\n  ctx.beginPath();\n\n  if (typeof tl === 'undefined') {\n    // No rounded corners\n    ctx.rect(x, y, w, h);\n  } else {\n    // At least one rounded corner\n    // Set defaults when not specified\n    if (typeof tr === 'undefined') {\n      tr = tl;\n    }\n    if (typeof br === 'undefined') {\n      br = tr;\n    }\n    if (typeof bl === 'undefined') {\n      bl = br;\n    }\n\n    // corner rounding must always be positive\n    const absW = Math.abs(w);\n    const absH = Math.abs(h);\n    const hw = absW / 2;\n    const hh = absH / 2;\n\n    // Clip radii\n    if (absW < 2 * tl) {\n      tl = hw;\n    }\n    if (absH < 2 * tl) {\n      tl = hh;\n    }\n    if (absW < 2 * tr) {\n      tr = hw;\n    }\n    if (absH < 2 * tr) {\n      tr = hh;\n    }\n    if (absW < 2 * br) {\n      br = hw;\n    }\n    if (absH < 2 * br) {\n      br = hh;\n    }\n    if (absW < 2 * bl) {\n      bl = hw;\n    }\n    if (absH < 2 * bl) {\n      bl = hh;\n    }\n\n    // Draw shape\n    ctx.beginPath();\n    ctx.moveTo(x + tl, y);\n    ctx.arcTo(x + w, y, x + w, y + h, tr);\n    ctx.arcTo(x + w, y + h, x, y + h, br);\n    ctx.arcTo(x, y + h, x, y, bl);\n    ctx.arcTo(x, y, x + w, y, tl);\n    ctx.closePath();\n  }\n  if (this._doFill) {\n    ctx.fill();\n  }\n  if (this._doStroke) {\n    ctx.stroke();\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.triangle = function(args) {\n  const ctx = this.drawingContext;\n  const doFill = this._doFill,\n    doStroke = this._doStroke;\n  const x1 = args[0],\n    y1 = args[1];\n  const x2 = args[2],\n    y2 = args[3];\n  const x3 = args[4],\n    y3 = args[5];\n  if (doFill && !doStroke) {\n    if (this._getFill() === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if (this._getStroke() === styleEmpty) {\n      return this;\n    }\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x3, y3);\n  ctx.closePath();\n  if (doFill) {\n    ctx.fill();\n  }\n  if (doStroke) {\n    ctx.stroke();\n  }\n};\n\np5.Renderer2D.prototype.endShape = function(\n  mode,\n  vertices,\n  isCurve,\n  isBezier,\n  isQuadratic,\n  isContour,\n  shapeKind\n) {\n  if (vertices.length === 0) {\n    return this;\n  }\n  if (!this._doStroke && !this._doFill) {\n    return this;\n  }\n  const closeShape = mode === constants.CLOSE;\n  let v;\n  if (closeShape && !isContour) {\n    vertices.push(vertices[0]);\n  }\n  let i, j;\n  const numVerts = vertices.length;\n  if (isCurve && (shapeKind === constants.POLYGON || shapeKind === null)) {\n    if (numVerts > 3) {\n      const b = [],\n        s = 1 - this._curveTightness;\n      this.drawingContext.beginPath();\n      this.drawingContext.moveTo(vertices[1][0], vertices[1][1]);\n      for (i = 1; i + 2 < numVerts; i++) {\n        v = vertices[i];\n        b[0] = [v[0], v[1]];\n        b[1] = [\n          v[0] + (s * vertices[i + 1][0] - s * vertices[i - 1][0]) / 6,\n          v[1] + (s * vertices[i + 1][1] - s * vertices[i - 1][1]) / 6\n        ];\n        b[2] = [\n          vertices[i + 1][0] +\n            (s * vertices[i][0] - s * vertices[i + 2][0]) / 6,\n          vertices[i + 1][1] + (s * vertices[i][1] - s * vertices[i + 2][1]) / 6\n        ];\n        b[3] = [vertices[i + 1][0], vertices[i + 1][1]];\n        this.drawingContext.bezierCurveTo(\n          b[1][0],\n          b[1][1],\n          b[2][0],\n          b[2][1],\n          b[3][0],\n          b[3][1]\n        );\n      }\n      if (closeShape) {\n        this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n      }\n      this._doFillStrokeClose(closeShape);\n    }\n  } else if (\n    isBezier &&\n    (shapeKind === constants.POLYGON || shapeKind === null)\n  ) {\n    this.drawingContext.beginPath();\n    for (i = 0; i < numVerts; i++) {\n      if (vertices[i].isVert) {\n        if (vertices[i].moveTo) {\n          this.drawingContext.moveTo(vertices[i][0], vertices[i][1]);\n        } else {\n          this.drawingContext.lineTo(vertices[i][0], vertices[i][1]);\n        }\n      } else {\n        this.drawingContext.bezierCurveTo(\n          vertices[i][0],\n          vertices[i][1],\n          vertices[i][2],\n          vertices[i][3],\n          vertices[i][4],\n          vertices[i][5]\n        );\n      }\n    }\n    this._doFillStrokeClose(closeShape);\n  } else if (\n    isQuadratic &&\n    (shapeKind === constants.POLYGON || shapeKind === null)\n  ) {\n    this.drawingContext.beginPath();\n    for (i = 0; i < numVerts; i++) {\n      if (vertices[i].isVert) {\n        if (vertices[i].moveTo) {\n          this.drawingContext.moveTo(vertices[i][0], vertices[i][1]);\n        } else {\n          this.drawingContext.lineTo(vertices[i][0], vertices[i][1]);\n        }\n      } else {\n        this.drawingContext.quadraticCurveTo(\n          vertices[i][0],\n          vertices[i][1],\n          vertices[i][2],\n          vertices[i][3]\n        );\n      }\n    }\n    this._doFillStrokeClose(closeShape);\n  } else {\n    if (shapeKind === constants.POINTS) {\n      for (i = 0; i < numVerts; i++) {\n        v = vertices[i];\n        if (this._doStroke) {\n          this._pInst.stroke(v[6]);\n        }\n        this._pInst.point(v[0], v[1]);\n      }\n    } else if (shapeKind === constants.LINES) {\n      for (i = 0; i + 1 < numVerts; i += 2) {\n        v = vertices[i];\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 1][6]);\n        }\n        this._pInst.line(v[0], v[1], vertices[i + 1][0], vertices[i + 1][1]);\n      }\n    } else if (shapeKind === constants.TRIANGLES) {\n      for (i = 0; i + 2 < numVerts; i += 3) {\n        v = vertices[i];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(v[0], v[1]);\n        this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n        this.drawingContext.lineTo(vertices[i + 2][0], vertices[i + 2][1]);\n        this.drawingContext.closePath();\n        if (this._doFill) {\n          this._pInst.fill(vertices[i + 2][5]);\n          this.drawingContext.fill();\n        }\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 2][6]);\n          this.drawingContext.stroke();\n        }\n      }\n    } else if (shapeKind === constants.TRIANGLE_STRIP) {\n      for (i = 0; i + 1 < numVerts; i++) {\n        v = vertices[i];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(vertices[i + 1][0], vertices[i + 1][1]);\n        this.drawingContext.lineTo(v[0], v[1]);\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 1][6]);\n        }\n        if (this._doFill) {\n          this._pInst.fill(vertices[i + 1][5]);\n        }\n        if (i + 2 < numVerts) {\n          this.drawingContext.lineTo(vertices[i + 2][0], vertices[i + 2][1]);\n          if (this._doStroke) {\n            this._pInst.stroke(vertices[i + 2][6]);\n          }\n          if (this._doFill) {\n            this._pInst.fill(vertices[i + 2][5]);\n          }\n        }\n        this._doFillStrokeClose(closeShape);\n      }\n    } else if (shapeKind === constants.TRIANGLE_FAN) {\n      if (numVerts > 2) {\n        // For performance reasons, try to batch as many of the\n        // fill and stroke calls as possible.\n        this.drawingContext.beginPath();\n        for (i = 2; i < numVerts; i++) {\n          v = vertices[i];\n          this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n          this.drawingContext.lineTo(vertices[i - 1][0], vertices[i - 1][1]);\n          this.drawingContext.lineTo(v[0], v[1]);\n          this.drawingContext.lineTo(vertices[0][0], vertices[0][1]);\n          // If the next colour is going to be different, stroke / fill now\n          if (i < numVerts - 1) {\n            if (\n              (this._doFill && v[5] !== vertices[i + 1][5]) ||\n              (this._doStroke && v[6] !== vertices[i + 1][6])\n            ) {\n              if (this._doFill) {\n                this._pInst.fill(v[5]);\n                this.drawingContext.fill();\n                this._pInst.fill(vertices[i + 1][5]);\n              }\n              if (this._doStroke) {\n                this._pInst.stroke(v[6]);\n                this.drawingContext.stroke();\n                this._pInst.stroke(vertices[i + 1][6]);\n              }\n              this.drawingContext.closePath();\n              this.drawingContext.beginPath(); // Begin the next one\n            }\n          }\n        }\n        this._doFillStrokeClose(closeShape);\n      }\n    } else if (shapeKind === constants.QUADS) {\n      for (i = 0; i + 3 < numVerts; i += 4) {\n        v = vertices[i];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(v[0], v[1]);\n        for (j = 1; j < 4; j++) {\n          this.drawingContext.lineTo(vertices[i + j][0], vertices[i + j][1]);\n        }\n        this.drawingContext.lineTo(v[0], v[1]);\n        if (this._doFill) {\n          this._pInst.fill(vertices[i + 3][5]);\n        }\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 3][6]);\n        }\n        this._doFillStrokeClose(closeShape);\n      }\n    } else if (shapeKind === constants.QUAD_STRIP) {\n      if (numVerts > 3) {\n        for (i = 0; i + 1 < numVerts; i += 2) {\n          v = vertices[i];\n          this.drawingContext.beginPath();\n          if (i + 3 < numVerts) {\n            this.drawingContext.moveTo(vertices[i + 2][0], vertices[i + 2][1]);\n            this.drawingContext.lineTo(v[0], v[1]);\n            this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n            this.drawingContext.lineTo(vertices[i + 3][0], vertices[i + 3][1]);\n            if (this._doFill) {\n              this._pInst.fill(vertices[i + 3][5]);\n            }\n            if (this._doStroke) {\n              this._pInst.stroke(vertices[i + 3][6]);\n            }\n          } else {\n            this.drawingContext.moveTo(v[0], v[1]);\n            this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n          }\n          this._doFillStrokeClose(closeShape);\n        }\n      }\n    } else {\n      this.drawingContext.beginPath();\n      this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n      for (i = 1; i < numVerts; i++) {\n        v = vertices[i];\n        if (v.isVert) {\n          if (v.moveTo) {\n            this.drawingContext.moveTo(v[0], v[1]);\n          } else {\n            this.drawingContext.lineTo(v[0], v[1]);\n          }\n        }\n      }\n      this._doFillStrokeClose(closeShape);\n    }\n  }\n  isCurve = false;\n  isBezier = false;\n  isQuadratic = false;\n  isContour = false;\n  if (closeShape) {\n    vertices.pop();\n  }\n\n  return this;\n};\n//////////////////////////////////////////////\n// SHAPE | Attributes\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.strokeCap = function(cap) {\n  if (\n    cap === constants.ROUND ||\n    cap === constants.SQUARE ||\n    cap === constants.PROJECT\n  ) {\n    this.drawingContext.lineCap = cap;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.strokeJoin = function(join) {\n  if (\n    join === constants.ROUND ||\n    join === constants.BEVEL ||\n    join === constants.MITER\n  ) {\n    this.drawingContext.lineJoin = join;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.strokeWeight = function(w) {\n  if (typeof w === 'undefined' || w === 0) {\n    // hack because lineWidth 0 doesn't work\n    this.drawingContext.lineWidth = 0.0001;\n  } else {\n    this.drawingContext.lineWidth = w;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype._getFill = function() {\n  if (!this._cachedFillStyle) {\n    this._cachedFillStyle = this.drawingContext.fillStyle;\n  }\n  return this._cachedFillStyle;\n};\n\np5.Renderer2D.prototype._setFill = function(fillStyle) {\n  if (fillStyle !== this._cachedFillStyle) {\n    this.drawingContext.fillStyle = fillStyle;\n    this._cachedFillStyle = fillStyle;\n  }\n};\n\np5.Renderer2D.prototype._getStroke = function() {\n  if (!this._cachedStrokeStyle) {\n    this._cachedStrokeStyle = this.drawingContext.strokeStyle;\n  }\n  return this._cachedStrokeStyle;\n};\n\np5.Renderer2D.prototype._setStroke = function(strokeStyle) {\n  if (strokeStyle !== this._cachedStrokeStyle) {\n    this.drawingContext.strokeStyle = strokeStyle;\n    this._cachedStrokeStyle = strokeStyle;\n  }\n};\n\n//////////////////////////////////////////////\n// SHAPE | Curves\n//////////////////////////////////////////////\np5.Renderer2D.prototype.bezier = function(x1, y1, x2, y2, x3, y3, x4, y4) {\n  this._pInst.beginShape();\n  this._pInst.vertex(x1, y1);\n  this._pInst.bezierVertex(x2, y2, x3, y3, x4, y4);\n  this._pInst.endShape();\n  return this;\n};\n\np5.Renderer2D.prototype.curve = function(x1, y1, x2, y2, x3, y3, x4, y4) {\n  this._pInst.beginShape();\n  this._pInst.curveVertex(x1, y1);\n  this._pInst.curveVertex(x2, y2);\n  this._pInst.curveVertex(x3, y3);\n  this._pInst.curveVertex(x4, y4);\n  this._pInst.endShape();\n  return this;\n};\n\n//////////////////////////////////////////////\n// SHAPE | Vertex\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype._doFillStrokeClose = function(closeShape) {\n  if (closeShape) {\n    this.drawingContext.closePath();\n  }\n  if (this._doFill) {\n    this.drawingContext.fill();\n  }\n  if (this._doStroke) {\n    this.drawingContext.stroke();\n  }\n};\n\n//////////////////////////////////////////////\n// TRANSFORM\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.applyMatrix = function(a, b, c, d, e, f) {\n  this.drawingContext.transform(a, b, c, d, e, f);\n};\n\np5.Renderer2D.prototype.resetMatrix = function() {\n  this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n  this.drawingContext.scale(\n    this._pInst._pixelDensity,\n    this._pInst._pixelDensity\n  );\n  return this;\n};\n\np5.Renderer2D.prototype.rotate = function(rad) {\n  this.drawingContext.rotate(rad);\n};\n\np5.Renderer2D.prototype.scale = function(x, y) {\n  this.drawingContext.scale(x, y);\n  return this;\n};\n\np5.Renderer2D.prototype.translate = function(x, y) {\n  // support passing a vector as the 1st parameter\n  if (x instanceof p5.Vector) {\n    y = x.y;\n    x = x.x;\n  }\n  this.drawingContext.translate(x, y);\n  return this;\n};\n\n//////////////////////////////////////////////\n// TYPOGRAPHY\n//\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.text = function(str, x, y, maxWidth, maxHeight) {\n  let baselineHacked;\n\n  // baselineHacked: (HACK)\n  // A temporary fix to conform to Processing's implementation\n  // of BASELINE vertical alignment in a bounding box\n\n  if (typeof maxWidth !== 'undefined') {\n    if (this.drawingContext.textBaseline === constants.BASELINE) {\n      baselineHacked = true;\n      this.drawingContext.textBaseline = constants.TOP;\n    }\n  }\n\n  const p = p5.Renderer.prototype.text.apply(this, arguments);\n\n  if (baselineHacked) {\n    this.drawingContext.textBaseline = constants.BASELINE;\n  }\n\n  return p;\n};\n\np5.Renderer2D.prototype._renderText = function(p, line, x, y, maxY) {\n  if (y >= maxY) {\n    return; // don't render lines beyond our maxY position\n  }\n\n  p.push(); // fix to #803\n\n  if (!this._isOpenType()) {\n    // a system/browser font\n\n    // no stroke unless specified by user\n    if (this._doStroke && this._strokeSet) {\n      this.drawingContext.strokeText(line, x, y);\n    }\n\n    if (this._doFill) {\n      // if fill hasn't been set by user, use default text fill\n      if (!this._fillSet) {\n        this._setFill(constants._DEFAULT_TEXT_FILL);\n      }\n\n      this.drawingContext.fillText(line, x, y);\n    }\n  } else {\n    // an opentype font, let it handle the rendering\n\n    this._textFont._renderPath(line, x, y, { renderer: this });\n  }\n\n  p.pop();\n  return p;\n};\n\np5.Renderer2D.prototype.textWidth = function(s) {\n  if (this._isOpenType()) {\n    return this._textFont._textWidth(s, this._textSize);\n  }\n\n  return this.drawingContext.measureText(s).width;\n};\n\np5.Renderer2D.prototype._applyTextProperties = function() {\n  let font;\n  const p = this._pInst;\n\n  this._setProperty('_textAscent', null);\n  this._setProperty('_textDescent', null);\n\n  font = this._textFont;\n\n  if (this._isOpenType()) {\n    font = this._textFont.font.familyName;\n    this._setProperty('_textStyle', this._textFont.font.styleName);\n  }\n\n  this.drawingContext.font = `${this._textStyle || 'normal'} ${this._textSize ||\n    12}px ${font || 'sans-serif'}`;\n\n  this.drawingContext.textAlign = this._textAlign;\n  if (this._textBaseline === constants.CENTER) {\n    this.drawingContext.textBaseline = constants._CTX_MIDDLE;\n  } else {\n    this.drawingContext.textBaseline = this._textBaseline;\n  }\n\n  return p;\n};\n\n//////////////////////////////////////////////\n// STRUCTURE\n//////////////////////////////////////////////\n\n// a push() operation is in progress.\n// the renderer should return a 'style' object that it wishes to\n// store on the push stack.\n// derived renderers should call the base class' push() method\n// to fetch the base style object.\np5.Renderer2D.prototype.push = function() {\n  this.drawingContext.save();\n\n  // get the base renderer style\n  return p5.Renderer.prototype.push.apply(this);\n};\n\n// a pop() operation is in progress\n// the renderer is passed the 'style' object that it returned\n// from its push() method.\n// derived renderers should pass this object to their base\n// class' pop method\np5.Renderer2D.prototype.pop = function(style) {\n  this.drawingContext.restore();\n  // Re-cache the fill / stroke state\n  this._cachedFillStyle = this.drawingContext.fillStyle;\n  this._cachedStrokeStyle = this.drawingContext.strokeStyle;\n\n  p5.Renderer.prototype.pop.call(this, style);\n};\n\nexport default p5.Renderer2D;\n","/**\n * @module Rendering\n * @submodule Rendering\n * @for p5\n */\n\nimport p5 from './main';\nimport * as constants from './constants';\nimport './p5.Graphics';\nimport './p5.Renderer2D';\n// import '../webgl/p5.RendererGL';\nlet defaultId = 'defaultCanvas0'; // this gets set again in createCanvas\nconst defaultClass = 'p5Canvas';\n\n/**\n * Creates a canvas element in the document, and sets the dimensions of it\n * in pixels. This method should be called only once at the start of setup.\n * Calling <a href=\"#/p5/createCanvas\">createCanvas</a> more than once in a\n * sketch will result in very unpredictable behavior. If you want more than\n * one drawing canvas you could use <a href=\"#/p5/createGraphics\">createGraphics</a>\n * (hidden by default but it can be shown).\n *\n * The system variables width and height are set by the parameters passed to this\n * function. If <a href=\"#/p5/createCanvas\">createCanvas()</a> is not used, the\n * window will be given a default size of 100x100 pixels.\n *\n * For more ways to position the canvas, see the\n * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n * positioning the canvas</a> wiki page.\n *\n * @method createCanvas\n * @param  {Number} w width of the canvas\n * @param  {Number} h height of the canvas\n * @param  {Constant} [renderer] either P2D or WEBGL\n * @return {p5.Renderer}\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 50);\n *   background(153);\n *   line(0, 0, width, height);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Black line extending from top-left of canvas to bottom right.\n *\n */\np5.prototype.createCanvas = function(w, h, renderer) {\n  p5._validateParameters('createCanvas', arguments);\n  //optional: renderer, otherwise defaults to p2d\n  const r = renderer || constants.P2D;\n  let c;\n\n  if (r === constants.WEBGL) {\n    c = document.getElementById(defaultId);\n    if (c) {\n      //if defaultCanvas already exists\n      c.parentNode.removeChild(c); //replace the existing defaultCanvas\n      const thisRenderer = this._renderer;\n      this._elements = this._elements.filter(e => e !== thisRenderer);\n    }\n    c = document.createElement('canvas');\n    c.id = defaultId;\n    c.classList.add(defaultClass);\n  } else {\n    if (!this._defaultGraphicsCreated) {\n      c = document.createElement('canvas');\n      let i = 0;\n      while (document.getElementById(`defaultCanvas${i}`)) {\n        i++;\n      }\n      defaultId = `defaultCanvas${i}`;\n      c.id = defaultId;\n      c.classList.add(defaultClass);\n    } else {\n      // resize the default canvas if new one is created\n      c = this.canvas;\n    }\n  }\n\n  // set to invisible if still in setup (to prevent flashing with manipulate)\n  if (!this._setupDone) {\n    c.dataset.hidden = true; // tag to show later\n    c.style.visibility = 'hidden';\n  }\n\n  if (this._userNode) {\n    // user input node case\n    this._userNode.appendChild(c);\n  } else {\n    document.body.appendChild(c);\n  }\n\n  // Init our graphics renderer\n  //webgl mode\n  if (r === constants.WEBGL) {\n    this._setProperty('_renderer', new p5.RendererGL(c, this, true));\n    this._elements.push(this._renderer);\n  } else {\n    //P2D mode\n    if (!this._defaultGraphicsCreated) {\n      this._setProperty('_renderer', new p5.Renderer2D(c, this, true));\n      this._defaultGraphicsCreated = true;\n      this._elements.push(this._renderer);\n    }\n  }\n  this._renderer.resize(w, h);\n  this._renderer._applyDefaults();\n  return this._renderer;\n};\n\n/**\n * Resizes the canvas to given width and height. The canvas will be cleared\n * and draw will be called immediately, allowing the sketch to re-render itself\n * in the resized canvas.\n * @method resizeCanvas\n * @param  {Number} w width of the canvas\n * @param  {Number} h height of the canvas\n * @param  {Boolean} [noRedraw] don't redraw the canvas immediately\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   createCanvas(windowWidth, windowHeight);\n * }\n *\n * function draw() {\n *   background(0, 100, 200);\n * }\n *\n * function windowResized() {\n *   resizeCanvas(windowWidth, windowHeight);\n * }\n * </code></div>\n *\n * @alt\n * No image displayed.\n *\n */\np5.prototype.resizeCanvas = function(w, h, noRedraw) {\n  p5._validateParameters('resizeCanvas', arguments);\n  if (this._renderer) {\n    // save canvas properties\n    const props = {};\n    for (const key in this.drawingContext) {\n      const val = this.drawingContext[key];\n      if (typeof val !== 'object' && typeof val !== 'function') {\n        props[key] = val;\n      }\n    }\n    this._renderer.resize(w, h);\n    this.width = w;\n    this.height = h;\n    // reset canvas properties\n    for (const savedKey in props) {\n      try {\n        this.drawingContext[savedKey] = props[savedKey];\n      } catch (err) {\n        // ignore read-only property errors\n      }\n    }\n    if (!noRedraw) {\n      this.redraw();\n    }\n  }\n};\n\n/**\n * Removes the default canvas for a p5 sketch that doesn't require a canvas\n * @method noCanvas\n * @example\n * <div>\n * <code>\n * function setup() {\n *   noCanvas();\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.noCanvas = function() {\n  if (this.canvas) {\n    this.canvas.parentNode.removeChild(this.canvas);\n  }\n};\n\n/**\n * Creates and returns a new p5.Renderer object. Use this class if you need\n * to draw into an off-screen graphics buffer. The two parameters define the\n * width and height in pixels.\n *\n * @method createGraphics\n * @param  {Number} w width of the offscreen graphics buffer\n * @param  {Number} h height of the offscreen graphics buffer\n * @param  {Constant} [renderer] either P2D or WEBGL\n *                               undefined defaults to p2d\n * @return {p5.Graphics} offscreen graphics buffer\n * @example\n * <div>\n * <code>\n * let pg;\n * function setup() {\n *   createCanvas(100, 100);\n *   pg = createGraphics(100, 100);\n * }\n *\n * function draw() {\n *   background(200);\n *   pg.background(100);\n *   pg.noStroke();\n *   pg.ellipse(pg.width / 2, pg.height / 2, 50, 50);\n *   image(pg, 50, 50);\n *   image(pg, 0, 0, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 4 grey squares alternating light and dark grey. White quarter circle mid-left.\n *\n */\np5.prototype.createGraphics = function(w, h, renderer) {\n  p5._validateParameters('createGraphics', arguments);\n  return new p5.Graphics(w, h, renderer, this);\n};\n\n/**\n * Blends the pixels in the display window according to the defined mode.\n * There is a choice of the following modes to blend the source pixels (A)\n * with the ones of pixels already in the display window (B):\n * <ul>\n * <li><code>BLEND</code> - linear interpolation of colours: C =\n * A\\*factor + B. <b>This is the default blending mode.</b></li>\n * <li><code>ADD</code> - sum of A and B</li>\n * <li><code>DARKEST</code> - only the darkest colour succeeds: C =\n * min(A\\*factor, B).</li>\n * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\n * max(A\\*factor, B).</li>\n * <li><code>DIFFERENCE</code> - subtract colors from underlying image.</li>\n * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\n * extreme.</li>\n * <li><code>MULTIPLY</code> - multiply the colors, result will always be\n * darker.</li>\n * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the\n * colors.</li>\n * <li><code>REPLACE</code> - the pixels entirely replace the others and\n * don't utilize alpha (transparency) values.</li>\n * <li><code>REMOVE</code> - removes pixels from B with the alpha strength of A.</li>\n * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n * </code>. Multiplies dark values, and screens light values. <em>(2D)</em></li>\n * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\n * gray, <code>MULTIPLY</code> when lower. <em>(2D)</em></li>\n * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh. <em>(2D)</em>\n * </li>\n * <li><code>DODGE</code> - lightens light tones and increases contrast,\n * ignores darks. <em>(2D)</em></li>\n * <li><code>BURN</code> - darker areas are applied, increasing contrast,\n * ignores lights. <em>(2D)</em></li>\n * <li><code>SUBTRACT</code> - remainder of A and B <em>(3D)</em></li>\n * </ul>\n * <br><br>\n * <em>(2D)</em> indicates that this blend mode <b>only</b> works in the 2D renderer.<br>\n * <em>(3D)</em> indicates that this blend mode <b>only</b> works in the WEBGL renderer.\n *\n *\n * @method blendMode\n * @param  {Constant} mode blend mode to set for canvas.\n *                either BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY,\n *                EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n *                SOFT_LIGHT, DODGE, BURN, ADD, REMOVE or SUBTRACT\n * @example\n * <div>\n * <code>\n * blendMode(LIGHTEST);\n * strokeWeight(30);\n * stroke(80, 150, 255);\n * line(25, 25, 75, 75);\n * stroke(255, 50, 50);\n * line(75, 25, 25, 75);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * blendMode(MULTIPLY);\n * strokeWeight(30);\n * stroke(80, 150, 255);\n * line(25, 25, 75, 75);\n * stroke(255, 50, 50);\n * line(75, 25, 25, 75);\n * </code>\n * </div>\n *\n * @alt\n * translucent image thick red & blue diagonal rounded lines intersecting center\n * Thick red & blue diagonal rounded lines intersecting center. dark at overlap\n *\n */\np5.prototype.blendMode = function(mode) {\n  p5._validateParameters('blendMode', arguments);\n  if (mode === constants.NORMAL) {\n    // Warning added 3/26/19, can be deleted in future (1.0 release?)\n    console.warn(\n      'NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead.'\n    );\n    mode = constants.BLEND;\n  }\n  this._renderer.blendMode(mode);\n};\n\n/**\n * @property drawingContext\n * The p5.js API provides a lot of functionality for creating graphics, but there is\n * some native HTML5 Canvas functionality that is not exposed by p5. You can still call\n * it directly using the variable `drawingContext`, as in the example shown. This is\n * the equivalent of calling `canvas.getContext('2d');` or `canvas.getContext('webgl');`.\n * See this\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\">\n * reference for the native canvas API</a> for possible drawing functions you can call.\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   drawingContext.shadowOffsetX = 5;\n *   drawingContext.shadowOffsetY = -5;\n *   drawingContext.shadowBlur = 10;\n *   drawingContext.shadowColor = 'black';\n *   background(200);\n *   ellipse(width / 2, height / 2, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * white ellipse with shadow blur effect around edges\n *\n */\n\nexport default p5;\n","/**\n * @module Structure\n * @submodule Structure\n * @for p5\n * @requires core\n */\n\nimport p5 from './main';\n\n/**\n * Stops p5.js from continuously executing the code within <a href=\"#/p5/draw\">draw()</a>.\n * If <a href=\"#/p5/loop\">loop()</a> is called, the code in <a href=\"#/p5/draw\">draw()</a>\n * begins to run continuously again. If using <a href=\"#/p5/noLoop\">noLoop()</a> \n * in <a href=\"#/p5/setup\">setup()</a>, it should be the last line inside the block.\n *\n * When <a href=\"#/p5/noLoop\">noLoop()</a> is used, it's not possible to manipulate\n * or access the screen inside event handling functions such as\n * <a href=\"#/p5/mousePressed\">mousePressed()</a> or\n * <a href=\"#/p5/keyPressed\">keyPressed()</a>. Instead, use those functions to\n * call <a href=\"#/p5/redraw\">redraw()</a> or <a href=\"#/p5/loop\">loop()</a>,\n * which will run <a href=\"#/p5/draw\">draw()</a>, which can update the screen\n * properly. This means that when <a href=\"#/p5/noLoop\">noLoop()</a> has been\n * called, no drawing can happen, and functions like <a href=\"#/p5/saveFrame\">saveFrame()</a>\n * or <a href=\"#/p5/loadPixels\">loadPixels()</a> may not be used.\n * \n * Note that if the sketch is resized, <a href=\"#/p5/redraw\">redraw()</a> will\n * be called to update the sketch, even after <a href=\"#/p5/noLoop\">noLoop()</a>\n * has been specified. Otherwise, the sketch would enter an odd state until\n * <a href=\"#/p5/loop\">loop()</a> was called.\n *\n * @method noLoop\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   noLoop();\n * }\n\n * function draw() {\n *   line(10, 10, 90, 90);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let x = 0;\n * function setup() {\n *   createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(204);\n *   x = x + 0.1;\n *   if (x > width) {\n *     x = 0;\n *   }\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   noLoop();\n * }\n *\n * function mouseReleased() {\n *   loop();\n * }\n * </code>\n * </div>\n *\n * @alt\n * 113 pixel long line extending from top-left to bottom right of canvas.\n * horizontal line moves slowly from left. Loops but stops on mouse press.\n *\n */\np5.prototype.noLoop = function() {\n  this._loop = false;\n};\n\n/**\n * By default, p5.js loops through draw() continuously, executing the code within\n * it. However, the <a href=\"#/p5/draw\">draw()</a> loop may be stopped by calling\n * <a href=\"#/p5/noLoop\">noLoop()</a>. In that case, the <a href=\"#/p5/draw\">draw()</a>\n * loop can be resumed with loop().\n *\n * Avoid calling loop() from inside setup().\n *\n * @method loop\n * @example\n * <div>\n * <code>\n * let x = 0;\n * function setup() {\n *   createCanvas(100, 100);\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(204);\n *   x = x + 0.1;\n *   if (x > width) {\n *     x = 0;\n *   }\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   loop();\n * }\n *\n * function mouseReleased() {\n *   noLoop();\n * }\n * </code>\n * </div>\n *\n * @alt\n * horizontal line moves slowly from left. Loops but stops on mouse press.\n *\n */\np5.prototype.loop = function() {\n  if (!this._loop) {\n    this._loop = true;\n    if (this._setupDone) {\n      this._draw();\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/push\">push()</a> function saves the current drawing style\n * settings and transformations, while <a href=\"#/p5/pop\">pop()</a> restores these\n * settings. Note that these functions are always used together. They allow you to\n * change the style and transformation settings and later return to what you had.\n * When a new state is started with <a href=\"#/p5/push\">push()</a>, it builds on\n * the current style and transform information. The <a href=\"#/p5/push\">push()</a>\n * and <a href=\"#/p5/pop\">pop()</a> functions can be embedded to provide more\n * control. (See the second example for a demonstration.)\n *\n * <a href=\"#/p5/push\">push()</a> stores information related to the current transformation state\n * and style settings controlled by the following functions:\n * <a href=\"#/p5/fill\">fill()</a>,\n * <a href=\"#/p5/noFill\">noFill()</a>,\n * <a href=\"#/p5/noStroke\">noStroke()</a>,\n * <a href=\"#/p5/stroke\">stroke()</a>,\n * <a href=\"#/p5/tint\">tint()</a>,\n * <a href=\"#/p5/noTint\">noTint()</a>,\n * <a href=\"#/p5/strokeWeight\">strokeWeight()</a>,\n * <a href=\"#/p5/strokeCap\">strokeCap()</a>,\n * <a href=\"#/p5/strokeJoin\">strokeJoin()</a>,\n * <a href=\"#/p5/imageMode\">imageMode()</a>,\n * <a href=\"#/p5/rectMode\">rectMode()</a>,\n * <a href=\"#/p5/ellipseMode\">ellipseMode()</a>,\n * <a href=\"#/p5/colorMode\">colorMode()</a>,\n * <a href=\"#/p5/textAlign\">textAlign()</a>,\n * <a href=\"#/p5/textFont\">textFont()</a>,\n * <a href=\"#/p5/textSize\">textSize()</a>,\n * <a href=\"#/p5/textLeading\">textLeading()</a>,\n * <a href=\"#/p5/applyMatrix\">applyMatrix()</a>,\n * <a href=\"#/p5/resetMatrix\">resetMatrix()</a>,\n * <a href=\"#/p5/rotate\">rotate()</a>,\n * <a href=\"#/p5/scale\">scale()</a>,\n * <a href=\"#/p5/shearX\">shearX()</a>,\n * <a href=\"#/p5/shearY\">shearY()</a>,\n * <a href=\"#/p5/translate\">translate()</a>,\n * <a href=\"#/p5/noiseSeed\">noiseSeed()</a>.\n *\n * In WEBGL mode additional style settings are stored. These are controlled by the\n * following functions: <a href=\"#/p5/setCamera\">setCamera()</a>,\n * <a href=\"#/p5/ambientLight\">ambientLight()</a>,\n * <a href=\"#/p5/directionalLight\">directionalLight()</a>,\n * <a href=\"#/p5/pointLight\">pointLight()</a>, <a href=\"#/p5/texture\">texture()</a>,\n * <a href=\"#/p5/specularMaterial\">specularMaterial()</a>,\n * <a href=\"#/p5/shininess\">shininess()</a>,\n * <a href=\"#/p5/normalMaterial\">normalMaterial()</a>\n * and <a href=\"#/p5/shader\">shader()</a>.\n *\n * @method push\n * @example\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33); // Left circle\n *\n * push(); // Start a new drawing state\n * strokeWeight(10);\n * fill(204, 153, 0);\n * translate(50, 0);\n * ellipse(0, 50, 33, 33); // Middle circle\n * pop(); // Restore original state\n *\n * ellipse(100, 50, 33, 33); // Right circle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33); // Left circle\n *\n * push(); // Start a new drawing state\n * strokeWeight(10);\n * fill(204, 153, 0);\n * ellipse(33, 50, 33, 33); // Left-middle circle\n *\n * push(); // Start another new drawing state\n * stroke(0, 102, 153);\n * ellipse(66, 50, 33, 33); // Right-middle circle\n * pop(); // Restore previous state\n *\n * pop(); // Restore original state\n *\n * ellipse(100, 50, 33, 33); // Right circle\n * </code>\n * </div>\n *\n * @alt\n * Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.\n *\n */\np5.prototype.push = function() {\n  this._styles.push({\n    props: {\n      _colorMode: this._colorMode\n    },\n    renderer: this._renderer.push()\n  });\n};\n\n/**\n * The <a href=\"#/p5/push\">push()</a> function saves the current drawing style\n * settings and transformations, while <a href=\"#/p5/pop\">pop()</a> restores\n * these settings. Note that these functions are always used together. They allow\n * you to change the style and transformation settings and later return to what\n * you had. When a new state is started with <a href=\"#/p5/push\">push()</a>, it\n * builds on the current style and transform information. The <a href=\"#/p5/push\">push()</a>\n * and <a href=\"#/p5/pop\">pop()</a> functions can be embedded to provide more\n * control. (See the second example for a demonstration.)\n *\n * <a href=\"#/p5/push\">push()</a> stores information related to the current transformation state\n * and style settings controlled by the following functions:\n * <a href=\"#/p5/fill\">fill()</a>,\n * <a href=\"#/p5/noFill\">noFill()</a>,\n * <a href=\"#/p5/noStroke\">noStroke()</a>,\n * <a href=\"#/p5/stroke\">stroke()</a>,\n * <a href=\"#/p5/tint\">tint()</a>,\n * <a href=\"#/p5/noTint\">noTint()</a>,\n * <a href=\"#/p5/strokeWeight\">strokeWeight()</a>,\n * <a href=\"#/p5/strokeCap\">strokeCap()</a>,\n * <a href=\"#/p5/strokeJoin\">strokeJoin()</a>,\n * <a href=\"#/p5/imageMode\">imageMode()</a>,\n * <a href=\"#/p5/rectMode\">rectMode()</a>,\n * <a href=\"#/p5/ellipseMode\">ellipseMode()</a>,\n * <a href=\"#/p5/colorMode\">colorMode()</a>,\n * <a href=\"#/p5/textAlign\">textAlign()</a>,\n * <a href=\"#/p5/textFont\">textFont()</a>,\n * <a href=\"#/p5/textSize\">textSize()</a>,\n * <a href=\"#/p5/textLeading\">textLeading()</a>,\n * <a href=\"#/p5/applyMatrix\">applyMatrix()</a>,\n * <a href=\"#/p5/resetMatrix\">resetMatrix()</a>,\n * <a href=\"#/p5/rotate\">rotate()</a>,\n * <a href=\"#/p5/scale\">scale()</a>,\n * <a href=\"#/p5/shearX\">shearX()</a>,\n * <a href=\"#/p5/shearY\">shearY()</a>,\n * <a href=\"#/p5/translate\">translate()</a>,\n * <a href=\"#/p5/noiseSeed\">noiseSeed()</a>.\n *\n * In WEBGL mode additional style settings are stored. These are controlled by\n * the following functions:\n * <a href=\"#/p5/setCamera\">setCamera()</a>,\n * <a href=\"#/p5/ambientLight\">ambientLight()</a>,\n * <a href=\"#/p5/directionalLight\">directionalLight()</a>,\n * <a href=\"#/p5/pointLight\">pointLight()</a>,\n * <a href=\"#/p5/texture\">texture()</a>,\n * <a href=\"#/p5/specularMaterial\">specularMaterial()</a>,\n * <a href=\"#/p5/shininess\">shininess()</a>,\n * <a href=\"#/p5/normalMaterial\">normalMaterial()</a> and\n * <a href=\"#/p5/shader\">shader()</a>.\n *\n * @method pop\n * @example\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33); // Left circle\n *\n * push(); // Start a new drawing state\n * translate(50, 0);\n * strokeWeight(10);\n * fill(204, 153, 0);\n * ellipse(0, 50, 33, 33); // Middle circle\n * pop(); // Restore original state\n *\n * ellipse(100, 50, 33, 33); // Right circle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33); // Left circle\n *\n * push(); // Start a new drawing state\n * strokeWeight(10);\n * fill(204, 153, 0);\n * ellipse(33, 50, 33, 33); // Left-middle circle\n *\n * push(); // Start another new drawing state\n * stroke(0, 102, 153);\n * ellipse(66, 50, 33, 33); // Right-middle circle\n * pop(); // Restore previous state\n *\n * pop(); // Restore original state\n *\n * ellipse(100, 50, 33, 33); // Right circle\n * </code>\n * </div>\n *\n * @alt\n * Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.\n *\n */\np5.prototype.pop = function() {\n  const style = this._styles.pop();\n  if (style) {\n    this._renderer.pop(style.renderer);\n    Object.assign(this, style.props);\n  } else {\n    console.warn('pop() was called without matching push()');\n  }\n};\n\n/**\n * Executes the code within <a href=\"#/p5/draw\">draw()</a> one time. This\n * function allows the program to update the display window only when necessary,\n * for example when an event registered by <a href=\"#/p5/mousePressed\">mousePressed()</a>\n * or <a href=\"#/p5/keyPressed\">keyPressed()</a> occurs.\n *\n * In structuring a program, it only makes sense to call <a href=\"#/p5/redraw\">redraw()</a>\n * within events such as <a href=\"#/p5/mousePressed\">mousePressed()</a>. This\n * is because <a href=\"#/p5/redraw\">redraw()</a> does not run\n * <a href=\"#/p5/draw\">draw()</a> immediately (it only sets a flag that indicates\n * an update is needed).\n *\n * The <a href=\"#/p5/redraw\">redraw()</a> function does not work properly when\n * called inside <a href=\"#/p5/draw\">draw()</a>.To enable/disable animations,\n * use <a href=\"#/p5/loop\">loop()</a> and <a href=\"#/p5/noLoop\">noLoop()</a>.\n *\n * In addition you can set the number of redraws per method call. Just\n * add an integer as single parameter for the number of redraws.\n *\n * @method redraw\n * @param  {Integer} [n] Redraw for n-times. The default value is 1.\n * @example\n * <div><code>\n * let x = 0;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(204);\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   x += 1;\n *   redraw();\n * }\n * </code>\n * </div>\n *\n * <div class='norender'>\n * <code>\n * let x = 0;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(204);\n *   x += 1;\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   redraw(5);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black line on far left of canvas\n * black line on far left of canvas\n *\n */\np5.prototype.redraw = function(n) {\n  if (this._inUserDraw || !this._setupDone) {\n    return;\n  }\n\n  let numberOfRedraws = parseInt(n);\n  if (isNaN(numberOfRedraws) || numberOfRedraws < 1) {\n    numberOfRedraws = 1;\n  }\n\n  const context = this._isGlobal ? window : this;\n  const userSetup = context.setup;\n  const userDraw = context.draw;\n  if (typeof userDraw === 'function') {\n    if (typeof userSetup === 'undefined') {\n      context.scale(context._pixelDensity, context._pixelDensity);\n    }\n    const callMethod = f => {\n      f.call(context);\n    };\n    for (let idxRedraw = 0; idxRedraw < numberOfRedraws; idxRedraw++) {\n      context.resetMatrix();\n      if (context._renderer.isP3D) {\n        context._renderer._update();\n      }\n      context._setProperty('frameCount', context.frameCount + 1);\n      context._registeredMethods.pre.forEach(callMethod);\n      this._inUserDraw = true;\n      try {\n        userDraw();\n      } finally {\n        this._inUserDraw = false;\n      }\n      context._registeredMethods.post.forEach(callMethod);\n    }\n  }\n};\n\n/**\n * The `p5()` constructor enables you to activate \"instance mode\" instead of normal\n * \"global mode\". This is an advanced topic. A short description and example is\n * included below. Please see\n * <a target=\"blank\" href=\"https://www.youtube.com/watch?v=Su792jEauZg&feature=youtu.be\">\n * Dan Shiffman's Coding Train video tutorial</a> or this\n * <a target=\"blank\" href=\"https://github.com/processing/p5.js/wiki/p5.js-overview#instantiation--namespace\">tutorial page</a>\n * for more info.\n *\n * By default, all p5.js functions are in the global namespace (i.e. bound to the window\n * object), meaning you can call them simply `ellipse()`, `fill()`, etc. However, this\n * might be inconvenient if you are mixing with other JS libraries (synchronously or\n * asynchronously) or writing long programs of your own. p5.js currently supports a\n * way around this problem called \"instance mode\". In instance mode, all p5 functions\n * are bound up in a single variable instead of polluting your global namespace.\n *\n * Optionally, you can specify a default container for the canvas and any other elements\n * to append to with a second argument. You can give the ID of an element in your html,\n * or an html node itself.\n *\n * Note that creating instances like this also allows you to have more than one p5 sketch on\n * a single web page, as they will each be wrapped up with their own set up variables. Of\n * course, you could also use iframes to have multiple sketches in global mode.\n *\n * @method p5\n * @param {Object} sketch a function containing a p5.js sketch\n * @param {String|Object} node ID or pointer to HTML DOM node to contain sketch in\n * @example\n * <div class='norender'><code>\n * const s = p => {\n *   let x = 100;\n *   let y = 100;\n *\n *   p.setup = function() {\n *     p.createCanvas(700, 410);\n *   };\n *\n *   p.draw = function() {\n *     p.background(0);\n *     p.fill(255);\n *     p.rect(x, y, 50, 50);\n *   };\n * };\n *\n * new p5(s); // invoke p5\n * </code></div>\n *\n * @alt\n * white rectangle on black background\n */\nexport default p5;\n","/**\n * @module Transform\n * @submodule Transform\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from './main';\n\n/**\n * Multiplies the current matrix by the one specified through the parameters.\n * This is a powerful operation that can perform the equivalent of translate,\n * scale, shear and rotate all at once. You can learn more about transformation\n * matrices on <a href=\"https://en.wikipedia.org/wiki/Transformation_matrix\">\n * Wikipedia</a>.\n *\n * The naming of the arguments here follows the naming of the <a href=\n * \"https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-transform\">\n * WHATWG specification</a> and corresponds to a\n * transformation matrix of the\n * form:\n *\n * > <img style=\"max-width: 150px\" src=\"assets/transformation-matrix.png\"\n * alt=\"The transformation matrix used when applyMatrix is called\"/>\n *\n * @method applyMatrix\n * @param  {Number} a numbers which define the 2x3 matrix to be multiplied\n * @param  {Number} b numbers which define the 2x3 matrix to be multiplied\n * @param  {Number} c numbers which define the 2x3 matrix to be multiplied\n * @param  {Number} d numbers which define the 2x3 matrix to be multiplied\n * @param  {Number} e numbers which define the 2x3 matrix to be multiplied\n * @param  {Number} f numbers which define the 2x3 matrix to be multiplied\n * @chainable\n * @example\n * <div>\n * <code>\n * function setup() {\n *   frameRate(10);\n *   rectMode(CENTER);\n * }\n *\n * function draw() {\n *   let step = frameCount % 20;\n *   background(200);\n *   // Equivalent to translate(x, y);\n *   applyMatrix(1, 0, 0, 1, 40 + step, 50);\n *   rect(0, 0, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   frameRate(10);\n *   rectMode(CENTER);\n * }\n *\n * function draw() {\n *   let step = frameCount % 20;\n *   background(200);\n *   translate(50, 50);\n *   // Equivalent to scale(x, y);\n *   applyMatrix(1 / step, 0, 0, 1 / step, 0, 0);\n *   rect(0, 0, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   frameRate(10);\n *   rectMode(CENTER);\n * }\n *\n * function draw() {\n *   let step = frameCount % 20;\n *   let angle = map(step, 0, 20, 0, TWO_PI);\n *   let cos_a = cos(angle);\n *   let sin_a = sin(angle);\n *   background(200);\n *   translate(50, 50);\n *   // Equivalent to rotate(angle);\n *   applyMatrix(cos_a, sin_a, -sin_a, cos_a, 0, 0);\n *   rect(0, 0, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   frameRate(10);\n *   rectMode(CENTER);\n * }\n *\n * function draw() {\n *   let step = frameCount % 20;\n *   let angle = map(step, 0, 20, -PI / 4, PI / 4);\n *   background(200);\n *   translate(50, 50);\n *   // equivalent to shearX(angle);\n *   let shear_factor = 1 / tan(PI / 2 - angle);\n *   applyMatrix(1, 0, shear_factor, 1, 0, 0);\n *   rect(0, 0, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   noFill();\n * }\n *\n * function draw() {\n *   background(200);\n *   rotateY(PI / 6);\n *   stroke(153);\n *   box(35);\n *   let rad = millis() / 1000;\n *   // Set rotation angles\n *   let ct = cos(rad);\n *   let st = sin(rad);\n *   // Matrix for rotation around the Y axis\n *   // prettier-ignore\n *   applyMatrix(  ct, 0.0,  st,  0.0,\n *                0.0, 1.0, 0.0,  0.0,\n *                -st, 0.0,  ct,  0.0,\n *                0.0, 0.0, 0.0,  1.0);\n *   stroke(255);\n *   box(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * A rectangle translating to the right\n * A rectangle shrinking to the center\n * A rectangle rotating clockwise about the center\n * A rectangle shearing\n *\n */\np5.prototype.applyMatrix = function(a, b, c, d, e, f) {\n  this._renderer.applyMatrix(...arguments);\n  return this;\n};\n\n/**\n * Replaces the current matrix with the identity matrix.\n *\n * @method resetMatrix\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(50, 50);\n * applyMatrix(0.5, 0.5, -0.5, 0.5, 0, 0);\n * rect(0, 0, 20, 20);\n * // Note that the translate is also reset.\n * resetMatrix();\n * rect(0, 0, 20, 20);\n * </code>\n * </div>\n *\n * @alt\n * A rotated retangle in the center with another at the top left corner\n *\n */\np5.prototype.resetMatrix = function() {\n  this._renderer.resetMatrix();\n  return this;\n};\n\n/**\n * Rotates a shape by the amount specified by the angle parameter. This\n * function accounts for <a href=\"#/p5/angleMode\">angleMode</a>, so angles\n * can be entered in either RADIANS or DEGREES.\n *\n * Objects are always rotated around their relative position to the\n * origin and positive numbers rotate objects in a clockwise direction.\n * Transformations apply to everything that happens after and subsequent\n * calls to the function accumulates the effect. For example, calling\n * rotate(HALF_PI) and then rotate(HALF_PI) is the same as rotate(PI).\n * All tranformations are reset when <a href=\"#/p5/draw\">draw()</a> begins again.\n *\n * Technically, <a href=\"#/p5/rotate\">rotate()</a> multiplies the current transformation matrix\n * by a rotation matrix. This function can be further controlled by\n * the <a href=\"#/p5/push\">push()</a> and <a href=\"#/p5/pop\">pop()</a>.\n *\n * @method rotate\n * @param  {Number} angle the angle of rotation, specified in radians\n *                        or degrees, depending on current angleMode\n * @param  {p5.Vector|Number[]} [axis] (in 3d) the axis to rotate around\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(width / 2, height / 2);\n * rotate(PI / 3.0);\n * rect(-26, -26, 52, 52);\n * </code>\n * </div>\n *\n * @alt\n * white 52x52 rect with black outline at center rotated counter 45 degrees\n *\n */\np5.prototype.rotate = function(angle, axis) {\n  p5._validateParameters('rotate', arguments);\n  this._renderer.rotate(this._toRadians(angle), axis);\n  return this;\n};\n\n/**\n * Rotates a shape around X axis by the amount specified in angle parameter.\n * The angles can be entered in either RADIANS or DEGREES.\n *\n * Objects are always rotated around their relative position to the\n * origin and positive numbers rotate objects in a clockwise direction.\n * All tranformations are reset when <a href=\"#/p5/draw\">draw()</a> begins again.\n *\n * @method  rotateX\n * @param  {Number} angle the angle of rotation, specified in radians\n *                        or degrees, depending on current angleMode\n * @chainable\n * @example\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw() {\n *   background(255);\n *   rotateX(millis() / 1000);\n *   box();\n * }\n * </code>\n * </div>\n *\n * @alt\n * 3d box rotating around the x axis.\n */\np5.prototype.rotateX = function(angle) {\n  this._assert3d('rotateX');\n  p5._validateParameters('rotateX', arguments);\n  this._renderer.rotateX(this._toRadians(angle));\n  return this;\n};\n\n/**\n * Rotates a shape around Y axis by the amount specified in angle parameter.\n * The angles can be entered in either RADIANS or DEGREES.\n *\n * Objects are always rotated around their relative position to the\n * origin and positive numbers rotate objects in a clockwise direction.\n * All tranformations are reset when <a href=\"#/p5/draw\">draw()</a> begins again.\n *\n * @method rotateY\n * @param  {Number} angle the angle of rotation, specified in radians\n *                        or degrees, depending on current angleMode\n * @chainable\n * @example\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw() {\n *   background(255);\n *   rotateY(millis() / 1000);\n *   box();\n * }\n * </code>\n * </div>\n *\n * @alt\n * 3d box rotating around the y axis.\n */\np5.prototype.rotateY = function(angle) {\n  this._assert3d('rotateY');\n  p5._validateParameters('rotateY', arguments);\n  this._renderer.rotateY(this._toRadians(angle));\n  return this;\n};\n\n/**\n * Rotates a shape around Z axis by the amount specified in angle parameter.\n * The angles can be entered in either RADIANS or DEGREES.\n *\n * This method works in WEBGL mode only.\n *\n * Objects are always rotated around their relative position to the\n * origin and positive numbers rotate objects in a clockwise direction.\n * All tranformations are reset when <a href=\"#/p5/draw\">draw()</a> begins again.\n *\n * @method rotateZ\n * @param  {Number} angle the angle of rotation, specified in radians\n *                        or degrees, depending on current angleMode\n * @chainable\n * @example\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw() {\n *   background(255);\n *   rotateZ(millis() / 1000);\n *   box();\n * }\n * </code>\n * </div>\n *\n * @alt\n * 3d box rotating around the z axis.\n */\np5.prototype.rotateZ = function(angle) {\n  this._assert3d('rotateZ');\n  p5._validateParameters('rotateZ', arguments);\n  this._renderer.rotateZ(this._toRadians(angle));\n  return this;\n};\n\n/**\n * Increases or decreases the size of a shape by expanding or contracting\n * vertices. Objects always scale from their relative origin to the\n * coordinate system. Scale values are specified as decimal percentages.\n * For example, the function call scale(2.0) increases the dimension of a\n * shape by 200%.\n *\n * Transformations apply to everything that happens after and subsequent\n * calls to the function multiply the effect. For example, calling scale(2.0)\n * and then scale(1.5) is the same as scale(3.0). If <a href=\"#/p5/scale\">scale()</a> is called\n * within <a href=\"#/p5/draw\">draw()</a>, the transformation is reset when the loop begins again.\n *\n * Using this function with the z parameter is only available in WEBGL mode.\n * This function can be further controlled with <a href=\"#/p5/push\">push()</a> and <a href=\"#/p5/pop\">pop()</a>.\n *\n * @method scale\n * @param  {Number|p5.Vector|Number[]} s\n *                      percent to scale the object, or percentage to\n *                      scale the object in the x-axis if multiple arguments\n *                      are given\n * @param  {Number} [y] percent to scale the object in the y-axis\n * @param  {Number} [z] percent to scale the object in the z-axis (webgl only)\n * @chainable\n * @example\n * <div>\n * <code>\n * rect(30, 20, 50, 50);\n * scale(0.5);\n * rect(30, 20, 50, 50);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * rect(30, 20, 50, 50);\n * scale(0.5, 1.3);\n * rect(30, 20, 50, 50);\n * </code>\n * </div>\n *\n * @alt\n * white 52x52 rect with black outline at center rotated counter 45 degrees\n * 2 white rects with black outline- 1 50x50 at center. other 25x65 bottom left\n *\n */\n/**\n * @method scale\n * @param  {p5.Vector|Number[]} scales per-axis percents to scale the object\n * @chainable\n */\np5.prototype.scale = function(x, y, z) {\n  p5._validateParameters('scale', arguments);\n  // Only check for Vector argument type if Vector is available\n  if (x instanceof p5.Vector) {\n    const v = x;\n    x = v.x;\n    y = v.y;\n    z = v.z;\n  } else if (x instanceof Array) {\n    const rg = x;\n    x = rg[0];\n    y = rg[1];\n    z = rg[2] || 1;\n  }\n  if (isNaN(y)) {\n    y = z = x;\n  } else if (isNaN(z)) {\n    z = 1;\n  }\n\n  this._renderer.scale.call(this._renderer, x, y, z);\n\n  return this;\n};\n\n/**\n * Shears a shape around the x-axis by the amount specified by the angle\n * parameter. Angles should be specified in the current angleMode.\n * Objects are always sheared around their relative position to the origin\n * and positive numbers shear objects in a clockwise direction.\n *\n * Transformations apply to everything that happens after and subsequent\n * calls to the function accumulates the effect. For example, calling\n * shearX(PI/2) and then shearX(PI/2) is the same as shearX(PI).\n * If <a href=\"#/p5/shearX\">shearX()</a> is called within the <a href=\"#/p5/draw\">draw()</a>,\n * the transformation is reset when the loop begins again.\n *\n * Technically, <a href=\"#/p5/shearX\">shearX()</a> multiplies the current\n * transformation matrix by a rotation matrix. This function can be further\n * controlled by the <a href=\"#/p5/push\">push()</a> and <a href=\"#/p5/pop\">pop()</a> functions.\n *\n * @method shearX\n * @param  {Number} angle angle of shear specified in radians or degrees,\n *                        depending on current angleMode\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(width / 4, height / 4);\n * shearX(PI / 4.0);\n * rect(0, 0, 30, 30);\n * </code>\n * </div>\n *\n * @alt\n * white irregular quadrilateral with black outline at top middle.\n *\n */\np5.prototype.shearX = function(angle) {\n  p5._validateParameters('shearX', arguments);\n  const rad = this._toRadians(angle);\n  this._renderer.applyMatrix(1, 0, Math.tan(rad), 1, 0, 0);\n  return this;\n};\n\n/**\n * Shears a shape around the y-axis the amount specified by the angle\n * parameter. Angles should be specified in the current angleMode. Objects\n * are always sheared around their relative position to the origin and\n * positive numbers shear objects in a clockwise direction.\n *\n * Transformations apply to everything that happens after and subsequent\n * calls to the function accumulates the effect. For example, calling\n * shearY(PI/2) and then shearY(PI/2) is the same as shearY(PI). If\n * <a href=\"#/p5/shearY\">shearY()</a> is called within the <a href=\"#/p5/draw\">draw()</a>, the transformation is reset when\n * the loop begins again.\n *\n * Technically, <a href=\"#/p5/shearY\">shearY()</a> multiplies the current transformation matrix by a\n * rotation matrix. This function can be further controlled by the\n * <a href=\"#/p5/push\">push()</a> and <a href=\"#/p5/pop\">pop()</a> functions.\n *\n * @method shearY\n * @param  {Number} angle angle of shear specified in radians or degrees,\n *                        depending on current angleMode\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(width / 4, height / 4);\n * shearY(PI / 4.0);\n * rect(0, 0, 30, 30);\n * </code>\n * </div>\n *\n * @alt\n * white irregular quadrilateral with black outline at middle bottom.\n *\n */\np5.prototype.shearY = function(angle) {\n  p5._validateParameters('shearY', arguments);\n  const rad = this._toRadians(angle);\n  this._renderer.applyMatrix(1, Math.tan(rad), 0, 1, 0, 0);\n  return this;\n};\n\n/**\n * Specifies an amount to displace objects within the display window.\n * The x parameter specifies left/right translation, the y parameter\n * specifies up/down translation.\n *\n * Transformations are cumulative and apply to everything that happens after\n * and subsequent calls to the function accumulates the effect. For example,\n * calling translate(50, 0) and then translate(20, 0) is the same as\n * translate(70, 0). If <a href=\"#/p5/translate\">translate()</a> is called within <a href=\"#/p5/draw\">draw()</a>, the\n * transformation is reset when the loop begins again. This function can be\n * further controlled by using <a href=\"#/p5/push\">push()</a> and <a href=\"#/p5/pop\">pop()</a>.\n *\n * @method translate\n * @param  {Number} x left/right translation\n * @param  {Number} y up/down translation\n * @param  {Number} [z] forward/backward translation (webgl only)\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(30, 20);\n * rect(0, 0, 55, 55);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * rect(0, 0, 55, 55); // Draw rect at original 0,0\n * translate(30, 20);\n * rect(0, 0, 55, 55); // Draw rect at new 0,0\n * translate(14, 14);\n * rect(0, 0, 55, 55); // Draw rect at new 0,0\n * </code>\n * </div>\n *\n\n * <div>\n * <code>\n * function draw() {\n *   background(200);\n *   rectMode(CENTER);\n *   translate(width / 2, height / 2);\n *   translate(p5.Vector.fromAngle(millis() / 1000, 40));\n *   rect(0, 0, 20, 20);\n * }\n * </code>\n * </div>\n *\n * @alt\n * white 55x55 rect with black outline at center right.\n * 3 white 55x55 rects with black outlines at top-l, center-r and bottom-r.\n * a 20x20 white rect moving in a circle around the canvas\n *\n */\n/**\n * @method translate\n * @param  {p5.Vector} vector the vector to translate by\n * @chainable\n */\np5.prototype.translate = function(x, y, z) {\n  p5._validateParameters('translate', arguments);\n  if (this._renderer.isP3D) {\n    this._renderer.translate(x, y, z);\n  } else {\n    this._renderer.translate(x, y);\n  }\n  return this;\n};\n\nexport default p5;\n","/**\n * @module Shape\n * @submodule 2D Primitives\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../main';\nimport * as constants from '../constants';\nimport canvas from '../helpers';\nimport '../error_helpers';\n\n/**\n * This function does 3 things:\n *\n *   1. Bounds the desired start/stop angles for an arc (in radians) so that:\n *\n *          0 <= start < TWO_PI ;    start <= stop < start + TWO_PI\n *\n *      This means that the arc rendering functions don't have to be concerned\n *      with what happens if stop is smaller than start, or if the arc 'goes\n *      round more than once', etc.: they can just start at start and increase\n *      until stop and the correct arc will be drawn.\n *\n *   2. Optionally adjusts the angles within each quadrant to counter the naive\n *      scaling of the underlying ellipse up from the unit circle.  Without\n *      this, the angles become arbitrary when width != height: 45 degrees\n *      might be drawn at 5 degrees on a 'wide' ellipse, or at 85 degrees on\n *      a 'tall' ellipse.\n *\n *   3. Flags up when start and stop correspond to the same place on the\n *      underlying ellipse.  This is useful if you want to do something special\n *      there (like rendering a whole ellipse instead).\n */\np5.prototype._normalizeArcAngles = (\n  start,\n  stop,\n  width,\n  height,\n  correctForScaling\n) => {\n  const epsilon = 0.00001; // Smallest visible angle on displays up to 4K.\n  let separation;\n\n  // The order of the steps is important here: each one builds upon the\n  // adjustments made in the steps that precede it.\n\n  // Constrain both start and stop to [0,TWO_PI).\n  start = start - constants.TWO_PI * Math.floor(start / constants.TWO_PI);\n  stop = stop - constants.TWO_PI * Math.floor(stop / constants.TWO_PI);\n\n  // Get the angular separation between the requested start and stop points.\n  //\n  // Technically this separation only matches what gets drawn if\n  // correctForScaling is enabled.  We could add a more complicated calculation\n  // for when the scaling is uncorrected (in which case the drawn points could\n  // end up pushed together or pulled apart quite dramatically relative to what\n  // was requested), but it would make things more opaque for little practical\n  // benefit.\n  //\n  // (If you do disable correctForScaling and find that correspondToSamePoint\n  // is set too aggressively, the easiest thing to do is probably to just make\n  // epsilon smaller...)\n  separation = Math.min(\n    Math.abs(start - stop),\n    constants.TWO_PI - Math.abs(start - stop)\n  );\n\n  // Optionally adjust the angles to counter linear scaling.\n  if (correctForScaling) {\n    if (start <= constants.HALF_PI) {\n      start = Math.atan(width / height * Math.tan(start));\n    } else if (start > constants.HALF_PI && start <= 3 * constants.HALF_PI) {\n      start = Math.atan(width / height * Math.tan(start)) + constants.PI;\n    } else {\n      start = Math.atan(width / height * Math.tan(start)) + constants.TWO_PI;\n    }\n    if (stop <= constants.HALF_PI) {\n      stop = Math.atan(width / height * Math.tan(stop));\n    } else if (stop > constants.HALF_PI && stop <= 3 * constants.HALF_PI) {\n      stop = Math.atan(width / height * Math.tan(stop)) + constants.PI;\n    } else {\n      stop = Math.atan(width / height * Math.tan(stop)) + constants.TWO_PI;\n    }\n  }\n\n  // Ensure that start <= stop < start + TWO_PI.\n  if (start > stop) {\n    stop += constants.TWO_PI;\n  }\n\n  return {\n    start,\n    stop,\n    correspondToSamePoint: separation < epsilon\n  };\n};\n\n/**\n * Draw an arc to the screen. If called with only x, y, w, h, start and stop,\n * the arc will be drawn and filled as an open pie segment. If a mode parameter\n * is provided, the arc will be filled like an open semi-circle (OPEN), a closed\n * semi-circle (CHORD), or as a closed pie segment (PIE). The origin may be changed\n * with the <a href=\"#/p5/ellipseMode\">ellipseMode()</a> function.\n *\n * The arc is always drawn clockwise from wherever start falls to wherever stop\n * falls on the ellipse.Adding or subtracting TWO_PI to either angle does not\n * change where they fall. If both start and stop fall at the same place, a full\n * ellipse will be drawn. Be aware that the y-axis increases in the downward\n * direction, therefore angles are measured clockwise from the positive\n * x-direction (\"3 o'clock\").\n *\n * @method arc\n * @param  {Number} x      x-coordinate of the arc's ellipse\n * @param  {Number} y      y-coordinate of the arc's ellipse\n * @param  {Number} w      width of the arc's ellipse by default\n * @param  {Number} h      height of the arc's ellipse by default\n * @param  {Number} start  angle to start the arc, specified in radians\n * @param  {Number} stop   angle to stop the arc, specified in radians\n * @param  {Constant} [mode] optional parameter to determine the way of drawing\n *                         the arc. either CHORD, PIE or OPEN\n * @param  {Number} [detail] optional parameter for WebGL mode only. This is to\n *                         specify the number of vertices that makes up the\n *                         perimeter of the arc. Default value is 25.\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * arc(50, 55, 50, 50, 0, HALF_PI);\n * noFill();\n * arc(50, 55, 60, 60, HALF_PI, PI);\n * arc(50, 55, 70, 70, PI, PI + QUARTER_PI);\n * arc(50, 55, 80, 80, PI + QUARTER_PI, TWO_PI);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI + QUARTER_PI);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI + QUARTER_PI, OPEN);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI + QUARTER_PI, CHORD);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI + QUARTER_PI, PIE);\n * </code>\n * </div>\n *\n * @alt\n *shattered outline of an ellipse with a quarter of a white circle bottom-right.\n *white ellipse with top right quarter missing.\n *white ellipse with black outline with top right missing.\n *white ellipse with top right missing with black outline around shape.\n *white ellipse with top right quarter missing with black outline around the shape.\n *\n */\np5.prototype.arc = function(x, y, w, h, start, stop, mode, detail) {\n  p5._validateParameters('arc', arguments);\n\n  // if the current stroke and fill settings wouldn't result in something\n  // visible, exit immediately\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n\n  start = this._toRadians(start);\n  stop = this._toRadians(stop);\n\n  // p5 supports negative width and heights for ellipses\n  w = Math.abs(w);\n  h = Math.abs(h);\n\n  const vals = canvas.modeAdjust(x, y, w, h, this._renderer._ellipseMode);\n  const angles = this._normalizeArcAngles(start, stop, vals.w, vals.h, true);\n\n  if (angles.correspondToSamePoint) {\n    // If the arc starts and ends at (near enough) the same place, we choose to\n    // draw an ellipse instead.  This is preferable to faking an ellipse (by\n    // making stop ever-so-slightly less than start + TWO_PI) because the ends\n    // join up to each other rather than at a vertex at the centre (leaving\n    // an unwanted spike in the stroke/fill).\n    this._renderer.ellipse([vals.x, vals.y, vals.w, vals.h, detail]);\n  } else {\n    this._renderer.arc(\n      vals.x,\n      vals.y,\n      vals.w,\n      vals.h,\n      angles.start, // [0, TWO_PI)\n      angles.stop, // [start, start + TWO_PI)\n      mode,\n      detail\n    );\n  }\n\n  return this;\n};\n\n/**\n * Draws an ellipse (oval) to the screen. By default, the first two parameters\n * set the location of the center of the ellipse, and the third and fourth\n * parameters set the shape's width and height. If no height is specified, the\n * value of width is used for both the width and height. If a negative height or\n * width is specified, the absolute value is taken.\n *\n * An ellipse with equal width and height is a circle.The origin may be changed\n * with the <a href=\"#/p5/ellipseMode\">ellipseMode()</a> function.\n *\n * @method ellipse\n * @param  {Number} x x-coordinate of the center of ellipse.\n * @param  {Number} y y-coordinate of the center of ellipse.\n * @param  {Number} w width of the ellipse.\n * @param  {Number} [h] height of the ellipse.\n * @chainable\n * @example\n * <div>\n * <code>\n * ellipse(56, 46, 55, 55);\n * </code>\n * </div>\n *\n * @alt\n *white ellipse with black outline in middle-right of canvas that is 55x55\n */\n\n/**\n * @method ellipse\n * @param  {Number} x\n * @param  {Number} y\n * @param  {Number} w\n * @param  {Number} h\n * @param  {Integer} detail number of radial sectors to draw (for WebGL mode)\n */\np5.prototype.ellipse = function(x, y, w, h, detailX) {\n  p5._validateParameters('ellipse', arguments);\n  return this._renderEllipse.apply(this, arguments);\n};\n\n/**\n * Draws a circle to the screen. A circle is a simple closed shape.It is the set\n * of all points in a plane that are at a given distance from a given point,\n * the centre.This function is a special case of the ellipse() function, where\n * the width and height of the ellipse are the same. Height and width of the\n * ellipse correspond to the diameter of the circle. By default, the first two\n * parameters set the location of the centre of the circle, the third sets the\n * diameter of the circle.\n *\n * @method circle\n * @param  {Number} x  x-coordinate of the centre of the circle.\n * @param  {Number} y  y-coordinate of the centre of the circle.\n * @param  {Number} d  diameter of the circle.\n * @chainable\n * @example\n * <div>\n * <code>\n * // Draw a circle at location (30, 30) with a diameter of 20.\n * circle(30, 30, 20);\n * </code>\n * </div>\n *\n * @alt\n * white circle with black outline in mid of canvas that is 55x55.\n */\np5.prototype.circle = function() {\n  p5._validateParameters('circle', arguments);\n  const args = Array.prototype.slice.call(arguments, 0, 2);\n  args.push(arguments[2]);\n  args.push(arguments[2]);\n  return this._renderEllipse.apply(this, args);\n};\n\n// internal method for drawing ellipses (without parameter validation)\np5.prototype._renderEllipse = function(x, y, w, h, detailX) {\n  // if the current stroke and fill settings wouldn't result in something\n  // visible, exit immediately\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n\n  // p5 supports negative width and heights for rects\n  if (w < 0) {\n    w = Math.abs(w);\n  }\n\n  if (typeof h === 'undefined') {\n    // Duplicate 3rd argument if only 3 given.\n    h = w;\n  } else if (h < 0) {\n    h = Math.abs(h);\n  }\n\n  const vals = canvas.modeAdjust(x, y, w, h, this._renderer._ellipseMode);\n  this._renderer.ellipse([vals.x, vals.y, vals.w, vals.h, detailX]);\n\n  return this;\n};\n\n/**\n * Draws a line (a direct path between two points) to the screen. If called with\n * only 4 parameters, it will draw a line in 2D with a default width of 1 pixel.\n * This width can be modified by using the <a href=\"#/p5/strokeWeight\">\n * strokeWeight()</a> function. A line cannot be filled, therefore the <a\n * href=\"#/p5/fill\">fill()</a> function will not affect the color of a line. So to\n * color a line, use the <a href=\"#/p5/stroke\">stroke()</a> function.\n *\n * @method line\n * @param  {Number} x1 the x-coordinate of the first point\n * @param  {Number} y1 the y-coordinate of the first point\n * @param  {Number} x2 the x-coordinate of the second point\n * @param  {Number} y2 the y-coordinate of the second point\n * @chainable\n * @example\n * <div>\n * <code>\n * line(30, 20, 85, 75);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * line(30, 20, 85, 20);\n * stroke(126);\n * line(85, 20, 85, 75);\n * stroke(255);\n * line(85, 75, 30, 75);\n * </code>\n * </div>\n *\n * @alt\n * An example showing a line 78 pixels long running from mid-top to bottom-right of canvas.\n * An example showing 3 lines of various stroke sizes. Form top, bottom and right sides of a square.\n */\n\n/**\n * @method line\n * @param  {Number} x1\n * @param  {Number} y1\n * @param  {Number} z1 the z-coordinate of the first point\n * @param  {Number} x2\n * @param  {Number} y2\n * @param  {Number} z2 the z-coordinate of the second point\n * @chainable\n */\np5.prototype.line = function(...args) {\n  p5._validateParameters('line', args);\n\n  if (this._renderer._doStroke) {\n    this._renderer.line(...args);\n  }\n\n  return this;\n};\n\n/**\n * Draws a point, a coordinate in space at the dimension of one pixel.\n * The first parameter is the horizontal value for the point, the second\n * param is the vertical value for the point. The color of the point is\n * changed with the <a href=\"#/p5/stroke\">stroke()</a> function. The size of the point\n * can be changed with the <a href=\"#/p5/strokeWeight\">strokeWeight()</a> function.\n *\n * @method point\n * @param  {Number} x the x-coordinate\n * @param  {Number} y the y-coordinate\n * @param  {Number} [z] the z-coordinate (for WebGL mode)\n * @chainable\n * @example\n * <div>\n * <code>\n * point(30, 20);\n * point(85, 20);\n * point(85, 75);\n * point(30, 75);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * point(30, 20);\n * point(85, 20);\n * stroke('purple'); // Change the color\n * strokeWeight(10); // Make the points 10 pixels in size\n * point(85, 75);\n * point(30, 75);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let a = createVector(10, 10);\n * point(a);\n * let b = createVector(10, 20);\n * point(b);\n * point(createVector(20, 10));\n * point(createVector(20, 20));\n * </code>\n * </div>\n *\n * @alt\n * 4 points centered in the middle-right of the canvas.\n * 2 large points and 2 large purple points centered in the middle-right of the canvas.\n * Vertices of a square of length 10 pixels towards the top-left of the canvas.\n */\n\n/**\n * @method point\n * @param {p5.Vector} coordinate_vector the coordinate vector\n * @chainable\n *\n */\np5.prototype.point = function(...args) {\n  p5._validateParameters('point', args);\n\n  if (this._renderer._doStroke) {\n    if (args.length === 1 && args[0] instanceof p5.Vector) {\n      this._renderer.point.call(\n        this._renderer,\n        args[0].x,\n        args[0].y,\n        args[0].z\n      );\n    } else {\n      this._renderer.point(...args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Draws a quad on the canvas. A quad is a quadrilateral, a four sided polygon. It is\n * similar to a rectangle, but the angles between its edges are not\n * constrained to ninety degrees. The first pair of parameters (x1,y1)\n * sets the first vertex and the subsequent pairs should proceed\n * clockwise or counter-clockwise around the defined shape.\n * z-arguments only work when quad() is used in WEBGL mode.\n *\n * @method quad\n * @param {Number} x1 the x-coordinate of the first point\n * @param {Number} y1 the y-coordinate of the first point\n * @param {Number} x2 the x-coordinate of the second point\n * @param {Number} y2 the y-coordinate of the second point\n * @param {Number} x3 the x-coordinate of the third point\n * @param {Number} y3 the y-coordinate of the third point\n * @param {Number} x4 the x-coordinate of the fourth point\n * @param {Number} y4 the y-coordinate of the fourth point\n * @chainable\n * @example\n * <div>\n * <code>\n * quad(38, 31, 86, 20, 69, 63, 30, 76);\n * </code>\n * </div>\n *\n * @alt\n *irregular white quadrilateral shape with black outline mid-right of canvas.\n *\n */\n/**\n * @method quad\n * @param {Number} x1\n * @param {Number} y1\n * @param {Number} z1 the z-coordinate of the first point\n * @param {Number} x2\n * @param {Number} y2\n * @param {Number} z2 the z-coordinate of the second point\n * @param {Number} x3\n * @param {Number} y3\n * @param {Number} z3 the z-coordinate of the third point\n * @param {Number} x4\n * @param {Number} y4\n * @param {Number} z4 the z-coordinate of the fourth point\n * @chainable\n */\np5.prototype.quad = function(...args) {\n  p5._validateParameters('quad', args);\n\n  if (this._renderer._doStroke || this._renderer._doFill) {\n    if (this._renderer.isP3D && args.length !== 12) {\n      // if 3D and we weren't passed 12 args, assume Z is 0\n      // prettier-ignore\n      this._renderer.quad.call(\n        this._renderer,\n        args[0], args[1], 0,\n        args[2], args[3], 0,\n        args[4], args[5], 0,\n        args[6], args[7], 0);\n    } else {\n      this._renderer.quad(...args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Draws a rectangle on the canvas. A rectangle is a four-sided closed shape with\n * every angle at ninety degrees. By default, the first two parameters set\n * the location of the upper-left corner, the third sets the width, and the\n * fourth sets the height. The way these parameters are interpreted, may be\n * changed with the <a href=\"#/p5/rectMode\">rectMode()</a> function.\n *\n * The fifth, sixth, seventh and eighth parameters, if specified,\n * determine corner radius for the top-left, top-right, lower-right and\n * lower-left corners, respectively. An omitted corner radius parameter is set\n * to the value of the previously specified radius value in the parameter list.\n *\n * @method rect\n * @param  {Number} x  x-coordinate of the rectangle.\n * @param  {Number} y  y-coordinate of the rectangle.\n * @param  {Number} w  width of the rectangle.\n * @param  {Number} [h]  height of the rectangle.\n * @param  {Number} [tl] optional radius of top-left corner.\n * @param  {Number} [tr] optional radius of top-right corner.\n * @param  {Number} [br] optional radius of bottom-right corner.\n * @param  {Number} [bl] optional radius of bottom-left corner.\n * @chainable\n * @example\n * <div>\n * <code>\n * // Draw a rectangle at location (30, 20) with a width and height of 55.\n * rect(30, 20, 55, 55);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Draw a rectangle with rounded corners, each having a radius of 20.\n * rect(30, 20, 55, 55, 20);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Draw a rectangle with rounded corners having the following radii:\n * // top-left = 20, top-right = 15, bottom-right = 10, bottom-left = 5.\n * rect(30, 20, 55, 55, 20, 15, 10, 5);\n * </code>\n * </div>\n *\n * @alt\n * 55x55 white rect with black outline in mid-right of canvas.\n * 55x55 white rect with black outline and rounded edges in mid-right of canvas.\n * 55x55 white rect with black outline and rounded edges of different radii.\n */\n\n/**\n * @method rect\n * @param  {Number} x\n * @param  {Number} y\n * @param  {Number} w\n * @param  {Number} h\n * @param  {Integer} [detailX] number of segments in the x-direction (for WebGL mode)\n * @param  {Integer} [detailY] number of segments in the y-direction (for WebGL mode)\n * @chainable\n */\np5.prototype.rect = function() {\n  p5._validateParameters('rect', arguments);\n  return this._renderRect.apply(this, arguments);\n};\n\n/**\n * Draws a square to the screen. A square is a four-sided shape with every angle\n * at ninety degrees, and equal side size. This function is a special case of the\n * rect() function, where the width and height are the same, and the parameter\n * is called \"s\" for side size. By default, the first two parameters set the\n * location of the upper-left corner, the third sets the side size of the square.\n * The way these parameters are interpreted, may be changed with the <a\n * href=\"#/p5/rectMode\">rectMode()</a> function.\n *\n * The fourth, fifth, sixth and seventh parameters, if specified,\n * determine corner radius for the top-left, top-right, lower-right and\n * lower-left corners, respectively. An omitted corner radius parameter is set\n * to the value of the previously specified radius value in the parameter list.\n *\n * @method square\n * @param  {Number} x  x-coordinate of the square.\n * @param  {Number} y  y-coordinate of the square.\n * @param  {Number} s  side size of the square.\n * @param  {Number} [tl] optional radius of top-left corner.\n * @param  {Number} [tr] optional radius of top-right corner.\n * @param  {Number} [br] optional radius of bottom-right corner.\n * @param  {Number} [bl] optional radius of bottom-left corner.\n * @chainable\n * @example\n * <div>\n * <code>\n * // Draw a square at location (30, 20) with a side size of 55.\n * square(30, 20, 55);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Draw a square with rounded corners, each having a radius of 20.\n * square(30, 20, 55, 20);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Draw a square with rounded corners having the following radii:\n * // top-left = 20, top-right = 15, bottom-right = 10, bottom-left = 5.\n * square(30, 20, 55, 20, 15, 10, 5);\n * </code>\n * </div>\n *\n * @alt\n * 55x55 white square with black outline in mid-right of canvas.\n * 55x55 white square with black outline and rounded edges in mid-right of canvas.\n * 55x55 white square with black outline and rounded edges of different radii.\n */\np5.prototype.square = function(x, y, s, tl, tr, br, bl) {\n  p5._validateParameters('square', arguments);\n  // duplicate width for height in case of square\n  return this._renderRect.call(this, x, y, s, s, tl, tr, br, bl);\n};\n\n// internal method to have renderer draw a rectangle\np5.prototype._renderRect = function() {\n  if (this._renderer._doStroke || this._renderer._doFill) {\n    // duplicate width for height in case only 3 arguments is provided\n    if (arguments.length === 3) {\n      arguments[3] = arguments[2];\n    }\n    const vals = canvas.modeAdjust(\n      arguments[0],\n      arguments[1],\n      arguments[2],\n      arguments[3],\n      this._renderer._rectMode\n    );\n\n    const args = [vals.x, vals.y, vals.w, vals.h];\n    // append the additional arguments (either cornder radii, or\n    // segment details) to the argument list\n    for (let i = 4; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n    this._renderer.rect(args);\n  }\n\n  return this;\n};\n\n/**\n * Draws a trangle to the canvas. A triangle is a plane created by connecting\n * three points. The first two arguments specify the first point, the middle two\n * arguments specify the second point, and the last two arguments specify the\n * third point.\n *\n * @method triangle\n * @param  {Number} x1 x-coordinate of the first point\n * @param  {Number} y1 y-coordinate of the first point\n * @param  {Number} x2 x-coordinate of the second point\n * @param  {Number} y2 y-coordinate of the second point\n * @param  {Number} x3 x-coordinate of the third point\n * @param  {Number} y3 y-coordinate of the third point\n * @chainable\n * @example\n * <div>\n * <code>\n * triangle(30, 75, 58, 20, 86, 75);\n * </code>\n * </div>\n *\n *@alt\n * white triangle with black outline in mid-right of canvas.\n */\np5.prototype.triangle = function(...args) {\n  p5._validateParameters('triangle', args);\n\n  if (this._renderer._doStroke || this._renderer._doFill) {\n    this._renderer.triangle(args);\n  }\n\n  return this;\n};\n\nexport default p5;\n","/**\n * @module Shape\n * @submodule Attributes\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../main';\nimport * as constants from '../constants';\n\n/**\n * Modifies the location from which ellipses are drawn by changing the way in\n * which parameters given to <a href=\"#/p5/ellipse\">ellipse()</a>,\n * <a href=\"#/p5/circle\">circle()</a> and <a href=\"#/p5/arc\">arc()</a> are interpreted.\n *\n * The default mode is CENTER, in which the first two parameters are interpreted\n * as the shape's center point's x and y coordinates respectively, while the third\n * and fourth parameters are its width and height.\n *\n * ellipseMode(RADIUS) also uses the first two parameters as the shape's center\n * point's x and y coordinates, but uses the third and fourth parameters to\n * specify half of the shapes's width and height.\n *\n * ellipseMode(CORNER) interprets the first two parameters as the upper-left\n * corner of the shape, while the third and fourth parameters are its width\n * and height.\n *\n * ellipseMode(CORNERS) interprets the first two parameters as the location of\n * one corner of the ellipse's bounding box, and the third and fourth parameters\n * as the location of the opposite corner.\n *\n * The parameter to this method must be written in ALL CAPS because they are\n * predefined as constants in ALL CAPS and Javascript is a case-sensitive language.\n *\n * @method ellipseMode\n * @param  {Constant} mode either CENTER, RADIUS, CORNER, or CORNERS\n * @chainable\n * @example\n * <div>\n * <code>\n * // Example showing RADIUS and CENTER ellipsemode with 2 overlaying ellipses\n * ellipseMode(RADIUS);\n * fill(255);\n * ellipse(50, 50, 30, 30); // Outer white ellipse\n * ellipseMode(CENTER);\n * fill(100);\n * ellipse(50, 50, 30, 30); // Inner gray ellipse\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Example showing CORNER and CORNERS ellipseMode with 2 overlaying ellipses\n * ellipseMode(CORNER);\n * fill(255);\n * ellipse(25, 25, 50, 50); // Outer white ellipse\n * ellipseMode(CORNERS);\n * fill(100);\n * ellipse(25, 25, 50, 50); // Inner gray ellipse\n * </code>\n * </div>\n *\n * @alt\n * 60x60 white ellipse and 30x30 grey ellipse with black outlines at center.\n * 60x60 white ellipse and 30x30 grey ellipse top-right with black outlines.\n *\n */\np5.prototype.ellipseMode = function(m) {\n  p5._validateParameters('ellipseMode', arguments);\n  if (\n    m === constants.CORNER ||\n    m === constants.CORNERS ||\n    m === constants.RADIUS ||\n    m === constants.CENTER\n  ) {\n    this._renderer._ellipseMode = m;\n  }\n  return this;\n};\n\n/**\n * Draws all geometry with jagged (aliased) edges. Note that <a href=\"#/p5/smooth\">smooth()</a> is\n * active by default in 2D mode, so it is necessary to call <a href=\"#/p5/noSmooth\">noSmooth()</a> to disable\n * smoothing of geometry, images, and fonts. In 3D mode, <a href=\"#/p5/noSmooth\">noSmooth()</a> is enabled\n * by default, so it is necessary to call <a href=\"#/p5/smooth\">smooth()</a> if you would like\n * smooth (antialiased) edges on your geometry.\n *\n * @method noSmooth\n * @chainable\n * @example\n * <div>\n * <code>\n * background(0);\n * noStroke();\n * smooth();\n * ellipse(30, 48, 36, 36);\n * noSmooth();\n * ellipse(70, 48, 36, 36);\n * </code>\n * </div>\n *\n * @alt\n * 2 pixelated 36x36 white ellipses to left & right of center, black background\n *\n */\np5.prototype.noSmooth = function() {\n  this.setAttributes('antialias', false);\n  if (!this._renderer.isP3D) {\n    if ('imageSmoothingEnabled' in this.drawingContext) {\n      this.drawingContext.imageSmoothingEnabled = false;\n    }\n  }\n  return this;\n};\n\n/**\n * Modifies the location from which rectangles are drawn by changing the way\n * in which parameters given to <a href=\"#/p5/rect\">rect()</a> are interpreted.\n *\n * The default mode is CORNER, which interprets the first two parameters as the\n * upper-left corner of the shape, while the third and fourth parameters are its\n * width and height.\n *\n * rectMode(CORNERS) interprets the first two parameters as the location of\n * one of the corner, and the third and fourth parameters as the location of\n * the diagonally opposite corner. Note, the rectangle is drawn between the\n * coordinates, so it is not neccesary that the first corner be the upper left\n * corner.\n *\n * rectMode(CENTER) interprets the first two parameters as the shape's center\n * point, while the third and fourth parameters are its width and height.\n *\n * rectMode(RADIUS) also uses the first two parameters as the shape's center\n * point, but uses the third and fourth parameters to specify half of the shapes's\n * width and height respectively.\n *\n * The parameter to this method must be written in ALL CAPS because they are\n * predefined as constants in ALL CAPS and Javascript is a case-sensitive language.\n *\n * @method rectMode\n * @param  {Constant} mode either CORNER, CORNERS, CENTER, or RADIUS\n * @chainable\n * @example\n * <div>\n * <code>\n * rectMode(CORNER);\n * fill(255);\n * rect(25, 25, 50, 50); // Draw white rectangle using CORNER mode\n *\n * rectMode(CORNERS);\n * fill(100);\n * rect(25, 25, 50, 50); // Draw gray rectanle using CORNERS mode\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * rectMode(RADIUS);\n * fill(255);\n * rect(50, 50, 30, 30); // Draw white rectangle using RADIUS mode\n *\n * rectMode(CENTER);\n * fill(100);\n * rect(50, 50, 30, 30); // Draw gray rectangle using CENTER mode\n * </code>\n * </div>\n *\n * @alt\n * 50x50 white rect at center and 25x25 grey rect in the top left of the other.\n * 50x50 white rect at center and 25x25 grey rect in the center of the other.\n *\n */\np5.prototype.rectMode = function(m) {\n  p5._validateParameters('rectMode', arguments);\n  if (\n    m === constants.CORNER ||\n    m === constants.CORNERS ||\n    m === constants.RADIUS ||\n    m === constants.CENTER\n  ) {\n    this._renderer._rectMode = m;\n  }\n  return this;\n};\n\n/**\n * Draws all geometry with smooth (anti-aliased) edges. <a href=\"#/p5/smooth\">smooth()</a> will also\n * improve image quality of resized images. Note that <a href=\"#/p5/smooth\">smooth()</a> is active by\n * default in 2D mode; <a href=\"#/p5/noSmooth\">noSmooth()</a> can be used to disable smoothing of geometry,\n * images, and fonts. In 3D mode, <a href=\"#/p5/noSmooth\">noSmooth()</a> is enabled\n * by default, so it is necessary to call <a href=\"#/p5/smooth\">smooth()</a> if you would like\n * smooth (antialiased) edges on your geometry.\n *\n * @method smooth\n * @chainable\n * @example\n * <div>\n * <code>\n * background(0);\n * noStroke();\n * smooth();\n * ellipse(30, 48, 36, 36);\n * noSmooth();\n * ellipse(70, 48, 36, 36);\n * </code>\n * </div>\n *\n * @alt\n * 2 pixelated 36x36 white ellipses one left one right of center. On black.\n *\n */\np5.prototype.smooth = function() {\n  this.setAttributes('antialias', true);\n  if (!this._renderer.isP3D) {\n    if ('imageSmoothingEnabled' in this.drawingContext) {\n      this.drawingContext.imageSmoothingEnabled = true;\n    }\n  }\n  return this;\n};\n\n/**\n * Sets the style for rendering line endings. These ends are either rounded,\n * squared or extended, each of which specified with the corresponding\n * parameters: ROUND, SQUARE and PROJECT. The default cap is ROUND.\n *\n * The parameter to this method must be written in ALL CAPS because they are\n * predefined as constants in ALL CAPS and Javascript is a case-sensitive language.\n *\n * @method strokeCap\n * @param  {Constant} cap either ROUND, SQUARE or PROJECT\n * @chainable\n * @example\n * <div>\n * <code>\n * // Example of different strokeCaps\n * strokeWeight(12.0);\n * strokeCap(ROUND);\n * line(20, 30, 80, 30);\n * strokeCap(SQUARE);\n * line(20, 50, 80, 50);\n * strokeCap(PROJECT);\n * line(20, 70, 80, 70);\n * </code>\n * </div>\n *\n * @alt\n * 3 lines. Top line: rounded ends, mid: squared, bottom:longer squared ends.\n */\np5.prototype.strokeCap = function(cap) {\n  p5._validateParameters('strokeCap', arguments);\n  if (\n    cap === constants.ROUND ||\n    cap === constants.SQUARE ||\n    cap === constants.PROJECT\n  ) {\n    this._renderer.strokeCap(cap);\n  }\n  return this;\n};\n\n/**\n * Sets the style of the joints which connect line segments. These joints\n * are either mitered, beveled or rounded and specified with the\n * corresponding parameters MITER, BEVEL and ROUND. The default joint is\n * MITER.\n *\n * The parameter to this method must be written in ALL CAPS because they are\n * predefined as constants in ALL CAPS and Javascript is a case-sensitive language.\n *\n * @method strokeJoin\n * @param  {Constant} join either MITER, BEVEL, ROUND\n * @chainable\n * @example\n * <div>\n * <code>\n * // Example of MITER type of joints\n * noFill();\n * strokeWeight(10.0);\n * strokeJoin(MITER);\n * beginShape();\n * vertex(35, 20);\n * vertex(65, 50);\n * vertex(35, 80);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Example of BEVEL type of joints\n * noFill();\n * strokeWeight(10.0);\n * strokeJoin(BEVEL);\n * beginShape();\n * vertex(35, 20);\n * vertex(65, 50);\n * vertex(35, 80);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Example of ROUND type of joints\n * noFill();\n * strokeWeight(10.0);\n * strokeJoin(ROUND);\n * beginShape();\n * vertex(35, 20);\n * vertex(65, 50);\n * vertex(35, 80);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * Right-facing arrowhead shape with pointed tip in center of canvas.\n * Right-facing arrowhead shape with flat tip in center of canvas.\n * Right-facing arrowhead shape with rounded tip in center of canvas.\n *\n */\np5.prototype.strokeJoin = function(join) {\n  p5._validateParameters('strokeJoin', arguments);\n  if (\n    join === constants.ROUND ||\n    join === constants.BEVEL ||\n    join === constants.MITER\n  ) {\n    this._renderer.strokeJoin(join);\n  }\n  return this;\n};\n\n/**\n * Sets the width of the stroke used for lines, points and the border around\n * shapes. All widths are set in units of pixels.\n *\n * @method strokeWeight\n * @param  {Number} weight the weight of the stroke (in pixels)\n * @chainable\n * @example\n * <div>\n * <code>\n * // Example of different stroke weights\n * strokeWeight(1); // Default\n * line(20, 20, 80, 20);\n * strokeWeight(4); // Thicker\n * line(20, 40, 80, 40);\n * strokeWeight(10); // Beastly\n * line(20, 70, 80, 70);\n * </code>\n * </div>\n *\n * @alt\n * 3 horizontal black lines. Top line: thin, mid: medium, bottom:thick.\n *\n */\np5.prototype.strokeWeight = function(w) {\n  p5._validateParameters('strokeWeight', arguments);\n  this._renderer.strokeWeight(w);\n  return this;\n};\n\nexport default p5;\n","/**\n * @module Shape\n * @submodule Curves\n * @for p5\n * @requires core\n */\n\nimport p5 from '../main';\nimport '../error_helpers';\n\n/**\n * Draws a cubic Bezier curve on the screen. These curves are defined by a\n * series of anchor and control points. The first two parameters specify\n * the first anchor point and the last two parameters specify the other\n * anchor point, which become the first and last points on the curve. The\n * middle parameters specify the two control points which define the shape\n * of the curve. Approximately speaking, control points \"pull\" the curve\n * towards them.\n *\n * Bezier curves were developed by French automotive engineer Pierre Bezier,\n * and are commonly used in computer graphics to define gently sloping curves.\n * See also <a href=\"#/p5/curve\">curve()</a>.\n *\n * @method bezier\n * @param  {Number} x1 x-coordinate for the first anchor point\n * @param  {Number} y1 y-coordinate for the first anchor point\n * @param  {Number} x2 x-coordinate for the first control point\n * @param  {Number} y2 y-coordinate for the first control point\n * @param  {Number} x3 x-coordinate for the second control point\n * @param  {Number} y3 y-coordinate for the second control point\n * @param  {Number} x4 x-coordinate for the second anchor point\n * @param  {Number} y4 y-coordinate for the second anchor point\n * @chainable\n * @example\n * <div>\n * <code>\n * noFill();\n * stroke(255, 102, 0);\n * line(85, 20, 10, 10);\n * line(90, 90, 15, 80);\n * stroke(0, 0, 0);\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * background(0, 0, 0);\n * noFill();\n * stroke(255);\n * bezier(250, 250, 0, 100, 100, 0, 100, 0, 0, 0, 100, 0);\n * </code>\n * </div>\n *\n * @alt\n * stretched black s-shape in center with orange lines extending from end points.\n * a white colored curve on black background from the upper-right corner to the lower right corner.\n */\n\n/**\n * @method bezier\n * @param  {Number} x1\n * @param  {Number} y1\n * @param  {Number} z1 z-coordinate for the first anchor point\n * @param  {Number} x2\n * @param  {Number} y2\n * @param  {Number} z2 z-coordinate for the first control point\n * @param  {Number} x3\n * @param  {Number} y3\n * @param  {Number} z3 z-coordinate for the second control point\n * @param  {Number} x4\n * @param  {Number} y4\n * @param  {Number} z4 z-coordinate for the second anchor point\n * @chainable\n */\np5.prototype.bezier = function(...args) {\n  p5._validateParameters('bezier', args);\n\n  // if the current stroke and fill settings wouldn't result in something\n  // visible, exit immediately\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n\n  this._renderer.bezier(...args);\n\n  return this;\n};\n\n/**\n * Sets the resolution at which Bezier's curve is displayed. The default value is 20.\n *\n * Note, This function is only useful when using the WEBGL renderer\n * as the default canvas renderer does not use this information.\n *\n * @method bezierDetail\n * @param {Number} detail resolution of the curves\n * @chainable\n * @example\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   noFill();\n *   bezierDetail(5);\n * }\n *\n * function draw() {\n *   background(200);\n *   // prettier-ignore\n *   bezier(-40, -40, 0,\n *           90, -40, 0,\n *          -90,  40, 0,\n *           40,  40, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * stretched black s-shape with a low level of bezier detail\n *\n */\np5.prototype.bezierDetail = function(d) {\n  p5._validateParameters('bezierDetail', arguments);\n  this._bezierDetail = d;\n  return this;\n};\n\n/**\n * Given the x or y co-ordinate values of control and anchor points of a bezier\n * curve, it evaluates the x or y coordinate of the bezier at position t. The\n * parameters a and d are the x or y coordinates of first and last points on the\n * curve while b and c are of the control points.The final parameter t is the\n * position of the resultant point which is given between 0 and 1.\n * This can be done once with the x coordinates and a second time\n * with the y coordinates to get the location of a bezier curve at t.\n *\n * @method bezierPoint\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} the value of the Bezier at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * let x1 = 85,\n  x2 = 10,\n  x3 = 90,\n  x4 = 15;\n * let y1 = 20,\n  y2 = 10,\n  y3 = 90,\n  y4 = 80;\n * bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n * fill(255);\n * let steps = 10;\n * for (let i = 0; i <= steps; i++) {\n *   let t = i / steps;\n *   let x = bezierPoint(x1, x2, x3, x4, t);\n *   let y = bezierPoint(y1, y2, y3, y4, t);\n *   circle(x, y, 5);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 10 points plotted on a given bezier at equal distances.\n */\np5.prototype.bezierPoint = function(a, b, c, d, t) {\n  p5._validateParameters('bezierPoint', arguments);\n\n  const adjustedT = 1 - t;\n  return (\n    Math.pow(adjustedT, 3) * a +\n    3 * Math.pow(adjustedT, 2) * t * b +\n    3 * adjustedT * Math.pow(t, 2) * c +\n    Math.pow(t, 3) * d\n  );\n};\n\n/**\n * Evaluates the tangent to the Bezier at position t for points a, b, c, d.\n * The parameters a and d are the first and last points\n * on the curve, and b and c are the control points.\n * The final parameter t varies between 0 and 1.\n *\n * @method bezierTangent\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} the tangent at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * let steps = 6;\n * fill(255);\n * for (let i = 0; i <= steps; i++) {\n *   let t = i / steps;\n *   // Get the location of the point\n *   let x = bezierPoint(85, 10, 90, 15, t);\n *   let y = bezierPoint(20, 10, 90, 80, t);\n *   // Get the tangent points\n *   let tx = bezierTangent(85, 10, 90, 15, t);\n *   let ty = bezierTangent(20, 10, 90, 80, t);\n *   // Calculate an angle from the tangent points\n *   let a = atan2(ty, tx);\n *   a += PI;\n *   stroke(255, 102, 0);\n *   line(x, y, cos(a) * 30 + x, sin(a) * 30 + y);\n *   // The following line of code makes a line\n *   // inverse of the above line\n *   //line(x, y, cos(a)*-30 + x, sin(a)*-30 + y);\n *   stroke(0);\n *   ellipse(x, y, 5, 5);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * stroke(255, 102, 0);\n * let steps = 16;\n * for (let i = 0; i <= steps; i++) {\n *   let t = i / steps;\n *   let x = bezierPoint(85, 10, 90, 15, t);\n *   let y = bezierPoint(20, 10, 90, 80, t);\n *   let tx = bezierTangent(85, 10, 90, 15, t);\n *   let ty = bezierTangent(20, 10, 90, 80, t);\n *   let a = atan2(ty, tx);\n *   a -= HALF_PI;\n *   line(x, y, cos(a) * 8 + x, sin(a) * 8 + y);\n * }\n * </code>\n * </div>\n *\n * @alt\n * s-shaped line with 6 short orange lines showing the tangents at those points.\n * s-shaped line with 6 short orange lines showing lines coming out the underside of the bezier.\n */\np5.prototype.bezierTangent = function(a, b, c, d, t) {\n  p5._validateParameters('bezierTangent', arguments);\n\n  const adjustedT = 1 - t;\n  return (\n    3 * d * Math.pow(t, 2) -\n    3 * c * Math.pow(t, 2) +\n    6 * c * adjustedT * t -\n    6 * b * adjustedT * t +\n    3 * b * Math.pow(adjustedT, 2) -\n    3 * a * Math.pow(adjustedT, 2)\n  );\n};\n\n/**\n * Draws a curved line on the screen between two points, given as the\n * middle four parameters. The first two parameters are a control point, as\n * if the curve came from this point even though it's not drawn. The last\n * two parameters similarly describe the other control point. <br /><br />\n * Longer curves can be created by putting a series of <a href=\"#/p5/curve\">curve()</a> functions\n * together or using <a href=\"#/p5/curveVertex\">curveVertex()</a>. An additional function called\n * <a href=\"#/p5/curveTightness\">curveTightness()</a> provides control for the visual quality of the curve.\n * The <a href=\"#/p5/curve\">curve()</a> function is an implementation of Catmull-Rom splines.\n *\n * @method curve\n * @param  {Number} x1 x-coordinate for the beginning control point\n * @param  {Number} y1 y-coordinate for the beginning control point\n * @param  {Number} x2 x-coordinate for the first point\n * @param  {Number} y2 y-coordinate for the first point\n * @param  {Number} x3 x-coordinate for the second point\n * @param  {Number} y3 y-coordinate for the second point\n * @param  {Number} x4 x-coordinate for the ending control point\n * @param  {Number} y4 y-coordinate for the ending control point\n * @chainable\n * @example\n * <div>\n * <code>\n * noFill();\n * stroke(255, 102, 0);\n * curve(5, 26, 5, 26, 73, 24, 73, 61);\n * stroke(0);\n * curve(5, 26, 73, 24, 73, 61, 15, 65);\n * stroke(255, 102, 0);\n * curve(73, 24, 73, 61, 15, 65, 15, 65);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Define the curve points as JavaScript objects\n * let p1 = { x: 5, y: 26 };\n * let p2 = { x: 73, y: 24 };\n * let p3 = { x: 73, y: 61 };\n * let p4 = { x: 15, y: 65 };\n * noFill();\n * stroke(255, 102, 0);\n * curve(p1.x, p1.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\n * stroke(0);\n * curve(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);\n * stroke(255, 102, 0);\n * curve(p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, p4.x, p4.y);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * stroke(255, 102, 0);\n * curve(5, 26, 0, 5, 26, 0, 73, 24, 0, 73, 61, 0);\n * stroke(0);\n * curve(5, 26, 0, 73, 24, 0, 73, 61, 0, 15, 65, 0);\n * stroke(255, 102, 0);\n * curve(73, 24, 0, 73, 61, 0, 15, 65, 0, 15, 65, 0);\n * </code>\n * </div>\n *\n * @alt\n * horseshoe shape with orange ends facing left and black curved center.\n * horseshoe shape with orange ends facing left and black curved center.\n * curving black and orange lines.\n */\n\n/**\n * @method curve\n * @param  {Number} x1\n * @param  {Number} y1\n * @param  {Number} z1 z-coordinate for the beginning control point\n * @param  {Number} x2\n * @param  {Number} y2\n * @param  {Number} z2 z-coordinate for the first point\n * @param  {Number} x3\n * @param  {Number} y3\n * @param  {Number} z3 z-coordinate for the second point\n * @param  {Number} x4\n * @param  {Number} y4\n * @param  {Number} z4 z-coordinate for the ending control point\n * @chainable\n */\np5.prototype.curve = function(...args) {\n  p5._validateParameters('curve', args);\n\n  if (this._renderer._doStroke) {\n    this._renderer.curve(...args);\n  }\n\n  return this;\n};\n\n/**\n * Sets the resolution at which curves display. The default value is 20 while\n * the minimum value is 3.\n *\n * This function is only useful when using the WEBGL renderer\n * as the default canvas renderer does not use this\n * information.\n *\n * @method curveDetail\n * @param {Number} resolution resolution of the curves\n * @chainable\n * @example\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *\n *   curveDetail(5);\n * }\n * function draw() {\n *   background(200);\n *\n *   curve(250, 600, 0, -30, 40, 0, 30, 30, 0, -250, 600, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * white arch shape with a low level of curve detail.\n *\n */\np5.prototype.curveDetail = function(d) {\n  p5._validateParameters('curveDetail', arguments);\n  if (d < 3) {\n    this._curveDetail = 3;\n  } else {\n    this._curveDetail = d;\n  }\n  return this;\n};\n\n/**\n * Modifies the quality of forms created with <a href=\"#/p5/curve\">curve()</a>\n * and <a href=\"#/p5/curveVertex\">curveVertex()</a>.The parameter tightness\n * determines how the curve fits to the vertex points. The value 0.0 is the\n * default value for tightness (this value defines the curves to be Catmull-Rom\n * splines) and the value 1.0 connects all the points with straight lines.\n * Values within the range -5.0 and 5.0 will deform the curves but will leave\n * them recognizable and as values increase in magnitude, they will continue to deform.\n *\n * @method curveTightness\n * @param {Number} amount amount of deformation from the original vertices\n * @chainable\n * @example\n * <div>\n * <code>\n * // Move the mouse left and right to see the curve change\n * function setup() {\n *   createCanvas(100, 100);\n *   noFill();\n * }\n *\n * function draw() {\n *   background(204);\n *   let t = map(mouseX, 0, width, -5, 5);\n *   curveTightness(t);\n *   beginShape();\n *   curveVertex(10, 26);\n *   curveVertex(10, 26);\n *   curveVertex(83, 24);\n *   curveVertex(83, 61);\n *   curveVertex(25, 65);\n *   curveVertex(25, 65);\n *   endShape();\n * }\n * </code>\n * </div>\n *\n * @alt\n * Line shaped like right-facing arrow,points move with mouse-x and warp shape.\n */\np5.prototype.curveTightness = function(t) {\n  p5._validateParameters('curveTightness', arguments);\n  this._renderer._curveTightness = t;\n  return this;\n};\n\n/**\n * Evaluates the curve at position t for points a, b, c, d.\n * The parameter t varies between 0 and 1, a and d are control points\n * of the curve, and b and c are the start and end points of the curve.\n * This can be done once with the x coordinates and a second time\n * with the y coordinates to get the location of a curve at t.\n *\n * @method curvePoint\n * @param {Number} a coordinate of first control point of the curve\n * @param {Number} b coordinate of first point\n * @param {Number} c coordinate of second point\n * @param {Number} d coordinate of second control point\n * @param {Number} t value between 0 and 1\n * @return {Number} bezier value at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * curve(5, 26, 5, 26, 73, 24, 73, 61);\n * curve(5, 26, 73, 24, 73, 61, 15, 65);\n * fill(255);\n * ellipseMode(CENTER);\n * let steps = 6;\n * for (let i = 0; i <= steps; i++) {\n *   let t = i / steps;\n *   let x = curvePoint(5, 5, 73, 73, t);\n *   let y = curvePoint(26, 26, 24, 61, t);\n *   ellipse(x, y, 5, 5);\n *   x = curvePoint(5, 73, 73, 15, t);\n *   y = curvePoint(26, 24, 61, 65, t);\n *   ellipse(x, y, 5, 5);\n * }\n * </code>\n * </div>\n *\n *line hooking down to right-bottom with 13 5x5 white ellipse points\n */\np5.prototype.curvePoint = function(a, b, c, d, t) {\n  p5._validateParameters('curvePoint', arguments);\n\n  const t3 = t * t * t,\n    t2 = t * t,\n    f1 = -0.5 * t3 + t2 - 0.5 * t,\n    f2 = 1.5 * t3 - 2.5 * t2 + 1.0,\n    f3 = -1.5 * t3 + 2.0 * t2 + 0.5 * t,\n    f4 = 0.5 * t3 - 0.5 * t2;\n  return a * f1 + b * f2 + c * f3 + d * f4;\n};\n\n/**\n * Evaluates the tangent to the curve at position t for points a, b, c, d.\n * The parameter t varies between 0 and 1, a and d are points on the curve,\n * and b and c are the control points.\n *\n * @method curveTangent\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} the tangent at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * curve(5, 26, 73, 24, 73, 61, 15, 65);\n * let steps = 6;\n * for (let i = 0; i <= steps; i++) {\n *   let t = i / steps;\n *   let x = curvePoint(5, 73, 73, 15, t);\n *   let y = curvePoint(26, 24, 61, 65, t);\n *   //ellipse(x, y, 5, 5);\n *   let tx = curveTangent(5, 73, 73, 15, t);\n *   let ty = curveTangent(26, 24, 61, 65, t);\n *   let a = atan2(ty, tx);\n *   a -= PI / 2.0;\n *   line(x, y, cos(a) * 8 + x, sin(a) * 8 + y);\n * }\n * </code>\n * </div>\n *\n * @alt\n * right curving line mid-right of canvas with 7 short lines radiating from it.\n */\np5.prototype.curveTangent = function(a, b, c, d, t) {\n  p5._validateParameters('curveTangent', arguments);\n\n  const t2 = t * t,\n    f1 = -3 * t2 / 2 + 2 * t - 0.5,\n    f2 = 9 * t2 / 2 - 5 * t,\n    f3 = -9 * t2 / 2 + 4 * t + 0.5,\n    f4 = 3 * t2 / 2 - t;\n  return a * f1 + b * f2 + c * f3 + d * f4;\n};\n\nexport default p5;\n","/**\n * @module Shape\n * @submodule Vertex\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../main';\nimport * as constants from '../constants';\nlet shapeKind = null;\nlet vertices = [];\nlet contourVertices = [];\nlet isBezier = false;\nlet isCurve = false;\nlet isQuadratic = false;\nlet isContour = false;\nlet isFirstContour = true;\n\n/**\n * Use the <a href=\"#/p5/beginContour\">beginContour()</a> and\n * <a href=\"#/p5/endContour\">endContour()</a> functions to create negative shapes\n * within shapes such as the center of the letter 'O'. <a href=\"#/p5/beginContour\">beginContour()</a>\n * begins recording vertices for the shape and <a href=\"#/p5/endContour\">endContour()</a> stops recording.\n * The vertices that define a negative shape must \"wind\" in the opposite direction\n * from the exterior shape. First draw vertices for the exterior clockwise order, then for internal shapes, draw vertices\n * shape in counter-clockwise.\n *\n * These functions can only be used within a <a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> pair and\n * transformations such as <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a>, and <a href=\"#/p5/scale\">scale()</a> do not work\n * within a <a href=\"#/p5/beginContour\">beginContour()</a>/<a href=\"#/p5/endContour\">endContour()</a> pair. It is also not possible to use\n * other shapes, such as <a href=\"#/p5/ellipse\">ellipse()</a> or <a href=\"#/p5/rect\">rect()</a> within.\n *\n * @method beginContour\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(50, 50);\n * stroke(255, 0, 0);\n * beginShape();\n * // Exterior part of shape, clockwise winding\n * vertex(-40, -40);\n * vertex(40, -40);\n * vertex(40, 40);\n * vertex(-40, 40);\n * // Interior part of shape, counter-clockwise winding\n * beginContour();\n * vertex(-20, -20);\n * vertex(-20, 20);\n * vertex(20, 20);\n * vertex(20, -20);\n * endContour();\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * @alt\n * white rect and smaller grey rect with red outlines in center of canvas.\n *\n */\np5.prototype.beginContour = function() {\n  contourVertices = [];\n  isContour = true;\n  return this;\n};\n\n/**\n * Using the <a href=\"#/p5/beginShape\">beginShape()</a> and <a href=\"#/p5/endShape\">endShape()</a> functions allow creating more\n * complex forms. <a href=\"#/p5/beginShape\">beginShape()</a> begins recording vertices for a shape and\n * <a href=\"#/p5/endShape\">endShape()</a> stops recording. The value of the kind parameter tells it which\n * types of shapes to create from the provided vertices. With no mode\n * specified, the shape can be any irregular polygon.\n *\n * The parameters available for <a href=\"#/p5/beginShape\">beginShape()</a> are POINTS, LINES, TRIANGLES,\n * TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, QUAD_STRIP, and TESS (WebGL only). After calling the\n * <a href=\"#/p5/beginShape\">beginShape()</a> function, a series of <a href=\"#/p5/vertex\">vertex()</a> commands must follow. To stop\n * drawing the shape, call <a href=\"#/p5/endShape\">endShape()</a>. Each shape will be outlined with the\n * current stroke color and filled with the fill color.\n *\n * Transformations such as <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a>, and <a href=\"#/p5/scale\">scale()</a> do not work\n * within <a href=\"#/p5/beginShape\">beginShape()</a>. It is also not possible to use other shapes, such as\n * <a href=\"#/p5/ellipse\">ellipse()</a> or <a href=\"#/p5/rect\">rect()</a> within <a href=\"#/p5/beginShape\">beginShape()</a>.\n *\n * @method beginShape\n * @param  {Constant} [kind] either POINTS, LINES, TRIANGLES, TRIANGLE_FAN\n *                                TRIANGLE_STRIP, QUADS, QUAD_STRIP or TESS\n * @chainable\n * @example\n * <div>\n * <code>\n * beginShape();\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(POINTS);\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(LINES);\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(TRIANGLES);\n * vertex(30, 75);\n * vertex(40, 20);\n * vertex(50, 75);\n * vertex(60, 20);\n * vertex(70, 75);\n * vertex(80, 20);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(TRIANGLE_STRIP);\n * vertex(30, 75);\n * vertex(40, 20);\n * vertex(50, 75);\n * vertex(60, 20);\n * vertex(70, 75);\n * vertex(80, 20);\n * vertex(90, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(TRIANGLE_FAN);\n * vertex(57.5, 50);\n * vertex(57.5, 15);\n * vertex(92, 50);\n * vertex(57.5, 85);\n * vertex(22, 50);\n * vertex(57.5, 15);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(QUADS);\n * vertex(30, 20);\n * vertex(30, 75);\n * vertex(50, 75);\n * vertex(50, 20);\n * vertex(65, 20);\n * vertex(65, 75);\n * vertex(85, 75);\n * vertex(85, 20);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(QUAD_STRIP);\n * vertex(30, 20);\n * vertex(30, 75);\n * vertex(50, 20);\n * vertex(50, 75);\n * vertex(65, 20);\n * vertex(65, 75);\n * vertex(85, 20);\n * vertex(85, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape();\n * vertex(20, 20);\n * vertex(40, 20);\n * vertex(40, 40);\n * vertex(60, 40);\n * vertex(60, 60);\n * vertex(20, 60);\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * @alt\n * white square-shape with black outline in middle-right of canvas.\n * 4 black points in a square shape in middle-right of canvas.\n * 2 horizontal black lines. In the top-right and bottom-right of canvas.\n * 3 line shape with horizontal on top, vertical in middle and horizontal bottom.\n * square line shape in middle-right of canvas.\n * 2 white triangle shapes mid-right canvas. left one pointing up and right down.\n * 5 horizontal interlocking and alternating white triangles in mid-right canvas.\n * 4 interlocking white triangles in 45 degree rotated square-shape.\n * 2 white rectangle shapes in mid-right canvas. Both 20x55.\n * 3 side-by-side white rectangles center rect is smaller in mid-right canvas.\n * Thick white l-shape with black outline mid-top-left of canvas.\n *\n */\np5.prototype.beginShape = function(kind) {\n  p5._validateParameters('beginShape', arguments);\n  if (this._renderer.isP3D) {\n    this._renderer.beginShape(...arguments);\n  } else {\n    if (\n      kind === constants.POINTS ||\n      kind === constants.LINES ||\n      kind === constants.TRIANGLES ||\n      kind === constants.TRIANGLE_FAN ||\n      kind === constants.TRIANGLE_STRIP ||\n      kind === constants.QUADS ||\n      kind === constants.QUAD_STRIP\n    ) {\n      shapeKind = kind;\n    } else {\n      shapeKind = null;\n    }\n\n    vertices = [];\n    contourVertices = [];\n  }\n  return this;\n};\n\n/**\n * Specifies vertex coordinates for Bezier curves. Each call to\n * bezierVertex() defines the position of two control points and\n * one anchor point of a Bezier curve, adding a new segment to a\n * line or shape. For WebGL mode bezierVertex() can be used in 2D\n * as well as 3D mode. 2D mode expects 6 parameters, while 3D mode\n * expects 9 parameters (including z coordinates).\n *\n * The first time bezierVertex() is used within a <a href=\"#/p5/beginShape\">beginShape()</a>\n * call, it must be prefaced with a call to <a href=\"#/p5/vertex\">vertex()</a> to set the first anchor\n * point. This function must be used between <a href=\"#/p5/beginShape\">beginShape()</a> and <a href=\"#/p5/endShape\">endShape()</a>\n * and only when there is no MODE or POINTS parameter specified to\n * <a href=\"#/p5/beginShape\">beginShape()</a>.\n *\n * @method bezierVertex\n * @param  {Number} x2 x-coordinate for the first control point\n * @param  {Number} y2 y-coordinate for the first control point\n * @param  {Number} x3 x-coordinate for the second control point\n * @param  {Number} y3 y-coordinate for the second control point\n * @param  {Number} x4 x-coordinate for the anchor point\n * @param  {Number} y4 y-coordinate for the anchor point\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * vertex(30, 20);\n * bezierVertex(80, 0, 80, 75, 30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape();\n * vertex(30, 20);\n * bezierVertex(80, 0, 80, 75, 30, 75);\n * bezierVertex(50, 80, 60, 25, 30, 20);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   setAttributes('antialias', true);\n * }\n * function draw() {\n *   orbitControl();\n *   background(50);\n *   strokeWeight(4);\n *   stroke(255);\n *   point(-25, 30);\n *   point(25, 30);\n *   point(25, -30);\n *   point(-25, -30);\n *\n *   strokeWeight(1);\n *   noFill();\n *\n *   beginShape();\n *   vertex(-25, 30);\n *   bezierVertex(25, 30, 25, -30, -25, -30);\n *   endShape();\n *\n *   beginShape();\n *   vertex(-25, 30, 20);\n *   bezierVertex(25, 30, 20, 25, -30, 20, -25, -30, 20);\n *   endShape();\n * }\n * </code>\n * </div>\n *\n * @alt\n * crescent-shaped line in middle of canvas. Points facing left.\n * white crescent shape in middle of canvas. Points facing left.\n * crescent shape in middle of canvas with another crescent shape on positive z-axis.\n */\n\n/**\n * @method bezierVertex\n * @param  {Number} x2\n * @param  {Number} y2\n * @param  {Number} z2 z-coordinate for the first control point (for WebGL mode)\n * @param  {Number} x3\n * @param  {Number} y3\n * @param  {Number} z3 z-coordinate for the second control point (for WebGL mode)\n * @param  {Number} x4\n * @param  {Number} y4\n * @param  {Number} z4 z-coordinate for the anchor point (for WebGL mode)\n * @chainable\n */\np5.prototype.bezierVertex = function(...args) {\n  p5._validateParameters('bezierVertex', args);\n  if (this._renderer.isP3D) {\n    this._renderer.bezierVertex(...args);\n  } else {\n    if (vertices.length === 0) {\n      p5._friendlyError(\n        'vertex() must be used once before calling bezierVertex()',\n        'bezierVertex'\n      );\n    } else {\n      isBezier = true;\n      const vert = [];\n      for (let i = 0; i < args.length; i++) {\n        vert[i] = args[i];\n      }\n      vert.isVert = false;\n      if (isContour) {\n        contourVertices.push(vert);\n      } else {\n        vertices.push(vert);\n      }\n    }\n  }\n  return this;\n};\n\n/**\n * Specifies vertex coordinates for curves. This function may only\n * be used between <a href=\"#/p5/beginShape\">beginShape()</a> and <a href=\"#/p5/endShape\">endShape()</a> and only when there\n * is no MODE parameter specified to <a href=\"#/p5/beginShape\">beginShape()</a>.\n * For WebGL mode curveVertex() can be used in 2D as well as 3D mode.\n * 2D mode expects 2 parameters, while 3D mode expects 3 parameters.\n *\n * The first and last points in a series of curveVertex() lines will be used to\n * guide the beginning and end of a the curve. A minimum of four\n * points is required to draw a tiny curve between the second and\n * third points. Adding a fifth point with curveVertex() will draw\n * the curve between the second, third, and fourth points. The\n * curveVertex() function is an implementation of Catmull-Rom\n * splines.\n *\n * @method curveVertex\n * @param {Number} x x-coordinate of the vertex\n * @param {Number} y y-coordinate of the vertex\n * @chainable\n * @example\n * <div>\n * <code>\n * strokeWeight(5);\n * point(84, 91);\n * point(68, 19);\n * point(21, 17);\n * point(32, 91);\n * strokeWeight(1);\n *\n * noFill();\n * beginShape();\n * curveVertex(84, 91);\n * curveVertex(84, 91);\n * curveVertex(68, 19);\n * curveVertex(21, 17);\n * curveVertex(32, 91);\n * curveVertex(32, 91);\n * endShape();\n * </code>\n * </div>\n *\n *\n * @alt\n * Upside-down u-shape line, mid canvas. left point extends beyond canvas view.\n */\n\n/**\n * @method curveVertex\n * @param {Number} x\n * @param {Number} y\n * @param {Number} [z] z-coordinate of the vertex (for WebGL mode)\n * @chainable\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   setAttributes('antialias', true);\n * }\n * function draw() {\n *   orbitControl();\n *   background(50);\n *   strokeWeight(4);\n *   stroke(255);\n *\n *   point(-25, 25);\n *   point(-25, 25);\n *   point(-25, -25);\n *   point(25, -25);\n *   point(25, 25);\n *   point(25, 25);\n *\n *   strokeWeight(1);\n *   noFill();\n *\n *   beginShape();\n *   curveVertex(-25, 25);\n *   curveVertex(-25, 25);\n *   curveVertex(-25, -25);\n *   curveVertex(25, -25);\n *   curveVertex(25, 25);\n *   curveVertex(25, 25);\n *   endShape();\n *\n *   beginShape();\n *   curveVertex(-25, 25, 20);\n *   curveVertex(-25, 25, 20);\n *   curveVertex(-25, -25, 20);\n *   curveVertex(25, -25, 20);\n *   curveVertex(25, 25, 20);\n *   curveVertex(25, 25, 20);\n *   endShape();\n * }\n * </code>\n * </div>\n *\n * @alt\n * Upside-down u-shape line, mid canvas with the same shape in positive z-axis.\n *\n */\np5.prototype.curveVertex = function(...args) {\n  p5._validateParameters('curveVertex', args);\n  if (this._renderer.isP3D) {\n    this._renderer.curveVertex(...args);\n  } else {\n    isCurve = true;\n    this.vertex(args[0], args[1]);\n  }\n  return this;\n};\n\n/**\n * Use the <a href=\"#/p5/beginContour\">beginContour()</a> and <a href=\"#/p5/endContour\">endContour()</a> functions to create negative\n * shapes within shapes such as the center of the letter 'O'. <a href=\"#/p5/beginContour\">beginContour()</a>\n * begins recording vertices for the shape and <a href=\"#/p5/endContour\">endContour()</a> stops recording.\n * The vertices that define a negative shape must \"wind\" in the opposite\n * direction from the exterior shape. First draw vertices for the exterior\n * clockwise order, then for internal shapes, draw vertices\n * shape in counter-clockwise.\n *\n * These functions can only be used within a <a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> pair and\n * transformations such as <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a>, and <a href=\"#/p5/scale\">scale()</a> do not work\n * within a <a href=\"#/p5/beginContour\">beginContour()</a>/<a href=\"#/p5/endContour\">endContour()</a> pair. It is also not possible to use\n * other shapes, such as <a href=\"#/p5/ellipse\">ellipse()</a> or <a href=\"#/p5/rect\">rect()</a> within.\n *\n * @method endContour\n * @chainable\n * @example\n * <div>\n * <code>\n * translate(50, 50);\n * stroke(255, 0, 0);\n * beginShape();\n * // Exterior part of shape, clockwise winding\n * vertex(-40, -40);\n * vertex(40, -40);\n * vertex(40, 40);\n * vertex(-40, 40);\n * // Interior part of shape, counter-clockwise winding\n * beginContour();\n * vertex(-20, -20);\n * vertex(-20, 20);\n * vertex(20, 20);\n * vertex(20, -20);\n * endContour();\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * @alt\n * white rect and smaller grey rect with red outlines in center of canvas.\n */\np5.prototype.endContour = function() {\n  const vert = contourVertices[0].slice(); // copy all data\n  vert.isVert = contourVertices[0].isVert;\n  vert.moveTo = false;\n  contourVertices.push(vert);\n\n  // prevent stray lines with multiple contours\n  if (isFirstContour) {\n    vertices.push(vertices[0]);\n    isFirstContour = false;\n  }\n\n  for (let i = 0; i < contourVertices.length; i++) {\n    vertices.push(contourVertices[i]);\n  }\n  return this;\n};\n\n/**\n * The <a href=\"#/p5/endShape\">endShape()</a> function is the companion to <a href=\"#/p5/beginShape\">beginShape()</a> and may only be\n * called after <a href=\"#/p5/beginShape\">beginShape()</a>. When <a href=\"#/p5/endshape\">endShape()</a> is called, all of image data\n * defined since the previous call to <a href=\"#/p5/beginShape\">beginShape()</a> is written into the image\n * buffer. The constant CLOSE as the value for the MODE parameter to close\n * the shape (to connect the beginning and the end).\n *\n * @method endShape\n * @param  {Constant} [mode] use CLOSE to close the shape\n * @chainable\n * @example\n * <div>\n * <code>\n * noFill();\n *\n * beginShape();\n * vertex(20, 20);\n * vertex(45, 20);\n * vertex(45, 80);\n * endShape(CLOSE);\n *\n * beginShape();\n * vertex(50, 20);\n * vertex(75, 20);\n * vertex(75, 80);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * Triangle line shape with smallest interior angle on bottom and upside-down L.\n *\n */\np5.prototype.endShape = function(mode) {\n  p5._validateParameters('endShape', arguments);\n  if (this._renderer.isP3D) {\n    this._renderer.endShape(\n      mode,\n      isCurve,\n      isBezier,\n      isQuadratic,\n      isContour,\n      shapeKind\n    );\n  } else {\n    if (vertices.length === 0) {\n      return this;\n    }\n    if (!this._renderer._doStroke && !this._renderer._doFill) {\n      return this;\n    }\n\n    const closeShape = mode === constants.CLOSE;\n\n    // if the shape is closed, the first element is also the last element\n    if (closeShape && !isContour) {\n      vertices.push(vertices[0]);\n    }\n\n    this._renderer.endShape(\n      mode,\n      vertices,\n      isCurve,\n      isBezier,\n      isQuadratic,\n      isContour,\n      shapeKind\n    );\n\n    // Reset some settings\n    isCurve = false;\n    isBezier = false;\n    isQuadratic = false;\n    isContour = false;\n    isFirstContour = true;\n\n    // If the shape is closed, the first element was added as last element.\n    // We must remove it again to prevent the list of vertices from growing\n    // over successive calls to endShape(CLOSE)\n    if (closeShape) {\n      vertices.pop();\n    }\n  }\n  return this;\n};\n\n/**\n * Specifies vertex coordinates for quadratic Bezier curves. Each call to\n * quadraticVertex() defines the position of one control points and one\n * anchor point of a Bezier curve, adding a new segment to a line or shape.\n * The first time quadraticVertex() is used within a <a href=\"#/p5/beginShape\">beginShape()</a> call, it\n * must be prefaced with a call to <a href=\"#/p5/vertex\">vertex()</a> to set the first anchor point.\n * For WebGL mode quadraticVertex() can be used in 2D as well as 3D mode.\n * 2D mode expects 4 parameters, while 3D mode expects 6 parameters\n * (including z coordinates).\n *\n * This function must be used between <a href=\"#/p5/beginShape\">beginShape()</a> and <a href=\"#/p5/endShape\">endShape()</a>\n * and only when there is no MODE or POINTS parameter specified to\n * <a href=\"#/p5/beginShape\">beginShape()</a>.\n *\n * @method quadraticVertex\n * @param  {Number} cx x-coordinate for the control point\n * @param  {Number} cy y-coordinate for the control point\n * @param  {Number} x3 x-coordinate for the anchor point\n * @param  {Number} y3 y-coordinate for the anchor point\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * strokeWeight(5);\n * point(20, 20);\n * point(80, 20);\n * point(50, 50);\n *\n * noFill();\n * strokeWeight(1);\n * beginShape();\n * vertex(20, 20);\n * quadraticVertex(80, 20, 50, 50);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * strokeWeight(5);\n * point(20, 20);\n * point(80, 20);\n * point(50, 50);\n *\n * point(20, 80);\n * point(80, 80);\n * point(80, 60);\n *\n * noFill();\n * strokeWeight(1);\n * beginShape();\n * vertex(20, 20);\n * quadraticVertex(80, 20, 50, 50);\n * quadraticVertex(20, 80, 80, 80);\n * vertex(80, 60);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * arched-shaped black line with 4 pixel thick stroke weight.\n * backwards s-shaped black line with 4 pixel thick stroke weight.\n *\n */\n\n/**\n * @method quadraticVertex\n * @param  {Number} cx\n * @param  {Number} cy\n * @param  {Number} cz z-coordinate for the control point (for WebGL mode)\n * @param  {Number} x3\n * @param  {Number} y3\n * @param  {Number} z3 z-coordinate for the anchor point (for WebGL mode)\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   setAttributes('antialias', true);\n * }\n * function draw() {\n *   orbitControl();\n *   background(50);\n *   strokeWeight(4);\n *   stroke(255);\n *\n *   point(-35, -35);\n *   point(35, -35);\n *   point(0, 0);\n *   point(-35, 35);\n *   point(35, 35);\n *   point(35, 10);\n *\n *   strokeWeight(1);\n *   noFill();\n *\n *   beginShape();\n *   vertex(-35, -35);\n *   quadraticVertex(35, -35, 0, 0);\n *   quadraticVertex(-35, 35, 35, 35);\n *   vertex(35, 10);\n *   endShape();\n *\n *   beginShape();\n *   vertex(-35, -35, 20);\n *   quadraticVertex(35, -35, 20, 0, 0, 20);\n *   quadraticVertex(-35, 35, 20, 35, 35, 20);\n *   vertex(35, 10, 20);\n *   endShape();\n * }\n * </code>\n * </div>\n *\n * @alt\n * backwards s-shaped black line with the same s-shaped line in postive z-axis.\n */\np5.prototype.quadraticVertex = function(...args) {\n  p5._validateParameters('quadraticVertex', args);\n  if (this._renderer.isP3D) {\n    this._renderer.quadraticVertex(...args);\n  } else {\n    //if we're drawing a contour, put the points into an\n    // array for inside drawing\n    if (this._contourInited) {\n      const pt = {};\n      pt.x = args[0];\n      pt.y = args[1];\n      pt.x3 = args[2];\n      pt.y3 = args[3];\n      pt.type = constants.QUADRATIC;\n      this._contourVertices.push(pt);\n\n      return this;\n    }\n    if (vertices.length > 0) {\n      isQuadratic = true;\n      const vert = [];\n      for (let i = 0; i < args.length; i++) {\n        vert[i] = args[i];\n      }\n      vert.isVert = false;\n      if (isContour) {\n        contourVertices.push(vert);\n      } else {\n        vertices.push(vert);\n      }\n    } else {\n      p5._friendlyError(\n        'vertex() must be used once before calling quadraticVertex()',\n        'quadraticVertex'\n      );\n    }\n  }\n  return this;\n};\n\n/**\n * All shapes are constructed by connecting a series of vertices. <a href=\"#/p5/vertex\">vertex()</a>\n * is used to specify the vertex coordinates for points, lines, triangles,\n * quads, and polygons. It is used exclusively within the <a href=\"#/p5/beginShape\">beginShape()</a> and\n * <a href=\"#/p5/endShape\">endShape()</a> functions.\n *\n * @method vertex\n * @param  {Number} x x-coordinate of the vertex\n * @param  {Number} y y-coordinate of the vertex\n * @chainable\n * @example\n * <div>\n * <code>\n * strokeWeight(3);\n * beginShape(POINTS);\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * createCanvas(100, 100, WEBGL);\n * background(240, 240, 240);\n * fill(237, 34, 93);\n * noStroke();\n * beginShape();\n * vertex(0, 35);\n * vertex(35, 0);\n * vertex(0, -35);\n * vertex(-35, 0);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * createCanvas(100, 100, WEBGL);\n * background(240, 240, 240);\n * fill(237, 34, 93);\n * noStroke();\n * beginShape();\n * vertex(-10, 10);\n * vertex(0, 35);\n * vertex(10, 10);\n * vertex(35, 0);\n * vertex(10, -8);\n * vertex(0, -35);\n * vertex(-10, -8);\n * vertex(-35, 0);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * strokeWeight(3);\n * stroke(237, 34, 93);\n * beginShape(LINES);\n * vertex(10, 35);\n * vertex(90, 35);\n * vertex(10, 65);\n * vertex(90, 65);\n * vertex(35, 10);\n * vertex(35, 90);\n * vertex(65, 10);\n * vertex(65, 90);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Click to change the number of sides.\n * // In WebGL mode, custom shapes will only\n * // display hollow fill sections when\n * // all calls to vertex() use the same z-value.\n *\n * let sides = 3;\n * let angle, px, py;\n *\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   setAttributes('antialias', true);\n *   fill(237, 34, 93);\n *   strokeWeight(3);\n * }\n *\n * function draw() {\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateZ(frameCount * 0.01);\n *   ngon(sides, 0, 0, 80);\n * }\n *\n * function mouseClicked() {\n *   if (sides > 6) {\n *     sides = 3;\n *   } else {\n *     sides++;\n *   }\n * }\n *\n * function ngon(n, x, y, d) {\n *   beginShape(TESS);\n *   for (let i = 0; i < n + 1; i++) {\n *     angle = TWO_PI / n * i;\n *     px = x + sin(angle) * d / 2;\n *     py = y - cos(angle) * d / 2;\n *     vertex(px, py, 0);\n *   }\n *   for (let i = 0; i < n + 1; i++) {\n *     angle = TWO_PI / n * i;\n *     px = x + sin(angle) * d / 4;\n *     py = y - cos(angle) * d / 4;\n *     vertex(px, py, 0);\n *   }\n *   endShape();\n * }\n * </code>\n * </div>\n * @alt\n * 4 black points in a square shape in middle-right of canvas.\n * 4 points making a diamond shape.\n * 8 points making a star.\n * 8 points making 4 lines.\n * A rotating 3D shape with a hollow section in the middle.\n *\n */\n/**\n * @method vertex\n * @param  {Number} x\n * @param  {Number} y\n * @param  {Number} z   z-coordinate of the vertex\n * @param  {Number} [u] the vertex's texture u-coordinate\n * @param  {Number} [v] the vertex's texture v-coordinate\n * @chainable\n */\np5.prototype.vertex = function(x, y, moveTo, u, v) {\n  if (this._renderer.isP3D) {\n    this._renderer.vertex(...arguments);\n  } else {\n    const vert = [];\n    vert.isVert = true;\n    vert[0] = x;\n    vert[1] = y;\n    vert[2] = 0;\n    vert[3] = 0;\n    vert[4] = 0;\n    vert[5] = this._renderer._getFill();\n    vert[6] = this._renderer._getStroke();\n\n    if (moveTo) {\n      vert.moveTo = moveTo;\n    }\n    if (isContour) {\n      if (contourVertices.length === 0) {\n        vert.moveTo = true;\n      }\n      contourVertices.push(vert);\n    } else {\n      vertices.push(vert);\n    }\n  }\n  return this;\n};\n\nexport default p5;\n","/**\n * @module Color\n * @submodule Color Conversion\n * @for p5\n * @requires core\n */\n\n/**\n * Conversions adapted from <http://www.easyrgb.com/en/math.php>.\n *\n * In these functions, hue is always in the range [0, 1], just like all other\n * components are in the range [0, 1]. 'Brightness' and 'value' are used\n * interchangeably.\n */\n\nimport p5 from '../core/main';\np5.ColorConversion = {};\n\n/**\n * Convert an HSBA array to HSLA.\n */\np5.ColorConversion._hsbaToHSLA = function(hsba) {\n  const hue = hsba[0];\n  let sat = hsba[1];\n  const val = hsba[2];\n\n  // Calculate lightness.\n  const li = (2 - sat) * val / 2;\n\n  // Convert saturation.\n  if (li !== 0) {\n    if (li === 1) {\n      sat = 0;\n    } else if (li < 0.5) {\n      sat = sat / (2 - sat);\n    } else {\n      sat = sat * val / (2 - li * 2);\n    }\n  }\n\n  // Hue and alpha stay the same.\n  return [hue, sat, li, hsba[3]];\n};\n\n/**\n * Convert an HSBA array to RGBA.\n */\np5.ColorConversion._hsbaToRGBA = function(hsba) {\n  const hue = hsba[0] * 6; // We will split hue into 6 sectors.\n  const sat = hsba[1];\n  const val = hsba[2];\n\n  let RGBA = [];\n\n  if (sat === 0) {\n    RGBA = [val, val, val, hsba[3]]; // Return early if grayscale.\n  } else {\n    const sector = Math.floor(hue);\n    const tint1 = val * (1 - sat);\n    const tint2 = val * (1 - sat * (hue - sector));\n    const tint3 = val * (1 - sat * (1 + sector - hue));\n    let red, green, blue;\n    if (sector === 1) {\n      // Yellow to green.\n      red = tint2;\n      green = val;\n      blue = tint1;\n    } else if (sector === 2) {\n      // Green to cyan.\n      red = tint1;\n      green = val;\n      blue = tint3;\n    } else if (sector === 3) {\n      // Cyan to blue.\n      red = tint1;\n      green = tint2;\n      blue = val;\n    } else if (sector === 4) {\n      // Blue to magenta.\n      red = tint3;\n      green = tint1;\n      blue = val;\n    } else if (sector === 5) {\n      // Magenta to red.\n      red = val;\n      green = tint1;\n      blue = tint2;\n    } else {\n      // Red to yellow (sector could be 0 or 6).\n      red = val;\n      green = tint3;\n      blue = tint1;\n    }\n    RGBA = [red, green, blue, hsba[3]];\n  }\n\n  return RGBA;\n};\n\n/**\n * Convert an HSLA array to HSBA.\n */\np5.ColorConversion._hslaToHSBA = function(hsla) {\n  const hue = hsla[0];\n  let sat = hsla[1];\n  const li = hsla[2];\n\n  // Calculate brightness.\n  let val;\n  if (li < 0.5) {\n    val = (1 + sat) * li;\n  } else {\n    val = li + sat - li * sat;\n  }\n\n  // Convert saturation.\n  sat = 2 * (val - li) / val;\n\n  // Hue and alpha stay the same.\n  return [hue, sat, val, hsla[3]];\n};\n\n/**\n * Convert an HSLA array to RGBA.\n *\n * We need to change basis from HSLA to something that can be more easily be\n * projected onto RGBA. We will choose hue and brightness as our first two\n * components, and pick a convenient third one ('zest') so that we don't need\n * to calculate formal HSBA saturation.\n */\np5.ColorConversion._hslaToRGBA = function(hsla) {\n  const hue = hsla[0] * 6; // We will split hue into 6 sectors.\n  const sat = hsla[1];\n  const li = hsla[2];\n\n  let RGBA = [];\n\n  if (sat === 0) {\n    RGBA = [li, li, li, hsla[3]]; // Return early if grayscale.\n  } else {\n    // Calculate brightness.\n    let val;\n    if (li < 0.5) {\n      val = (1 + sat) * li;\n    } else {\n      val = li + sat - li * sat;\n    }\n\n    // Define zest.\n    const zest = 2 * li - val;\n\n    // Implement projection (project onto green by default).\n    const hzvToRGB = (hue, zest, val) => {\n      if (hue < 0) {\n        // Hue must wrap to allow projection onto red and blue.\n        hue += 6;\n      } else if (hue >= 6) {\n        hue -= 6;\n      }\n      if (hue < 1) {\n        // Red to yellow (increasing green).\n        return zest + (val - zest) * hue;\n      } else if (hue < 3) {\n        // Yellow to cyan (greatest green).\n        return val;\n      } else if (hue < 4) {\n        // Cyan to blue (decreasing green).\n        return zest + (val - zest) * (4 - hue);\n      } else {\n        // Blue to red (least green).\n        return zest;\n      }\n    };\n\n    // Perform projections, offsetting hue as necessary.\n    RGBA = [\n      hzvToRGB(hue + 2, zest, val),\n      hzvToRGB(hue, zest, val),\n      hzvToRGB(hue - 2, zest, val),\n      hsla[3]\n    ];\n  }\n\n  return RGBA;\n};\n\n/**\n * Convert an RGBA array to HSBA.\n */\np5.ColorConversion._rgbaToHSBA = function(rgba) {\n  const red = rgba[0];\n  const green = rgba[1];\n  const blue = rgba[2];\n\n  const val = Math.max(red, green, blue);\n  const chroma = val - Math.min(red, green, blue);\n\n  let hue, sat;\n  if (chroma === 0) {\n    // Return early if grayscale.\n    hue = 0;\n    sat = 0;\n  } else {\n    sat = chroma / val;\n    if (red === val) {\n      // Magenta to yellow.\n      hue = (green - blue) / chroma;\n    } else if (green === val) {\n      // Yellow to cyan.\n      hue = 2 + (blue - red) / chroma;\n    } else if (blue === val) {\n      // Cyan to magenta.\n      hue = 4 + (red - green) / chroma;\n    }\n    if (hue < 0) {\n      // Confine hue to the interval [0, 1).\n      hue += 6;\n    } else if (hue >= 6) {\n      hue -= 6;\n    }\n  }\n\n  return [hue / 6, sat, val, rgba[3]];\n};\n\n/**\n * Convert an RGBA array to HSLA.\n */\np5.ColorConversion._rgbaToHSLA = function(rgba) {\n  const red = rgba[0];\n  const green = rgba[1];\n  const blue = rgba[2];\n\n  const val = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const li = val + min; // We will halve this later.\n  const chroma = val - min;\n\n  let hue, sat;\n  if (chroma === 0) {\n    // Return early if grayscale.\n    hue = 0;\n    sat = 0;\n  } else {\n    if (li < 1) {\n      sat = chroma / li;\n    } else {\n      sat = chroma / (2 - li);\n    }\n    if (red === val) {\n      // Magenta to yellow.\n      hue = (green - blue) / chroma;\n    } else if (green === val) {\n      // Yellow to cyan.\n      hue = 2 + (blue - red) / chroma;\n    } else if (blue === val) {\n      // Cyan to magenta.\n      hue = 4 + (red - green) / chroma;\n    }\n    if (hue < 0) {\n      // Confine hue to the interval [0, 1).\n      hue += 6;\n    } else if (hue >= 6) {\n      hue -= 6;\n    }\n  }\n\n  return [hue / 6, sat, li / 2, rgba[3]];\n};\n\nexport default p5.ColorConversion;\n","/**\n * @module Color\n * @submodule Creating & Reading\n * @for p5\n * @requires core\n * @requires constants\n * @requires color_conversion\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\nimport color_conversion from './color_conversion';\n\n/**\n * Each color stores the color mode and level maxes that was applied at the\n * time of its construction. These are used to interpret the input arguments\n * (at construction and later for that instance of color) and to format the\n * output e.g. when <a href=\"#/p5/saturation\">saturation()</a> is requested.\n *\n * Internally, we store an array representing the ideal RGBA values in floating\n * point form, normalized from 0 to 1. From this we calculate the closest\n * screen color (RGBA levels from 0 to 255) and expose this to the renderer.\n *\n * We also cache normalized, floating point components of the color in various\n * representations as they are calculated. This is done to prevent repeating a\n * conversion that has already been performed.\n *\n * @class p5.Color\n * @constructor\n */\np5.Color = function(pInst, vals) {\n  // Record color mode and maxes at time of construction.\n  this._storeModeAndMaxes(pInst._colorMode, pInst._colorMaxes);\n\n  // Calculate normalized RGBA values.\n  if (\n    this.mode !== constants.RGB &&\n    this.mode !== constants.HSL &&\n    this.mode !== constants.HSB\n  ) {\n    throw new Error(`${this.mode} is an invalid colorMode.`);\n  } else {\n    this._array = p5.Color._parseInputs.apply(this, vals);\n  }\n\n  // Expose closest screen color.\n  this._calculateLevels();\n  return this;\n};\n\n/**\n * This function returns the color formatted as a string. This can be useful\n * for debugging, or for using p5.js with other libraries.\n *\n * @method toString\n * @param {String} [format] How the color string will be formatted.\n * Leaving this empty formats the string as rgba(r, g, b, a).\n * '#rgb' '#rgba' '#rrggbb' and '#rrggbbaa' format as hexadecimal color codes.\n * 'rgb' 'hsb' and 'hsl' return the color formatted in the specified color mode.\n * 'rgba' 'hsba' and 'hsla' are the same as above but with alpha channels.\n * 'rgb%' 'hsb%' 'hsl%' 'rgba%' 'hsba%' and 'hsla%' format as percentages.\n * @return {String} the formatted string\n *\n * @example\n * <div>\n * <code>\n * createCanvas(200, 100);\n * let myColor;\n * stroke(255);\n * myColor = color(100, 100, 250);\n * fill(myColor);\n * rotate(HALF_PI);\n * text(myColor.toString(), 0, -5);\n * text(myColor.toString('#rrggbb'), 0, -30);\n * text(myColor.toString('rgba%'), 0, -55);\n * </code>\n * </div>\n *\n * @alt\n * A canvas with 3 text representation of thier color.\n */\np5.Color.prototype.toString = function(format) {\n  const a = this.levels;\n  const f = this._array;\n  const alpha = f[3]; // String representation uses normalized alpha\n\n  switch (format) {\n    case '#rrggbb':\n      return '#'.concat(\n        a[0] < 16 ? '0'.concat(a[0].toString(16)) : a[0].toString(16),\n        a[1] < 16 ? '0'.concat(a[1].toString(16)) : a[1].toString(16),\n        a[2] < 16 ? '0'.concat(a[2].toString(16)) : a[2].toString(16)\n      );\n\n    case '#rrggbbaa':\n      return '#'.concat(\n        a[0] < 16 ? '0'.concat(a[0].toString(16)) : a[0].toString(16),\n        a[1] < 16 ? '0'.concat(a[1].toString(16)) : a[1].toString(16),\n        a[2] < 16 ? '0'.concat(a[2].toString(16)) : a[2].toString(16),\n        a[3] < 16 ? '0'.concat(a[2].toString(16)) : a[3].toString(16)\n      );\n\n    case '#rgb':\n      return '#'.concat(\n        Math.round(f[0] * 15).toString(16),\n        Math.round(f[1] * 15).toString(16),\n        Math.round(f[2] * 15).toString(16)\n      );\n\n    case '#rgba':\n      return '#'.concat(\n        Math.round(f[0] * 15).toString(16),\n        Math.round(f[1] * 15).toString(16),\n        Math.round(f[2] * 15).toString(16),\n        Math.round(f[3] * 15).toString(16)\n      );\n\n    case 'rgb':\n      return 'rgb('.concat(a[0], ', ', a[1], ', ', a[2], ')');\n\n    case 'rgb%':\n      return 'rgb('.concat(\n        (100 * f[0]).toPrecision(3),\n        '%, ',\n        (100 * f[1]).toPrecision(3),\n        '%, ',\n        (100 * f[2]).toPrecision(3),\n        '%)'\n      );\n\n    case 'rgba%':\n      return 'rgba('.concat(\n        (100 * f[0]).toPrecision(3),\n        '%, ',\n        (100 * f[1]).toPrecision(3),\n        '%, ',\n        (100 * f[2]).toPrecision(3),\n        '%, ',\n        (100 * f[3]).toPrecision(3),\n        '%)'\n      );\n\n    case 'hsb':\n    case 'hsv':\n      if (!this.hsba) this.hsba = color_conversion._rgbaToHSBA(this._array);\n      return 'hsb('.concat(\n        this.hsba[0] * this.maxes[constants.HSB][0],\n        ', ',\n        this.hsba[1] * this.maxes[constants.HSB][1],\n        ', ',\n        this.hsba[2] * this.maxes[constants.HSB][2],\n        ')'\n      );\n\n    case 'hsb%':\n    case 'hsv%':\n      if (!this.hsba) this.hsba = color_conversion._rgbaToHSBA(this._array);\n      return 'hsb('.concat(\n        (100 * this.hsba[0]).toPrecision(3),\n        '%, ',\n        (100 * this.hsba[1]).toPrecision(3),\n        '%, ',\n        (100 * this.hsba[2]).toPrecision(3),\n        '%)'\n      );\n\n    case 'hsba':\n    case 'hsva':\n      if (!this.hsba) this.hsba = color_conversion._rgbaToHSBA(this._array);\n      return 'hsba('.concat(\n        this.hsba[0] * this.maxes[constants.HSB][0],\n        ', ',\n        this.hsba[1] * this.maxes[constants.HSB][1],\n        ', ',\n        this.hsba[2] * this.maxes[constants.HSB][2],\n        ', ',\n        alpha,\n        ')'\n      );\n\n    case 'hsba%':\n    case 'hsva%':\n      if (!this.hsba) this.hsba = color_conversion._rgbaToHSBA(this._array);\n      return 'hsba('.concat(\n        (100 * this.hsba[0]).toPrecision(3),\n        '%, ',\n        (100 * this.hsba[1]).toPrecision(3),\n        '%, ',\n        (100 * this.hsba[2]).toPrecision(3),\n        '%, ',\n        (100 * alpha).toPrecision(3),\n        '%)'\n      );\n\n    case 'hsl':\n      if (!this.hsla) this.hsla = color_conversion._rgbaToHSLA(this._array);\n      return 'hsl('.concat(\n        this.hsla[0] * this.maxes[constants.HSL][0],\n        ', ',\n        this.hsla[1] * this.maxes[constants.HSL][1],\n        ', ',\n        this.hsla[2] * this.maxes[constants.HSL][2],\n        ')'\n      );\n\n    case 'hsl%':\n      if (!this.hsla) this.hsla = color_conversion._rgbaToHSLA(this._array);\n      return 'hsl('.concat(\n        (100 * this.hsla[0]).toPrecision(3),\n        '%, ',\n        (100 * this.hsla[1]).toPrecision(3),\n        '%, ',\n        (100 * this.hsla[2]).toPrecision(3),\n        '%)'\n      );\n\n    case 'hsla':\n      if (!this.hsla) this.hsla = color_conversion._rgbaToHSLA(this._array);\n      return 'hsla('.concat(\n        this.hsla[0] * this.maxes[constants.HSL][0],\n        ', ',\n        this.hsla[1] * this.maxes[constants.HSL][1],\n        ', ',\n        this.hsla[2] * this.maxes[constants.HSL][2],\n        ', ',\n        alpha,\n        ')'\n      );\n\n    case 'hsla%':\n      if (!this.hsla) this.hsla = color_conversion._rgbaToHSLA(this._array);\n      return 'hsl('.concat(\n        (100 * this.hsla[0]).toPrecision(3),\n        '%, ',\n        (100 * this.hsla[1]).toPrecision(3),\n        '%, ',\n        (100 * this.hsla[2]).toPrecision(3),\n        '%, ',\n        (100 * alpha).toPrecision(3),\n        '%)'\n      );\n\n    case 'rgba':\n    default:\n      return 'rgba('.concat(a[0], ',', a[1], ',', a[2], ',', alpha, ')');\n  }\n};\n\n/**\n * The setRed function sets the red component of a color.\n * The range depends on your color mode, in the default RGB mode it's between 0 and 255.\n * @method setRed\n * @param {Number} red the new red value\n * @example\n * <div>\n * <code>\n * let backgroundColor;\n *\n * function setup() {\n *   backgroundColor = color(100, 50, 150);\n * }\n *\n * function draw() {\n *   backgroundColor.setRed(128 + 128 * sin(millis() / 1000));\n *   background(backgroundColor);\n * }\n * </code>\n * </div>\n *\n * @alt\n * canvas with gradually changing background color\n */\np5.Color.prototype.setRed = function(new_red) {\n  this._array[0] = new_red / this.maxes[constants.RGB][0];\n  this._calculateLevels();\n};\n\n/**\n * The setGreen function sets the green component of a color.\n * The range depends on your color mode, in the default RGB mode it's between 0 and 255.\n * @method setGreen\n * @param {Number} green the new green value\n * @example\n * <div>\n * <code>\n * let backgroundColor = color(100, 50, 150);\n * function draw() {\n *   backgroundColor.setGreen(128 + 128 * sin(millis() / 1000));\n *   background(backgroundColor);\n * }\n * </code>\n * </div>\n *\n * @alt\n * canvas with gradually changing background color\n **/\np5.Color.prototype.setGreen = function(new_green) {\n  this._array[1] = new_green / this.maxes[constants.RGB][1];\n  this._calculateLevels();\n};\n\n/**\n * The setBlue function sets the blue component of a color.\n * The range depends on your color mode, in the default RGB mode it's between 0 and 255.\n * @method setBlue\n * @param {Number} blue the new blue value\n * @example\n * <div>\n * <code>\n * let backgroundColor = color(100, 50, 150);\n * function draw() {\n *   backgroundColor.setBlue(128 + 128 * sin(millis() / 1000));\n *   background(backgroundColor);\n * }\n * </code>\n * </div>\n *\n * @alt\n * canvas with gradually changing background color\n **/\np5.Color.prototype.setBlue = function(new_blue) {\n  this._array[2] = new_blue / this.maxes[constants.RGB][2];\n  this._calculateLevels();\n};\n\n/**\n * The setAlpha function sets the transparency (alpha) value of a color.\n * The range depends on your color mode, in the default RGB mode it's between 0 and 255.\n * @method setAlpha\n * @param {Number} alpha the new alpha value\n * @example\n * <div>\n * <code>\n * function draw() {\n *   clear();\n *   background(200);\n *   squareColor = color(100, 50, 100);\n *   squareColor.setAlpha(128 + 128 * sin(millis() / 1000));\n *   fill(squareColor);\n *   rect(13, 13, width - 26, height - 26);\n * }\n * </code>\n * </div>\n *\n * @alt\n * a square with gradually changing opacity on a gray background\n **/\np5.Color.prototype.setAlpha = function(new_alpha) {\n  this._array[3] = new_alpha / this.maxes[this.mode][3];\n  this._calculateLevels();\n};\n\n// calculates and stores the closest screen levels\np5.Color.prototype._calculateLevels = function() {\n  const array = this._array;\n  // (loop backwards for performance)\n  const levels = (this.levels = new Array(array.length));\n  for (let i = array.length - 1; i >= 0; --i) {\n    levels[i] = Math.round(array[i] * 255);\n  }\n};\n\np5.Color.prototype._getAlpha = function() {\n  return this._array[3] * this.maxes[this.mode][3];\n};\n\n// stores the color mode and maxes in this instance of Color\n// for later use (by _parseInputs())\np5.Color.prototype._storeModeAndMaxes = function(new_mode, new_maxes) {\n  this.mode = new_mode;\n  this.maxes = new_maxes;\n};\n\np5.Color.prototype._getMode = function() {\n  return this.mode;\n};\n\np5.Color.prototype._getMaxes = function() {\n  return this.maxes;\n};\n\np5.Color.prototype._getBlue = function() {\n  return this._array[2] * this.maxes[constants.RGB][2];\n};\n\np5.Color.prototype._getBrightness = function() {\n  if (!this.hsba) {\n    this.hsba = color_conversion._rgbaToHSBA(this._array);\n  }\n  return this.hsba[2] * this.maxes[constants.HSB][2];\n};\n\np5.Color.prototype._getGreen = function() {\n  return this._array[1] * this.maxes[constants.RGB][1];\n};\n\n/**\n * Hue is the same in HSB and HSL, but the maximum value may be different.\n * This function will return the HSB-normalized saturation when supplied with\n * an HSB color object, but will default to the HSL-normalized saturation\n * otherwise.\n */\np5.Color.prototype._getHue = function() {\n  if (this.mode === constants.HSB) {\n    if (!this.hsba) {\n      this.hsba = color_conversion._rgbaToHSBA(this._array);\n    }\n    return this.hsba[0] * this.maxes[constants.HSB][0];\n  } else {\n    if (!this.hsla) {\n      this.hsla = color_conversion._rgbaToHSLA(this._array);\n    }\n    return this.hsla[0] * this.maxes[constants.HSL][0];\n  }\n};\n\np5.Color.prototype._getLightness = function() {\n  if (!this.hsla) {\n    this.hsla = color_conversion._rgbaToHSLA(this._array);\n  }\n  return this.hsla[2] * this.maxes[constants.HSL][2];\n};\n\np5.Color.prototype._getRed = function() {\n  return this._array[0] * this.maxes[constants.RGB][0];\n};\n\n/**\n * Saturation is scaled differently in HSB and HSL. This function will return\n * the HSB saturation when supplied with an HSB color object, but will default\n * to the HSL saturation otherwise.\n */\np5.Color.prototype._getSaturation = function() {\n  if (this.mode === constants.HSB) {\n    if (!this.hsba) {\n      this.hsba = color_conversion._rgbaToHSBA(this._array);\n    }\n    return this.hsba[1] * this.maxes[constants.HSB][1];\n  } else {\n    if (!this.hsla) {\n      this.hsla = color_conversion._rgbaToHSLA(this._array);\n    }\n    return this.hsla[1] * this.maxes[constants.HSL][1];\n  }\n};\n\n/**\n * CSS named colors.\n */\nconst namedColors = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#00ffff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000000',\n  blanchedalmond: '#ffebcd',\n  blue: '#0000ff',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#00ffff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkgrey: '#a9a9a9',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkslategrey: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#ff00ff',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  grey: '#808080',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgray: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#00ff00',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370db',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#db7093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#ff0000',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#ffffff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ffff00',\n  yellowgreen: '#9acd32'\n};\n\n/**\n * These regular expressions are used to build up the patterns for matching\n * viable CSS color strings: fragmenting the regexes in this way increases the\n * legibility and comprehensibility of the code.\n *\n * Note that RGB values of .9 are not parsed by IE, but are supported here for\n * color string consistency.\n */\nconst WHITESPACE = /\\s*/; // Match zero or more whitespace characters.\nconst INTEGER = /(\\d{1,3})/; // Match integers: 79, 255, etc.\nconst DECIMAL = /((?:\\d+(?:\\.\\d+)?)|(?:\\.\\d+))/; // Match 129.6, 79, .9, etc.\nconst PERCENT = new RegExp(`${DECIMAL.source}%`); // Match 12.9%, 79%, .9%, etc.\n\n/**\n * Full color string patterns. The capture groups are necessary.\n */\nconst colorPatterns = {\n  // Match colors in format #XXX, e.g. #416.\n  HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,\n\n  // Match colors in format #XXXX, e.g. #5123.\n  HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,\n\n  // Match colors in format #XXXXXX, e.g. #b4d455.\n  HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,\n\n  // Match colors in format #XXXXXXXX, e.g. #b4d45535.\n  HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,\n\n  // Match colors in format rgb(R, G, B), e.g. rgb(255, 0, 128).\n  RGB: new RegExp(\n    [\n      '^rgb\\\\(',\n      INTEGER.source,\n      ',',\n      INTEGER.source,\n      ',',\n      INTEGER.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format rgb(R%, G%, B%), e.g. rgb(100%, 0%, 28.9%).\n  RGB_PERCENT: new RegExp(\n    [\n      '^rgb\\\\(',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format rgb(R, G, B, A), e.g. rgb(255, 0, 128, 0.25).\n  RGBA: new RegExp(\n    [\n      '^rgba\\\\(',\n      INTEGER.source,\n      ',',\n      INTEGER.source,\n      ',',\n      INTEGER.source,\n      ',',\n      DECIMAL.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format rgb(R%, G%, B%, A), e.g. rgb(100%, 0%, 28.9%, 0.5).\n  RGBA_PERCENT: new RegExp(\n    [\n      '^rgba\\\\(',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      ',',\n      DECIMAL.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format hsla(H, S%, L%), e.g. hsl(100, 40%, 28.9%).\n  HSL: new RegExp(\n    [\n      '^hsl\\\\(',\n      INTEGER.source,\n      ',',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format hsla(H, S%, L%, A), e.g. hsla(100, 40%, 28.9%, 0.5).\n  HSLA: new RegExp(\n    [\n      '^hsla\\\\(',\n      INTEGER.source,\n      ',',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      ',',\n      DECIMAL.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format hsb(H, S%, B%), e.g. hsb(100, 40%, 28.9%).\n  HSB: new RegExp(\n    [\n      '^hsb\\\\(',\n      INTEGER.source,\n      ',',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  ),\n\n  // Match colors in format hsba(H, S%, B%, A), e.g. hsba(100, 40%, 28.9%, 0.5).\n  HSBA: new RegExp(\n    [\n      '^hsba\\\\(',\n      INTEGER.source,\n      ',',\n      PERCENT.source,\n      ',',\n      PERCENT.source,\n      ',',\n      DECIMAL.source,\n      '\\\\)$'\n    ].join(WHITESPACE.source),\n    'i'\n  )\n};\n\n/**\n * For a number of different inputs, returns a color formatted as [r, g, b, a]\n * arrays, with each component normalized between 0 and 1.\n *\n * @private\n * @param {Array} [...args] An 'array-like' object that represents a list of\n *                          arguments\n * @return {Number[]}       a color formatted as [r, g, b, a]\n *                          Example:\n *                          input        ==> output\n *                          g            ==> [g, g, g, 255]\n *                          g,a          ==> [g, g, g, a]\n *                          r, g, b      ==> [r, g, b, 255]\n *                          r, g, b, a   ==> [r, g, b, a]\n *                          [g]          ==> [g, g, g, 255]\n *                          [g, a]       ==> [g, g, g, a]\n *                          [r, g, b]    ==> [r, g, b, 255]\n *                          [r, g, b, a] ==> [r, g, b, a]\n * @example\n * <div>\n * <code>\n * // todo\n * </code>\n * </div>\n *\n * @alt\n * //todo\n *\n */\np5.Color._parseInputs = function(r, g, b, a) {\n  const numArgs = arguments.length;\n  const mode = this.mode;\n  const maxes = this.maxes[mode];\n  let results = [];\n  let i;\n\n  if (numArgs >= 3) {\n    // Argument is a list of component values.\n\n    results[0] = r / maxes[0];\n    results[1] = g / maxes[1];\n    results[2] = b / maxes[2];\n\n    // Alpha may be undefined, so default it to 100%.\n    if (typeof a === 'number') {\n      results[3] = a / maxes[3];\n    } else {\n      results[3] = 1;\n    }\n\n    // Constrain components to the range [0,1].\n    // (loop backwards for performance)\n    for (i = results.length - 1; i >= 0; --i) {\n      const result = results[i];\n      if (result < 0) {\n        results[i] = 0;\n      } else if (result > 1) {\n        results[i] = 1;\n      }\n    }\n\n    // Convert to RGBA and return.\n    if (mode === constants.HSL) {\n      return color_conversion._hslaToRGBA(results);\n    } else if (mode === constants.HSB) {\n      return color_conversion._hsbaToRGBA(results);\n    } else {\n      return results;\n    }\n  } else if (numArgs === 1 && typeof r === 'string') {\n    const str = r.trim().toLowerCase();\n\n    // Return if string is a named colour.\n    if (namedColors[str]) {\n      return p5.Color._parseInputs.call(this, namedColors[str]);\n    }\n\n    // Try RGBA pattern matching.\n    if (colorPatterns.HEX3.test(str)) {\n      // #rgb\n      results = colorPatterns.HEX3.exec(str)\n        .slice(1)\n        .map(color => parseInt(color + color, 16) / 255);\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.HEX6.test(str)) {\n      // #rrggbb\n      results = colorPatterns.HEX6.exec(str)\n        .slice(1)\n        .map(color => parseInt(color, 16) / 255);\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.HEX4.test(str)) {\n      // #rgba\n      results = colorPatterns.HEX4.exec(str)\n        .slice(1)\n        .map(color => parseInt(color + color, 16) / 255);\n      return results;\n    } else if (colorPatterns.HEX8.test(str)) {\n      // #rrggbbaa\n      results = colorPatterns.HEX8.exec(str)\n        .slice(1)\n        .map(color => parseInt(color, 16) / 255);\n      return results;\n    } else if (colorPatterns.RGB.test(str)) {\n      // rgb(R,G,B)\n      results = colorPatterns.RGB.exec(str)\n        .slice(1)\n        .map(color => color / 255);\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.RGB_PERCENT.test(str)) {\n      // rgb(R%,G%,B%)\n      results = colorPatterns.RGB_PERCENT.exec(str)\n        .slice(1)\n        .map(color => parseFloat(color) / 100);\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.RGBA.test(str)) {\n      // rgba(R,G,B,A)\n      results = colorPatterns.RGBA.exec(str)\n        .slice(1)\n        .map((color, idx) => {\n          if (idx === 3) {\n            return parseFloat(color);\n          }\n          return color / 255;\n        });\n      return results;\n    } else if (colorPatterns.RGBA_PERCENT.test(str)) {\n      // rgba(R%,G%,B%,A%)\n      results = colorPatterns.RGBA_PERCENT.exec(str)\n        .slice(1)\n        .map((color, idx) => {\n          if (idx === 3) {\n            return parseFloat(color);\n          }\n          return parseFloat(color) / 100;\n        });\n      return results;\n    }\n\n    // Try HSLA pattern matching.\n    if (colorPatterns.HSL.test(str)) {\n      // hsl(H,S,L)\n      results = colorPatterns.HSL.exec(str)\n        .slice(1)\n        .map((color, idx) => {\n          if (idx === 0) {\n            return parseInt(color, 10) / 360;\n          }\n          return parseInt(color, 10) / 100;\n        });\n      results[3] = 1;\n    } else if (colorPatterns.HSLA.test(str)) {\n      // hsla(H,S,L,A)\n      results = colorPatterns.HSLA.exec(str)\n        .slice(1)\n        .map((color, idx) => {\n          if (idx === 0) {\n            return parseInt(color, 10) / 360;\n          } else if (idx === 3) {\n            return parseFloat(color);\n          }\n          return parseInt(color, 10) / 100;\n        });\n    }\n    results = results.map(value => Math.max(Math.min(value, 1), 0));\n    if (results.length) {\n      return color_conversion._hslaToRGBA(results);\n    }\n\n    // Try HSBA pattern matching.\n    if (colorPatterns.HSB.test(str)) {\n      // hsb(H,S,B)\n      results = colorPatterns.HSB.exec(str)\n        .slice(1)\n        .map((color, idx) => {\n          if (idx === 0) {\n            return parseInt(color, 10) / 360;\n          }\n          return parseInt(color, 10) / 100;\n        });\n      results[3] = 1;\n    } else if (colorPatterns.HSBA.test(str)) {\n      // hsba(H,S,B,A)\n      results = colorPatterns.HSBA.exec(str)\n        .slice(1)\n        .map((color, idx) => {\n          if (idx === 0) {\n            return parseInt(color, 10) / 360;\n          } else if (idx === 3) {\n            return parseFloat(color);\n          }\n          return parseInt(color, 10) / 100;\n        });\n    }\n\n    if (results.length) {\n      // (loop backwards for performance)\n      for (i = results.length - 1; i >= 0; --i) {\n        results[i] = Math.max(Math.min(results[i], 1), 0);\n      }\n\n      return color_conversion._hsbaToRGBA(results);\n    }\n\n    // Input did not match any CSS color pattern: default to white.\n    results = [1, 1, 1, 1];\n  } else if ((numArgs === 1 || numArgs === 2) && typeof r === 'number') {\n    // 'Grayscale' mode.\n\n    /**\n     * For HSB and HSL, interpret the gray level as a brightness/lightness\n     * value (they are equivalent when chroma is zero). For RGB, normalize the\n     * gray level according to the blue maximum.\n     */\n    results[0] = r / maxes[2];\n    results[1] = r / maxes[2];\n    results[2] = r / maxes[2];\n\n    // Alpha may be undefined, so default it to 100%.\n    if (typeof g === 'number') {\n      results[3] = g / maxes[3];\n    } else {\n      results[3] = 1;\n    }\n\n    // Constrain components to the range [0,1].\n    results = results.map(value => Math.max(Math.min(value, 1), 0));\n  } else {\n    throw new Error(`${arguments}is not a valid color representation.`);\n  }\n\n  return results;\n};\n\nexport default p5.Color;\n","/**\n * @module Color\n * @submodule Creating & Reading\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\nimport './p5.Color';\nimport '../core/error_helpers';\n\n/**\n * Extracts the alpha value from a color or pixel array.\n *\n * @method alpha\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the alpha value\n *\n * @example\n * <div>\n * <code>\n * noStroke();\n * let c = color(0, 126, 255, 102);\n * fill(c);\n * rect(15, 15, 35, 70);\n * let value = alpha(c); // Sets 'value' to 102\n * fill(value);\n * rect(50, 15, 35, 70);\n * </code>\n * </div>\n *\n * @alt\n * Left half of canvas light blue and right half light charcoal grey.\n */\np5.prototype.alpha = function(c) {\n  p5._validateParameters('alpha', arguments);\n  return this.color(c)._getAlpha();\n};\n\n/**\n * Extracts the blue value from a color or pixel array.\n *\n * @method blue\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the blue value\n * @example\n * <div>\n * <code>\n * let c = color(175, 100, 220);\n * fill(c);\n * rect(15, 20, 35, 60); // Draw left rectangle\n * let blueValue = blue(c);\n * fill(0, 0, blueValue);\n * rect(50, 20, 35, 60); // Draw right rectangle\n * </code>\n * </div>\n *\n * @alt\n * Left half of canvas light purple and right half a royal blue.\n */\np5.prototype.blue = function(c) {\n  p5._validateParameters('blue', arguments);\n  return this.color(c)._getBlue();\n};\n\n/**\n * Extracts the HSB brightness value from a color or pixel array.\n *\n * @method brightness\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the brightness value\n *\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * let c = color(0, 126, 255);\n * fill(c);\n * rect(15, 20, 35, 60);\n * let value = brightness(c); // Sets 'value' to 255\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * let c = color('hsb(60, 100%, 50%)');\n * fill(c);\n * rect(15, 20, 35, 60);\n * let value = brightness(c); // A 'value' of 50% is 127.5\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n * Left half of canvas salmon pink and the right half with it's brightness colored white.\n * Left half of canvas olive colored and the right half with it's brightness color gray.\n */\np5.prototype.brightness = function(c) {\n  p5._validateParameters('brightness', arguments);\n  return this.color(c)._getBrightness();\n};\n\n/**\n * Creates colors for storing in variables of the color datatype. The\n * parameters are interpreted as RGB or HSB values depending on the\n * current <a href=\"#/p5/colorMode\">colorMode()</a>. The default mode is RGB values from 0 to 255\n * and, therefore, the function call color(255, 204, 0) will return a\n * bright yellow color.\n *\n * Note that if only one value is provided to <a href=\"#/p5/color\">color()</a>, it will be interpreted\n * as a grayscale value. Add a second value, and it will be used for alpha\n * transparency. When three values are specified, they are interpreted as\n * either RGB or HSB values. Adding a fourth value applies alpha\n * transparency.\n *\n * If a single string argument is provided, RGB, RGBA and Hex CSS color\n * strings and all named color strings are supported. In this case, an alpha\n * number value as a second argument is not supported, the RGBA form should be\n * used.\n *\n * @method color\n * @param  {Number} gray number specifying value between white and black.\n * @param  {Number} [alpha] alpha value relative to current color range\n *                                 (default is 0-255)\n * @return {p5.Color} resulting color\n *\n * @example\n * <div>\n * <code>\n * let c = color(255, 204, 0);\n * fill(c);\n * noStroke();\n * rect(30, 20, 55, 55);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let c = color(255, 204, 0);\n * fill(c);\n * noStroke();\n * ellipse(25, 25, 80, 80); // Draw left circle\n * // Using only one value generates a grayscale value.\n * c = color(65);\n * fill(c);\n * ellipse(75, 75, 80, 80);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // You can use named SVG & CSS colors\n * let c = color('magenta');\n * fill(c);\n * noStroke();\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Example of hex color codes\n * noStroke();\n * let c = color('#0f0');\n * fill(c);\n * rect(0, 10, 45, 80);\n * c = color('#00ff00');\n * fill(c);\n * rect(55, 10, 45, 80);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // RGB and RGBA color strings are also supported\n * // these all set to the same color (solid blue)\n * let c;\n * noStroke();\n * c = color('rgb(0,0,255)');\n * fill(c);\n * rect(10, 10, 35, 35); // Draw rectangle\n * c = color('rgb(0%, 0%, 100%)');\n * fill(c);\n * rect(55, 10, 35, 35); // Draw rectangle\n * c = color('rgba(0, 0, 255, 1)');\n * fill(c);\n * rect(10, 55, 35, 35); // Draw rectangle\n * c = color('rgba(0%, 0%, 100%, 1)');\n * fill(c);\n * rect(55, 55, 35, 35); // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // HSL color can also be specified by value\n * let c = color('hsl(160, 100%, 50%)');\n * noStroke();\n * fill(c);\n * rect(0, 10, 45, 80); // Draw rectangle\n * c = color('hsla(160, 100%, 50%, 0.5)');\n * fill(c);\n * rect(55, 10, 45, 80); // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // HSB color can also be specified\n * let c = color('hsb(160, 100%, 50%)');\n * noStroke();\n * fill(c);\n * rect(0, 10, 45, 80); // Draw rectangle\n * c = color('hsba(160, 100%, 50%, 0.5)');\n * fill(c);\n * rect(55, 10, 45, 80); // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noStroke();\n * let c = color(50, 55, 100);\n * fill(c);\n * rect(0, 10, 45, 80); // Draw left rect\n * colorMode(HSB, 100);\n * c = color(50, 55, 100);\n * fill(c);\n * rect(55, 10, 45, 80);\n * </code>\n * </div>\n *\n * @alt\n * Yellow rect in middle right of canvas, with 55 pixel width and height.\n * Yellow ellipse in top left of canvas, black ellipse in bottom right,both 80x80.\n * Bright fuchsia rect in middle of canvas, 60 pixel width and height.\n * Two bright green rects on opposite sides of the canvas, both 45x80.\n * Four blue rects in each corner of the canvas, each are 35x35.\n * Bright sea green rect on left and darker rect on right of canvas, both 45x80.\n * Dark green rect on left and lighter green rect on right of canvas, both 45x80.\n * Dark blue rect on left and light teal rect on right of canvas, both 45x80.\n */\n\n/**\n * @method color\n * @param  {Number}        v1      red or hue value relative to\n *                                 the current color range\n * @param  {Number}        v2      green or saturation value\n *                                 relative to the current color range\n * @param  {Number}        v3      blue or brightness value\n *                                 relative to the current color range\n * @param  {Number}        [alpha]\n * @return {p5.Color}\n */\n\n/**\n * @method color\n * @param  {String}        value   a color string\n * @return {p5.Color}\n */\n\n/**\n * @method color\n * @param  {Number[]}      values  an array containing the red,green,blue &\n *                                 and alpha components of the color\n * @return {p5.Color}\n */\n\n/**\n * @method color\n * @param  {p5.Color}     color\n * @return {p5.Color}\n */\np5.prototype.color = function() {\n  p5._validateParameters('color', arguments);\n  if (arguments[0] instanceof p5.Color) {\n    return arguments[0]; // Do nothing if argument is already a color object.\n  }\n\n  const args = arguments[0] instanceof Array ? arguments[0] : arguments;\n  return new p5.Color(this, args);\n};\n\n/**\n * Extracts the green value from a color or pixel array.\n *\n * @method green\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the green value\n * @example\n * <div>\n * <code>\n * let c = color(20, 75, 200); // Define color 'c'\n * fill(c); // Use color variable 'c' as fill color\n * rect(15, 20, 35, 60); // Draw left rectangle\n *\n * let greenValue = green(c); // Get green in 'c'\n * print(greenValue); // Print \"75.0\"\n * fill(0, greenValue, 0); // Use 'greenValue' in new fill\n * rect(50, 20, 35, 60); // Draw right rectangle\n * </code>\n * </div>\n *\n * @alt\n * blue rect on left and green on right, both with black outlines & 35x60.\n *\n */\np5.prototype.green = function(c) {\n  p5._validateParameters('green', arguments);\n  return this.color(c)._getGreen();\n};\n\n/**\n * Extracts the hue value from a color or pixel array.\n *\n * Hue exists in both HSB and HSL. This function will return the\n * HSB-normalized hue when supplied with an HSB color object (or when supplied\n * with a pixel array while the color mode is HSB), but will default to the\n * HSL-normalized hue otherwise. (The values will only be different if the\n * maximum hue setting for each system is different.)\n *\n * @method hue\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the hue\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * let c = color(0, 126, 255);\n * fill(c);\n * rect(15, 20, 35, 60);\n * let value = hue(c); // Sets 'value' to \"0\"\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n * salmon pink rect on left and black on right, both 35x60.\n *\n */\np5.prototype.hue = function(c) {\n  p5._validateParameters('hue', arguments);\n  return this.color(c)._getHue();\n};\n\n/**\n * Blends two colors to find a third color somewhere between them. The amt\n * parameter is the amount to interpolate between the two values where 0.0\n * equal to the first color, 0.1 is very near the first color, 0.5 is halfway\n * in between, etc. An amount below 0 will be treated as 0. Likewise, amounts\n * above 1 will be capped at 1. This is different from the behavior of <a href=\"#/p5/lerp\">lerp()</a>,\n * but necessary because otherwise numbers outside the range will produce\n * strange and unexpected colors.\n *\n * The way that colors are interpolated depends on the current color mode.\n *\n * @method lerpColor\n * @param  {p5.Color} c1  interpolate from this color\n * @param  {p5.Color} c2  interpolate to this color\n * @param  {Number}       amt number between 0 and 1\n * @return {p5.Color}     interpolated color\n *\n * @example\n * <div>\n * <code>\n * colorMode(RGB);\n * stroke(255);\n * background(51);\n * let from = color(218, 165, 32);\n * let to = color(72, 61, 139);\n * colorMode(RGB); // Try changing to HSB.\n * let interA = lerpColor(from, to, 0.33);\n * let interB = lerpColor(from, to, 0.66);\n * fill(from);\n * rect(10, 20, 20, 60);\n * fill(interA);\n * rect(30, 20, 20, 60);\n * fill(interB);\n * rect(50, 20, 20, 60);\n * fill(to);\n * rect(70, 20, 20, 60);\n * </code>\n * </div>\n *\n * @alt\n * 4 rects one tan, brown, brownish purple, purple, with white outlines & 20x60\n */\n\np5.prototype.lerpColor = function(c1, c2, amt) {\n  p5._validateParameters('lerpColor', arguments);\n  const mode = this._colorMode;\n  const maxes = this._colorMaxes;\n  let l0, l1, l2, l3;\n  let fromArray, toArray;\n\n  if (mode === constants.RGB) {\n    fromArray = c1.levels.map(level => level / 255);\n    toArray = c2.levels.map(level => level / 255);\n  } else if (mode === constants.HSB) {\n    c1._getBrightness(); // Cache hsba so it definitely exists.\n    c2._getBrightness();\n    fromArray = c1.hsba;\n    toArray = c2.hsba;\n  } else if (mode === constants.HSL) {\n    c1._getLightness(); // Cache hsla so it definitely exists.\n    c2._getLightness();\n    fromArray = c1.hsla;\n    toArray = c2.hsla;\n  } else {\n    throw new Error(`${mode}cannot be used for interpolation.`);\n  }\n\n  // Prevent extrapolation.\n  amt = Math.max(Math.min(amt, 1), 0);\n\n  // Define lerp here itself if user isn't using math module.\n  // Maintains the definition as found in math/calculation.js\n  if (typeof this.lerp === 'undefined') {\n    this.lerp = (start, stop, amt) => amt * (stop - start) + start;\n  }\n\n  // Perform interpolation.\n  l0 = this.lerp(fromArray[0], toArray[0], amt);\n  l1 = this.lerp(fromArray[1], toArray[1], amt);\n  l2 = this.lerp(fromArray[2], toArray[2], amt);\n  l3 = this.lerp(fromArray[3], toArray[3], amt);\n\n  // Scale components.\n  l0 *= maxes[mode][0];\n  l1 *= maxes[mode][1];\n  l2 *= maxes[mode][2];\n  l3 *= maxes[mode][3];\n\n  return this.color(l0, l1, l2, l3);\n};\n\n/**\n * Extracts the HSL lightness value from a color or pixel array.\n *\n * @method lightness\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the lightness\n *\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSL);\n * let c = color(156, 100, 50, 1);\n * fill(c);\n * rect(15, 20, 35, 60);\n * let value = lightness(c); // Sets 'value' to 50\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n * light pastel green rect on left and dark grey rect on right, both 35x60.\n *\n */\np5.prototype.lightness = function(c) {\n  p5._validateParameters('lightness', arguments);\n  return this.color(c)._getLightness();\n};\n\n/**\n * Extracts the red value from a color or pixel array.\n *\n * @method red\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the red value\n * @example\n * <div>\n * <code>\n * let c = color(255, 204, 0); // Define color 'c'\n * fill(c); // Use color variable 'c' as fill color\n * rect(15, 20, 35, 60); // Draw left rectangle\n *\n * let redValue = red(c); // Get red in 'c'\n * print(redValue); // Print \"255.0\"\n * fill(redValue, 0, 0); // Use 'redValue' in new fill\n * rect(50, 20, 35, 60); // Draw right rectangle\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * colorMode(RGB, 255); // Sets the range for red, green, and blue to 255\n * let c = color(127, 255, 0);\n * colorMode(RGB, 1); // Sets the range for red, green, and blue to 1\n * let myColor = red(c);\n * print(myColor); // 0.4980392156862745\n * </code>\n * </div>\n *\n * @alt\n * yellow rect on left and red rect on right, both with black outlines and 35x60.\n * grey canvas\n */\np5.prototype.red = function(c) {\n  p5._validateParameters('red', arguments);\n  return this.color(c)._getRed();\n};\n\n/**\n * Extracts the saturation value from a color or pixel array.\n *\n * Saturation is scaled differently in HSB and HSL. This function will return\n * the HSB saturation when supplied with an HSB color object (or when supplied\n * with a pixel array while the color mode is HSB), but will default to the\n * HSL saturation otherwise.\n *\n * @method saturation\n * @param {p5.Color|Number[]|String} color <a href=\"#/p5.Color\">p5.Color</a> object, color components,\n *                                         or CSS color\n * @return {Number} the saturation value\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * let c = color(0, 126, 255);\n * fill(c);\n * rect(15, 20, 35, 60);\n * let value = saturation(c); // Sets 'value' to 126\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n *deep pink rect on left and grey rect on right, both 35x60.\n *\n */\np5.prototype.saturation = function(c) {\n  p5._validateParameters('saturation', arguments);\n  return this.color(c)._getSaturation();\n};\n\nexport default p5;\n","/**\n * @module Color\n * @submodule Setting\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\nimport './p5.Color';\n\n/**\n * The <a href=\"#/p5/background\">background()</a> function sets the color used\n * for the background of the p5.js canvas. The default background is transparent.\n * This function is typically used within <a href=\"#/p5/draw\">draw()</a> to clear\n * the display window at the beginning of each frame, but it can be used inside\n * <a href=\"#/p5/setup\">setup()</a> to set the background on the first frame of\n * animation or if the background need only be set once.\n *\n * The color is either specified in terms of the RGB, HSB, or HSL color depending\n * on the current <a href=\"#/p5/colorMode\">colorMode</a>. (The default color space\n * is RGB, with each value in the range from 0 to 255). The alpha range by default\n * is also 0 to 255.<br><br>\n *\n * If a single string argument is provided, RGB, RGBA and Hex CSS color strings\n * and all named color strings are supported. In this case, an alpha number\n * value as a second argument is not supported, the RGBA form should be used.\n *\n * A <a href=\"#/p5.Color\">p5.Color</a> object can also be provided to set the background color.\n *\n * A <a href=\"#/p5.Image\">p5.Image</a> can also be provided to set the background image.\n *\n * @method background\n * @param {p5.Color} color  any value created by the <a href=\"#/p5/color\">color()</a> function\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * // Grayscale integer value\n * background(51);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // R, G & B integer values\n * background(255, 204, 0);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // H, S & B integer values\n * colorMode(HSB);\n * background(255, 204, 100);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG/CSS color string\n * background('red');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // three-digit hexadecimal RGB notation\n * background('#fae');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // six-digit hexadecimal RGB notation\n * background('#222222');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGB notation\n * background('rgb(0,255,0)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGBA notation\n * background('rgba(0,255,0, 0.25)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGB notation\n * background('rgb(100%,0%,10%)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGBA notation\n * background('rgba(100%,0%,100%,0.5)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // p5 Color object\n * background(color(0, 0, 255));\n * </code>\n * </div>\n *\n * @alt\n * canvas with darkest charcoal grey background.\n * canvas with yellow background.\n * canvas with royal blue background.\n * canvas with red background.\n * canvas with pink background.\n * canvas with black background.\n * canvas with bright green background.\n * canvas with soft green background.\n * canvas with red background.\n * canvas with light purple background.\n * canvas with blue background.\n */\n\n/**\n * @method background\n * @param {String} colorstring color string, possible formats include: integer\n *                         rgb() or rgba(), percentage rgb() or rgba(),\n *                         3-digit hex, 6-digit hex\n * @param {Number} [a]         opacity of the background relative to current\n *                             color range (default is 0-255)\n * @chainable\n */\n\n/**\n * @method background\n * @param {Number} gray   specifies a value between white and black\n * @param {Number} [a]\n * @chainable\n */\n\n/**\n * @method background\n * @param {Number} v1     red or hue value (depending on the current color\n *                        mode)\n * @param {Number} v2     green or saturation value (depending on the current\n *                        color mode)\n * @param {Number} v3     blue or brightness value (depending on the current\n *                        color mode)\n * @param  {Number} [a]\n * @chainable\n */\n\n/**\n * @method background\n * @param  {Number[]}      values  an array containing the red, green, blue\n *                                 and alpha components of the color\n * @chainable\n */\n\n/**\n * @method background\n * @param {p5.Image} image     image created with <a href=\"#/p5/loadImage\">loadImage()</a> or <a href=\"#/p5/createImage\">createImage()</a>,\n *                             to set as background\n *                             (must be same size as the sketch window)\n * @param  {Number}  [a]\n * @chainable\n */\np5.prototype.background = function(...args) {\n  this._renderer.background(...args);\n  return this;\n};\n\n/**\n * Clears the pixels within a buffer. This function only clears the canvas.\n * It will not clear objects created by createX() methods such as\n * <a href=\"#/p5/createVideo\">createVideo()</a> or <a href=\"#/p5/createDiv\">createDiv()</a>.\n * Unlike the main graphics context, pixels in additional graphics areas created\n * with <a href=\"#/p5/createGraphics\">createGraphics()</a> can be entirely\n * or partially transparent. This function clears everything to make all of\n * the pixels 100% transparent.\n *\n * @method clear\n * @chainable\n * @example\n * <div>\n * <code>\n * // Clear the screen on mouse press.\n * function draw() {\n *   ellipse(mouseX, mouseY, 20, 20);\n * }\n * function mousePressed() {\n *   clear();\n *   background(128);\n * }\n * </code>\n * </div>\n *\n * @alt\n * small white ellipses are continually drawn at mouse's x and y coordinates.\n *\n */\n\np5.prototype.clear = function() {\n  this._renderer.clear();\n  return this;\n};\n\n/**\n * <a href=\"#/p5/colorMode\">colorMode()</a> changes the way p5.js interprets\n * color data. By default, the parameters for <a href=\"#/p5/fill\">fill()</a>,\n * <a href=\"#/p5/stroke\">stroke()</a>, <a href=\"#/p5/background\">background()</a>,\n * and <a href=\"#/p5/color\">color()</a> are defined by values between 0 and 255\n * using the RGB color model. This is equivalent to setting colorMode(RGB, 255).\n * Setting colorMode(HSB) lets you use the HSB system instead. By default, this\n * is colorMode(HSB, 360, 100, 100, 1). You can also use HSL.\n *\n * Note: existing color objects remember the mode that they were created in,\n * so you can change modes as you like without affecting their appearance.\n *\n * @method colorMode\n * @param {Constant} mode   either RGB, HSB or HSL, corresponding to\n *                          Red/Green/Blue and Hue/Saturation/Brightness\n *                          (or Lightness)\n * @param {Number}  [max]  range for all values\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(RGB, 100);\n * for (let i = 0; i < 100; i++) {\n *   for (let j = 0; j < 100; j++) {\n *     stroke(i, j, 0);\n *     point(i, j);\n *   }\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 100);\n * for (let i = 0; i < 100; i++) {\n *   for (let j = 0; j < 100; j++) {\n *     stroke(i, j, 100);\n *     point(i, j);\n *   }\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * colorMode(RGB, 255);\n * let c = color(127, 255, 0);\n * colorMode(RGB, 1);\n * let myColor = c._getRed();\n * text(myColor, 10, 10, 80, 80);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * colorMode(RGB, 255, 255, 255, 1);\n * background(255);\n * strokeWeight(4);\n * stroke(255, 0, 10, 0.3);\n * ellipse(40, 40, 50, 50);\n * ellipse(50, 50, 40, 40);\n * </code>\n * </div>\n *\n * @alt\n *Green to red gradient from bottom L to top R. shading originates from top left.\n *Rainbow gradient from left to right. Brightness increasing to white at top.\n *unknown image.\n *50x50 ellipse at middle L & 40x40 ellipse at center. Translucent pink outlines.\n */\n\n/**\n * @method colorMode\n * @param {Constant} mode\n * @param {Number} max1     range for the red or hue depending on the\n *                              current color mode\n * @param {Number} max2     range for the green or saturation depending\n *                              on the current color mode\n * @param {Number} max3     range for the blue or brightness/lightness\n *                              depending on the current color mode\n * @param {Number} [maxA]   range for the alpha\n * @chainable\n */\np5.prototype.colorMode = function(mode, max1, max2, max3, maxA) {\n  p5._validateParameters('colorMode', arguments);\n  if (\n    mode === constants.RGB ||\n    mode === constants.HSB ||\n    mode === constants.HSL\n  ) {\n    // Set color mode.\n    this._colorMode = mode;\n\n    // Set color maxes.\n    const maxes = this._colorMaxes[mode];\n    if (arguments.length === 2) {\n      maxes[0] = max1; // Red\n      maxes[1] = max1; // Green\n      maxes[2] = max1; // Blue\n      maxes[3] = max1; // Alpha\n    } else if (arguments.length === 4) {\n      maxes[0] = max1; // Red\n      maxes[1] = max2; // Green\n      maxes[2] = max3; // Blue\n    } else if (arguments.length === 5) {\n      maxes[0] = max1; // Red\n      maxes[1] = max2; // Green\n      maxes[2] = max3; // Blue\n      maxes[3] = maxA; // Alpha\n    }\n  }\n\n  return this;\n};\n\n/**\n * Sets the color used to fill shapes. For example, if you run fill(204, 102, 0),\n * all shapes drawn after the fill command will be filled with the color orange.\n * This color is either specified in terms of the RGB or HSB color depending on\n * the current <a href=\"#/p5/colorMode\">colorMode()</a>. (The default color space\n * is RGB, with each value in the range from 0 to 255). The alpha range by default\n * is also 0 to 255.\n *\n * If a single string argument is provided, RGB, RGBA and Hex CSS color strings\n * and all named color strings are supported. In this case, an alpha number\n * value as a second argument is not supported, the RGBA form should be used.\n *\n * A p5 <a href=\"#/p5.Color\">Color</a> object can also be provided to set the fill color.\n *\n * @method fill\n * @param  {Number}        v1      red or hue value relative to\n *                                 the current color range\n * @param  {Number}        v2      green or saturation value\n *                                 relative to the current color range\n * @param  {Number}        v3      blue or brightness value\n *                                 relative to the current color range\n * @param  {Number}        [alpha]\n * @chainable\n * @example\n * <div>\n * <code>\n * // Grayscale integer value\n * fill(51);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // R, G & B integer values\n * fill(255, 204, 0);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // H, S & B integer values\n * colorMode(HSB);\n * fill(255, 204, 100);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG/CSS color string\n * fill('red');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // three-digit hexadecimal RGB notation\n * fill('#fae');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // six-digit hexadecimal RGB notation\n * fill('#222222');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGB notation\n * fill('rgb(0,255,0)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGBA notation\n * fill('rgba(0,255,0, 0.25)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGB notation\n * fill('rgb(100%,0%,10%)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGBA notation\n * fill('rgba(100%,0%,100%,0.5)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // p5 Color object\n * fill(color(0, 0, 255));\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * @alt\n * 60x60 dark charcoal grey rect with black outline in center of canvas.\n * 60x60 yellow rect with black outline in center of canvas.\n * 60x60 royal blue rect with black outline in center of canvas.\n * 60x60 red rect with black outline in center of canvas.\n * 60x60 pink rect with black outline in center of canvas.\n * 60x60 black rect with black outline in center of canvas.\n * 60x60 light green rect with black outline in center of canvas.\n * 60x60 soft green rect with black outline in center of canvas.\n * 60x60 red rect with black outline in center of canvas.\n * 60x60 dark fuchsia rect with black outline in center of canvas.\n * 60x60 blue rect with black outline in center of canvas.\n */\n\n/**\n * @method fill\n * @param  {String}        value   a color string\n * @chainable\n */\n\n/**\n * @method fill\n * @param  {Number}        gray   a gray value\n * @param  {Number}        [alpha]\n * @chainable\n */\n\n/**\n * @method fill\n * @param  {Number[]}      values  an array containing the red,green,blue &\n *                                 and alpha components of the color\n * @chainable\n */\n\n/**\n * @method fill\n * @param  {p5.Color}      color   the fill color\n * @chainable\n */\np5.prototype.fill = function(...args) {\n  this._renderer._setProperty('_fillSet', true);\n  this._renderer._setProperty('_doFill', true);\n  this._renderer.fill(...args);\n  return this;\n};\n\n/**\n * Disables filling geometry. If both <a href=\"#/p5/noStroke\">noStroke()</a> and <a href=\"#/p5/noFill\">noFill()</a> are called,\n * nothing will be drawn to the screen.\n *\n * @method noFill\n * @chainable\n * @example\n * <div>\n * <code>\n * rect(15, 10, 55, 55);\n * noFill();\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw() {\n *   background(0);\n *   noFill();\n *   stroke(100, 100, 240);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   box(45, 45, 45);\n * }\n * </code>\n * </div>\n *\n * @alt\n * white rect top middle and noFill rect center. Both 60x60 with black outlines.\n * black canvas with purple cube wireframe spinning\n */\np5.prototype.noFill = function() {\n  this._renderer._setProperty('_doFill', false);\n  return this;\n};\n\n/**\n * Disables drawing the stroke (outline). If both <a href=\"#/p5/noStroke\">noStroke()</a> and <a href=\"#/p5/noFill\">noFill()</a>\n * are called, nothing will be drawn to the screen.\n *\n * @method noStroke\n * @chainable\n * @example\n * <div>\n * <code>\n * noStroke();\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw() {\n *   background(0);\n *   noStroke();\n *   fill(240, 150, 150);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   box(45, 45, 45);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60x60 white rect at center. no outline.\n * black canvas with pink cube spinning\n */\np5.prototype.noStroke = function() {\n  this._renderer._setProperty('_doStroke', false);\n  return this;\n};\n\n/**\n * Sets the color used to draw lines and borders around shapes. This color\n * is either specified in terms of the RGB or HSB color depending on the\n * current <a href=\"#/p5/colorMode\">colorMode()</a> (the default color space\n * is RGB, with each value in the range from 0 to 255). The alpha range by\n * default is also 0 to 255.\n *\n * If a single string argument is provided, RGB, RGBA and Hex CSS color\n * strings and all named color strings are supported. In this case, an alpha\n * number value as a second argument is not supported, the RGBA form should be\n * used.\n *\n * A p5 <a href=\"#/p5.Color\">Color</a> object can also be provided to set the stroke color.\n *\n *\n * @method stroke\n * @param  {Number}        v1      red or hue value relative to\n *                                 the current color range\n * @param  {Number}        v2      green or saturation value\n *                                 relative to the current color range\n * @param  {Number}        v3      blue or brightness value\n *                                 relative to the current color range\n * @param  {Number}        [alpha]\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * // Grayscale integer value\n * strokeWeight(4);\n * stroke(51);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // R, G & B integer values\n * stroke(255, 204, 0);\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // H, S & B integer values\n * colorMode(HSB);\n * strokeWeight(4);\n * stroke(255, 204, 100);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG/CSS color string\n * stroke('red');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // three-digit hexadecimal RGB notation\n * stroke('#fae');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // six-digit hexadecimal RGB notation\n * stroke('#222222');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGB notation\n * stroke('rgb(0,255,0)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGBA notation\n * stroke('rgba(0,255,0,0.25)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGB notation\n * stroke('rgb(100%,0%,10%)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGBA notation\n * stroke('rgba(100%,0%,100%,0.5)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // p5 Color object\n * stroke(color(0, 0, 255));\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * @alt\n * 60x60 white rect at center. Dark charcoal grey outline.\n * 60x60 white rect at center. Yellow outline.\n * 60x60 white rect at center. Royal blue outline.\n * 60x60 white rect at center. Red outline.\n * 60x60 white rect at center. Pink outline.\n * 60x60 white rect at center. Black outline.\n * 60x60 white rect at center. Bright green outline.\n * 60x60 white rect at center. Soft green outline.\n * 60x60 white rect at center. Red outline.\n * 60x60 white rect at center. Dark fuchsia outline.\n * 60x60 white rect at center. Blue outline.\n */\n\n/**\n * @method stroke\n * @param  {String}        value   a color string\n * @chainable\n */\n\n/**\n * @method stroke\n * @param  {Number}        gray   a gray value\n * @param  {Number}        [alpha]\n * @chainable\n */\n\n/**\n * @method stroke\n * @param  {Number[]}      values  an array containing the red,green,blue &\n *                                 and alpha components of the color\n * @chainable\n */\n\n/**\n * @method stroke\n * @param  {p5.Color}      color   the stroke color\n * @chainable\n */\n\np5.prototype.stroke = function(...args) {\n  this._renderer._setProperty('_strokeSet', true);\n  this._renderer._setProperty('_doStroke', true);\n  this._renderer.stroke(...args);\n  return this;\n};\n\n/**\n * All drawing that follows <a href=\"#/p5/erase\">erase()</a> will subtract from\n * the canvas.Erased areas will reveal the web page underneath the canvas.Erasing\n * can be canceled with <a href=\"#/p5/noErase\">noErase()</a>.\n *\n * Drawing done with <a href=\"#/p5/image\">image()</a> and <a href=\"#/p5/background\">\n * background()</a> will not be affected by <a href=\"#/p5/erase\">erase()</a>\n *\n * @method erase\n * @param  {Number}   [strengthFill]      A number (0-255) for the strength of erasing for a shape's fill.\n *                                        This will default to 255 when no argument is given, which\n *                                        is full strength.\n * @param  {Number}   [strengthStroke]    A number (0-255) for the strength of erasing for a shape's stroke.\n *                                        This will default to 255 when no argument is given, which\n *                                        is full strength.\n *\n * @chainable\n * @example\n * <div>\n * <code>\n * background(100, 100, 250);\n * fill(250, 100, 100);\n * rect(20, 20, 60, 60);\n * erase();\n * ellipse(25, 30, 30);\n * noErase();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * background(150, 250, 150);\n * fill(100, 100, 250);\n * rect(20, 20, 60, 60);\n * strokeWeight(5);\n * erase(150, 255);\n * triangle(50, 10, 70, 50, 90, 10);\n * noErase();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   smooth();\n *   createCanvas(100, 100, WEBGL);\n *   // Make a &lt;p&gt; element and put it behind the canvas\n *   let p = createP('I am a dom element');\n *   p.center();\n *   p.style('font-size', '20px');\n *   p.style('text-align', 'center');\n *   p.style('z-index', '-9999');\n * }\n *\n * function draw() {\n *   background(250, 250, 150);\n *   fill(15, 195, 185);\n *   noStroke();\n *   sphere(30);\n *   erase();\n *   rotateY(frameCount * 0.02);\n *   translate(0, 0, 40);\n *   torus(15, 5);\n *   noErase();\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60x60 centered pink rect, purple background. Elliptical area in top-left of rect is erased white.\n * 60x60 centered purple rect, mint green background. Triangle in top-right is partially erased with fully erased outline.\n * 60x60 centered teal sphere, yellow background. Torus rotating around sphere erases to reveal black text underneath.\n */\np5.prototype.erase = function(opacityFill = 255, opacityStroke = 255) {\n  this._renderer.erase(opacityFill, opacityStroke);\n\n  return this;\n};\n\n/**\n * Ends erasing that was started with <a href=\"#/p5/erase\">erase()</a>.\n * The <a href=\"#/p5/fill\">fill()</a>, <a href=\"#/p5/stroke\">stroke()</a>, and\n * <a href=\"#/p5/blendMode\">blendMode()</a> settings will return to what they were\n * prior to calling <a href=\"#/p5/erase\">erase()</a>.\n *\n * @method noErase\n * @chainable\n * @example\n * <div>\n * <code>\n * background(235, 145, 15);\n * noStroke();\n * fill(30, 45, 220);\n * rect(30, 10, 10, 80);\n * erase();\n * ellipse(50, 50, 60);\n * noErase();\n * rect(70, 10, 10, 80);\n * </code>\n * </div>\n *\n * @alt\n * Orange background, with two tall blue rectangles. A centered ellipse erased the first blue rect but not the second.\n */\n\np5.prototype.noErase = function() {\n  this._renderer.noErase();\n  return this;\n};\n\nexport default p5;\n","/**\n * @module Data\n * @submodule Dictionary\n * @for p5.TypedDict\n * @requires core\n *\n * This module defines the p5 methods for the p5 Dictionary classes.\n * The classes StringDict and NumberDict are for storing and working\n * with key-value pairs.\n */\n\nimport p5 from '../core/main';\n\n/**\n *\n * Creates a new instance of p5.StringDict using the key-value pair\n * or the object you provide.\n *\n * @method createStringDict\n * @for p5\n * @param {String} key\n * @param {String} value\n * @return {p5.StringDict}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   print(myDictionary.hasKey('p5')); // logs true to console\n *\n *   let anotherDictionary = createStringDict({ happy: 'coding' });\n *   print(anotherDictionary.hasKey('happy')); // logs true to console\n * }\n * </code></div>\n */\n/**\n * @method createStringDict\n * @param {Object} object object\n * @return {p5.StringDict}\n */\n\np5.prototype.createStringDict = function(key, value) {\n  p5._validateParameters('createStringDict', arguments);\n  return new p5.StringDict(key, value);\n};\n\n/**\n *\n * Creates a new instance of <a href=\"#/p5.NumberDict\">p5.NumberDict</a> using the key-value pair\n * or object you provide.\n *\n * @method createNumberDict\n * @for p5\n * @param {Number} key\n * @param {Number} value\n * @return {p5.NumberDict}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict(100, 42);\n *   print(myDictionary.hasKey(100)); // logs true to console\n *\n *   let anotherDictionary = createNumberDict({ 200: 84 });\n *   print(anotherDictionary.hasKey(200)); // logs true to console\n * }\n * </code></div>\n */\n/**\n * @method createNumberDict\n * @param {Object} object object\n * @return {p5.NumberDict}\n */\n\np5.prototype.createNumberDict = function(key, value) {\n  p5._validateParameters('createNumberDict', arguments);\n  return new p5.NumberDict(key, value);\n};\n\n/**\n *\n * Base class for all p5.Dictionary types. Specifically\n * typed Dictionary classes inherit from this class.\n *\n * @class p5.TypedDict\n * @constructor\n *\n */\n\np5.TypedDict = function(key, value) {\n  if (key instanceof Object) {\n    this.data = key;\n  } else {\n    this.data = {};\n    this.data[key] = value;\n  }\n  return this;\n};\n\n/**\n * Returns the number of key-value pairs currently stored in the Dictionary.\n *\n * @method size\n * @return {Integer} the number of key-value pairs in the Dictionary\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict(1, 10);\n *   myDictionary.create(2, 20);\n *   myDictionary.create(3, 30);\n *   print(myDictionary.size()); // logs 3 to the console\n * }\n * </code></div>\n *\n */\np5.TypedDict.prototype.size = function() {\n  return Object.keys(this.data).length;\n};\n\n/**\n * Returns true if the given key exists in the Dictionary,\n * otherwise returns false.\n *\n * @method hasKey\n * @param {Number|String} key that you want to look up\n * @return {Boolean} whether that key exists in Dictionary\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   print(myDictionary.hasKey('p5')); // logs true to console\n * }\n * </code></div>\n *\n */\n\np5.TypedDict.prototype.hasKey = function(key) {\n  return this.data.hasOwnProperty(key);\n};\n\n/**\n * Returns the value stored at the given key.\n *\n * @method get\n * @param {Number|String} the key you want to access\n * @return {Number|String} the value stored at that key\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   let myValue = myDictionary.get('p5');\n *   print(myValue === 'js'); // logs true to console\n * }\n * </code></div>\n *\n */\n\np5.TypedDict.prototype.get = function(key) {\n  if (this.data.hasOwnProperty(key)) {\n    return this.data[key];\n  } else {\n    console.log(`${key} does not exist in this Dictionary`);\n  }\n};\n\n/**\n * Updates the value associated with the given key in case it already exists\n * in the Dictionary. Otherwise a new key-value pair is added.\n *\n * @method set\n * @param {Number|String} key\n * @param {Number|String} value\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   myDictionary.set('p5', 'JS');\n *   myDictionary.print(); // logs \"key: p5 - value: JS\" to console\n * }\n * </code></div>\n *\n */\n\np5.TypedDict.prototype.set = function(key, value) {\n  if (this._validate(value)) {\n    this.data[key] = value;\n  } else {\n    console.log('Those values dont work for this dictionary type.');\n  }\n};\n\n/**\n * private helper function to handle the user passing in objects\n * during construction or calls to create()\n */\n\np5.TypedDict.prototype._addObj = function(obj) {\n  for (const key in obj) {\n    this.set(key, obj[key]);\n  }\n};\n\n/**\n * Creates a new key-value pair in the Dictionary.\n *\n * @method create\n * @param {Number|String} key\n * @param {Number|String} value\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   myDictionary.create('happy', 'coding');\n *   myDictionary.print();\n *   // above logs \"key: p5 - value: js, key: happy - value: coding\" to console\n * }\n * </code></div>\n */\n/**\n * @method create\n * @param {Object} obj key/value pair\n */\n\np5.TypedDict.prototype.create = function(key, value) {\n  if (key instanceof Object && typeof value === 'undefined') {\n    this._addObj(key);\n  } else if (typeof key !== 'undefined') {\n    this.set(key, value);\n  } else {\n    console.log(\n      'In order to create a new Dictionary entry you must pass ' +\n        'an object or a key, value pair'\n    );\n  }\n};\n\n/**\n * Removes all previously stored key-value pairs from the Dictionary.\n *\n * @method clear\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   print(myDictionary.hasKey('p5')); // prints 'true'\n *   myDictionary.clear();\n *   print(myDictionary.hasKey('p5')); // prints 'false'\n * }\n * </code>\n * </div>\n */\n\np5.TypedDict.prototype.clear = function() {\n  this.data = {};\n};\n\n/**\n * Removes the key-value pair stored at the given key from the Dictionary.\n *\n * @method remove\n * @param {Number|String} key for the pair to remove\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   myDictionary.create('happy', 'coding');\n *   myDictionary.print();\n *   // above logs \"key: p5 - value: js, key: happy - value: coding\" to console\n *   myDictionary.remove('p5');\n *   myDictionary.print();\n *   // above logs \"key: happy value: coding\" to console\n * }\n * </code></div>\n *\n */\n\np5.TypedDict.prototype.remove = function(key) {\n  if (this.data.hasOwnProperty(key)) {\n    delete this.data[key];\n  } else {\n    throw new Error(`${key} does not exist in this Dictionary`);\n  }\n};\n\n/**\n * Logs the set of items currently stored in the Dictionary to the console.\n *\n * @method print\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myDictionary = createStringDict('p5', 'js');\n *   myDictionary.create('happy', 'coding');\n *   myDictionary.print();\n *   // above logs \"key: p5 - value: js, key: happy - value: coding\" to console\n * }\n * </code>\n * </div>\n */\n\np5.TypedDict.prototype.print = function() {\n  for (const item in this.data) {\n    console.log(`key:${item} value:${this.data[item]}`);\n  }\n};\n\n/**\n * Converts the Dictionary into a CSV file for local download.\n *\n * @method saveTable\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   text('click here to save', 10, 10, 70, 80);\n * }\n *\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n *     createStringDict({\n *       john: 1940,\n *       paul: 1942,\n *       george: 1943,\n *       ringo: 1940\n *     }).saveTable('beatles');\n *   }\n * }\n * </code>\n * </div>\n */\n\np5.TypedDict.prototype.saveTable = function(filename) {\n  let output = '';\n\n  for (const key in this.data) {\n    output += `${key},${this.data[key]}\\n`;\n  }\n\n  const blob = new Blob([output], { type: 'text/csv' });\n  p5.prototype.downloadFile(blob, filename || 'mycsv', 'csv');\n};\n\n/**\n * Converts the Dictionary into a JSON file for local download.\n *\n * @method saveJSON\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   text('click here to save', 10, 10, 70, 80);\n * }\n *\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n *     createStringDict({\n *       john: 1940,\n *       paul: 1942,\n *       george: 1943,\n *       ringo: 1940\n *     }).saveJSON('beatles');\n *   }\n * }\n * </code>\n * </div>\n */\n\np5.TypedDict.prototype.saveJSON = function(filename, opt) {\n  p5.prototype.saveJSON(this.data, filename, opt);\n};\n\n/**\n * private helper function to ensure that the user passed in valid\n * values for the Dictionary type\n */\n\np5.TypedDict.prototype._validate = value => true;\n\n/**\n *\n * A simple Dictionary class for Strings.\n *\n * @class p5.StringDict\n * @extends p5.TypedDict\n *\n */\n\np5.StringDict = function(...args) {\n  p5.TypedDict.apply(this, args);\n};\n\np5.StringDict.prototype = Object.create(p5.TypedDict.prototype);\n\np5.StringDict.prototype._validate = value => typeof value === 'string';\n\n/**\n *\n * A simple Dictionary class for Numbers.\n *\n * @class p5.NumberDict\n * @constructor\n * @extends p5.TypedDict\n *\n */\n\np5.NumberDict = function(...args) {\n  p5.TypedDict.apply(this, args);\n};\n\np5.NumberDict.prototype = Object.create(p5.TypedDict.prototype);\n\n/**\n * private helper function to ensure that the user passed in valid\n * values for the Dictionary type\n */\n\np5.NumberDict.prototype._validate = value => typeof value === 'number';\n\n/**\n * Add the given number to the value currently stored at the given key.\n * The sum then replaces the value previously stored in the Dictionary.\n *\n * @method add\n * @param {Number} Key for the value you wish to add to\n * @param {Number} Number to add to the value\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict(2, 5);\n *   myDictionary.add(2, 2);\n *   print(myDictionary.get(2)); // logs 7 to console.\n * }\n * </code></div>\n *\n *\n */\n\np5.NumberDict.prototype.add = function(key, amount) {\n  if (this.data.hasOwnProperty(key)) {\n    this.data[key] += amount;\n  } else {\n    console.log(`The key - ${key} does not exist in this dictionary.`);\n  }\n};\n\n/**\n * Subtract the given number from the value currently stored at the given key.\n * The difference then replaces the value previously stored in the Dictionary.\n *\n * @method sub\n * @param {Number} Key for the value you wish to subtract from\n * @param {Number} Number to subtract from the value\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict(2, 5);\n *   myDictionary.sub(2, 2);\n *   print(myDictionary.get(2)); // logs 3 to console.\n * }\n * </code></div>\n *\n *\n */\n\np5.NumberDict.prototype.sub = function(key, amount) {\n  this.add(key, -amount);\n};\n\n/**\n * Multiply the given number with the value currently stored at the given key.\n * The product then replaces the value previously stored in the Dictionary.\n *\n * @method mult\n * @param {Number} Key for value you wish to multiply\n * @param {Number} Amount to multiply the value by\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict(2, 4);\n *   myDictionary.mult(2, 2);\n *   print(myDictionary.get(2)); // logs 8 to console.\n * }\n * </code></div>\n *\n *\n */\n\np5.NumberDict.prototype.mult = function(key, amount) {\n  if (this.data.hasOwnProperty(key)) {\n    this.data[key] *= amount;\n  } else {\n    console.log(`The key - ${key} does not exist in this dictionary.`);\n  }\n};\n\n/**\n * Divide the given number with the value currently stored at the given key.\n * The quotient then replaces the value previously stored in the Dictionary.\n *\n * @method div\n * @param {Number} Key for value you wish to divide\n * @param {Number} Amount to divide the value by\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict(2, 8);\n *   myDictionary.div(2, 2);\n *   print(myDictionary.get(2)); // logs 4 to console.\n * }\n * </code></div>\n *\n *\n */\n\np5.NumberDict.prototype.div = function(key, amount) {\n  if (this.data.hasOwnProperty(key)) {\n    this.data[key] /= amount;\n  } else {\n    console.log(`The key - ${key} does not exist in this dictionary.`);\n  }\n};\n\n/**\n * private helper function for finding lowest or highest value\n * the argument 'flip' is used to flip the comparison arrow\n * from 'less than' to 'greater than'\n *\n */\n\np5.NumberDict.prototype._valueTest = function(flip) {\n  if (Object.keys(this.data).length === 0) {\n    throw new Error(\n      'Unable to search for a minimum or maximum value on an empty NumberDict'\n    );\n  } else if (Object.keys(this.data).length === 1) {\n    return this.data[Object.keys(this.data)[0]];\n  } else {\n    let result = this.data[Object.keys(this.data)[0]];\n    for (const key in this.data) {\n      if (this.data[key] * flip < result * flip) {\n        result = this.data[key];\n      }\n    }\n    return result;\n  }\n};\n\n/**\n * Return the lowest number currently stored in the Dictionary.\n *\n * @method minValue\n * @return {Number}\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict({ 2: -10, 4: 0.65, 1.2: 3 });\n *   let lowestValue = myDictionary.minValue(); // value is -10\n *   print(lowestValue);\n * }\n * </code></div>\n *\n */\n\np5.NumberDict.prototype.minValue = function() {\n  return this._valueTest(1);\n};\n\n/**\n * Return the highest number currently stored in the Dictionary.\n *\n * @method maxValue\n * @return {Number}\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict({ 2: -10, 4: 0.65, 1.2: 3 });\n *   let highestValue = myDictionary.maxValue(); // value is 3\n *   print(highestValue);\n * }\n * </code></div>\n *\n */\n\np5.NumberDict.prototype.maxValue = function() {\n  return this._valueTest(-1);\n};\n\n/**\n * private helper function for finding lowest or highest key\n * the argument 'flip' is used to flip the comparison arrow\n * from 'less than' to 'greater than'\n *\n */\n\np5.NumberDict.prototype._keyTest = function(flip) {\n  if (Object.keys(this.data).length === 0) {\n    throw new Error('Unable to use minValue on an empty NumberDict');\n  } else if (Object.keys(this.data).length === 1) {\n    return Object.keys(this.data)[0];\n  } else {\n    let result = Object.keys(this.data)[0];\n    for (let i = 1; i < Object.keys(this.data).length; i++) {\n      if (Object.keys(this.data)[i] * flip < result * flip) {\n        result = Object.keys(this.data)[i];\n      }\n    }\n    return result;\n  }\n};\n\n/**\n * Return the lowest key currently used in the Dictionary.\n *\n * @method minKey\n * @return {Number}\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict({ 2: 4, 4: 6, 1.2: 3 });\n *   let lowestKey = myDictionary.minKey(); // value is 1.2\n *   print(lowestKey);\n * }\n * </code></div>\n *\n */\n\np5.NumberDict.prototype.minKey = function() {\n  return this._keyTest(1);\n};\n\n/**\n * Return the highest key currently used in the Dictionary.\n *\n * @method maxKey\n * @return {Number}\n * @example\n * <div class='norender'>\n * <code>\n * function setup() {\n *   let myDictionary = createNumberDict({ 2: 4, 4: 6, 1.2: 3 });\n *   let highestKey = myDictionary.maxKey(); // value is 4\n *   print(highestKey);\n * }\n * </code></div>\n *\n */\n\np5.NumberDict.prototype.maxKey = function() {\n  return this._keyTest(-1);\n};\n\nexport default p5.TypedDict;\n","/**\n * @module Data\n * @submodule LocalStorage\n * @requires core\n *\n * This module defines the p5 methods for working with local storage\n */\n\nimport p5 from '../core/main';\n/**\n *\n * Stores a value in local storage under the key name.\n * Local storage is saved in the browser and persists\n * between browsing sessions and page reloads.\n * The key can be the name of the variable but doesn't\n * have to be. To retrieve stored items\n * see <a href=\"#/p5/getItem\">getItem</a>.\n * <br><br>\n * Sensitive data such as passwords or personal information\n * should not be stored in local storage.\n *\n * @method storeItem\n * @for p5\n * @param {String} key\n * @param {String|Number|Object|Boolean|p5.Color|p5.Vector} value\n *\n * @example\n * <div><code>\n * // Type to change the letter in the\n * // center of the canvas.\n * // If you reload the page, it will\n * // still display the last key you entered\n *\n * let myText;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   myText = getItem('myText');\n *   if (myText === null) {\n *     myText = '';\n *   }\n * }\n *\n * function draw() {\n *   textSize(40);\n *   background(255);\n *   text(myText, width / 2, height / 2);\n * }\n *\n * function keyPressed() {\n *   myText = key;\n *   storeItem('myText', myText);\n * }\n * </code></div>\n *\n * @alt\n * When you type the key name is displayed as black text on white background.\n * If you reload the page, the last letter typed is still displaying.\n *\n */\np5.prototype.storeItem = function(key, value) {\n  if (typeof value === 'undefined') {\n    console.log('You cannot store undefined variables using storeItem()');\n  }\n  let type = typeof value;\n  switch (type) {\n    case 'number':\n    case 'boolean':\n      value = value.toString();\n      break;\n    case 'object':\n      if (value instanceof p5.Color) {\n        type = 'p5.Color';\n      } else if (value instanceof p5.Vector) {\n        type = 'p5.Vector';\n        const coord = [value.x, value.y, value.z];\n        value = coord;\n      }\n      value = JSON.stringify(value);\n      break;\n    case 'string':\n    default:\n      break;\n  }\n\n  localStorage.setItem(key, value);\n  const typeKey = `${key}p5TypeID`;\n  localStorage.setItem(typeKey, type);\n};\n\n/**\n *\n * Returns the value of an item that was stored in local storage\n * using storeItem()\n *\n * @method getItem\n * @for p5\n * @param {String} key name that you wish to use to store in local storage\n * @return {Number|Object|String|Boolean|p5.Color|p5.Vector} Value of stored item\n *\n * @example\n * <div><code>\n * // Click the mouse to change\n * // the color of the background\n * // Once you have changed the color\n * // it will stay changed even when you\n * // reload the page.\n *\n * let myColor;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   myColor = getItem('myColor');\n * }\n *\n * function draw() {\n *   if (myColor !== null) {\n *     background(myColor);\n *   }\n * }\n *\n * function mousePressed() {\n *   myColor = color(random(255), random(255), random(255));\n *   storeItem('myColor', myColor);\n * }\n * </code></div>\n *\n * @alt\n * If you click, the canvas changes to a random color.\n * If you reload the page, the canvas is still the color it\n * was when the page was previously loaded.\n *\n */\np5.prototype.getItem = function(key) {\n  let value = localStorage.getItem(key);\n  const type = localStorage.getItem(`${key}p5TypeID`);\n  if (typeof type === 'undefined') {\n    console.log(\n      `Unable to determine type of item stored under ${key}in local storage. Did you save the item with something other than setItem()?`\n    );\n  } else if (value !== null) {\n    switch (type) {\n      case 'number':\n        value = parseInt(value);\n        break;\n      case 'boolean':\n        value = value === 'true';\n        break;\n      case 'object':\n        value = JSON.parse(value);\n        break;\n      case 'p5.Color':\n        value = JSON.parse(value);\n        value = this.color(...value.levels);\n        break;\n      case 'p5.Vector':\n        value = JSON.parse(value);\n        value = this.createVector(...value);\n        break;\n      case 'string':\n      default:\n        break;\n    }\n  }\n  return value;\n};\n\n/**\n *\n * Clears all local storage items set with storeItem()\n * for the current domain.\n *\n * @method clearStorage\n * @for p5\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myNum = 10;\n *   let myBool = false;\n *   storeItem('myNum', myNum);\n *   storeItem('myBool', myBool);\n *   print(getItem('myNum')); // logs 10 to the console\n *   print(getItem('myBool')); // logs false to the console\n *   clearStorage();\n *   print(getItem('myNum')); // logs null to the console\n *   print(getItem('myBool')); // logs null to the console\n * }\n * </code></div>\n */\np5.prototype.clearStorage = function() {\n  localStorage.clear();\n};\n\n/**\n *\n * Removes an item that was stored with storeItem()\n *\n * @method removeItem\n * @param {String} key\n * @for p5\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let myVar = 10;\n *   storeItem('myVar', myVar);\n *   print(getItem('myVar')); // logs 10 to the console\n *   removeItem('myVar');\n *   print(getItem('myVar')); // logs null to the console\n * }\n * </code></div>\n */\np5.prototype.removeItem = function(key) {\n  if (typeof key !== 'string') {\n    console.log(\n      `The argument that you passed to removeItem() - ${key} is not a string.`\n    );\n  }\n  localStorage.removeItem(key);\n  localStorage.removeItem(`${key}p5TypeID`);\n};\n","/**\n * <p>The web is much more than just canvas and the DOM functionality makes it easy to interact\n * with other HTML5 objects, including text, hyperlink, image, input, video,\n * audio, and webcam.</p>\n * <p>There is a set of creation methods, DOM manipulation methods, and\n * an extended <a href=\"#/p5.Element\">p5.Element</a> that supports a range of HTML elements. See the\n * <a href='https://github.com/processing/p5.js/wiki/Beyond-the-canvas'>\n * beyond the canvas tutorial</a> for a full overview of how this addon works.\n *\n * <p>See <a href='https://github.com/processing/p5.js/wiki/Beyond-the-canvas'>tutorial: beyond the canvas</a>\n * for more info on how to use this library.</a>\n *\n * @module DOM\n * @submodule DOM\n * @for p5\n * @requires p5\n */\n\nimport p5 from '../core/main';\n\n/**\n * Searches the page for an element with the given ID, class, or tag name (using the '#' or '.'\n * prefixes to specify an ID or class respectively, and none for a tag) and returns it as\n * a <a href=\"#/p5.Element\">p5.Element</a>. If a class or tag name is given with more than 1 element,\n * only the first element will be returned.\n * The DOM node itself can be accessed with .elt.\n * Returns null if none found. You can also specify a container to search within.\n *\n * @method select\n * @param  {String} name id, class, or tag name of element to search for\n * @param  {String|p5.Element|HTMLElement} [container] id, <a href=\"#/p5.Element\">p5.Element</a>, or\n *                                             HTML element to search within\n * @return {p5.Element|null} <a href=\"#/p5.Element\">p5.Element</a> containing node found\n * @example\n * <div ><code class='norender'>\n * function setup() {\n *   createCanvas(100, 100);\n *   //translates canvas 50px down\n *   select('canvas').position(100, 100);\n * }\n * </code></div>\n * <div><code class='norender'>\n * // these are all valid calls to select()\n * let a = select('#moo');\n * let b = select('#blah', '#myContainer');\n * let c, e;\n * if (b) {\n *   c = select('#foo', b);\n * }\n * let d = document.getElementById('beep');\n * if (d) {\n *   e = select('p', d);\n * }\n * [a, b, c, d, e]; // unused\n * </code></div>\n *\n */\np5.prototype.select = function(e, p) {\n  p5._validateParameters('select', arguments);\n  var res = null;\n  var container = getContainer(p);\n  if (e[0] === '.') {\n    e = e.slice(1);\n    res = container.getElementsByClassName(e);\n    if (res.length) {\n      res = res[0];\n    } else {\n      res = null;\n    }\n  } else if (e[0] === '#') {\n    e = e.slice(1);\n    res = container.getElementById(e);\n  } else {\n    res = container.getElementsByTagName(e);\n    if (res.length) {\n      res = res[0];\n    } else {\n      res = null;\n    }\n  }\n  if (res) {\n    return this._wrapElement(res);\n  } else {\n    return null;\n  }\n};\n\n/**\n * Searches the page for elements with the given class or tag name (using the '.' prefix\n * to specify a class and no prefix for a tag) and returns them as <a href=\"#/p5.Element\">p5.Element</a>s\n * in an array.\n * The DOM node itself can be accessed with .elt.\n * Returns an empty array if none found.\n * You can also specify a container to search within.\n *\n * @method selectAll\n * @param  {String} name class or tag name of elements to search for\n * @param  {String} [container] id, <a href=\"#/p5.Element\">p5.Element</a>, or HTML element to search within\n * @return {p5.Element[]} Array of <a href=\"#/p5.Element\">p5.Element</a>s containing nodes found\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   createButton('btn');\n *   createButton('2nd btn');\n *   createButton('3rd btn');\n *   let buttons = selectAll('button');\n *\n *   for (let i = 0; i < buttons.length; i++) {\n *     buttons[i].size(100, 100);\n *   }\n * }\n * </code></div>\n * <div class='norender'><code>\n * // these are all valid calls to selectAll()\n * let a = selectAll('.moo');\n * a = selectAll('div');\n * a = selectAll('button', '#myContainer');\n *\n * let d = select('#container');\n * a = selectAll('p', d);\n *\n * let f = document.getElementById('beep');\n * a = select('.blah', f);\n *\n * a; // unused\n * </code></div>\n *\n */\np5.prototype.selectAll = function(e, p) {\n  p5._validateParameters('selectAll', arguments);\n  var arr = [];\n  var res;\n  var container = getContainer(p);\n  if (e[0] === '.') {\n    e = e.slice(1);\n    res = container.getElementsByClassName(e);\n  } else {\n    res = container.getElementsByTagName(e);\n  }\n  if (res) {\n    for (var j = 0; j < res.length; j++) {\n      var obj = this._wrapElement(res[j]);\n      arr.push(obj);\n    }\n  }\n  return arr;\n};\n\n/**\n * Helper function for select and selectAll\n */\nfunction getContainer(p) {\n  var container = document;\n  if (typeof p === 'string' && p[0] === '#') {\n    p = p.slice(1);\n    container = document.getElementById(p) || document;\n  } else if (p instanceof p5.Element) {\n    container = p.elt;\n  } else if (p instanceof HTMLElement) {\n    container = p;\n  }\n  return container;\n}\n\n/**\n * Helper function for getElement and getElements.\n */\np5.prototype._wrapElement = function(elt) {\n  var children = Array.prototype.slice.call(elt.children);\n  if (elt.tagName === 'INPUT' && elt.type === 'checkbox') {\n    var converted = new p5.Element(elt, this);\n    converted.checked = function() {\n      if (arguments.length === 0) {\n        return this.elt.checked;\n      } else if (arguments[0]) {\n        this.elt.checked = true;\n      } else {\n        this.elt.checked = false;\n      }\n      return this;\n    };\n    return converted;\n  } else if (elt.tagName === 'VIDEO' || elt.tagName === 'AUDIO') {\n    return new p5.MediaElement(elt, this);\n  } else if (elt.tagName === 'SELECT') {\n    return this.createSelect(new p5.Element(elt, this));\n  } else if (\n    children.length > 0 &&\n    children.every(function(c) {\n      return c.tagName === 'INPUT' || c.tagName === 'LABEL';\n    })\n  ) {\n    return this.createRadio(new p5.Element(elt, this));\n  } else {\n    return new p5.Element(elt, this);\n  }\n};\n\n/**\n * Removes all elements created by p5, except any canvas / graphics\n * elements created by <a href=\"#/p5/createCanvas\">createCanvas</a> or <a href=\"#/p5/createGraphics\">createGraphics</a>.\n * Event handlers are removed, and element is removed from the DOM.\n * @method removeElements\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   createCanvas(100, 100);\n *   createDiv('this is some text');\n *   createP('this is a paragraph');\n * }\n * function mousePressed() {\n *   removeElements(); // this will remove the div and p, not canvas\n * }\n * </code></div>\n *\n */\np5.prototype.removeElements = function(e) {\n  p5._validateParameters('removeElements', arguments);\n  // el.remove splices from this._elements, so don't mix iteration with it\n  const isNotCanvasElement = el => !(el.elt instanceof HTMLCanvasElement);\n  const removeableElements = this._elements.filter(isNotCanvasElement);\n  removeableElements.map(el => el.remove());\n};\n\n/**\n * The .<a href=\"#/p5.Element/changed\">changed()</a> function is called when the value of an\n * element changes.\n * This can be used to attach an element specific event listener.\n *\n * @method changed\n * @param  {Function|Boolean} fxn function to be fired when the value of\n *                                an element changes.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div><code>\n * let sel;\n *\n * function setup() {\n *   textAlign(CENTER);\n *   background(200);\n *   sel = createSelect();\n *   sel.position(10, 10);\n *   sel.option('pear');\n *   sel.option('kiwi');\n *   sel.option('grape');\n *   sel.changed(mySelectEvent);\n * }\n *\n * function mySelectEvent() {\n *   let item = sel.value();\n *   background(200);\n *   text(\"it's a \" + item + '!', 50, 50);\n * }\n * </code></div>\n *\n * <div><code>\n * let checkbox;\n * let cnv;\n *\n * function setup() {\n *   checkbox = createCheckbox(' fill');\n *   checkbox.changed(changeFill);\n *   cnv = createCanvas(100, 100);\n *   cnv.position(0, 30);\n *   noFill();\n * }\n *\n * function draw() {\n *   background(200);\n *   ellipse(50, 50, 50, 50);\n * }\n *\n * function changeFill() {\n *   if (checkbox.checked()) {\n *     fill(0);\n *   } else {\n *     noFill();\n *   }\n * }\n * </code></div>\n *\n * @alt\n * dropdown: pear, kiwi, grape. When selected text \"its a\" + selection shown.\n *\n */\np5.Element.prototype.changed = function(fxn) {\n  p5.Element._adjustListener('change', fxn, this);\n  return this;\n};\n\n/**\n * The .<a href=\"#/p5.Element/input\">input()</a> function is called when any user input is\n * detected with an element. The input event is often used\n * to detect keystrokes in a input element, or changes on a\n * slider element. This can be used to attach an element specific\n * event listener.\n *\n * @method input\n * @param  {Function|Boolean} fxn function to be fired when any user input is\n *                                detected within the element.\n *                                if `false` is passed instead, the previously\n *                                firing function will no longer fire.\n * @chainable\n * @example\n * <div class='norender'><code>\n * // Open your console to see the output\n * function setup() {\n *   let inp = createInput('');\n *   inp.input(myInputEvent);\n * }\n *\n * function myInputEvent() {\n *   console.log('you are typing: ', this.value());\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.input = function(fxn) {\n  p5.Element._adjustListener('input', fxn, this);\n  return this;\n};\n\n/**\n * Helpers for create methods.\n */\nfunction addElement(elt, pInst, media) {\n  var node = pInst._userNode ? pInst._userNode : document.body;\n  node.appendChild(elt);\n  var c = media ? new p5.MediaElement(elt, pInst) : new p5.Element(elt, pInst);\n  pInst._elements.push(c);\n  return c;\n}\n\n/**\n * Creates a &lt;div&gt;&lt;/div&gt; element in the DOM with given inner HTML.\n *\n * @method createDiv\n * @param  {String} [html] inner HTML for element created\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * createDiv('this is some text');\n * </code></div>\n */\np5.prototype.createDiv = function(html = '') {\n  let elt = document.createElement('div');\n  elt.innerHTML = html;\n  return addElement(elt, this);\n};\n\n/**\n * Creates a &lt;p&gt;&lt;/p&gt; element in the DOM with given inner HTML. Used\n * for paragraph length text.\n *\n * @method createP\n * @param  {String} [html] inner HTML for element created\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * createP('this is some text');\n * </code></div>\n */\np5.prototype.createP = function(html = '') {\n  let elt = document.createElement('p');\n  elt.innerHTML = html;\n  return addElement(elt, this);\n};\n\n/**\n * Creates a &lt;span&gt;&lt;/span&gt; element in the DOM with given inner HTML.\n *\n * @method createSpan\n * @param  {String} [html] inner HTML for element created\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * createSpan('this is some text');\n * </code></div>\n */\np5.prototype.createSpan = function(html = '') {\n  let elt = document.createElement('span');\n  elt.innerHTML = html;\n  return addElement(elt, this);\n};\n\n/**\n * Creates an &lt;img&gt; element in the DOM with given src and\n * alternate text.\n *\n * @method createImg\n * @param  {String} src src path or url for image\n * @param  {String} alt <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img#Attributes\">alternate text</a> to be used if image does not load. You can use also an empty string (`\"\"`) if that an image is not intended to be viewed.\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * createImg(\n *   'https://p5js.org/assets/img/asterisk-01.png',\n *   'the p5 magenta asterisk'\n * );\n * </code></div>\n */\n/**\n * @method createImg\n * @param  {String} src\n * @param  {String} alt\n * @param  {String} crossOrigin <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\">crossOrigin property</a> of the `img` element; use either 'anonymous' or 'use-credentials' to retrieve the image with cross-origin access (for later use with `canvas`. if an empty string(`\"\"`) is passed, CORS is not used\n * @param  {Function} [successCallback] callback to be called once image data is loaded with the <a href=\"#/p5.Element\">p5.Element</a> as argument\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n */\np5.prototype.createImg = function() {\n  p5._validateParameters('createImg', arguments);\n  var elt = document.createElement('img');\n  var args = arguments;\n  var self;\n  if (args.length > 1 && typeof args[1] === 'string') {\n    elt.alt = args[1];\n  }\n  if (args.length > 2 && typeof args[2] === 'string') {\n    elt.crossOrigin = args[2];\n  }\n  elt.src = args[0];\n  self = addElement(elt, this);\n  elt.addEventListener('load', function() {\n    self.width = elt.offsetWidth || elt.width;\n    self.height = elt.offsetHeight || elt.height;\n    var last = args[args.length - 1];\n    if (typeof last === 'function') last(self);\n  });\n  return self;\n};\n\n/**\n * Creates an &lt;a&gt;&lt;/a&gt; element in the DOM for including a hyperlink.\n *\n * @method createA\n * @param  {String} href       url of page to link to\n * @param  {String} html       inner html of link element to display\n * @param  {String} [target]   target where new link should open,\n *                             could be _blank, _self, _parent, _top.\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * createA('http://p5js.org/', 'this is a link');\n * </code></div>\n */\np5.prototype.createA = function(href, html, target) {\n  p5._validateParameters('createA', arguments);\n  var elt = document.createElement('a');\n  elt.href = href;\n  elt.innerHTML = html;\n  if (target) elt.target = target;\n  return addElement(elt, this);\n};\n\n/** INPUT **/\n\n/**\n * Creates a slider &lt;input&gt;&lt;/input&gt; element in the DOM.\n * Use .size() to set the display length of the slider.\n *\n * @method createSlider\n * @param  {Number} min minimum value of the slider\n * @param  {Number} max maximum value of the slider\n * @param  {Number} [value] default value of the slider\n * @param  {Number} [step] step size for each tick of the slider (if step is set to 0, the slider will move continuously from the minimum to the maximum value)\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div><code>\n * let slider;\n * function setup() {\n *   slider = createSlider(0, 255, 100);\n *   slider.position(10, 10);\n *   slider.style('width', '80px');\n * }\n *\n * function draw() {\n *   let val = slider.value();\n *   background(val);\n * }\n * </code></div>\n *\n * <div><code>\n * let slider;\n * function setup() {\n *   colorMode(HSB);\n *   slider = createSlider(0, 360, 60, 40);\n *   slider.position(10, 10);\n *   slider.style('width', '80px');\n * }\n *\n * function draw() {\n *   let val = slider.value();\n *   background(val, 100, 100, 1);\n * }\n * </code></div>\n */\np5.prototype.createSlider = function(min, max, value, step) {\n  p5._validateParameters('createSlider', arguments);\n  var elt = document.createElement('input');\n  elt.type = 'range';\n  elt.min = min;\n  elt.max = max;\n  if (step === 0) {\n    elt.step = 0.000000000000000001; // smallest valid step\n  } else if (step) {\n    elt.step = step;\n  }\n  if (typeof value === 'number') elt.value = value;\n  return addElement(elt, this);\n};\n\n/**\n * Creates a &lt;button&gt;&lt;/button&gt; element in the DOM.\n * Use .size() to set the display size of the button.\n * Use .mousePressed() to specify behavior on press.\n *\n * @method createButton\n * @param  {String} label label displayed on the button\n * @param  {String} [value] value of the button\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * let button;\n * function setup() {\n *   createCanvas(100, 100);\n *   background(0);\n *   button = createButton('click me');\n *   button.position(19, 19);\n *   button.mousePressed(changeBG);\n * }\n *\n * function changeBG() {\n *   let val = random(255);\n *   background(val);\n * }\n * </code></div>\n */\np5.prototype.createButton = function(label, value) {\n  p5._validateParameters('createButton', arguments);\n  var elt = document.createElement('button');\n  elt.innerHTML = label;\n  if (value) elt.value = value;\n  return addElement(elt, this);\n};\n\n/**\n * Creates a checkbox &lt;input&gt;&lt;/input&gt; element in the DOM.\n * Calling .checked() on a checkbox returns if it is checked or not\n *\n * @method createCheckbox\n * @param  {String} [label] label displayed after checkbox\n * @param  {boolean} [value] value of the checkbox; checked is true, unchecked is false\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * let checkbox;\n *\n * function setup() {\n *   checkbox = createCheckbox('label', false);\n *   checkbox.changed(myCheckedEvent);\n * }\n *\n * function myCheckedEvent() {\n *   if (this.checked()) {\n *     console.log('Checking!');\n *   } else {\n *     console.log('Unchecking!');\n *   }\n * }\n * </code></div>\n */\np5.prototype.createCheckbox = function() {\n  p5._validateParameters('createCheckbox', arguments);\n  var elt = document.createElement('div');\n  var checkbox = document.createElement('input');\n  checkbox.type = 'checkbox';\n  elt.appendChild(checkbox);\n  //checkbox must be wrapped in p5.Element before label so that label appears after\n  var self = addElement(elt, this);\n  self.checked = function() {\n    var cb = self.elt.getElementsByTagName('input')[0];\n    if (cb) {\n      if (arguments.length === 0) {\n        return cb.checked;\n      } else if (arguments[0]) {\n        cb.checked = true;\n      } else {\n        cb.checked = false;\n      }\n    }\n    return self;\n  };\n  this.value = function(val) {\n    self.value = val;\n    return this;\n  };\n  if (arguments[0]) {\n    var ran = Math.random()\n      .toString(36)\n      .slice(2);\n    var label = document.createElement('label');\n    checkbox.setAttribute('id', ran);\n    label.htmlFor = ran;\n    self.value(arguments[0]);\n    label.appendChild(document.createTextNode(arguments[0]));\n    elt.appendChild(label);\n  }\n  if (arguments[1]) {\n    checkbox.checked = true;\n  }\n  return self;\n};\n\n/**\n * Creates a dropdown menu &lt;select&gt;&lt;/select&gt; element in the DOM.\n * It also helps to assign select-box methods to <a href=\"#/p5.Element\">p5.Element</a> when selecting existing select box.\n * - `.option(name, [value])` can be used to set options for the select after it is created.\n * - `.value()` will return the currently selected option.\n * - `.selected()` will return current dropdown element which is an instance of <a href=\"#/p5.Element\">p5.Element</a>\n * - `.selected(value)` can be used to make given option selected by default when the page first loads.\n * - `.disable()` marks whole of dropdown element as disabled.\n * - `.disable(value)` marks given option as disabled\n *\n * @method createSelect\n * @param {boolean} [multiple] true if dropdown should support multiple selections\n * @return {p5.Element}\n * @example\n * <div><code>\n * let sel;\n *\n * function setup() {\n *   textAlign(CENTER);\n *   background(200);\n *   sel = createSelect();\n *   sel.position(10, 10);\n *   sel.option('pear');\n *   sel.option('kiwi');\n *   sel.option('grape');\n *   sel.selected('kiwi');\n *   sel.changed(mySelectEvent);\n * }\n *\n * function mySelectEvent() {\n *   let item = sel.value();\n *   background(200);\n *   text('It is a ' + item + '!', 50, 50);\n * }\n * </code></div>\n *\n * <div><code>\n * let sel;\n *\n * function setup() {\n *   textAlign(CENTER);\n *   background(200);\n *   sel = createSelect();\n *   sel.position(10, 10);\n *   sel.option('oil');\n *   sel.option('milk');\n *   sel.option('bread');\n *   sel.disable('milk');\n * }\n * </code></div>\n *\n */\n/**\n * @method createSelect\n * @param {Object} existing DOM select element\n * @return {p5.Element}\n */\n\np5.prototype.createSelect = function() {\n  p5._validateParameters('createSelect', arguments);\n  let self;\n  let arg = arguments[0];\n  if (arg instanceof p5.Element && arg.elt instanceof HTMLSelectElement) {\n    // If given argument is p5.Element of select type\n    self = arg;\n    this.elt = arg.elt;\n  } else if (arg instanceof HTMLSelectElement) {\n    self = addElement(arg, this);\n    this.elt = arg;\n  } else {\n    const elt = document.createElement('select');\n    if (arg && typeof arg === 'boolean') {\n      elt.setAttribute('multiple', 'true');\n    }\n    self = addElement(elt, this);\n    this.elt = elt;\n  }\n  self.option = function(name, value) {\n    let index;\n\n    // if no name is passed, return\n    if (name === undefined) {\n      return;\n    }\n    //see if there is already an option with this name\n    for (let i = 0; i < this.elt.length; i += 1) {\n      if (this.elt[i].innerHTML === name) {\n        index = i;\n        break;\n      }\n    }\n    //if there is an option with this name we will modify it\n    if (index !== undefined) {\n      //if the user passed in false then delete that option\n      if (value === false) {\n        this.elt.remove(index);\n      } else {\n        // Update the option at index with the value\n        this.elt[index].value = value;\n      }\n    } else {\n      //if it doesn't exist create it\n      const opt = document.createElement('option');\n      opt.innerHTML = name;\n      opt.value = value === undefined ? name : value;\n      this.elt.appendChild(opt);\n      this._pInst._elements.push(opt);\n    }\n  };\n\n  self.selected = function(value) {\n    // Update selected status of option\n    if (value !== undefined) {\n      for (let i = 0; i < this.elt.length; i += 1) {\n        if (this.elt[i].value.toString() === value.toString()) {\n          this.elt.selectedIndex = i;\n        }\n      }\n      return this;\n    } else {\n      if (this.elt.getAttribute('multiple')) {\n        let arr = [];\n        for (const selectedOption of this.elt.selectedOptions) {\n          arr.push(selectedOption.value);\n        }\n        return arr;\n      } else {\n        return this.elt.value;\n      }\n    }\n  };\n\n  self.disable = function(value) {\n    if (typeof value === 'string') {\n      for (let i = 0; i < this.elt.length; i++) {\n        if (this.elt[i].value.toString() === value) {\n          this.elt[i].disabled = true;\n          this.elt[i].selected = false;\n        }\n      }\n    } else {\n      this.elt.disabled = true;\n    }\n    return this;\n  };\n\n  return self;\n};\n\n/**\n * Creates a radio button element in the DOM.It also helps existing radio buttons\n * assign methods of <a href=\"#/p5.Element/\">p5.Element</a>.\n * - `.option(value, [label])` can be used to create a new option for the\n *   element. If an option with a value already exists, it will be returned.\n *   Optionally, a label can be provided as second argument for the option.\n * - `.remove(value)` can be used to remove an option for the element.\n * - `.value()` method will return the currently selected value.\n * - `.selected()` method will return the currently selected input element.\n * - `.selected(value)` method will select the option and return it.\n * - `.disable(Boolean)` method will enable/disable the whole radio button element.\n *\n * @method createRadio\n * @param  {Object} containerElement An container HTML Element either a div\n * or span inside which all existing radio inputs will be considered as options.\n * @param {string} [name] A name parameter for each Input Element.\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div><code>\n * let radio;\n *\n * function setup() {\n *   radio = createRadio();\n *   radio.option('black');\n *   radio.option('white');\n *   radio.option('gray');\n *   radio.style('width', '60px');\n *   textAlign(CENTER);\n *   fill(255, 0, 0);\n * }\n *\n * function draw() {\n *   let val = radio.value();\n *   background(val);\n *   text(val, width / 2, height / 2);\n * }\n * </code></div>\n * <div><code>\n * let radio;\n *\n * function setup() {\n *   radio = createRadio();\n *   radio.option('apple', 1);\n *   radio.option('bread', 2);\n *   radio.option('juice', 3);\n *   radio.style('width', '60px');\n *   textAlign(CENTER);\n * }\n *\n * function draw() {\n *   background(200);\n *   let val = radio.value();\n *   if (val) {\n *     text('item cost is $' + val, width / 2, height / 2);\n *   }\n * }\n * </code></div>\n */\n/**\n * @method createRadio\n * @param {String} name\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n */\n/**\n * @method createRadio\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n */\np5.prototype.createRadio = function() {\n  // Creates a div, adds each option as an individual input inside it.\n  // If already given with a containerEl, will search for all input[radio]\n  // it, create a p5.Element out of it, add options to it and return the p5.Element.\n\n  let radioElement;\n  let name;\n  const arg0 = arguments[0];\n  // If existing radio Element is provided as argument 0\n  if (arg0 instanceof HTMLDivElement || arg0 instanceof HTMLSpanElement) {\n    radioElement = arg0;\n    if (typeof arguments[1] === 'string') name = arguments[1];\n  } else {\n    if (typeof arg0 === 'string') name = arg0;\n    radioElement = document.createElement('div');\n  }\n  this.elt = radioElement;\n  let self = addElement(radioElement, this);\n  self._name = name || 'radioOption';\n\n  // setup member functions\n  const isRadioInput = el =>\n    el instanceof HTMLInputElement && el.type === 'radio';\n  const isNextLabel = el => el.nextElementSibling instanceof HTMLLabelElement;\n\n  self._getOptionsArray = function() {\n    return Array.from(this.elt.children).filter(isRadioInput);\n  };\n\n  self.option = function(value, label) {\n    // return an option with this value, create if not exists.\n    let optionEl;\n    for (const option of self._getOptionsArray()) {\n      if (option.value === value) {\n        optionEl = option;\n        break;\n      }\n    }\n\n    // Create a new option, add it to radioElement and return it.\n    if (optionEl === undefined) {\n      optionEl = document.createElement('input');\n      optionEl.setAttribute('type', 'radio');\n      optionEl.setAttribute('value', value);\n      this.elt.appendChild(optionEl);\n    }\n\n    // Check if label element exists, else create it\n    let labelElement;\n    if (!isNextLabel(optionEl)) {\n      labelElement = document.createElement('label');\n      optionEl.insertAdjacentElement('afterend', labelElement);\n    } else {\n      labelElement = optionEl.nextElementSibling;\n    }\n\n    labelElement.innerHTML = label === undefined ? value : label;\n    optionEl.setAttribute('name', self._name);\n    return optionEl;\n  };\n\n  self.remove = function(value) {\n    for (const optionEl of self._getOptionsArray()) {\n      if (optionEl.value === value) {\n        if (isNextLabel(optionEl)) optionEl.nextElementSibling.remove();\n        optionEl.remove();\n        return;\n      }\n    }\n  };\n\n  self.value = function() {\n    let result = '';\n    for (const option of self._getOptionsArray()) {\n      if (option.checked) {\n        result = option.value;\n        break;\n      }\n    }\n    return result;\n  };\n\n  self.selected = function(value) {\n    let result = null;\n    if (value === undefined) {\n      for (const option of self._getOptionsArray()) {\n        if (option.checked) {\n          result = option;\n          break;\n        }\n      }\n    } else {\n      for (const option of self._getOptionsArray()) {\n        if (option.value === value) {\n          option.setAttribute('checked', true);\n          result = option;\n        }\n      }\n    }\n    return result;\n  };\n\n  self.disable = function(shouldDisable = true) {\n    for (const radioInput of self._getOptionsArray()) {\n      radioInput.setAttribute('disabled', shouldDisable);\n    }\n  };\n\n  return self;\n};\n\n/**\n * Creates a colorPicker element in the DOM for color input.\n * The .value() method will return a hex string (#rrggbb) of the color.\n * The .color() method will return a p5.Color object with the current chosen color.\n *\n * @method createColorPicker\n * @param {String|p5.Color} [value] default color of element\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div><code>\n * let colorPicker;\n * function setup() {\n *   createCanvas(100, 100);\n *   colorPicker = createColorPicker('#ed225d');\n *   colorPicker.position(0, height + 5);\n * }\n *\n * function draw() {\n *   background(colorPicker.color());\n * }\n * </code></div>\n * <div><code>\n * let inp1, inp2;\n * function setup() {\n *   createCanvas(100, 100);\n *   background('grey');\n *   inp1 = createColorPicker('#ff0000');\n *   inp1.position(0, height + 5);\n *   inp1.input(setShade1);\n *   inp2 = createColorPicker(color('yellow'));\n *   inp2.position(0, height + 30);\n *   inp2.input(setShade2);\n *   setMidShade();\n * }\n *\n * function setMidShade() {\n *   // Finding a shade between the two\n *   let commonShade = lerpColor(inp1.color(), inp2.color(), 0.5);\n *   fill(commonShade);\n *   rect(20, 20, 60, 60);\n * }\n *\n * function setShade1() {\n *   setMidShade();\n *   console.log('You are choosing shade 1 to be : ', this.value());\n * }\n * function setShade2() {\n *   setMidShade();\n *   console.log('You are choosing shade 2 to be : ', this.value());\n * }\n * </code></div>\n */\np5.prototype.createColorPicker = function(value) {\n  p5._validateParameters('createColorPicker', arguments);\n  var elt = document.createElement('input');\n  var self;\n  elt.type = 'color';\n  if (value) {\n    if (value instanceof p5.Color) {\n      elt.value = value.toString('#rrggbb');\n    } else {\n      p5.prototype._colorMode = 'rgb';\n      p5.prototype._colorMaxes = {\n        rgb: [255, 255, 255, 255],\n        hsb: [360, 100, 100, 1],\n        hsl: [360, 100, 100, 1]\n      };\n      elt.value = p5.prototype.color(value).toString('#rrggbb');\n    }\n  } else {\n    elt.value = '#000000';\n  }\n  self = addElement(elt, this);\n  // Method to return a p5.Color object for the given color.\n  self.color = function() {\n    if (value.mode) {\n      p5.prototype._colorMode = value.mode;\n    }\n    if (value.maxes) {\n      p5.prototype._colorMaxes = value.maxes;\n    }\n    return p5.prototype.color(this.elt.value);\n  };\n  return self;\n};\n\n/**\n * Creates an &lt;input&gt;&lt;/input&gt; element in the DOM for text input.\n * Use .<a href=\"#/p5.Element/size\">size()</a> to set the display length of the box.\n *\n * @method createInput\n * @param {String} value default value of the input box\n * @param {String} [type] type of text, ie text, password etc. Defaults to text.\n *   Needs a value to be specified first.\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   let inp = createInput('');\n *   inp.input(myInputEvent);\n * }\n *\n * function myInputEvent() {\n *   console.log('you are typing: ', this.value());\n * }\n * </code></div>\n */\n/**\n * @method createInput\n * @param {String} [value]\n * @return {p5.Element}\n */\np5.prototype.createInput = function(value = '', type = 'text') {\n  p5._validateParameters('createInput', arguments);\n  let elt = document.createElement('input');\n  elt.setAttribute('value', value);\n  elt.setAttribute('type', type);\n  return addElement(elt, this);\n};\n\n/**\n * Creates an &lt;input&gt;&lt;/input&gt; element in the DOM of type 'file'.\n * This allows users to select local files for use in a sketch.\n *\n * @method createFileInput\n * @param  {Function} callback callback function for when a file is loaded\n * @param  {Boolean} [multiple] optional, to allow multiple files to be selected\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created DOM element\n * @example\n * <div><code>\n * let input;\n * let img;\n *\n * function setup() {\n *   input = createFileInput(handleFile);\n *   input.position(0, 0);\n * }\n *\n * function draw() {\n *   background(255);\n *   if (img) {\n *     image(img, 0, 0, width, height);\n *   }\n * }\n *\n * function handleFile(file) {\n *   print(file);\n *   if (file.type === 'image') {\n *     img = createImg(file.data, '');\n *     img.hide();\n *   } else {\n *     img = null;\n *   }\n * }\n * </code></div>\n */\np5.prototype.createFileInput = function(callback, multiple = false) {\n  p5._validateParameters('createFileInput', arguments);\n\n  const handleFileSelect = function(event) {\n    for (const file of event.target.files) {\n      p5.File._load(file, callback);\n    }\n  };\n\n  // If File API's are not supported, throw Error\n  if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n    console.log(\n      'The File APIs are not fully supported in this browser. Cannot create element.'\n    );\n    return;\n  }\n\n  const fileInput = document.createElement('input');\n  fileInput.setAttribute('type', 'file');\n  if (multiple) fileInput.setAttribute('multiple', true);\n  fileInput.addEventListener('change', handleFileSelect, false);\n  return addElement(fileInput, this);\n};\n\n/** VIDEO STUFF **/\n\n// Helps perform similar tasks for media element methods.\nfunction createMedia(pInst, type, src, callback) {\n  const elt = document.createElement(type);\n\n  // Create source elements from given sources\n  src = src || '';\n  if (typeof src === 'string') {\n    src = [src];\n  }\n  for (const mediaSource of src) {\n    const sourceEl = document.createElement('source');\n    sourceEl.setAttribute('src', mediaSource);\n    elt.appendChild(sourceEl);\n  }\n\n  // If callback is provided, attach to element\n  if (typeof callback === 'function') {\n    const callbackHandler = () => {\n      callback();\n      elt.removeEventListener('canplaythrough', callbackHandler);\n    };\n    elt.addEventListener('canplaythrough', callbackHandler);\n  }\n\n  const mediaEl = addElement(elt, pInst, true);\n  mediaEl.loadedmetadata = false;\n\n  // set width and height onload metadata\n  elt.addEventListener('loadedmetadata', () => {\n    mediaEl.width = elt.videoWidth;\n    mediaEl.height = elt.videoHeight;\n\n    // set elt width and height if not set\n    if (mediaEl.elt.width === 0) mediaEl.elt.width = elt.videoWidth;\n    if (mediaEl.elt.height === 0) mediaEl.elt.height = elt.videoHeight;\n    if (mediaEl.presetPlaybackRate) {\n      mediaEl.elt.playbackRate = mediaEl.presetPlaybackRate;\n      delete mediaEl.presetPlaybackRate;\n    }\n    mediaEl.loadedmetadata = true;\n  });\n\n  return mediaEl;\n}\n\n/**\n * Creates an HTML5 &lt;video&gt; element in the DOM for simple playback\n * of audio/video. Shown by default, can be hidden with .<a href=\"#/p5.Element/hide\">hide()</a>\n * and drawn into canvas using video(). The first parameter\n * can be either a single string path to a video file, or an array of string\n * paths to different formats of the same video. This is useful for ensuring\n * that your video can play across different browsers, as each supports\n * different formats. See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this\n * page</a> for further information about supported formats.\n *\n * @method createVideo\n * @param  {String|String[]} src path to a video file, or array of paths for\n *                             supporting different browsers\n * @param  {Function} [callback] callback function to be called upon\n *                             'canplaythrough' event fire, that is, when the\n *                             browser can play the media, and estimates that\n *                             enough data has been loaded to play the media\n *                             up to its end without having to stop for\n *                             further buffering of content\n * @return {p5.MediaElement}   pointer to video <a href=\"#/p5.Element\">p5.Element</a>\n * @example\n * <div><code>\n * let vid;\n * function setup() {\n *   noCanvas();\n *\n *   vid = createVideo(\n *     ['assets/small.mp4', 'assets/small.ogv', 'assets/small.webm'],\n *     vidLoad\n *   );\n *\n *   vid.size(100, 100);\n * }\n *\n * // This function is called when the video loads\n * function vidLoad() {\n *   vid.loop();\n *   vid.volume(0);\n * }\n * </code></div>\n */\np5.prototype.createVideo = function(src, callback) {\n  p5._validateParameters('createVideo', arguments);\n  return createMedia(this, 'video', src, callback);\n};\n\n/** AUDIO STUFF **/\n\n/**\n * Creates a hidden HTML5 &lt;audio&gt; element in the DOM for simple audio\n * playback. The first parameter can be either a single string path to a\n * audio file, or an array of string paths to different formats of the same\n * audio. This is useful for ensuring that your audio can play across\n * different browsers, as each supports different formats.\n * See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this\n * page for further information about supported formats</a>.\n *\n * @method createAudio\n * @param  {String|String[]} [src] path to an audio file, or array of paths\n *                             for supporting different browsers\n * @param  {Function} [callback] callback function to be called upon\n *                             'canplaythrough' event fire, that is, when the\n *                             browser can play the media, and estimates that\n *                             enough data has been loaded to play the media\n *                             up to its end without having to stop for\n *                             further buffering of content\n * @return {p5.MediaElement}   pointer to audio <a href=\"#/p5.Element\">p5.Element</a>\n * @example\n * <div><code>\n * let ele;\n * function setup() {\n *   ele = createAudio('assets/beat.mp3');\n *\n *   // here we set the element to autoplay\n *   // The element will play as soon\n *   // as it is able to do so.\n *   ele.autoplay(true);\n * }\n * </code></div>\n */\np5.prototype.createAudio = function(src, callback) {\n  p5._validateParameters('createAudio', arguments);\n  return createMedia(this, 'audio', src, callback);\n};\n\n/** CAMERA STUFF **/\n\n/**\n * @property {String} VIDEO\n * @final\n * @category Constants\n */\np5.prototype.VIDEO = 'video';\n/**\n * @property {String} AUDIO\n * @final\n * @category Constants\n */\np5.prototype.AUDIO = 'audio';\n\n// from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n// Older browsers might not implement mediaDevices at all, so we set an empty object first\nif (navigator.mediaDevices === undefined) {\n  navigator.mediaDevices = {};\n}\n\n// Some browsers partially implement mediaDevices. We can't just assign an object\n// with getUserMedia as it would overwrite existing properties.\n// Here, we will just add the getUserMedia property if it's missing.\nif (navigator.mediaDevices.getUserMedia === undefined) {\n  navigator.mediaDevices.getUserMedia = function(constraints) {\n    // First get ahold of the legacy getUserMedia, if present\n    var getUserMedia =\n      navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n    // Some browsers just don't implement it - return a rejected promise with an error\n    // to keep a consistent interface\n    if (!getUserMedia) {\n      return Promise.reject(\n        new Error('getUserMedia is not implemented in this browser')\n      );\n    }\n\n    // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n    return new Promise(function(resolve, reject) {\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  };\n}\n\n/**\n * Creates a new HTML5 &lt;video&gt; element that contains the audio/video feed\n * from a webcam. The element is separate from the canvas and is displayed by\n * default. The element can be hidden using .<a href=\"#/p5.Element/hide\">hide()</a>.\n * The feed can be drawn onto the canvas using <a href=\"#/p5/image\">image()</a>.\n * The loadedmetadata property can be used to detect when the element has fully\n * loaded (see second example).\n *\n * More specific properties of the feed can be passing in a Constraints object.\n * See the <a href='http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints'>\n * W3C spec</a> for possible properties. Note that not all of these are supported\n * by all browsers.\n *\n * <em>Security note</em>: A new browser security specification requires that\n * getUserMedia, which is behind <a href=\"#/p5/createCapture\">createCapture()</a>,\n * only works when you're running the code locally, or on HTTPS. Learn more\n * <a href='http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https'>here</a>\n * and <a href='https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia'>here</a>.\n *\n * @method createCapture\n * @param  {String|Constant|Object}   type type of capture, either VIDEO or\n *                                   AUDIO if none specified, default both,\n *                                   or a Constraints object\n * @param  {Function}                 [callback] function to be called once\n *                                   stream has loaded\n * @return {p5.Element} capture video <a href=\"#/p5.Element\">p5.Element</a>\n * @example\n * <div class='norender notest'>\n * <code>\n * let capture;\n *\n * function setup() {\n *   createCanvas(480, 480);\n *   capture = createCapture(VIDEO);\n *   capture.hide();\n * }\n *\n * function draw() {\n *   image(capture, 0, 0, width, width * capture.height / capture.width);\n *   filter(INVERT);\n * }\n * </code>\n * </div>\n *\n * <div class='norender notest'>\n * <code>\n * function setup() {\n *   createCanvas(480, 120);\n *   let constraints = {\n *     video: {\n *       mandatory: {\n *         minWidth: 1280,\n *         minHeight: 720\n *       },\n *       optional: [{ maxFrameRate: 10 }]\n *     },\n *     audio: true\n *   };\n *   createCapture(constraints, function(stream) {\n *     console.log(stream);\n *   });\n * }\n * </code>\n * </div>\n * <div class='norender notest'>\n * <code>\n * let capture;\n *\n * function setup() {\n *   createCanvas(640, 480);\n *   capture = createCapture(VIDEO);\n * }\n * function draw() {\n *   background(0);\n *   if (capture.loadedmetadata) {\n *     let c = capture.get(0, 0, 100, 100);\n *     image(c, 0, 0);\n *   }\n * }\n * </code>\n * </div>\n */\np5.prototype.createCapture = function() {\n  p5._validateParameters('createCapture', arguments);\n\n  // return if getUserMedia is not supported by browser\n  if (!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n    throw new DOMException('getUserMedia not supported in this browser');\n  }\n\n  let useVideo = true;\n  let useAudio = true;\n  let constraints;\n  let callback;\n  for (const arg of arguments) {\n    if (arg === p5.prototype.VIDEO) useAudio = false;\n    else if (arg === p5.prototype.AUDIO) useVideo = false;\n    else if (typeof arg === 'object') constraints = arg;\n    else if (typeof arg === 'function') callback = arg;\n  }\n  if (!constraints) constraints = { video: useVideo, audio: useAudio };\n\n  const domElement = document.createElement('video');\n  // required to work in iOS 11 & up:\n  domElement.setAttribute('playsinline', '');\n\n  navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n    try {\n      if ('srcObject' in domElement) {\n        domElement.srcObject = stream;\n      } else {\n        domElement.src = window.URL.createObjectURL(stream);\n      }\n    } catch (err) {\n      domElement.src = stream;\n    }\n  }, console.log);\n\n  const videoEl = addElement(domElement, this, true);\n  videoEl.loadedmetadata = false;\n  // set width and height onload metadata\n  domElement.addEventListener('loadedmetadata', function() {\n    domElement.play();\n    if (domElement.width) {\n      videoEl.width = domElement.width;\n      videoEl.height = domElement.height;\n    } else {\n      videoEl.width = videoEl.elt.width = domElement.videoWidth;\n      videoEl.height = videoEl.elt.height = domElement.videoHeight;\n    }\n    videoEl.loadedmetadata = true;\n\n    if (callback) callback(domElement.srcObject);\n  });\n  return videoEl;\n};\n\n/**\n * Creates element with given tag in the DOM with given content.\n *\n * @method createElement\n * @param  {String} tag tag for the new element\n * @param  {String} [content] html content to be inserted into the element\n * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\n * @example\n * <div class='norender'><code>\n * createElement('h2', 'im an h2 p5.element!');\n * </code></div>\n */\np5.prototype.createElement = function(tag, content) {\n  p5._validateParameters('createElement', arguments);\n  var elt = document.createElement(tag);\n  if (typeof content !== 'undefined') {\n    elt.innerHTML = content;\n  }\n  return addElement(elt, this);\n};\n\n// =============================================================================\n//                         p5.Element additions\n// =============================================================================\n/**\n *\n * Adds specified class to the element.\n *\n * @for p5.Element\n * @method addClass\n * @param  {String} class name of class to add\n * @chainable\n * @example\n * <div class='norender'><code>\n * let div = createDiv('div');\n * div.addClass('myClass');\n * </code></div>\n */\np5.Element.prototype.addClass = function(c) {\n  if (this.elt.className) {\n    if (!this.hasClass(c)) {\n      this.elt.className = this.elt.className + ' ' + c;\n    }\n  } else {\n    this.elt.className = c;\n  }\n  return this;\n};\n\n/**\n *\n * Removes specified class from the element.\n *\n * @method removeClass\n * @param  {String} class name of class to remove\n * @chainable\n * @example\n * <div class='norender'><code>\n * // In this example, a class is set when the div is created\n * // and removed when mouse is pressed. This could link up\n * // with a CSS style rule to toggle style properties.\n *\n * let div;\n *\n * function setup() {\n *   div = createDiv('div');\n *   div.addClass('myClass');\n * }\n *\n * function mousePressed() {\n *   div.removeClass('myClass');\n * }\n * </code></div>\n */\np5.Element.prototype.removeClass = function(c) {\n  // Note: Removing a class that does not exist does NOT throw an error in classList.remove method\n  this.elt.classList.remove(c);\n  return this;\n};\n\n/**\n *\n * Checks if specified class already set to element\n *\n * @method hasClass\n * @returns {boolean} a boolean value if element has specified class\n * @param c {String} class name of class to check\n * @example\n * <div class='norender'><code>\n * let div;\n *\n * function setup() {\n *   div = createDiv('div');\n *   div.addClass('show');\n * }\n *\n * function mousePressed() {\n *   if (div.hasClass('show')) {\n *     div.addClass('show');\n *   } else {\n *     div.removeClass('show');\n *   }\n * }\n * </code></div>\n */\np5.Element.prototype.hasClass = function(c) {\n  return this.elt.classList.contains(c);\n};\n\n/**\n *\n * Toggles element class\n *\n * @method toggleClass\n * @param c {String} class name to toggle\n * @chainable\n * @example\n * <div class='norender'><code>\n * let div;\n *\n * function setup() {\n *   div = createDiv('div');\n *   div.addClass('show');\n * }\n *\n * function mousePressed() {\n *   div.toggleClass('show');\n * }\n * </code></div>\n */\np5.Element.prototype.toggleClass = function(c) {\n  // classList also has a toggle() method, but we cannot use that yet as support is unclear.\n  // See https://github.com/processing/p5.js/issues/3631\n  // this.elt.classList.toggle(c);\n  if (this.elt.classList.contains(c)) {\n    this.elt.classList.remove(c);\n  } else {\n    this.elt.classList.add(c);\n  }\n  return this;\n};\n\n/**\n *\n * Attaches the element  as a child to the parent specified.\n * Accepts either a string ID, DOM node, or <a href=\"#/p5.Element\">p5.Element</a>.\n * If no argument is specified, an array of children DOM nodes is returned.\n *\n * @method child\n * @returns {Node[]} an array of child nodes\n * @example\n * <div class='norender'><code>\n * let div0 = createDiv('this is the parent');\n * let div1 = createDiv('this is the child');\n * div0.child(div1); // use p5.Element\n * </code></div>\n * <div class='norender'><code>\n * let div0 = createDiv('this is the parent');\n * let div1 = createDiv('this is the child');\n * div1.id('apples');\n * div0.child('apples'); // use id\n * </code></div>\n * <div class='norender notest'><code>\n * // this example assumes there is a div already on the page\n * // with id \"myChildDiv\"\n * let div0 = createDiv('this is the parent');\n * let elt = document.getElementById('myChildDiv');\n * div0.child(elt); // use element from page\n * </code></div>\n */\n/**\n * @method child\n * @param  {String|p5.Element} [child] the ID, DOM node, or <a href=\"#/p5.Element\">p5.Element</a>\n *                         to add to the current element\n * @chainable\n */\np5.Element.prototype.child = function(c) {\n  if (typeof c === 'undefined') {\n    return this.elt.childNodes;\n  }\n  if (typeof c === 'string') {\n    if (c[0] === '#') {\n      c = c.substring(1);\n    }\n    c = document.getElementById(c);\n  } else if (c instanceof p5.Element) {\n    c = c.elt;\n  }\n  this.elt.appendChild(c);\n  return this;\n};\n\n/**\n * Centers a p5 Element either vertically, horizontally,\n * or both, relative to its parent or according to\n * the body if the Element has no parent. If no argument is passed\n * the Element is aligned both vertically and horizontally.\n *\n * @method center\n * @param  {String} [align]       passing 'vertical', 'horizontal' aligns element accordingly\n * @chainable\n *\n * @example\n * <div><code>\n * function setup() {\n *   let div = createDiv('').size(10, 10);\n *   div.style('background-color', 'orange');\n *   div.center();\n * }\n * </code></div>\n */\np5.Element.prototype.center = function(align) {\n  var style = this.elt.style.display;\n  var hidden = this.elt.style.display === 'none';\n  var parentHidden = this.parent().style.display === 'none';\n  var pos = { x: this.elt.offsetLeft, y: this.elt.offsetTop };\n\n  if (hidden) this.show();\n\n  this.elt.style.display = 'block';\n  this.position(0, 0);\n\n  if (parentHidden) this.parent().style.display = 'block';\n\n  var wOffset = Math.abs(this.parent().offsetWidth - this.elt.offsetWidth);\n  var hOffset = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);\n  var y = pos.y;\n  var x = pos.x;\n\n  if (align === 'both' || align === undefined) {\n    this.position(wOffset / 2, hOffset / 2);\n  } else if (align === 'horizontal') {\n    this.position(wOffset / 2, y);\n  } else if (align === 'vertical') {\n    this.position(x, hOffset / 2);\n  }\n\n  this.style('display', style);\n\n  if (hidden) this.hide();\n\n  if (parentHidden) this.parent().style.display = 'none';\n\n  return this;\n};\n\n/**\n *\n * If an argument is given, sets the inner HTML of the element,\n * replacing any existing html. If true is included as a second\n * argument, html is appended instead of replacing existing html.\n * If no arguments are given, returns\n * the inner HTML of the element.\n *\n * @for p5.Element\n * @method html\n * @returns {String} the inner HTML of the element\n * @example\n * <div class='norender'><code>\n * let div = createDiv('').size(100, 100);\n * div.html('hi');\n * </code></div>\n * <div class='norender'><code>\n * let div = createDiv('Hello ').size(100, 100);\n * div.html('World', true);\n * </code></div>\n */\n/**\n * @method html\n * @param  {String} [html] the HTML to be placed inside the element\n * @param  {boolean} [append] whether to append HTML to existing\n * @chainable\n */\np5.Element.prototype.html = function() {\n  if (arguments.length === 0) {\n    return this.elt.innerHTML;\n  } else if (arguments[1]) {\n    this.elt.insertAdjacentHTML('beforeend', arguments[0]);\n    return this;\n  } else {\n    this.elt.innerHTML = arguments[0];\n    return this;\n  }\n};\n\n/**\n *\n * Sets the position of the element. If no position type argument is given, the\n * position will be relative to (0, 0) of the window.\n * Essentially, this sets position:absolute and left and top\n * properties of style. If an optional third argument specifying position type is given,\n * the x and y coordinates will be interpreted based on the <a target=\"_blank\"\n * href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/position\">positioning scheme</a>.\n * If no arguments given, the function returns the x and y position of the element.\n *\n * @method position\n * @returns {Object} the x and y position of the element in an object\n * @example\n * <div><code class='norender'>\n * function setup() {\n *   let cnv = createCanvas(100, 100);\n *   // positions canvas 50px to the right and 100px\n *   // below upper left corner of the window\n *   cnv.position(50, 100);\n * }\n * </code></div>\n * <div><code class='norender'>\n * function setup() {\n *   let cnv = createCanvas(100, 100);\n *   // positions canvas 50px to the right and 100px\n *   // below upper left corner of the window\n *   cnv.position(0, 0, 'fixed');\n * }\n * </code></div>\n */\n/**\n * @method position\n * @param  {Number} [x] x-position relative to upper left of window (optional)\n * @param  {Number} [y] y-position relative to upper left of window (optional)\n * @param  {String} positionType it can be static, fixed, relative, sticky, initial or inherit (optional)\n * @chainable\n */\np5.Element.prototype.position = function() {\n  if (arguments.length === 0) {\n    return { x: this.elt.offsetLeft, y: this.elt.offsetTop };\n  } else {\n    let positionType = 'absolute';\n    if (\n      arguments[2] === 'static' ||\n      arguments[2] === 'fixed' ||\n      arguments[2] === 'relative' ||\n      arguments[2] === 'sticky' ||\n      arguments[2] === 'initial' ||\n      arguments[2] === 'inherit'\n    ) {\n      positionType = arguments[2];\n    }\n    this.elt.style.position = positionType;\n    this.elt.style.left = arguments[0] + 'px';\n    this.elt.style.top = arguments[1] + 'px';\n    this.x = arguments[0];\n    this.y = arguments[1];\n    return this;\n  }\n};\n\n/* Helper method called by p5.Element.style() */\np5.Element.prototype._translate = function() {\n  this.elt.style.position = 'absolute';\n  // save out initial non-translate transform styling\n  var transform = '';\n  if (this.elt.style.transform) {\n    transform = this.elt.style.transform.replace(/translate3d\\(.*\\)/g, '');\n    transform = transform.replace(/translate[X-Z]?\\(.*\\)/g, '');\n  }\n  if (arguments.length === 2) {\n    this.elt.style.transform =\n      'translate(' + arguments[0] + 'px, ' + arguments[1] + 'px)';\n  } else if (arguments.length > 2) {\n    this.elt.style.transform =\n      'translate3d(' +\n      arguments[0] +\n      'px,' +\n      arguments[1] +\n      'px,' +\n      arguments[2] +\n      'px)';\n    if (arguments.length === 3) {\n      this.elt.parentElement.style.perspective = '1000px';\n    } else {\n      this.elt.parentElement.style.perspective = arguments[3] + 'px';\n    }\n  }\n  // add any extra transform styling back on end\n  this.elt.style.transform += transform;\n  return this;\n};\n\n/* Helper method called by p5.Element.style() */\np5.Element.prototype._rotate = function() {\n  // save out initial non-rotate transform styling\n  var transform = '';\n  if (this.elt.style.transform) {\n    transform = this.elt.style.transform.replace(/rotate3d\\(.*\\)/g, '');\n    transform = transform.replace(/rotate[X-Z]?\\(.*\\)/g, '');\n  }\n\n  if (arguments.length === 1) {\n    this.elt.style.transform = 'rotate(' + arguments[0] + 'deg)';\n  } else if (arguments.length === 2) {\n    this.elt.style.transform =\n      'rotate(' + arguments[0] + 'deg, ' + arguments[1] + 'deg)';\n  } else if (arguments.length === 3) {\n    this.elt.style.transform = 'rotateX(' + arguments[0] + 'deg)';\n    this.elt.style.transform += 'rotateY(' + arguments[1] + 'deg)';\n    this.elt.style.transform += 'rotateZ(' + arguments[2] + 'deg)';\n  }\n  // add remaining transform back on\n  this.elt.style.transform += transform;\n  return this;\n};\n\n/**\n * Sets the given style (css) property (1st arg) of the element with the\n * given value (2nd arg). If a single argument is given, .style()\n * returns the value of the given property; however, if the single argument\n * is given in css syntax ('text-align:center'), .style() sets the css\n * appropriately.\n *\n * @method style\n * @param  {String} property   property to be set\n * @returns {String} value of property\n * @example\n * <div><code class='norender'>\n * let myDiv = createDiv('I like pandas.');\n * myDiv.style('font-size', '18px');\n * myDiv.style('color', '#ff0000');\n * </code></div>\n * <div><code class='norender'>\n * let col = color(25, 23, 200, 50);\n * let button = createButton('button');\n * button.style('background-color', col);\n * button.position(10, 10);\n * </code></div>\n * <div><code class='norender'>\n * let myDiv;\n * function setup() {\n *   background(200);\n *   myDiv = createDiv('I like gray.');\n *   myDiv.position(20, 20);\n * }\n *\n * function draw() {\n *   myDiv.style('font-size', mouseX + 'px');\n * }\n * </code></div>\n */\n/**\n * @method style\n * @param  {String} property\n * @param  {String|Number|p5.Color} value     value to assign to property\n * @return {String} current value of property, if no value is given as second argument\n * @chainable\n */\np5.Element.prototype.style = function(prop, val) {\n  var self = this;\n\n  if (val instanceof p5.Color) {\n    val =\n      'rgba(' +\n      val.levels[0] +\n      ',' +\n      val.levels[1] +\n      ',' +\n      val.levels[2] +\n      ',' +\n      val.levels[3] / 255 +\n      ')';\n  }\n\n  if (typeof val === 'undefined') {\n    // input provided as single line string\n    if (prop.indexOf(':') === -1) {\n      var styles = window.getComputedStyle(self.elt);\n      var style = styles.getPropertyValue(prop);\n      return style;\n    } else {\n      var attrs = prop.split(';');\n      for (var i = 0; i < attrs.length; i++) {\n        var parts = attrs[i].split(':');\n        if (parts[0] && parts[1]) {\n          this.elt.style[parts[0].trim()] = parts[1].trim();\n        }\n      }\n    }\n  } else {\n    // input provided as key,val pair\n    this.elt.style[prop] = val;\n    if (\n      prop === 'width' ||\n      prop === 'height' ||\n      prop === 'left' ||\n      prop === 'top'\n    ) {\n      var numVal = val.replace(/\\D+/g, '');\n      this[prop] = parseInt(numVal, 10);\n    }\n  }\n  return this;\n};\n\n/**\n *\n * Adds a new attribute or changes the value of an existing attribute\n * on the specified element. If no value is specified, returns the\n * value of the given attribute, or null if attribute is not set.\n *\n * @method attribute\n * @return {String} value of attribute\n *\n * @example\n * <div class='norender'><code>\n * let myDiv = createDiv('I like pandas.');\n * myDiv.attribute('align', 'center');\n * </code></div>\n */\n/**\n * @method attribute\n * @param  {String} attr       attribute to set\n * @param  {String} value      value to assign to attribute\n * @chainable\n */\np5.Element.prototype.attribute = function(attr, value) {\n  //handling for checkboxes and radios to ensure options get\n  //attributes not divs\n  if (\n    this.elt.firstChild != null &&\n    (this.elt.firstChild.type === 'checkbox' ||\n      this.elt.firstChild.type === 'radio')\n  ) {\n    if (typeof value === 'undefined') {\n      return this.elt.firstChild.getAttribute(attr);\n    } else {\n      for (var i = 0; i < this.elt.childNodes.length; i++) {\n        this.elt.childNodes[i].setAttribute(attr, value);\n      }\n    }\n  } else if (typeof value === 'undefined') {\n    return this.elt.getAttribute(attr);\n  } else {\n    this.elt.setAttribute(attr, value);\n    return this;\n  }\n};\n\n/**\n *\n * Removes an attribute on the specified element.\n *\n * @method removeAttribute\n * @param  {String} attr       attribute to remove\n * @chainable\n *\n * @example\n * <div><code>\n * let button;\n * let checkbox;\n *\n * function setup() {\n *   checkbox = createCheckbox('enable', true);\n *   checkbox.changed(enableButton);\n *   button = createButton('button');\n *   button.position(10, 10);\n * }\n *\n * function enableButton() {\n *   if (this.checked()) {\n *     // Re-enable the button\n *     button.removeAttribute('disabled');\n *   } else {\n *     // Disable the button\n *     button.attribute('disabled', '');\n *   }\n * }\n * </code></div>\n */\np5.Element.prototype.removeAttribute = function(attr) {\n  if (\n    this.elt.firstChild != null &&\n    (this.elt.firstChild.type === 'checkbox' ||\n      this.elt.firstChild.type === 'radio')\n  ) {\n    for (var i = 0; i < this.elt.childNodes.length; i++) {\n      this.elt.childNodes[i].removeAttribute(attr);\n    }\n  }\n  this.elt.removeAttribute(attr);\n  return this;\n};\n\n/**\n * Either returns the value of the element if no arguments\n * given, or sets the value of the element.\n *\n * @method value\n * @return {String|Number} value of the element\n * @example\n * <div class='norender'><code>\n * // gets the value\n * let inp;\n * function setup() {\n *   inp = createInput('');\n * }\n *\n * function mousePressed() {\n *   print(inp.value());\n * }\n * </code></div>\n * <div class='norender'><code>\n * // sets the value\n * let inp;\n * function setup() {\n *   inp = createInput('myValue');\n * }\n *\n * function mousePressed() {\n *   inp.value('myValue');\n * }\n * </code></div>\n */\n/**\n * @method value\n * @param  {String|Number}     value\n * @chainable\n */\np5.Element.prototype.value = function() {\n  if (arguments.length > 0) {\n    this.elt.value = arguments[0];\n    return this;\n  } else {\n    if (this.elt.type === 'range') {\n      return parseFloat(this.elt.value);\n    } else return this.elt.value;\n  }\n};\n\n/**\n *\n * Shows the current element. Essentially, setting display:block for the style.\n *\n * @method show\n * @chainable\n * @example\n * <div class='norender'><code>\n * let div = createDiv('div');\n * div.style('display', 'none');\n * div.show(); // turns display to block\n * </code></div>\n */\np5.Element.prototype.show = function() {\n  this.elt.style.display = 'block';\n  return this;\n};\n\n/**\n * Hides the current element. Essentially, setting display:none for the style.\n *\n * @method hide\n * @chainable\n * @example\n * <div class='norender'><code>\n * let div = createDiv('this is a div');\n * div.hide();\n * </code></div>\n */\np5.Element.prototype.hide = function() {\n  this.elt.style.display = 'none';\n  return this;\n};\n\n/**\n *\n * Sets the width and height of the element. AUTO can be used to\n * only adjust one dimension at a time. If no arguments are given, it\n * returns the width and height of the element in an object. In case of\n * elements which need to be loaded, such as images, it is recommended\n * to call the function after the element has finished loading.\n *\n * @method size\n * @return {Object} the width and height of the element in an object\n * @example\n * <div class='norender'><code>\n * let div = createDiv('this is a div');\n * div.size(100, 100);\n * let img = createImg(\n *   'assets/rockies.jpg',\n *   'A tall mountain with a small forest and field in front of it on a sunny day',\n *   '',\n *   () => {\n *     img.size(10, AUTO);\n *   }\n * );\n * </code></div>\n */\n/**\n * @method size\n * @param  {Number|Constant} w    width of the element, either AUTO, or a number\n * @param  {Number|Constant} [h] height of the element, either AUTO, or a number\n * @chainable\n */\np5.Element.prototype.size = function(w, h) {\n  if (arguments.length === 0) {\n    return { width: this.elt.offsetWidth, height: this.elt.offsetHeight };\n  } else {\n    var aW = w;\n    var aH = h;\n    var AUTO = p5.prototype.AUTO;\n    if (aW !== AUTO || aH !== AUTO) {\n      if (aW === AUTO) {\n        aW = h * this.width / this.height;\n      } else if (aH === AUTO) {\n        aH = w * this.height / this.width;\n      }\n      // set diff for cnv vs normal div\n      if (this.elt instanceof HTMLCanvasElement) {\n        var j = {};\n        var k = this.elt.getContext('2d');\n        var prop;\n        for (prop in k) {\n          j[prop] = k[prop];\n        }\n        this.elt.setAttribute('width', aW * this._pInst._pixelDensity);\n        this.elt.setAttribute('height', aH * this._pInst._pixelDensity);\n        this.elt.style.width = aW + 'px';\n        this.elt.style.height = aH + 'px';\n        this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);\n        for (prop in j) {\n          this.elt.getContext('2d')[prop] = j[prop];\n        }\n      } else {\n        this.elt.style.width = aW + 'px';\n        this.elt.style.height = aH + 'px';\n        this.elt.width = aW;\n        this.elt.height = aH;\n      }\n\n      this.width = this.elt.offsetWidth;\n      this.height = this.elt.offsetHeight;\n\n      if (this._pInst && this._pInst._curElement) {\n        // main canvas associated with p5 instance\n        if (this._pInst._curElement.elt === this.elt) {\n          this._pInst._setProperty('width', this.elt.offsetWidth);\n          this._pInst._setProperty('height', this.elt.offsetHeight);\n        }\n      }\n    }\n    return this;\n  }\n};\n\n/**\n * Removes the element, stops all media streams, and deregisters all listeners.\n * @method remove\n * @example\n * <div class='norender'><code>\n * let myDiv = createDiv('this is some text');\n * myDiv.remove();\n * </code></div>\n */\np5.Element.prototype.remove = function() {\n  // stop all audios/videos and detach all devices like microphone/camera etc\n  // used as input/output for audios/videos.\n  if (this instanceof p5.MediaElement) {\n    const tracks = this.elt.srcObject.getTracks();\n    tracks.forEach(function(track) {\n      track.stop();\n    });\n  }\n\n  // delete the reference in this._pInst._elements\n  const index = this._pInst._elements.indexOf(this);\n  if (index !== -1) {\n    this._pInst._elements.splice(index, 1);\n  }\n\n  // deregister events\n  for (let ev in this._events) {\n    this.elt.removeEventListener(ev, this._events[ev]);\n  }\n  if (this.elt && this.elt.parentNode) {\n    this.elt.parentNode.removeChild(this.elt);\n  }\n};\n\n/**\n * Registers a callback that gets called every time a file that is\n * dropped on the element has been loaded.\n * p5 will load every dropped file into memory and pass it as a p5.File object to the callback.\n * Multiple files dropped at the same time will result in multiple calls to the callback.\n *\n * You can optionally pass a second callback which will be registered to the raw\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/drop\">drop</a> event.\n * The callback will thus be provided the original\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\">DragEvent</a>.\n * Dropping multiple files at the same time will trigger the second callback once per drop,\n * whereas the first callback will trigger for each loaded file.\n *\n * @method drop\n * @param  {Function} callback  callback to receive loaded file, called for each file dropped.\n * @param  {Function} [fxn]     callback triggered once when files are dropped with the drop event.\n * @chainable\n * @example\n * <div><code>\n * function setup() {\n *   let c = createCanvas(100, 100);\n *   background(200);\n *   textAlign(CENTER);\n *   text('drop file', width / 2, height / 2);\n *   c.drop(gotFile);\n * }\n *\n * function gotFile(file) {\n *   background(200);\n *   text('received file:', width / 2, height / 2);\n *   text(file.name, width / 2, height / 2 + 50);\n * }\n * </code></div>\n *\n * <div><code>\n * let img;\n *\n * function setup() {\n *   let c = createCanvas(100, 100);\n *   background(200);\n *   textAlign(CENTER);\n *   text('drop image', width / 2, height / 2);\n *   c.drop(gotFile);\n * }\n *\n * function draw() {\n *   if (img) {\n *     image(img, 0, 0, width, height);\n *   }\n * }\n *\n * function gotFile(file) {\n *   img = createImg(file.data, '').hide();\n * }\n * </code></div>\n *\n * @alt\n * Canvas turns into whatever image is dragged/dropped onto it.\n */\np5.Element.prototype.drop = function(callback, fxn) {\n  // Is the file stuff supported?\n  if (window.File && window.FileReader && window.FileList && window.Blob) {\n    if (!this._dragDisabled) {\n      this._dragDisabled = true;\n\n      var preventDefault = function(evt) {\n        evt.preventDefault();\n      };\n\n      // If you want to be able to drop you've got to turn off\n      // a lot of default behavior.\n      // avoid `attachListener` here, since it overrides other handlers.\n      this.elt.addEventListener('dragover', preventDefault);\n\n      // If this is a drag area we need to turn off the default behavior\n      this.elt.addEventListener('dragleave', preventDefault);\n    }\n\n    // Deal with the files\n    p5.Element._attachListener(\n      'drop',\n      function(evt) {\n        evt.preventDefault();\n        // Call the second argument as a callback that receives the raw drop event\n        if (typeof fxn === 'function') {\n          fxn.call(this, evt);\n        }\n        // A FileList\n        var files = evt.dataTransfer.files;\n\n        // Load each one and trigger the callback\n        for (var i = 0; i < files.length; i++) {\n          var f = files[i];\n          p5.File._load(f, callback);\n        }\n      },\n      this\n    );\n  } else {\n    console.log('The File APIs are not fully supported in this browser.');\n  }\n\n  return this;\n};\n\n// =============================================================================\n//                         p5.MediaElement additions\n// =============================================================================\n\n/**\n * Extends <a href=\"#/p5.Element\">p5.Element</a> to handle audio and video. In addition to the methods\n * of <a href=\"#/p5.Element\">p5.Element</a>, it also contains methods for controlling media. It is not\n * called directly, but <a href=\"#/p5.MediaElement\">p5.MediaElement</a>s are created by calling <a href=\"#/p5/createVideo\">createVideo</a>,\n * <a href=\"#/p5/createAudio\">createAudio</a>, and <a href=\"#/p5/createCapture\">createCapture</a>.\n *\n * @class p5.MediaElement\n * @constructor\n * @param {String} elt DOM node that is wrapped\n */\np5.MediaElement = function(elt, pInst) {\n  p5.Element.call(this, elt, pInst);\n\n  var self = this;\n  this.elt.crossOrigin = 'anonymous';\n\n  this._prevTime = 0;\n  this._cueIDCounter = 0;\n  this._cues = [];\n  this._pixelsState = this;\n  this._pixelDensity = 1;\n  this._modified = false;\n\n  /**\n   * Path to the media element source.\n   *\n   * @property src\n   * @return {String} src\n   * @example\n   * <div><code>\n   * let ele;\n   *\n   * function setup() {\n   *   background(250);\n   *\n   *   //p5.MediaElement objects are usually created\n   *   //by calling the createAudio(), createVideo(),\n   *   //and createCapture() functions.\n   *\n   *   //In this example we create\n   *   //a new p5.MediaElement via createAudio().\n   *   ele = createAudio('assets/beat.mp3');\n   *\n   *   //We'll set up our example so that\n   *   //when you click on the text,\n   *   //an alert box displays the MediaElement's\n   *   //src field.\n   *   textAlign(CENTER);\n   *   text('Click Me!', width / 2, height / 2);\n   * }\n   *\n   * function mouseClicked() {\n   *   //here we test if the mouse is over the\n   *   //canvas element when it's clicked\n   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n   *     //Show our p5.MediaElement's src field\n   *     alert(ele.src);\n   *   }\n   * }\n   * </code></div>\n   */\n  Object.defineProperty(self, 'src', {\n    get: function() {\n      var firstChildSrc = self.elt.children[0].src;\n      var srcVal = self.elt.src === window.location.href ? '' : self.elt.src;\n      var ret = firstChildSrc === window.location.href ? srcVal : firstChildSrc;\n      return ret;\n    },\n    set: function(newValue) {\n      for (var i = 0; i < self.elt.children.length; i++) {\n        self.elt.removeChild(self.elt.children[i]);\n      }\n      var source = document.createElement('source');\n      source.src = newValue;\n      elt.appendChild(source);\n      self.elt.src = newValue;\n      self.modified = true;\n    }\n  });\n\n  // private _onended callback, set by the method: onended(callback)\n  self._onended = function() {};\n  self.elt.onended = function() {\n    self._onended(self);\n  };\n};\np5.MediaElement.prototype = Object.create(p5.Element.prototype);\n\n/**\n * Play an HTML5 media element.\n *\n * @method play\n * @chainable\n * @example\n * <div><code>\n * let ele;\n *\n * function setup() {\n *   //p5.MediaElement objects are usually created\n *   //by calling the createAudio(), createVideo(),\n *   //and createCapture() functions.\n *\n *   //In this example we create\n *   //a new p5.MediaElement via createAudio().\n *   ele = createAudio('assets/beat.mp3');\n *\n *   background(250);\n *   textAlign(CENTER);\n *   text('Click to Play!', width / 2, height / 2);\n * }\n *\n * function mouseClicked() {\n *   //here we test if the mouse is over the\n *   //canvas element when it's clicked\n *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n *     //Here we call the play() function on\n *     //the p5.MediaElement we created above.\n *     //This will start the audio sample.\n *     ele.play();\n *\n *     background(200);\n *     text('You clicked Play!', width / 2, height / 2);\n *   }\n * }\n * </code></div>\n */\np5.MediaElement.prototype.play = function() {\n  if (this.elt.currentTime === this.elt.duration) {\n    this.elt.currentTime = 0;\n  }\n  var promise;\n  if (this.elt.readyState > 1) {\n    promise = this.elt.play();\n  } else {\n    // in Chrome, playback cannot resume after being stopped and must reload\n    this.elt.load();\n    promise = this.elt.play();\n  }\n  if (promise && promise.catch) {\n    promise.catch(function(e) {\n      // if it's an autoplay failure error\n      if (e.name === 'NotAllowedError') {\n        p5._friendlyAutoplayError(this.src);\n      } else {\n        // any other kind of error\n        console.error('Media play method encountered an unexpected error', e);\n      }\n    });\n  }\n  return this;\n};\n\n/**\n * Stops an HTML5 media element (sets current time to zero).\n *\n * @method stop\n * @chainable\n * @example\n * <div><code>\n * //This example both starts\n * //and stops a sound sample\n * //when the user clicks the canvas\n *\n * //We will store the p5.MediaElement\n * //object in here\n * let ele;\n *\n * //while our audio is playing,\n * //this will be set to true\n * let sampleIsPlaying = false;\n *\n * function setup() {\n *   //Here we create a p5.MediaElement object\n *   //using the createAudio() function.\n *   ele = createAudio('assets/beat.mp3');\n *   background(200);\n *   textAlign(CENTER);\n *   text('Click to play!', width / 2, height / 2);\n * }\n *\n * function mouseClicked() {\n *   //here we test if the mouse is over the\n *   //canvas element when it's clicked\n *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n *     background(200);\n *\n *     if (sampleIsPlaying) {\n *       //if the sample is currently playing\n *       //calling the stop() function on\n *       //our p5.MediaElement will stop\n *       //it and reset its current\n *       //time to 0 (i.e. it will start\n *       //at the beginning the next time\n *       //you play it)\n *       ele.stop();\n *\n *       sampleIsPlaying = false;\n *       text('Click to play!', width / 2, height / 2);\n *     } else {\n *       //loop our sound element until we\n *       //call ele.stop() on it.\n *       ele.loop();\n *\n *       sampleIsPlaying = true;\n *       text('Click to stop!', width / 2, height / 2);\n *     }\n *   }\n * }\n * </code></div>\n */\np5.MediaElement.prototype.stop = function() {\n  this.elt.pause();\n  this.elt.currentTime = 0;\n  return this;\n};\n\n/**\n * Pauses an HTML5 media element.\n *\n * @method pause\n * @chainable\n * @example\n * <div><code>\n * //This example both starts\n * //and pauses a sound sample\n * //when the user clicks the canvas\n *\n * //We will store the p5.MediaElement\n * //object in here\n * let ele;\n *\n * //while our audio is playing,\n * //this will be set to true\n * let sampleIsPlaying = false;\n *\n * function setup() {\n *   //Here we create a p5.MediaElement object\n *   //using the createAudio() function.\n *   ele = createAudio('assets/lucky_dragons.mp3');\n *   background(200);\n *   textAlign(CENTER);\n *   text('Click to play!', width / 2, height / 2);\n * }\n *\n * function mouseClicked() {\n *   //here we test if the mouse is over the\n *   //canvas element when it's clicked\n *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n *     background(200);\n *\n *     if (sampleIsPlaying) {\n *       //Calling pause() on our\n *       //p5.MediaElement will stop it\n *       //playing, but when we call the\n *       //loop() or play() functions\n *       //the sample will start from\n *       //where we paused it.\n *       ele.pause();\n *\n *       sampleIsPlaying = false;\n *       text('Click to resume!', width / 2, height / 2);\n *     } else {\n *       //loop our sound element until we\n *       //call ele.pause() on it.\n *       ele.loop();\n *\n *       sampleIsPlaying = true;\n *       text('Click to pause!', width / 2, height / 2);\n *     }\n *   }\n * }\n * </code></div>\n */\np5.MediaElement.prototype.pause = function() {\n  this.elt.pause();\n  return this;\n};\n\n/**\n * Set 'loop' to true for an HTML5 media element, and starts playing.\n *\n * @method loop\n * @chainable\n * @example\n * <div><code>\n * //Clicking the canvas will loop\n * //the audio sample until the user\n * //clicks again to stop it\n *\n * //We will store the p5.MediaElement\n * //object in here\n * let ele;\n *\n * //while our audio is playing,\n * //this will be set to true\n * let sampleIsLooping = false;\n *\n * function setup() {\n *   //Here we create a p5.MediaElement object\n *   //using the createAudio() function.\n *   ele = createAudio('assets/lucky_dragons.mp3');\n *   background(200);\n *   textAlign(CENTER);\n *   text('Click to loop!', width / 2, height / 2);\n * }\n *\n * function mouseClicked() {\n *   //here we test if the mouse is over the\n *   //canvas element when it's clicked\n *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n *     background(200);\n *\n *     if (!sampleIsLooping) {\n *       //loop our sound element until we\n *       //call ele.stop() on it.\n *       ele.loop();\n *\n *       sampleIsLooping = true;\n *       text('Click to stop!', width / 2, height / 2);\n *     } else {\n *       ele.stop();\n *\n *       sampleIsLooping = false;\n *       text('Click to loop!', width / 2, height / 2);\n *     }\n *   }\n * }\n * </code></div>\n */\np5.MediaElement.prototype.loop = function() {\n  this.elt.setAttribute('loop', true);\n  this.play();\n  return this;\n};\n/**\n * Set 'loop' to false for an HTML5 media element. Element will stop\n * when it reaches the end.\n *\n * @method noLoop\n * @chainable\n * @example\n * <div><code>\n * //This example both starts\n * //and stops loop of sound sample\n * //when the user clicks the canvas\n *\n * //We will store the p5.MediaElement\n * //object in here\n * let ele;\n * //while our audio is playing,\n * //this will be set to true\n * let sampleIsPlaying = false;\n *\n * function setup() {\n *   //Here we create a p5.MediaElement object\n *   //using the createAudio() function.\n *   ele = createAudio('assets/beat.mp3');\n *   background(200);\n *   textAlign(CENTER);\n *   text('Click to play!', width / 2, height / 2);\n * }\n *\n * function mouseClicked() {\n *   //here we test if the mouse is over the\n *   //canvas element when it's clicked\n *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n *     background(200);\n *\n *     if (sampleIsPlaying) {\n *       ele.noLoop();\n *       text('No more Loops!', width / 2, height / 2);\n *     } else {\n *       ele.loop();\n *       sampleIsPlaying = true;\n *       text('Click to stop looping!', width / 2, height / 2);\n *     }\n *   }\n * }\n * </code></div>\n *\n */\np5.MediaElement.prototype.noLoop = function() {\n  this.elt.setAttribute('loop', false);\n  return this;\n};\n\n/**\n * Sets up logic to check that autoplay succeeded.\n *\n * @method setupAutoplayFailDetection\n * @private\n */\np5.MediaElement.prototype._setupAutoplayFailDetection = function() {\n  const timeout = setTimeout(() => p5._friendlyAutoplayError(this.src), 500);\n  this.elt.addEventListener('play', () => clearTimeout(timeout), {\n    passive: true,\n    once: true\n  });\n};\n\n/**\n * Set HTML5 media element to autoplay or not. If no argument is specified, by\n * default it will autoplay.\n *\n * @method autoplay\n * @param {Boolean} shouldAutoplay whether the element should autoplay\n * @chainable\n * @example\n * <div><code>\n * let videoElement;\n * function setup() {\n *   noCanvas();\n *   videoElement = createVideo(['assets/small.mp4'], onVideoLoad);\n * }\n * function onVideoLoad() {\n *   // The media will play as soon as it is loaded.\n *   videoElement.autoplay();\n *   videoElement.volume(0);\n *   videoElement.size(100, 100);\n * }\n * </code></div>\n *\n * <div><code>\n * let videoElement;\n * function setup() {\n *   noCanvas();\n *   videoElement = createVideo(['assets/small.mp4'], onVideoLoad);\n * }\n * function onVideoLoad() {\n *   // The media will not play untill some explicitly triggered.\n *   videoElement.autoplay(false);\n *   videoElement.volume(0);\n *   videoElement.size(100, 100);\n * }\n *\n * function mouseClicked() {\n *   videoElement.play();\n * }\n * </code></div>\n *\n * @alt\n * An example of a video element which autoplays after it is loaded.\n * An example of a video element which waits for a trigger for playing.\n *\n */\n\np5.MediaElement.prototype.autoplay = function(val) {\n  const oldVal = this.elt.getAttribute('autoplay');\n  this.elt.setAttribute('autoplay', val);\n  // if we turned on autoplay\n  if (val && !oldVal) {\n    // bind method to this scope\n    const setupAutoplayFailDetection = () => this._setupAutoplayFailDetection();\n    // if media is ready to play, schedule check now\n    if (this.elt.readyState === 4) {\n      setupAutoplayFailDetection();\n    } else {\n      // otherwise, schedule check whenever it is ready\n      this.elt.addEventListener('canplay', setupAutoplayFailDetection, {\n        passive: true,\n        once: true\n      });\n    }\n  }\n\n  return this;\n};\n\n/**\n * Sets volume for this HTML5 media element. If no argument is given,\n * returns the current volume.\n *\n * @method volume\n * @return {Number} current volume\n *\n * @example\n * <div><code>\n * let ele;\n * function setup() {\n *   // p5.MediaElement objects are usually created\n *   // by calling the createAudio(), createVideo(),\n *   // and createCapture() functions.\n *   // In this example we create\n *   // a new p5.MediaElement via createAudio().\n *   ele = createAudio('assets/lucky_dragons.mp3');\n *   background(250);\n *   textAlign(CENTER);\n *   text('Click to Play!', width / 2, height / 2);\n * }\n * function mouseClicked() {\n *   // Here we call the volume() function\n *   // on the sound element to set its volume\n *   // Volume must be between 0.0 and 1.0\n *   ele.volume(0.2);\n *   ele.play();\n *   background(200);\n *   text('You clicked Play!', width / 2, height / 2);\n * }\n * </code></div>\n * <div><code>\n * let audio;\n * let counter = 0;\n *\n * function loaded() {\n *   audio.play();\n * }\n *\n * function setup() {\n *   audio = createAudio('assets/lucky_dragons.mp3', loaded);\n *   textAlign(CENTER);\n * }\n *\n * function draw() {\n *   if (counter === 0) {\n *     background(0, 255, 0);\n *     text('volume(0.9)', width / 2, height / 2);\n *   } else if (counter === 1) {\n *     background(255, 255, 0);\n *     text('volume(0.5)', width / 2, height / 2);\n *   } else if (counter === 2) {\n *     background(255, 0, 0);\n *     text('volume(0.1)', width / 2, height / 2);\n *   }\n * }\n *\n * function mousePressed() {\n *   counter++;\n *   if (counter === 0) {\n *     audio.volume(0.9);\n *   } else if (counter === 1) {\n *     audio.volume(0.5);\n *   } else if (counter === 2) {\n *     audio.volume(0.1);\n *   } else {\n *     counter = 0;\n *     audio.volume(0.9);\n *   }\n * }\n * </code>\n * </div>\n */\n/**\n * @method volume\n * @param {Number}            val volume between 0.0 and 1.0\n * @chainable\n */\np5.MediaElement.prototype.volume = function(val) {\n  if (typeof val === 'undefined') {\n    return this.elt.volume;\n  } else {\n    this.elt.volume = val;\n  }\n};\n\n/**\n * If no arguments are given, returns the current playback speed of the\n * element. The speed parameter sets the speed where 2.0 will play the\n * element twice as fast, 0.5 will play at half the speed, and -1 will play\n * the element in normal speed in reverse.(Note that not all browsers support\n * backward playback and even if they do, playback might not be smooth.)\n *\n * @method speed\n * @return {Number} current playback speed of the element\n *\n * @example\n * <div class='norender notest'><code>\n * //Clicking the canvas will loop\n * //the audio sample until the user\n * //clicks again to stop it\n *\n * //We will store the p5.MediaElement\n * //object in here\n * let ele;\n * let button;\n *\n * function setup() {\n *   createCanvas(710, 400);\n *   //Here we create a p5.MediaElement object\n *   //using the createAudio() function.\n *   ele = createAudio('assets/beat.mp3');\n *   ele.loop();\n *   background(200);\n *\n *   button = createButton('2x speed');\n *   button.position(100, 68);\n *   button.mousePressed(twice_speed);\n *\n *   button = createButton('half speed');\n *   button.position(200, 68);\n *   button.mousePressed(half_speed);\n *\n *   button = createButton('reverse play');\n *   button.position(300, 68);\n *   button.mousePressed(reverse_speed);\n *\n *   button = createButton('STOP');\n *   button.position(400, 68);\n *   button.mousePressed(stop_song);\n *\n *   button = createButton('PLAY!');\n *   button.position(500, 68);\n *   button.mousePressed(play_speed);\n * }\n *\n * function twice_speed() {\n *   ele.speed(2);\n * }\n *\n * function half_speed() {\n *   ele.speed(0.5);\n * }\n *\n * function reverse_speed() {\n *   ele.speed(-1);\n * }\n *\n * function stop_song() {\n *   ele.stop();\n * }\n *\n * function play_speed() {\n *   ele.play();\n * }\n * </code></div>\n */\n\n/**\n * @method speed\n * @param {Number} speed  speed multiplier for element playback\n * @chainable\n */\np5.MediaElement.prototype.speed = function(val) {\n  if (typeof val === 'undefined') {\n    return this.presetPlaybackRate || this.elt.playbackRate;\n  } else {\n    if (this.loadedmetadata) {\n      this.elt.playbackRate = val;\n    } else {\n      this.presetPlaybackRate = val;\n    }\n  }\n};\n\n/**\n * If no arguments are given, returns the current time of the element.\n * If an argument is given the current time of the element is set to it.\n *\n * @method time\n * @return {Number} current time (in seconds)\n *\n * @example\n * <div><code>\n * let ele;\n * let beginning = true;\n * function setup() {\n *   //p5.MediaElement objects are usually created\n *   //by calling the createAudio(), createVideo(),\n *   //and createCapture() functions.\n *\n *   //In this example we create\n *   //a new p5.MediaElement via createAudio().\n *   ele = createAudio('assets/lucky_dragons.mp3');\n *   background(250);\n *   textAlign(CENTER);\n *   text('start at beginning', width / 2, height / 2);\n * }\n *\n * // this function fires with click anywhere\n * function mousePressed() {\n *   if (beginning === true) {\n *     // here we start the sound at the beginning\n *     // time(0) is not necessary here\n *     // as this produces the same result as\n *     // play()\n *     ele.play().time(0);\n *     background(200);\n *     text('jump 2 sec in', width / 2, height / 2);\n *     beginning = false;\n *   } else {\n *     // here we jump 2 seconds into the sound\n *     ele.play().time(2);\n *     background(250);\n *     text('start at beginning', width / 2, height / 2);\n *     beginning = true;\n *   }\n * }\n * </code></div>\n */\n/**\n * @method time\n * @param {Number} time time to jump to (in seconds)\n * @chainable\n */\np5.MediaElement.prototype.time = function(val) {\n  if (typeof val === 'undefined') {\n    return this.elt.currentTime;\n  } else {\n    this.elt.currentTime = val;\n    return this;\n  }\n};\n\n/**\n * Returns the duration of the HTML5 media element.\n *\n * @method duration\n * @return {Number} duration\n *\n * @example\n * <div><code>\n * let ele;\n * function setup() {\n *   //p5.MediaElement objects are usually created\n *   //by calling the createAudio(), createVideo(),\n *   //and createCapture() functions.\n *   //In this example we create\n *   //a new p5.MediaElement via createAudio().\n *   ele = createAudio('assets/doorbell.mp3');\n *   background(250);\n *   textAlign(CENTER);\n *   text('Click to know the duration!', 10, 25, 70, 80);\n * }\n * function mouseClicked() {\n *   ele.play();\n *   background(200);\n *   //ele.duration dislpays the duration\n *   text(ele.duration() + ' seconds', width / 2, height / 2);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.duration = function() {\n  return this.elt.duration;\n};\np5.MediaElement.prototype.pixels = [];\np5.MediaElement.prototype._ensureCanvas = function() {\n  if (!this.canvas) {\n    this.canvas = document.createElement('canvas');\n    this.drawingContext = this.canvas.getContext('2d');\n    this.setModified(true);\n  }\n  if (this.loadedmetadata) {\n    // wait for metadata for w/h\n    if (this.canvas.width !== this.elt.width) {\n      this.canvas.width = this.elt.width;\n      this.canvas.height = this.elt.height;\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n    }\n\n    this.drawingContext.drawImage(\n      this.elt,\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n    this.setModified(true);\n  }\n};\np5.MediaElement.prototype.loadPixels = function() {\n  this._ensureCanvas();\n  return p5.Renderer2D.prototype.loadPixels.apply(this, arguments);\n};\np5.MediaElement.prototype.updatePixels = function(x, y, w, h) {\n  if (this.loadedmetadata) {\n    // wait for metadata\n    this._ensureCanvas();\n    p5.Renderer2D.prototype.updatePixels.call(this, x, y, w, h);\n  }\n  this.setModified(true);\n  return this;\n};\np5.MediaElement.prototype.get = function() {\n  this._ensureCanvas();\n  return p5.Renderer2D.prototype.get.apply(this, arguments);\n};\np5.MediaElement.prototype._getPixel = function() {\n  this.loadPixels();\n  return p5.Renderer2D.prototype._getPixel.apply(this, arguments);\n};\n\np5.MediaElement.prototype.set = function(x, y, imgOrCol) {\n  if (this.loadedmetadata) {\n    // wait for metadata\n    this._ensureCanvas();\n    p5.Renderer2D.prototype.set.call(this, x, y, imgOrCol);\n    this.setModified(true);\n  }\n};\np5.MediaElement.prototype.copy = function() {\n  this._ensureCanvas();\n  p5.prototype.copy.apply(this, arguments);\n};\np5.MediaElement.prototype.mask = function() {\n  this.loadPixels();\n  this.setModified(true);\n  p5.Image.prototype.mask.apply(this, arguments);\n};\n/**\n * helper method for web GL mode to figure out if the element\n * has been modified and might need to be re-uploaded to texture\n * memory between frames.\n * @method isModified\n * @private\n * @return {boolean} a boolean indicating whether or not the\n * image has been updated or modified since last texture upload.\n */\np5.MediaElement.prototype.isModified = function() {\n  return this._modified;\n};\n/**\n * helper method for web GL mode to indicate that an element has been\n * changed or unchanged since last upload. gl texture upload will\n * set this value to false after uploading the texture; or might set\n * it to true if metadata has become available but there is no actual\n * texture data available yet..\n * @method setModified\n * @param {boolean} val sets whether or not the element has been\n * modified.\n * @private\n */\np5.MediaElement.prototype.setModified = function(value) {\n  this._modified = value;\n};\n/**\n * Schedule an event to be called when the audio or video\n * element reaches the end. If the element is looping,\n * this will not be called. The element is passed in\n * as the argument to the onended callback.\n *\n * @method  onended\n * @param  {Function} callback function to call when the\n *                             soundfile has ended. The\n *                             media element will be passed\n *                             in as the argument to the\n *                             callback.\n * @chainable\n * @example\n * <div><code>\n * function setup() {\n *   let audioEl = createAudio('assets/beat.mp3');\n *   audioEl.showControls();\n *   audioEl.onended(sayDone);\n * }\n *\n * function sayDone(elt) {\n *   alert('done playing ' + elt.src);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.onended = function(callback) {\n  this._onended = callback;\n  return this;\n};\n\n/*** CONNECT TO WEB AUDIO API / p5.sound.js ***/\n\n/**\n * Send the audio output of this element to a specified audioNode or\n * p5.sound object. If no element is provided, connects to p5's master\n * output. That connection is established when this method is first called.\n * All connections are removed by the .disconnect() method.\n *\n * This method is meant to be used with the p5.sound.js addon library.\n *\n * @method  connect\n * @param  {AudioNode|Object} audioNode AudioNode from the Web Audio API,\n * or an object from the p5.sound library\n */\np5.MediaElement.prototype.connect = function(obj) {\n  var audioContext, masterOutput;\n\n  // if p5.sound exists, same audio context\n  if (typeof p5.prototype.getAudioContext === 'function') {\n    audioContext = p5.prototype.getAudioContext();\n    masterOutput = p5.soundOut.input;\n  } else {\n    try {\n      audioContext = obj.context;\n      masterOutput = audioContext.destination;\n    } catch (e) {\n      throw 'connect() is meant to be used with Web Audio API or p5.sound.js';\n    }\n  }\n\n  // create a Web Audio MediaElementAudioSourceNode if none already exists\n  if (!this.audioSourceNode) {\n    this.audioSourceNode = audioContext.createMediaElementSource(this.elt);\n\n    // connect to master output when this method is first called\n    this.audioSourceNode.connect(masterOutput);\n  }\n\n  // connect to object if provided\n  if (obj) {\n    if (obj.input) {\n      this.audioSourceNode.connect(obj.input);\n    } else {\n      this.audioSourceNode.connect(obj);\n    }\n  } else {\n    // otherwise connect to master output of p5.sound / AudioContext\n    this.audioSourceNode.connect(masterOutput);\n  }\n};\n\n/**\n * Disconnect all Web Audio routing, including to master output.\n * This is useful if you want to re-route the output through\n * audio effects, for example.\n *\n * @method  disconnect\n */\np5.MediaElement.prototype.disconnect = function() {\n  if (this.audioSourceNode) {\n    this.audioSourceNode.disconnect();\n  } else {\n    throw 'nothing to disconnect';\n  }\n};\n\n/*** SHOW / HIDE CONTROLS ***/\n\n/**\n * Show the default MediaElement controls, as determined by the web browser.\n *\n * @method  showControls\n * @example\n * <div><code>\n * let ele;\n * function setup() {\n *   //p5.MediaElement objects are usually created\n *   //by calling the createAudio(), createVideo(),\n *   //and createCapture() functions.\n *   //In this example we create\n *   //a new p5.MediaElement via createAudio()\n *   ele = createAudio('assets/lucky_dragons.mp3');\n *   background(200);\n *   textAlign(CENTER);\n *   text('Click to Show Controls!', 10, 25, 70, 80);\n * }\n * function mousePressed() {\n *   ele.showControls();\n *   background(200);\n *   text('Controls Shown', width / 2, height / 2);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.showControls = function() {\n  // must set style for the element to show on the page\n  this.elt.style['text-align'] = 'inherit';\n  this.elt.controls = true;\n};\n\n/**\n * Hide the default mediaElement controls.\n * @method hideControls\n * @example\n * <div><code>\n * let ele;\n * function setup() {\n *   //p5.MediaElement objects are usually created\n *   //by calling the createAudio(), createVideo(),\n *   //and createCapture() functions.\n *   //In this example we create\n *   //a new p5.MediaElement via createAudio()\n *   ele = createAudio('assets/lucky_dragons.mp3');\n *   ele.showControls();\n *   background(200);\n *   textAlign(CENTER);\n *   text('Click to hide Controls!', 10, 25, 70, 80);\n * }\n * function mousePressed() {\n *   ele.hideControls();\n *   background(200);\n *   text('Controls hidden', width / 2, height / 2);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.hideControls = function() {\n  this.elt.controls = false;\n};\n\n/*** SCHEDULE EVENTS ***/\n\n// Cue inspired by JavaScript setTimeout, and the\n// Tone.js Transport Timeline Event, MIT License Yotam Mann 2015 tonejs.org\nvar Cue = function(callback, time, id, val) {\n  this.callback = callback;\n  this.time = time;\n  this.id = id;\n  this.val = val;\n};\n\n/**\n * Schedule events to trigger every time a MediaElement\n * (audio/video) reaches a playback cue point.\n *\n * Accepts a callback function, a time (in seconds) at which to trigger\n * the callback, and an optional parameter for the callback.\n *\n * Time will be passed as the first parameter to the callback function,\n * and param will be the second parameter.\n *\n *\n * @method  addCue\n * @param {Number}   time     Time in seconds, relative to this media\n *                             element's playback. For example, to trigger\n *                             an event every time playback reaches two\n *                             seconds, pass in the number 2. This will be\n *                             passed as the first parameter to\n *                             the callback function.\n * @param {Function} callback Name of a function that will be\n *                             called at the given time. The callback will\n *                             receive time and (optionally) param as its\n *                             two parameters.\n * @param {Object} [value]    An object to be passed as the\n *                             second parameter to the\n *                             callback function.\n * @return {Number} id ID of this cue,\n *                     useful for removeCue(id)\n * @example\n * <div><code>\n * //\n * //\n * function setup() {\n *   noCanvas();\n *\n *   let audioEl = createAudio('assets/beat.mp3');\n *   audioEl.showControls();\n *\n *   // schedule three calls to changeBackground\n *   audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\n *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\n *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\n *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\n *   audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\n *   audioEl.addCue(5.0, changeBackground, color(255, 255, 0));\n * }\n *\n * function changeBackground(val) {\n *   background(val);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.addCue = function(time, callback, val) {\n  var id = this._cueIDCounter++;\n\n  var cue = new Cue(callback, time, id, val);\n  this._cues.push(cue);\n\n  if (!this.elt.ontimeupdate) {\n    this.elt.ontimeupdate = this._onTimeUpdate.bind(this);\n  }\n\n  return id;\n};\n\n/**\n * Remove a callback based on its ID. The ID is returned by the\n * addCue method.\n * @method removeCue\n * @param  {Number} id ID of the cue, as returned by addCue\n * @example\n * <div><code>\n * let audioEl, id1, id2;\n * function setup() {\n *   background(255, 255, 255);\n *   audioEl = createAudio('assets/beat.mp3');\n *   audioEl.showControls();\n *   // schedule five calls to changeBackground\n *   id1 = audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\n *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\n *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\n *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\n *   id2 = audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\n *   text('Click to remove first and last Cue!', 10, 25, 70, 80);\n * }\n * function mousePressed() {\n *   audioEl.removeCue(id1);\n *   audioEl.removeCue(id2);\n * }\n * function changeBackground(val) {\n *   background(val);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.removeCue = function(id) {\n  for (var i = 0; i < this._cues.length; i++) {\n    if (this._cues[i].id === id) {\n      console.log(id);\n      this._cues.splice(i, 1);\n    }\n  }\n\n  if (this._cues.length === 0) {\n    this.elt.ontimeupdate = null;\n  }\n};\n\n/**\n * Remove all of the callbacks that had originally been scheduled\n * via the addCue method.\n * @method  clearCues\n * @param  {Number} id ID of the cue, as returned by addCue\n * @example\n * <div><code>\n * let audioEl;\n * function setup() {\n *   background(255, 255, 255);\n *   audioEl = createAudio('assets/beat.mp3');\n *   //Show the default MediaElement controls, as determined by the web browser\n *   audioEl.showControls();\n *   // schedule calls to changeBackground\n *   background(200);\n *   text('Click to change Cue!', 10, 25, 70, 80);\n *   audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\n *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\n *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\n *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\n *   audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\n * }\n * function mousePressed() {\n *   // here we clear the scheduled callbacks\n *   audioEl.clearCues();\n *   // then we add some more callbacks\n *   audioEl.addCue(1, changeBackground, color(2, 2, 2));\n *   audioEl.addCue(3, changeBackground, color(255, 255, 0));\n * }\n * function changeBackground(val) {\n *   background(val);\n * }\n * </code></div>\n */\np5.MediaElement.prototype.clearCues = function() {\n  this._cues = [];\n  this.elt.ontimeupdate = null;\n};\n\n// private method that checks for cues to be fired if events\n// have been scheduled using addCue(callback, time).\np5.MediaElement.prototype._onTimeUpdate = function() {\n  var playbackTime = this.time();\n\n  for (var i = 0; i < this._cues.length; i++) {\n    var callbackTime = this._cues[i].time;\n    var val = this._cues[i].val;\n\n    if (this._prevTime < callbackTime && callbackTime <= playbackTime) {\n      // pass the scheduled callbackTime as parameter to the callback\n      this._cues[i].callback(val);\n    }\n  }\n\n  this._prevTime = playbackTime;\n};\n\n/**\n * Base class for a file.\n * Used for Element.drop and createFileInput.\n *\n * @class p5.File\n * @constructor\n * @param {File} file File that is wrapped\n */\np5.File = function(file, pInst) {\n  /**\n   * Underlying File object. All normal File methods can be called on this.\n   *\n   * @property file\n   */\n  this.file = file;\n\n  this._pInst = pInst;\n\n  // Splitting out the file type into two components\n  // This makes determining if image or text etc simpler\n  var typeList = file.type.split('/');\n  /**\n   * File type (image, text, etc.)\n   *\n   * @property type\n   */\n  this.type = typeList[0];\n  /**\n   * File subtype (usually the file extension jpg, png, xml, etc.)\n   *\n   * @property subtype\n   */\n  this.subtype = typeList[1];\n  /**\n   * File name\n   *\n   * @property name\n   */\n  this.name = file.name;\n  /**\n   * File size\n   *\n   * @property size\n   */\n  this.size = file.size;\n\n  /**\n   * URL string containing either image data, the text contents of the file or\n   * a parsed object if file is JSON and p5.XML if XML\n   *\n   * @property data\n   */\n  this.data = undefined;\n};\n\np5.File._createLoader = function(theFile, callback) {\n  var reader = new FileReader();\n  reader.onload = function(e) {\n    var p5file = new p5.File(theFile);\n    if (p5file.file.type === 'application/json') {\n      // Parse JSON and store the result in data\n      p5file.data = JSON.parse(e.target.result);\n    } else if (p5file.file.type === 'text/xml') {\n      // Parse XML, wrap it in p5.XML and store the result in data\n      const parser = new DOMParser();\n      const xml = parser.parseFromString(e.target.result, 'text/xml');\n      p5file.data = new p5.XML(xml.documentElement);\n    } else {\n      p5file.data = e.target.result;\n    }\n    callback(p5file);\n  };\n  return reader;\n};\n\np5.File._load = function(f, callback) {\n  // Text or data?\n  // This should likely be improved\n  if (/^text\\//.test(f.type) || f.type === 'application/json') {\n    p5.File._createLoader(f, callback).readAsText(f);\n  } else if (!/^(video|audio)\\//.test(f.type)) {\n    p5.File._createLoader(f, callback).readAsDataURL(f);\n  } else {\n    var file = new p5.File(f);\n    file.data = URL.createObjectURL(f);\n    callback(file);\n  }\n};\n\nexport default p5;\n","/**\n * @module Events\n * @submodule Acceleration\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\n\n/**\n * The system variable deviceOrientation always contains the orientation of\n * the device. The value of this variable will either be set 'landscape'\n * or 'portrait'. If no data is available it will be set to 'undefined'.\n * either LANDSCAPE or PORTRAIT.\n *\n * @property {Constant} deviceOrientation\n * @readOnly\n */\np5.prototype.deviceOrientation =\n  window.innerWidth / window.innerHeight > 1.0 ? 'landscape' : 'portrait';\n\n/**\n * The system variable accelerationX always contains the acceleration of the\n * device along the x axis. Value is represented as meters per second squared.\n *\n * @property {Number} accelerationX\n * @readOnly\n * @example\n * <div>\n * <code>\n * // Move a touchscreen device to register\n * // acceleration changes.\n * function draw() {\n *   background(220, 50);\n *   fill('magenta');\n *   ellipse(width / 2, height / 2, accelerationX);\n * }\n * </code>\n * </div>\n * @alt\n * Magnitude of device acceleration is displayed as ellipse size\n */\np5.prototype.accelerationX = 0;\n\n/**\n * The system variable accelerationY always contains the acceleration of the\n * device along the y axis. Value is represented as meters per second squared.\n *\n * @property {Number} accelerationY\n * @readOnly\n * @example\n * <div>\n * <code>\n * // Move a touchscreen device to register\n * // acceleration changes.\n * function draw() {\n *   background(220, 50);\n *   fill('magenta');\n *   ellipse(width / 2, height / 2, accelerationY);\n * }\n * </code>\n * </div>\n * @alt\n * Magnitude of device acceleration is displayed as ellipse size\n */\np5.prototype.accelerationY = 0;\n\n/**\n * The system variable accelerationZ always contains the acceleration of the\n * device along the z axis. Value is represented as meters per second squared.\n *\n * @property {Number} accelerationZ\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * // Move a touchscreen device to register\n * // acceleration changes.\n * function draw() {\n *   background(220, 50);\n *   fill('magenta');\n *   ellipse(width / 2, height / 2, accelerationZ);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Magnitude of device acceleration is displayed as ellipse size\n */\np5.prototype.accelerationZ = 0;\n\n/**\n * The system variable pAccelerationX always contains the acceleration of the\n * device along the x axis in the frame previous to the current frame. Value\n * is represented as meters per second squared.\n *\n * @property {Number} pAccelerationX\n * @readOnly\n */\np5.prototype.pAccelerationX = 0;\n\n/**\n * The system variable pAccelerationY always contains the acceleration of the\n * device along the y axis in the frame previous to the current frame. Value\n * is represented as meters per second squared.\n *\n * @property {Number} pAccelerationY\n * @readOnly\n */\np5.prototype.pAccelerationY = 0;\n\n/**\n * The system variable pAccelerationZ always contains the acceleration of the\n * device along the z axis in the frame previous to the current frame. Value\n * is represented as meters per second squared.\n *\n * @property {Number} pAccelerationZ\n * @readOnly\n */\np5.prototype.pAccelerationZ = 0;\n\n/**\n * _updatePAccelerations updates the pAcceleration values\n *\n * @private\n */\np5.prototype._updatePAccelerations = function() {\n  this._setProperty('pAccelerationX', this.accelerationX);\n  this._setProperty('pAccelerationY', this.accelerationY);\n  this._setProperty('pAccelerationZ', this.accelerationZ);\n};\n\n/**\n * The system variable rotationX always contains the rotation of the\n * device along the x axis. If the sketch <a href=\"#/p5/angleMode\">\n * angleMode()</a> is set to DEGREES, the value will be -180 to 180. If\n * it is set to RADIANS, the value will be -PI to PI.\n * <br><br>\n * Note: The order the rotations are called is important, ie. if used\n * together, it must be called in the order Z-X-Y or there might be\n * unexpected behaviour.\n *\n * @property {Number} rotationX\n * @readOnly\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw() {\n *   background(200);\n *   //rotateZ(radians(rotationZ));\n *   rotateX(radians(rotationX));\n *   //rotateY(radians(rotationY));\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n * @alt\n * red horizontal line right, green vertical line bottom. black background.\n */\np5.prototype.rotationX = 0;\n\n/**\n * The system variable rotationY always contains the rotation of the\n * device along the y axis. If the sketch <a href=\"#/p5/angleMode\">\n * angleMode()</a> is set to DEGREES, the value will be -90 to 90. If\n * it is set to RADIANS, the value will be -PI/2 to PI/2.\n * <br><br>\n * Note: The order the rotations are called is important, ie. if used\n * together, it must be called in the order Z-X-Y or there might be\n * unexpected behaviour.\n *\n * @property {Number} rotationY\n * @readOnly\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw() {\n *   background(200);\n *   //rotateZ(radians(rotationZ));\n *   //rotateX(radians(rotationX));\n *   rotateY(radians(rotationY));\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n * @alt\n * red horizontal line right, green vertical line bottom. black background.\n */\np5.prototype.rotationY = 0;\n\n/**\n * The system variable rotationZ always contains the rotation of the\n * device along the z axis. If the sketch <a href=\"#/p5/angleMode\">\n * angleMode()</a> is set to DEGREES, the value will be 0 to 360. If\n * it is set to RADIANS, the value will be 0 to 2*PI.\n * <br><br>\n * Unlike rotationX and rotationY, this variable is available for devices\n * with a built-in compass only.\n * <br><br>\n * Note: The order the rotations are called is important, ie. if used\n * together, it must be called in the order Z-X-Y or there might be\n * unexpected behaviour.\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw() {\n *   background(200);\n *   rotateZ(radians(rotationZ));\n *   //rotateX(radians(rotationX));\n *   //rotateY(radians(rotationY));\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n *\n * @property {Number} rotationZ\n * @readOnly\n *\n * @alt\n * red horizontal line right, green vertical line bottom. black background.\n */\np5.prototype.rotationZ = 0;\n\n/**\n * The system variable pRotationX always contains the rotation of the\n * device along the x axis in the frame previous to the current frame.\n * If the sketch <a href=\"#/p5/angleMode\"> angleMode()</a> is set to DEGREES,\n * the value will be -180 to 180. If it is set to RADIANS, the value will\n * be -PI to PI.\n * <br><br>\n * pRotationX can also be used with rotationX to determine the rotate\n * direction of the device along the X-axis.\n * @example\n * <div class='norender'>\n * <code>\n * // A simple if statement looking at whether\n * // rotationX - pRotationX < 0 is true or not will be\n * // sufficient for determining the rotate direction\n * // in most cases.\n *\n * // Some extra logic is needed to account for cases where\n * // the angles wrap around.\n * let rotateDirection = 'clockwise';\n *\n * // Simple range conversion to make things simpler.\n * // This is not absolutely necessary but the logic\n * // will be different in that case.\n *\n * let rX = rotationX + 180;\n * let pRX = pRotationX + 180;\n *\n * if ((rX - pRX > 0 && rX - pRX < 270) || rX - pRX < -270) {\n *   rotateDirection = 'clockwise';\n * } else if (rX - pRX < 0 || rX - pRX > 270) {\n *   rotateDirection = 'counter-clockwise';\n * }\n *\n * print(rotateDirection);\n * </code>\n * </div>\n *\n * @alt\n * no image to display.\n *\n *\n * @property {Number} pRotationX\n * @readOnly\n */\np5.prototype.pRotationX = 0;\n\n/**\n * The system variable pRotationY always contains the rotation of the\n * device along the y axis in the frame previous to the current frame.\n * If the sketch <a href=\"#/p5/angleMode\"> angleMode()</a> is set to DEGREES,\n * the value will be -90 to 90. If it is set to RADIANS, the value will\n * be -PI/2 to PI/2.\n * <br><br>\n * pRotationY can also be used with rotationY to determine the rotate\n * direction of the device along the Y-axis.\n * @example\n * <div class='norender'>\n * <code>\n * // A simple if statement looking at whether\n * // rotationY - pRotationY < 0 is true or not will be\n * // sufficient for determining the rotate direction\n * // in most cases.\n *\n * // Some extra logic is needed to account for cases where\n * // the angles wrap around.\n * let rotateDirection = 'clockwise';\n *\n * // Simple range conversion to make things simpler.\n * // This is not absolutely necessary but the logic\n * // will be different in that case.\n *\n * let rY = rotationY + 180;\n * let pRY = pRotationY + 180;\n *\n * if ((rY - pRY > 0 && rY - pRY < 270) || rY - pRY < -270) {\n *   rotateDirection = 'clockwise';\n * } else if (rY - pRY < 0 || rY - pRY > 270) {\n *   rotateDirection = 'counter-clockwise';\n * }\n * print(rotateDirection);\n * </code>\n * </div>\n *\n * @alt\n * no image to display.\n *\n *\n * @property {Number} pRotationY\n * @readOnly\n */\np5.prototype.pRotationY = 0;\n\n/**\n * The system variable pRotationZ always contains the rotation of the\n * device along the z axis in the frame previous to the current frame.\n * If the sketch <a href=\"#/p5/angleMode\"> angleMode()</a> is set to DEGREES,\n * the value will be 0 to 360. If it is set to RADIANS, the value will\n * be 0 to 2*PI.\n * <br><br>\n * pRotationZ can also be used with rotationZ to determine the rotate\n * direction of the device along the Z-axis.\n * @example\n * <div class='norender'>\n * <code>\n * // A simple if statement looking at whether\n * // rotationZ - pRotationZ < 0 is true or not will be\n * // sufficient for determining the rotate direction\n * // in most cases.\n *\n * // Some extra logic is needed to account for cases where\n * // the angles wrap around.\n * let rotateDirection = 'clockwise';\n *\n * if (\n *   (rotationZ - pRotationZ > 0 && rotationZ - pRotationZ < 270) ||\n *   rotationZ - pRotationZ < -270\n * ) {\n *   rotateDirection = 'clockwise';\n * } else if (rotationZ - pRotationZ < 0 || rotationZ - pRotationZ > 270) {\n *   rotateDirection = 'counter-clockwise';\n * }\n * print(rotateDirection);\n * </code>\n * </div>\n *\n * @alt\n * no image to display.\n *\n *\n * @property {Number} pRotationZ\n * @readOnly\n */\np5.prototype.pRotationZ = 0;\n\nlet startAngleX = 0;\nlet startAngleY = 0;\nlet startAngleZ = 0;\n\nlet rotateDirectionX = 'clockwise';\nlet rotateDirectionY = 'clockwise';\nlet rotateDirectionZ = 'clockwise';\n\np5.prototype.pRotateDirectionX = undefined;\np5.prototype.pRotateDirectionY = undefined;\np5.prototype.pRotateDirectionZ = undefined;\n\np5.prototype._updatePRotations = function() {\n  this._setProperty('pRotationX', this.rotationX);\n  this._setProperty('pRotationY', this.rotationY);\n  this._setProperty('pRotationZ', this.rotationZ);\n};\n\n/**\n * When a device is rotated, the axis that triggers the <a href=\"#/p5/deviceTurned\">deviceTurned()</a>\n * method is stored in the turnAxis variable. The turnAxis variable is only defined within\n * the scope of deviceTurned().\n * @property {String} turnAxis\n * @readOnly\n * @example\n * <div>\n * <code>\n * // Run this example on a mobile device\n * // Rotate the device by 90 degrees in the\n * // X-axis to change the value.\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceTurned() {\n *   if (turnAxis === 'X') {\n *     if (value === 0) {\n *       value = 255;\n *     } else if (value === 255) {\n *       value = 0;\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device turns\n * 50x50 black rect in center of canvas. turns white on mobile when x-axis turns\n */\np5.prototype.turnAxis = undefined;\n\nlet move_threshold = 0.5;\nlet shake_threshold = 30;\n\n/**\n * The <a href=\"#/p5/setMoveThreshold\">setMoveThreshold()</a> function is used to set the movement threshold for\n * the <a href=\"#/p5/deviceMoved\">deviceMoved()</a> function. The default threshold is set to 0.5.\n *\n * @method setMoveThreshold\n * @param {number} value The threshold value\n * @example\n * <div class=\"norender\">\n * <code>\n * // Run this example on a mobile device\n * // You will need to move the device incrementally further\n * // the closer the square's color gets to white in order to change the value.\n *\n * let value = 0;\n * let threshold = 0.5;\n * function setup() {\n *   setMoveThreshold(threshold);\n * }\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceMoved() {\n *   value = value + 5;\n *   threshold = threshold + 0.1;\n *   if (value > 255) {\n *     value = 0;\n *     threshold = 30;\n *   }\n *   setMoveThreshold(threshold);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device moves\n */\n\np5.prototype.setMoveThreshold = function(val) {\n  p5._validateParameters('setMoveThreshold', arguments);\n  move_threshold = val;\n};\n\n/**\n * The <a href=\"#/p5/setShakeThreshold\">setShakeThreshold()</a> function is used to set the movement threshold for\n * the <a href=\"#/p5/deviceShaken\">deviceShaken()</a> function. The default threshold is set to 30.\n *\n * @method setShakeThreshold\n * @param {number} value The threshold value\n * @example\n * <div class=\"norender\">\n * <code>\n * // Run this example on a mobile device\n * // You will need to shake the device more firmly\n * // the closer the box's fill gets to white in order to change the value.\n *\n * let value = 0;\n * let threshold = 30;\n * function setup() {\n *   setShakeThreshold(threshold);\n * }\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceMoved() {\n *   value = value + 5;\n *   threshold = threshold + 5;\n *   if (value > 255) {\n *     value = 0;\n *     threshold = 30;\n *   }\n *   setShakeThreshold(threshold);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device\n * is being shaked\n */\n\np5.prototype.setShakeThreshold = function(val) {\n  p5._validateParameters('setShakeThreshold', arguments);\n  shake_threshold = val;\n};\n\n/**\n * The <a href=\"#/p5/deviceMoved\">deviceMoved()</a> function is called when the device is moved by more than\n * the threshold value along X, Y or Z axis. The default threshold is set to 0.5.\n * The threshold value can be changed using <a href=\"https://p5js.org/reference/#/p5/setMoveThreshold\">setMoveThreshold()</a>.\n *\n * @method deviceMoved\n * @example\n * <div class=\"norender\">\n * <code>\n * // Run this example on a mobile device\n * // Move the device around\n * // to change the value.\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceMoved() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device moves\n *\n */\n\n/**\n * The <a href=\"#/p5/deviceTurned\">deviceTurned()</a> function is called when the device rotates by\n * more than 90 degrees continuously.\n * <br><br>\n * The axis that triggers the <a href=\"#/p5/deviceTurned\">deviceTurned()</a> method is stored in the turnAxis\n * variable. The <a href=\"#/p5/deviceTurned\">deviceTurned()</a> method can be locked to trigger on any axis:\n * X, Y or Z by comparing the turnAxis variable to 'X', 'Y' or 'Z'.\n *\n * @method deviceTurned\n * @example\n * <div class=\"norender\">\n * <code>\n * // Run this example on a mobile device\n * // Rotate the device by 90 degrees\n * // to change the value.\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceTurned() {\n *   if (value === 0) {\n *     value = 255;\n *   } else if (value === 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * // Run this example on a mobile device\n * // Rotate the device by 90 degrees in the\n * // X-axis to change the value.\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceTurned() {\n *   if (turnAxis === 'X') {\n *     if (value === 0) {\n *       value = 255;\n *     } else if (value === 255) {\n *       value = 0;\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device turns\n * 50x50 black rect in center of canvas. turns white on mobile when x-axis turns\n *\n */\n\n/**\n * The <a href=\"#/p5/deviceShaken\">deviceShaken()</a> function is called when the device total acceleration\n * changes of accelerationX and accelerationY values is more than\n * the threshold value. The default threshold is set to 30.\n * The threshold value can be changed using <a href=\"https://p5js.org/reference/#/p5/setShakeThreshold\">setShakeThreshold()</a>.\n *\n * @method deviceShaken\n * @example\n * <div class=\"norender\">\n * <code>\n * // Run this example on a mobile device\n * // Shake the device to change the value.\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceShaken() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device shakes\n *\n */\n\np5.prototype._ondeviceorientation = function(e) {\n  this._updatePRotations();\n  if (this._angleMode === constants.radians) {\n    e.beta = e.beta * (_PI / 180.0);\n    e.gamma = e.gamma * (_PI / 180.0);\n    e.alpha = e.alpha * (_PI / 180.0);\n  }\n  this._setProperty('rotationX', e.beta);\n  this._setProperty('rotationY', e.gamma);\n  this._setProperty('rotationZ', e.alpha);\n  this._handleMotion();\n};\np5.prototype._ondevicemotion = function(e) {\n  this._updatePAccelerations();\n  this._setProperty('accelerationX', e.acceleration.x * 2);\n  this._setProperty('accelerationY', e.acceleration.y * 2);\n  this._setProperty('accelerationZ', e.acceleration.z * 2);\n  this._handleMotion();\n};\np5.prototype._handleMotion = function() {\n  if (window.orientation === 90 || window.orientation === -90) {\n    this._setProperty('deviceOrientation', 'landscape');\n  } else if (window.orientation === 0) {\n    this._setProperty('deviceOrientation', 'portrait');\n  } else if (window.orientation === undefined) {\n    this._setProperty('deviceOrientation', 'undefined');\n  }\n  const deviceMoved = this.deviceMoved || window.deviceMoved;\n  if (typeof deviceMoved === 'function') {\n    if (\n      Math.abs(this.accelerationX - this.pAccelerationX) > move_threshold ||\n      Math.abs(this.accelerationY - this.pAccelerationY) > move_threshold ||\n      Math.abs(this.accelerationZ - this.pAccelerationZ) > move_threshold\n    ) {\n      deviceMoved();\n    }\n  }\n  const deviceTurned = this.deviceTurned || window.deviceTurned;\n  if (typeof deviceTurned === 'function') {\n    // The angles given by rotationX etc is from range -180 to 180.\n    // The following will convert them to 0 to 360 for ease of calculation\n    // of cases when the angles wrapped around.\n    // _startAngleX will be converted back at the end and updated.\n    const wRX = this.rotationX + 180;\n    const wPRX = this.pRotationX + 180;\n    let wSAX = startAngleX + 180;\n    if ((wRX - wPRX > 0 && wRX - wPRX < 270) || wRX - wPRX < -270) {\n      rotateDirectionX = 'clockwise';\n    } else if (wRX - wPRX < 0 || wRX - wPRX > 270) {\n      rotateDirectionX = 'counter-clockwise';\n    }\n    if (rotateDirectionX !== this.pRotateDirectionX) {\n      wSAX = wRX;\n    }\n    if (Math.abs(wRX - wSAX) > 90 && Math.abs(wRX - wSAX) < 270) {\n      wSAX = wRX;\n      this._setProperty('turnAxis', 'X');\n      deviceTurned();\n    }\n    this.pRotateDirectionX = rotateDirectionX;\n    startAngleX = wSAX - 180;\n\n    // Y-axis is identical to X-axis except for changing some names.\n    const wRY = this.rotationY + 180;\n    const wPRY = this.pRotationY + 180;\n    let wSAY = startAngleY + 180;\n    if ((wRY - wPRY > 0 && wRY - wPRY < 270) || wRY - wPRY < -270) {\n      rotateDirectionY = 'clockwise';\n    } else if (wRY - wPRY < 0 || wRY - this.pRotationY > 270) {\n      rotateDirectionY = 'counter-clockwise';\n    }\n    if (rotateDirectionY !== this.pRotateDirectionY) {\n      wSAY = wRY;\n    }\n    if (Math.abs(wRY - wSAY) > 90 && Math.abs(wRY - wSAY) < 270) {\n      wSAY = wRY;\n      this._setProperty('turnAxis', 'Y');\n      deviceTurned();\n    }\n    this.pRotateDirectionY = rotateDirectionY;\n    startAngleY = wSAY - 180;\n\n    // Z-axis is already in the range 0 to 360\n    // so no conversion is needed.\n    if (\n      (this.rotationZ - this.pRotationZ > 0 &&\n        this.rotationZ - this.pRotationZ < 270) ||\n      this.rotationZ - this.pRotationZ < -270\n    ) {\n      rotateDirectionZ = 'clockwise';\n    } else if (\n      this.rotationZ - this.pRotationZ < 0 ||\n      this.rotationZ - this.pRotationZ > 270\n    ) {\n      rotateDirectionZ = 'counter-clockwise';\n    }\n    if (rotateDirectionZ !== this.pRotateDirectionZ) {\n      startAngleZ = this.rotationZ;\n    }\n    if (\n      Math.abs(this.rotationZ - startAngleZ) > 90 &&\n      Math.abs(this.rotationZ - startAngleZ) < 270\n    ) {\n      startAngleZ = this.rotationZ;\n      this._setProperty('turnAxis', 'Z');\n      deviceTurned();\n    }\n    this.pRotateDirectionZ = rotateDirectionZ;\n    this._setProperty('turnAxis', undefined);\n  }\n  const deviceShaken = this.deviceShaken || window.deviceShaken;\n  if (typeof deviceShaken === 'function') {\n    let accelerationChangeX;\n    let accelerationChangeY;\n    // Add accelerationChangeZ if acceleration change on Z is needed\n    if (this.pAccelerationX !== null) {\n      accelerationChangeX = Math.abs(this.accelerationX - this.pAccelerationX);\n      accelerationChangeY = Math.abs(this.accelerationY - this.pAccelerationY);\n    }\n    if (accelerationChangeX + accelerationChangeY > shake_threshold) {\n      deviceShaken();\n    }\n  }\n};\n\nexport default p5;\n","/**\n * @module Events\n * @submodule Keyboard\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * The boolean system variable <a href=\"#/p5/keyIsPressed\">keyIsPressed</a> is true if any key is pressed\n * and false if no keys are pressed.\n *\n * @property {Boolean} keyIsPressed\n * @readOnly\n * @example\n * <div>\n * <code>\n * function draw() {\n *   if (keyIsPressed === true) {\n *     fill(0);\n *   } else {\n *     fill(255);\n *   }\n *   rect(25, 25, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 white rect that turns black on keypress.\n *\n */\np5.prototype.isKeyPressed = false;\np5.prototype.keyIsPressed = false; // khan\n\n/**\n * The system variable key always contains the value of the most recent\n * key on the keyboard that was typed. To get the proper capitalization, it\n * is best to use it within <a href=\"#/p5/keyTyped\">keyTyped()</a>. For non-ASCII keys, use the <a href=\"#/p5/keyCode\">keyCode</a>\n * variable.\n *\n * @property {String} key\n * @readOnly\n * @example\n * <div><code>\n * // Click any key to display it!\n * // (Not Guaranteed to be Case Sensitive)\n * function setup() {\n *   fill(245, 123, 158);\n *   textSize(50);\n * }\n *\n * function draw() {\n *   background(200);\n *   text(key, 33, 65); // Display last key pressed.\n * }\n * </code></div>\n *\n * @alt\n * canvas displays any key value that is pressed in pink font.\n *\n */\np5.prototype.key = '';\n\n/**\n * The variable keyCode is used to detect special keys such as BACKSPACE,\n * DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL, OPTION, ALT, UP_ARROW,\n * DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n * You can also check for custom keys by looking up the keyCode of any key\n * on a site like this: <a href=\"http://keycode.info/\">keycode.info</a>.\n *\n * @property {Integer} keyCode\n * @readOnly\n * @example\n * <div><code>\n * let fillVal = 126;\n * function draw() {\n *   fill(fillVal);\n *   rect(25, 25, 50, 50);\n * }\n *\n * function keyPressed() {\n *   if (keyCode === UP_ARROW) {\n *     fillVal = 255;\n *   } else if (keyCode === DOWN_ARROW) {\n *     fillVal = 0;\n *   }\n *   return false; // prevent default\n * }\n * </code></div>\n * <div><code>\n * function draw() {}\n * function keyPressed() {\n *   background('yellow');\n *   text(`${key} ${keyCode}`, 10, 40);\n *   print(key, ' ', keyCode);\n *   return false; // prevent default\n * }\n * </code></div>\n * @alt\n * Grey rect center. turns white when up arrow pressed and black when down\n * Display key pressed and its keyCode in a yellow box\n */\np5.prototype.keyCode = 0;\n\n/**\n * The <a href=\"#/p5/keyPressed\">keyPressed()</a> function is called once every time a key is pressed. The\n * keyCode for the key that was pressed is stored in the <a href=\"#/p5/keyCode\">keyCode</a> variable.\n * <br><br>\n * For non-ASCII keys, use the keyCode variable. You can check if the keyCode\n * equals BACKSPACE, DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL,\n * OPTION, ALT, UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n * <br><br>\n * For ASCII keys, the key that was pressed is stored in the key variable. However, it\n * does not distinguish between uppercase and lowercase. For this reason, it\n * is recommended to use <a href=\"#/p5/keyTyped\">keyTyped()</a> to read the key variable, in which the\n * case of the variable will be distinguished.\n * <br><br>\n * Because of how operating systems handle key repeats, holding down a key\n * may cause multiple calls to <a href=\"#/p5/keyTyped\">keyTyped()</a> (and <a href=\"#/p5/keyReleased\">keyReleased()</a> as well). The\n * rate of repeat is set by the operating system and how each computer is\n * configured.<br><br>\n * Browsers may have different default\n * behaviors attached to various key events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method keyPressed\n * @example\n * <div>\n * <code>\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyPressed() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyPressed() {\n *   if (keyCode === LEFT_ARROW) {\n *     value = 255;\n *   } else if (keyCode === RIGHT_ARROW) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n * <div class=\"norender\">\n * <code>\n * function keyPressed() {\n *   // Do something\n *   return false; // prevent any default behaviour\n * }\n * </code>\n * </div>\n *\n * @alt\n * black rect center. turns white when key pressed and black when released\n * black rect center. turns white when left arrow pressed and black when right.\n *\n */\np5.prototype._onkeydown = function(e) {\n  if (this._downKeys[e.which]) {\n    // prevent multiple firings\n    return;\n  }\n  this._setProperty('isKeyPressed', true);\n  this._setProperty('keyIsPressed', true);\n  this._setProperty('keyCode', e.which);\n  this._downKeys[e.which] = true;\n  this._setProperty('key', e.key || String.fromCharCode(e.which) || e.which);\n  const keyPressed = this.keyPressed || window.keyPressed;\n  if (typeof keyPressed === 'function' && !e.charCode) {\n    const executeDefault = keyPressed(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n/**\n * The <a href=\"#/p5/keyReleased\">keyReleased()</a> function is called once every time a key is released.\n * See <a href=\"#/p5/key\">key</a> and <a href=\"#/p5/keyCode\">keyCode</a> for more information.<br><br>\n * Browsers may have different default\n * behaviors attached to various key events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method keyReleased\n * @example\n * <div>\n * <code>\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyReleased() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n *   return false; // prevent any default behavior\n * }\n * </code>\n * </div>\n *\n * @alt\n * black rect center. turns white when key pressed and black when pressed again\n *\n */\np5.prototype._onkeyup = function(e) {\n  const keyReleased = this.keyReleased || window.keyReleased;\n  this._downKeys[e.which] = false;\n\n  if (!this._areDownKeys()) {\n    this._setProperty('isKeyPressed', false);\n    this._setProperty('keyIsPressed', false);\n  }\n\n  this._setProperty('_lastKeyCodeTyped', null);\n\n  this._setProperty('key', e.key || String.fromCharCode(e.which) || e.which);\n  this._setProperty('keyCode', e.which);\n  if (typeof keyReleased === 'function') {\n    const executeDefault = keyReleased(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/keyTyped\">keyTyped()</a> function is called once every time a key is pressed, but\n * action keys such as Backspace, Delete, Ctrl, Shift, and Alt are ignored. If you are trying to detect\n * a keyCode for one of these keys, use the <a href=\"#/p5/keyPressed\">keyPressed()</a> function instead.\n * The most recent key typed will be stored in the key variable.\n * <br><br>\n * Because of how operating systems handle key repeats, holding down a key\n * will cause multiple calls to <a href=\"#/p5/keyTyped\">keyTyped()</a> (and <a href=\"#/p5/keyReleased\">keyReleased()</a> as well). The\n * rate of repeat is set by the operating system and how each computer is\n * configured.<br><br>\n * Browsers may have different default behaviors attached to various key\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method keyTyped\n * @example\n * <div>\n * <code>\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyTyped() {\n *   if (key === 'a') {\n *     value = 255;\n *   } else if (key === 'b') {\n *     value = 0;\n *   }\n *   // uncomment to prevent any default behavior\n *   // return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black rect center. turns white when 'a' key typed and black when 'b' pressed\n *\n */\np5.prototype._onkeypress = function(e) {\n  if (e.which === this._lastKeyCodeTyped) {\n    // prevent multiple firings\n    return;\n  }\n  this._setProperty('_lastKeyCodeTyped', e.which); // track last keyCode\n  this._setProperty('key', String.fromCharCode(e.which));\n  const keyTyped = this.keyTyped || window.keyTyped;\n  if (typeof keyTyped === 'function') {\n    const executeDefault = keyTyped(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n/**\n * The onblur function is called when the user is no longer focused\n * on the p5 element. Because the keyup events will not fire if the user is\n * not focused on the element we must assume all keys currently down have\n * been released.\n */\np5.prototype._onblur = function(e) {\n  this._downKeys = {};\n};\n\n/**\n * The <a href=\"#/p5/keyIsDown\">keyIsDown()</a> function checks if the key is currently down, i.e. pressed.\n * It can be used if you have an object that moves, and you want several keys\n * to be able to affect its behaviour simultaneously, such as moving a\n * sprite diagonally. You can put in any number representing the keyCode of\n * the key, or use any of the variable <a href=\"#/p5/keyCode\">keyCode</a> names listed\n * <a href=\"http://p5js.org/reference/#p5/keyCode\">here</a>.\n *\n * @method keyIsDown\n * @param {Number}          code The key to check for.\n * @return {Boolean}        whether key is down or not\n * @example\n * <div><code>\n * let x = 100;\n * let y = 100;\n *\n * function setup() {\n *   createCanvas(512, 512);\n *   fill(255, 0, 0);\n * }\n *\n * function draw() {\n *   if (keyIsDown(LEFT_ARROW)) {\n *     x -= 5;\n *   }\n *\n *   if (keyIsDown(RIGHT_ARROW)) {\n *     x += 5;\n *   }\n *\n *   if (keyIsDown(UP_ARROW)) {\n *     y -= 5;\n *   }\n *\n *   if (keyIsDown(DOWN_ARROW)) {\n *     y += 5;\n *   }\n *\n *   clear();\n *   ellipse(x, y, 50, 50);\n * }\n * </code></div>\n *\n * <div><code>\n * let diameter = 50;\n *\n * function setup() {\n *   createCanvas(512, 512);\n * }\n *\n * function draw() {\n *   // 107 and 187 are keyCodes for \"+\"\n *   if (keyIsDown(107) || keyIsDown(187)) {\n *     diameter += 1;\n *   }\n *\n *   // 109 and 189 are keyCodes for \"-\"\n *   if (keyIsDown(109) || keyIsDown(189)) {\n *     diameter -= 1;\n *   }\n *\n *   clear();\n *   fill(255, 0, 0);\n *   ellipse(50, 50, diameter, diameter);\n * }\n * </code></div>\n *\n * @alt\n * 50x50 red ellipse moves left, right, up and down with arrow presses.\n * 50x50 red ellipse gets bigger or smaller when + or - are pressed.\n *\n */\np5.prototype.keyIsDown = function(code) {\n  p5._validateParameters('keyIsDown', arguments);\n  return this._downKeys[code] || false;\n};\n\n/**\n * The _areDownKeys function returns a boolean true if any keys pressed\n * and a false if no keys are currently pressed.\n\n * Helps avoid instances where multiple keys are pressed simultaneously and\n * releasing a single key will then switch the\n * keyIsPressed property to true.\n * @private\n**/\np5.prototype._areDownKeys = function() {\n  for (const key in this._downKeys) {\n    if (this._downKeys.hasOwnProperty(key) && this._downKeys[key] === true) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default p5;\n","/**\n * @module Events\n * @submodule Mouse\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\n\n/**\n *\n * The variable movedX contains the horizontal movement of the mouse since the last frame\n * @property {Number} movedX\n * @readOnly\n * @example\n * <div class=\"notest\">\n * <code>\n * let x = 50;\n * function setup() {\n *   rectMode(CENTER);\n * }\n *\n * function draw() {\n *   if (x > 48) {\n *     x -= 2;\n *   } else if (x < 48) {\n *     x += 2;\n *   }\n *   x += floor(movedX / 5);\n *   background(237, 34, 93);\n *   fill(0);\n *   rect(x, 50, 50, 50);\n * }\n * </code>\n * </div>\n * @alt\n * box moves left and right according to mouse movement then slowly back towards the center\n *\n */\np5.prototype.movedX = 0;\n\n/**\n * The variable movedY contains the vertical movement of the mouse since the last frame\n * @property {Number} movedY\n * @readOnly\n * @example\n * <div class=\"notest\">\n * <code>\n * let y = 50;\n * function setup() {\n *   rectMode(CENTER);\n * }\n *\n * function draw() {\n *   if (y > 48) {\n *     y -= 2;\n *   } else if (y < 48) {\n *     y += 2;\n *   }\n *   y += floor(movedY / 5);\n *   background(237, 34, 93);\n *   fill(0);\n *   rect(y, 50, 50, 50);\n * }\n * </code>\n * </div>\n * @alt\n * box moves up and down according to mouse movement then slowly back towards the center\n *\n */\np5.prototype.movedY = 0;\n/*\n * This is a flag which is false until the first time\n * we receive a mouse event. The pmouseX and pmouseY\n * values will match the mouseX and mouseY values until\n * this interaction takes place.\n */\np5.prototype._hasMouseInteracted = false;\n\n/**\n * The system variable mouseX always contains the current horizontal\n * position of the mouse, relative to (0, 0) of the canvas. The value at\n * the top-left corner is (0, 0) for 2-D and (-width/2, -height/2) for WebGL.\n * If touch is used instead of mouse input, mouseX will hold the x value\n * of the most recent touch point.\n *\n * @property {Number} mouseX\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * // Move the mouse across the canvas\n * function draw() {\n *   background(244, 248, 252);\n *   line(mouseX, 0, mouseX, 100);\n * }\n * </code>\n * </div>\n *\n * @alt\n * horizontal black line moves left and right with mouse x-position\n *\n */\np5.prototype.mouseX = 0;\n\n/**\n * The system variable mouseY always contains the current vertical\n * position of the mouse, relative to (0, 0) of the canvas. The value at\n * the top-left corner is (0, 0) for 2-D and (-width/2, -height/2) for WebGL.\n * If touch is used instead of mouse input, mouseY will hold the y value\n * of the most recent touch point.\n *\n * @property {Number} mouseY\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * // Move the mouse across the canvas\n * function draw() {\n *   background(244, 248, 252);\n *   line(0, mouseY, 100, mouseY);\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical black line moves up and down with mouse y-position\n *\n */\np5.prototype.mouseY = 0;\n\n/**\n * The system variable pmouseX always contains the horizontal position of\n * the mouse or finger in the frame previous to the current frame, relative to\n * (0, 0) of the canvas. The value at the top-left corner is (0, 0) for 2-D and\n * (-width/2, -height/2) for WebGL. Note: pmouseX will be reset to the current mouseX\n * value at the start of each touch event.\n *\n * @property {Number} pmouseX\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * // Move the mouse across the canvas to leave a trail\n * function setup() {\n *   //slow down the frameRate to make it more visible\n *   frameRate(10);\n * }\n *\n * function draw() {\n *   background(244, 248, 252);\n *   line(mouseX, mouseY, pmouseX, pmouseY);\n *   print(pmouseX + ' -> ' + mouseX);\n * }\n * </code>\n * </div>\n *\n * @alt\n * line trail is created from cursor movements. faster movement make longer line.\n *\n */\np5.prototype.pmouseX = 0;\n\n/**\n * The system variable pmouseY always contains the vertical position of\n * the mouse or finger in the frame previous to the current frame, relative to\n * (0, 0) of the canvas. The value at the top-left corner is (0, 0) for 2-D and\n * (-width/2, -height/2) for WebGL. Note: pmouseY will be reset to the current mouseY\n * value at the start of each touch event.\n *\n * @property {Number} pmouseY\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *   //draw a square only if the mouse is not moving\n *   if (mouseY === pmouseY && mouseX === pmouseX) {\n *     rect(20, 20, 60, 60);\n *   }\n *\n *   print(pmouseY + ' -> ' + mouseY);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60x60 black rect center, fuchsia background. rect flickers on mouse movement\n *\n */\np5.prototype.pmouseY = 0;\n\n/**\n * The system variable winMouseX always contains the current horizontal\n * position of the mouse, relative to (0, 0) of the window.\n *\n * @property {Number} winMouseX\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * let myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n *   let body = document.getElementsByTagName('body')[0];\n *   myCanvas.parent(body);\n * }\n *\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *\n *   //move the canvas to the horizontal mouse position\n *   //relative to the window\n *   myCanvas.position(winMouseX + 1, windowHeight / 2);\n *\n *   //the y of the square is relative to the canvas\n *   rect(20, mouseY, 60, 60);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60x60 black rect y moves with mouse y and fuchsia canvas moves with mouse x\n *\n */\np5.prototype.winMouseX = 0;\n\n/**\n * The system variable winMouseY always contains the current vertical\n * position of the mouse, relative to (0, 0) of the window.\n *\n * @property {Number} winMouseY\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * let myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n *   let body = document.getElementsByTagName('body')[0];\n *   myCanvas.parent(body);\n * }\n *\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *\n *   //move the canvas to the vertical mouse position\n *   //relative to the window\n *   myCanvas.position(windowWidth / 2, winMouseY + 1);\n *\n *   //the x of the square is relative to the canvas\n *   rect(mouseX, 20, 60, 60);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60x60 black rect x moves with mouse x and fuchsia canvas y moves with mouse y\n *\n */\np5.prototype.winMouseY = 0;\n\n/**\n * The system variable pwinMouseX always contains the horizontal position\n * of the mouse in the frame previous to the current frame, relative to\n * (0, 0) of the window. Note: pwinMouseX will be reset to the current winMouseX\n * value at the start of each touch event.\n *\n * @property {Number} pwinMouseX\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * let myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n *   noStroke();\n *   fill(237, 34, 93);\n * }\n *\n * function draw() {\n *   clear();\n *   //the difference between previous and\n *   //current x position is the horizontal mouse speed\n *   let speed = abs(winMouseX - pwinMouseX);\n *   //change the size of the circle\n *   //according to the horizontal speed\n *   ellipse(50, 50, 10 + speed * 5, 10 + speed * 5);\n *   //move the canvas to the mouse position\n *   myCanvas.position(winMouseX + 1, winMouseY + 1);\n * }\n * </code>\n * </div>\n *\n * @alt\n * fuchsia ellipse moves with mouse x and y. Grows and shrinks with mouse speed\n *\n */\np5.prototype.pwinMouseX = 0;\n\n/**\n * The system variable pwinMouseY always contains the vertical position of\n * the mouse in the frame previous to the current frame, relative to (0, 0)\n * of the window. Note: pwinMouseY will be reset to the current winMouseY\n * value at the start of each touch event.\n *\n * @property {Number} pwinMouseY\n * @readOnly\n *\n *\n * @example\n * <div>\n * <code>\n * let myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n *   noStroke();\n *   fill(237, 34, 93);\n * }\n *\n * function draw() {\n *   clear();\n *   //the difference between previous and\n *   //current y position is the vertical mouse speed\n *   let speed = abs(winMouseY - pwinMouseY);\n *   //change the size of the circle\n *   //according to the vertical speed\n *   ellipse(50, 50, 10 + speed * 5, 10 + speed * 5);\n *   //move the canvas to the mouse position\n *   myCanvas.position(winMouseX + 1, winMouseY + 1);\n * }\n * </code>\n * </div>\n *\n * @alt\n * fuchsia ellipse moves with mouse x and y. Grows and shrinks with mouse speed\n *\n */\np5.prototype.pwinMouseY = 0;\n\n/**\n * Processing automatically tracks if the mouse button is pressed and which\n * button is pressed. The value of the system variable mouseButton is either\n * LEFT, RIGHT, or CENTER depending on which button was pressed last.\n * Warning: different browsers may track mouseButton differently.\n *\n * @property {Constant} mouseButton\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *\n *   if (mouseIsPressed) {\n *     if (mouseButton === LEFT) {\n *       ellipse(50, 50, 50, 50);\n *     }\n *     if (mouseButton === RIGHT) {\n *       rect(25, 25, 50, 50);\n *     }\n *     if (mouseButton === CENTER) {\n *       triangle(23, 75, 50, 20, 78, 75);\n *     }\n *   }\n *\n *   print(mouseButton);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black ellipse appears on center of fuchsia canvas on mouse click/press.\n *\n */\np5.prototype.mouseButton = 0;\n\n/**\n * The boolean system variable mouseIsPressed is true if the mouse is pressed\n * and false if not.\n *\n * @property {Boolean} mouseIsPressed\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *\n *   if (mouseIsPressed) {\n *     ellipse(50, 50, 50, 50);\n *   } else {\n *     rect(25, 25, 50, 50);\n *   }\n *\n *   print(mouseIsPressed);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect becomes ellipse with mouse click/press. fuchsia background.\n *\n */\np5.prototype.mouseIsPressed = false;\n\np5.prototype._updateNextMouseCoords = function(e) {\n  if (this._curElement !== null && (!e.touches || e.touches.length > 0)) {\n    const mousePos = getMousePos(\n      this._curElement.elt,\n      this.width,\n      this.height,\n      e\n    );\n    this._setProperty('movedX', e.movementX);\n    this._setProperty('movedY', e.movementY);\n    this._setProperty('mouseX', mousePos.x);\n    this._setProperty('mouseY', mousePos.y);\n    this._setProperty('winMouseX', mousePos.winX);\n    this._setProperty('winMouseY', mousePos.winY);\n  }\n  if (!this._hasMouseInteracted) {\n    // For first draw, make previous and next equal\n    this._updateMouseCoords();\n    this._setProperty('_hasMouseInteracted', true);\n  }\n};\n\np5.prototype._updateMouseCoords = function() {\n  this._setProperty('pmouseX', this.mouseX);\n  this._setProperty('pmouseY', this.mouseY);\n  this._setProperty('pwinMouseX', this.winMouseX);\n  this._setProperty('pwinMouseY', this.winMouseY);\n\n  this._setProperty('_pmouseWheelDeltaY', this._mouseWheelDeltaY);\n};\n\nfunction getMousePos(canvas, w, h, evt) {\n  if (evt && !evt.clientX) {\n    // use touches if touch and not mouse\n    if (evt.touches) {\n      evt = evt.touches[0];\n    } else if (evt.changedTouches) {\n      evt = evt.changedTouches[0];\n    }\n  }\n  const rect = canvas.getBoundingClientRect();\n  const sx = canvas.scrollWidth / w || 1;\n  const sy = canvas.scrollHeight / h || 1;\n  return {\n    x: (evt.clientX - rect.left) / sx,\n    y: (evt.clientY - rect.top) / sy,\n    winX: evt.clientX,\n    winY: evt.clientY,\n    id: evt.identifier\n  };\n}\n\np5.prototype._setMouseButton = function(e) {\n  if (e.button === 1) {\n    this._setProperty('mouseButton', constants.CENTER);\n  } else if (e.button === 2) {\n    this._setProperty('mouseButton', constants.RIGHT);\n  } else {\n    this._setProperty('mouseButton', constants.LEFT);\n  }\n};\n\n/**\n * The <a href=\"#/p5/mouseMoved\">mouseMoved()</a> function is called every time the mouse moves and a mouse\n * button is not pressed.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mouseMoved\n * @param  {Object} [event] optional MouseEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Move the mouse across the page\n * // to change its value\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseMoved() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseMoved() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a MouseEvent object\n * // as a callback argument\n * function mouseMoved(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect becomes lighter with mouse movements until white then resets\n * no image displayed\n *\n */\n\n/**\n * The <a href=\"#/p5/mouseDragged\">mouseDragged()</a> function is called once every time the mouse moves and\n * a mouse button is pressed. If no <a href=\"#/p5/mouseDragged\">mouseDragged()</a> function is defined, the\n * <a href=\"#/p5/touchMoved\">touchMoved()</a> function will be called instead if it is defined.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mouseDragged\n * @param  {Object} [event] optional MouseEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Drag the mouse across the page\n * // to change its value\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseDragged() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseDragged() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a MouseEvent object\n * // as a callback argument\n * function mouseDragged(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns lighter with mouse click and drag until white, resets\n * no image displayed\n *\n */\np5.prototype._onmousemove = function(e) {\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  this._updateNextMouseCoords(e);\n  if (!this.mouseIsPressed) {\n    if (typeof context.mouseMoved === 'function') {\n      executeDefault = context.mouseMoved(e);\n      if (executeDefault === false) {\n        e.preventDefault();\n      }\n    }\n  } else {\n    if (typeof context.mouseDragged === 'function') {\n      executeDefault = context.mouseDragged(e);\n      if (executeDefault === false) {\n        e.preventDefault();\n      }\n    } else if (typeof context.touchMoved === 'function') {\n      executeDefault = context.touchMoved(e);\n      if (executeDefault === false) {\n        e.preventDefault();\n      }\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/mousePressed\">mousePressed()</a> function is called once after every time a mouse button\n * is pressed. The mouseButton variable (see the related reference entry)\n * can be used to determine which button has been pressed. If no\n * <a href=\"#/p5/mousePressed\">mousePressed()</a> function is defined, the <a href=\"#/p5/touchStarted\">touchStarted()</a> function will be\n * called instead if it is defined.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mousePressed\n * @param  {Object} [event] optional MouseEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mousePressed() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mousePressed() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a MouseEvent object\n * // as a callback argument\n * function mousePressed(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse click/press.\n * no image displayed\n *\n */\np5.prototype._onmousedown = function(e) {\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  this._setProperty('mouseIsPressed', true);\n  this._setMouseButton(e);\n  this._updateNextMouseCoords(e);\n\n  if (typeof context.mousePressed === 'function') {\n    executeDefault = context.mousePressed(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n    // only safari needs this manual fallback for consistency\n  } else if (\n    navigator.userAgent.toLowerCase().includes('safari') &&\n    typeof context.touchStarted === 'function'\n  ) {\n    executeDefault = context.touchStarted(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/mouseReleased\">mouseReleased()</a> function is called every time a mouse button is\n * released. If no <a href=\"#/p5/mouseReleased\">mouseReleased()</a> function is defined, the <a href=\"#/p5/touchEnded\">touchEnded()</a>\n * function will be called instead if it is defined.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n *\n * @method mouseReleased\n * @param  {Object} [event] optional MouseEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n * // after the mouse has been clicked\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseReleased() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseReleased() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a MouseEvent object\n * // as a callback argument\n * function mouseReleased(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse click/press.\n * no image displayed\n *\n */\np5.prototype._onmouseup = function(e) {\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  this._setProperty('mouseIsPressed', false);\n  if (typeof context.mouseReleased === 'function') {\n    executeDefault = context.mouseReleased(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.touchEnded === 'function') {\n    executeDefault = context.touchEnded(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\np5.prototype._ondragend = p5.prototype._onmouseup;\np5.prototype._ondragover = p5.prototype._onmousemove;\n\n/**\n * The <a href=\"#/p5/mouseClicked\">mouseClicked()</a> function is called once after a mouse button has been\n * pressed and then released.<br><br>\n * Browsers handle clicks differently, so this function is only guaranteed to be\n * run when the left mouse button is clicked. To handle other mouse buttons\n * being pressed or released, see <a href=\"#/p5/mousePressed\">mousePressed()</a> or <a href=\"#/p5/mouseReleased\">mouseReleased()</a>.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mouseClicked\n * @param  {Object} [event] optional MouseEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n * // after the mouse has been clicked\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n *\n * function mouseClicked() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseClicked() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a MouseEvent object\n * // as a callback argument\n * function mouseClicked(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse click/press.\n * no image displayed\n *\n */\np5.prototype._onclick = function(e) {\n  const context = this._isGlobal ? window : this;\n  if (typeof context.mouseClicked === 'function') {\n    const executeDefault = context.mouseClicked(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/doubleClicked\">doubleClicked()</a> function is executed every time a event\n * listener has detected a dblclick event which is a part of the\n * DOM L3 specification. The doubleClicked event is fired when a\n * pointing device button (usually a mouse's primary button)\n * is clicked twice on a single element. For more info on the\n * dblclick event refer to mozilla's documentation here:\n * https://developer.mozilla.org/en-US/docs/Web/Events/dblclick\n *\n * @method doubleClicked\n * @param  {Object} [event] optional MouseEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n * // after the mouse has been double clicked\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n *\n * function doubleClicked() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function doubleClicked() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a MouseEvent object\n * // as a callback argument\n * function doubleClicked(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse doubleClick/press.\n * no image displayed\n */\n\np5.prototype._ondblclick = function(e) {\n  const context = this._isGlobal ? window : this;\n  if (typeof context.doubleClicked === 'function') {\n    const executeDefault = context.doubleClicked(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * For use with WebGL orbitControl.\n * @property {Number} _mouseWheelDeltaY\n * @readOnly\n * @private\n */\np5.prototype._mouseWheelDeltaY = 0;\n\n/**\n * For use with WebGL orbitControl.\n * @property {Number} _pmouseWheelDeltaY\n * @readOnly\n * @private\n */\np5.prototype._pmouseWheelDeltaY = 0;\n\n/**\n * The function <a href=\"#/p5/mouseWheel\">mouseWheel()</a> is executed every time a vertical mouse wheel\n * event is detected either triggered by an actual mouse wheel or by a\n * touchpad.<br><br>\n * The event.delta property returns the amount the mouse wheel\n * have scrolled. The values can be positive or negative depending on the\n * scroll direction (on OS X with \"natural\" scrolling enabled, the signs\n * are inverted).<br><br>\n * Browsers may have different default behaviors attached to various\n * mouse events. To prevent any default behavior for this event, add\n * \"return false\" to the end of the method.<br><br>\n * Due to the current support of the \"wheel\" event on Safari, the function\n * may only work as expected if \"return false\" is included while using Safari.\n *\n * @method mouseWheel\n * @param  {Object} [event] optional WheelEvent callback argument.\n *\n * @example\n * <div>\n * <code>\n * let pos = 25;\n *\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *   rect(25, pos, 50, 50);\n * }\n *\n * function mouseWheel(event) {\n *   print(event.delta);\n *   //move the square according to the vertical scroll amount\n *   pos += event.delta;\n *   //uncomment to block page scrolling\n *   //return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect moves up and down with vertical scroll. fuchsia background\n *\n */\np5.prototype._onwheel = function(e) {\n  const context = this._isGlobal ? window : this;\n  this._setProperty('_mouseWheelDeltaY', e.deltaY);\n  if (typeof context.mouseWheel === 'function') {\n    e.delta = e.deltaY;\n    const executeDefault = context.mouseWheel(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * <p>The function <a href=\"#/p5/requestPointerLock\">requestPointerLock()</a>\n * locks the pointer to its current position and makes it invisible.\n * Use <a href=\"#/p5/movedX\">movedX</a> and <a href=\"#/p5/movedY\">movedY</a> to get the difference the mouse was moved since\n * the last call of draw</p>\n * <p>Note that not all browsers support this feature</p>\n * <p>This enables you to create experiences that aren't limited by the mouse moving out of the screen\n * even if it is repeatedly moved into one direction. </p>\n * <p>For example a first person perspective experience</p>\n *\n * @method requestPointerLock\n * @example\n * <div class=\"notest\">\n * <code>\n * let cam;\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   requestPointerLock();\n *   cam = createCamera();\n * }\n *\n * function draw() {\n *   background(255);\n *   cam.pan(-movedX * 0.001);\n *   cam.tilt(movedY * 0.001);\n *   sphere(25);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 3D scene moves according to mouse mouse movement in a first person perspective\n *\n */\np5.prototype.requestPointerLock = function() {\n  // pointer lock object forking for cross browser\n  const canvas = this._curElement.elt;\n  canvas.requestPointerLock =\n    canvas.requestPointerLock || canvas.mozRequestPointerLock;\n  if (!canvas.requestPointerLock) {\n    console.log('requestPointerLock is not implemented in this browser');\n    return false;\n  }\n  canvas.requestPointerLock();\n  return true;\n};\n\n/**\n * <p>The function <a href=\"#/p5/exitPointerLock\">exitPointerLock()</a>\n * exits a previously triggered <a href=\"#/p5/requestPointerLock\">pointer Lock</a>\n * for example to make ui elements usable etc\n *\n * @method exitPointerLock\n * @example\n * <div class=\"notest\">\n * <code>\n * //click the canvas to lock the pointer\n * //click again to exit (otherwise escape)\n * let locked = false;\n * function draw() {\n *   background(237, 34, 93);\n * }\n * function mouseClicked() {\n *   if (!locked) {\n *     locked = true;\n *     requestPointerLock();\n *   } else {\n *     exitPointerLock();\n *     locked = false;\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * cursor gets locked / unlocked on mouse-click\n *\n */\np5.prototype.exitPointerLock = function() {\n  document.exitPointerLock();\n};\n\nexport default p5;\n","/**\n * @module Events\n * @submodule Touch\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * The system variable touches[] contains an array of the positions of all\n * current touch points, relative to (0, 0) of the canvas, and IDs identifying a\n * unique touch as it moves. Each element in the array is an object with x, y,\n * and id properties.\n *\n * The touches[] array is not supported on Safari and IE on touch-based\n * desktops (laptops).\n *\n * @property {Object[]} touches\n * @readOnly\n *\n * @example\n * <div>\n * <code>\n * // On a touchscreen device, touch\n * // the canvas using one or more fingers\n * // at the same time\n * function draw() {\n *   clear();\n *   let display = touches.length + ' touches';\n *   text(display, 5, 10);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Number of touches currently registered are displayed on the canvas\n */\np5.prototype.touches = [];\n\np5.prototype._updateTouchCoords = function(e) {\n  if (this._curElement !== null) {\n    const touches = [];\n    for (let i = 0; i < e.touches.length; i++) {\n      touches[i] = getTouchInfo(\n        this._curElement.elt,\n        this.width,\n        this.height,\n        e,\n        i\n      );\n    }\n    this._setProperty('touches', touches);\n  }\n};\n\nfunction getTouchInfo(canvas, w, h, e, i = 0) {\n  const rect = canvas.getBoundingClientRect();\n  const sx = canvas.scrollWidth / w || 1;\n  const sy = canvas.scrollHeight / h || 1;\n  const touch = e.touches[i] || e.changedTouches[i];\n  return {\n    x: (touch.clientX - rect.left) / sx,\n    y: (touch.clientY - rect.top) / sy,\n    winX: touch.clientX,\n    winY: touch.clientY,\n    id: touch.identifier\n  };\n}\n\n/**\n * The touchStarted() function is called once after every time a touch is\n * registered. If no <a href=\"#/p5/touchStarted\">touchStarted()</a> function is defined, the <a href=\"#/p5/mousePressed\">mousePressed()</a>\n * function will be called instead if it is defined.<br><br>\n * Browsers may have different default behaviors attached to various touch\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method touchStarted\n * @param  {Object} [event] optional TouchEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Touch within the image to change\n * // the value of the rectangle\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function touchStarted() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function touchStarted() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a TouchEvent object\n * // as a callback argument\n * function touchStarted(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect turns white with touch event.\n * no image displayed\n */\np5.prototype._ontouchstart = function(e) {\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  this._setProperty('mouseIsPressed', true);\n  this._updateTouchCoords(e);\n  this._updateNextMouseCoords(e);\n  this._updateMouseCoords(); // reset pmouseXY at the start of each touch event\n\n  if (typeof context.touchStarted === 'function') {\n    executeDefault = context.touchStarted(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n    // only safari needs this manual fallback for consistency\n  } else if (\n    navigator.userAgent.toLowerCase().includes('safari') &&\n    typeof context.mousePressed === 'function'\n  ) {\n    executeDefault = context.mousePressed(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/touchMoved\">touchMoved()</a> function is called every time a touch move is registered.\n * If no <a href=\"#/p5/touchMoved\">touchMoved()</a> function is defined, the <a href=\"#/p5/mouseDragged\">mouseDragged()</a> function will\n * be called instead if it is defined.<br><br>\n * Browsers may have different default behaviors attached to various touch\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method touchMoved\n * @param  {Object} [event] optional TouchEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Move your finger across the page\n * // to change its value\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function touchMoved() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function touchMoved() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a TouchEvent object\n * // as a callback argument\n * function touchMoved(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect turns lighter with touch until white. resets\n * no image displayed\n *\n */\np5.prototype._ontouchmove = function(e) {\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  this._updateTouchCoords(e);\n  this._updateNextMouseCoords(e);\n  if (typeof context.touchMoved === 'function') {\n    executeDefault = context.touchMoved(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.mouseDragged === 'function') {\n    executeDefault = context.mouseDragged(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The <a href=\"#/p5/touchEnded\">touchEnded()</a> function is called every time a touch ends. If no\n * <a href=\"#/p5/touchEnded\">touchEnded()</a> function is defined, the <a href=\"#/p5/mouseReleased\">mouseReleased()</a> function will be\n * called instead if it is defined.<br><br>\n * Browsers may have different default behaviors attached to various touch\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method touchEnded\n * @param  {Object} [event] optional TouchEvent callback argument.\n * @example\n * <div>\n * <code>\n * // Release touch within the image to\n * // change the value of the rectangle\n *\n * let value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function touchEnded() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function touchEnded() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // returns a TouchEvent object\n * // as a callback argument\n * function touchEnded(event) {\n *   console.log(event);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect turns white with touch.\n * no image displayed\n *\n */\np5.prototype._ontouchend = function(e) {\n  this._setProperty('mouseIsPressed', false);\n  this._updateTouchCoords(e);\n  this._updateNextMouseCoords(e);\n  const context = this._isGlobal ? window : this;\n  let executeDefault;\n  if (typeof context.touchEnded === 'function') {\n    executeDefault = context.touchEnded(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.mouseReleased === 'function') {\n    executeDefault = context.mouseReleased(e);\n    if (executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\nexport default p5;\n","// (c) Dean McNamee <dean@gmail.com>, 2013.\n//\n// https://github.com/deanm/omggif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n//\n// omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n// including animation and compression.  It does not rely on any specific\n// underlying system, so should run in the browser, Node, or Plask.\n\n\"use strict\";\n\nfunction GifWriter(buf, width, height, gopts) {\n  var p = 0;\n\n  var gopts = gopts === undefined ? { } : gopts;\n  var loop_count = gopts.loop === undefined ? null : gopts.loop;\n  var global_palette = gopts.palette === undefined ? null : gopts.palette;\n\n  if (width <= 0 || height <= 0 || width > 65535 || height > 65535)\n    throw new Error(\"Width/Height invalid.\");\n\n  function check_palette_and_num_colors(palette) {\n    var num_colors = palette.length;\n    if (num_colors < 2 || num_colors > 256 ||  num_colors & (num_colors-1)) {\n      throw new Error(\n          \"Invalid code/color length, must be power of 2 and 2 .. 256.\");\n    }\n    return num_colors;\n  }\n\n  // - Header.\n  buf[p++] = 0x47; buf[p++] = 0x49; buf[p++] = 0x46;  // GIF\n  buf[p++] = 0x38; buf[p++] = 0x39; buf[p++] = 0x61;  // 89a\n\n  // Handling of Global Color Table (palette) and background index.\n  var gp_num_colors_pow2 = 0;\n  var background = 0;\n  if (global_palette !== null) {\n    var gp_num_colors = check_palette_and_num_colors(global_palette);\n    while (gp_num_colors >>= 1) ++gp_num_colors_pow2;\n    gp_num_colors = 1 << gp_num_colors_pow2;\n    --gp_num_colors_pow2;\n    if (gopts.background !== undefined) {\n      background = gopts.background;\n      if (background >= gp_num_colors)\n        throw new Error(\"Background index out of range.\");\n      // The GIF spec states that a background index of 0 should be ignored, so\n      // this is probably a mistake and you really want to set it to another\n      // slot in the palette.  But actually in the end most browsers, etc end\n      // up ignoring this almost completely (including for dispose background).\n      if (background === 0)\n        throw new Error(\"Background index explicitly passed as 0.\");\n    }\n  }\n\n  // - Logical Screen Descriptor.\n  // NOTE(deanm): w/h apparently ignored by implementations, but set anyway.\n  buf[p++] = width & 0xff; buf[p++] = width >> 8 & 0xff;\n  buf[p++] = height & 0xff; buf[p++] = height >> 8 & 0xff;\n  // NOTE: Indicates 0-bpp original color resolution (unused?).\n  buf[p++] = (global_palette !== null ? 0x80 : 0) |  // Global Color Table Flag.\n             gp_num_colors_pow2;  // NOTE: No sort flag (unused?).\n  buf[p++] = background;  // Background Color Index.\n  buf[p++] = 0;  // Pixel aspect ratio (unused?).\n\n  // - Global Color Table\n  if (global_palette !== null) {\n    for (var i = 0, il = global_palette.length; i < il; ++i) {\n      var rgb = global_palette[i];\n      buf[p++] = rgb >> 16 & 0xff;\n      buf[p++] = rgb >> 8 & 0xff;\n      buf[p++] = rgb & 0xff;\n    }\n  }\n\n  if (loop_count !== null) {  // Netscape block for looping.\n    if (loop_count < 0 || loop_count > 65535)\n      throw new Error(\"Loop count invalid.\")\n    // Extension code, label, and length.\n    buf[p++] = 0x21; buf[p++] = 0xff; buf[p++] = 0x0b;\n    // NETSCAPE2.0\n    buf[p++] = 0x4e; buf[p++] = 0x45; buf[p++] = 0x54; buf[p++] = 0x53;\n    buf[p++] = 0x43; buf[p++] = 0x41; buf[p++] = 0x50; buf[p++] = 0x45;\n    buf[p++] = 0x32; buf[p++] = 0x2e; buf[p++] = 0x30;\n    // Sub-block\n    buf[p++] = 0x03; buf[p++] = 0x01;\n    buf[p++] = loop_count & 0xff; buf[p++] = loop_count >> 8 & 0xff;\n    buf[p++] = 0x00;  // Terminator.\n  }\n\n\n  var ended = false;\n\n  this.addFrame = function(x, y, w, h, indexed_pixels, opts) {\n    if (ended === true) { --p; ended = false; }  // Un-end.\n\n    opts = opts === undefined ? { } : opts;\n\n    // TODO(deanm): Bounds check x, y.  Do they need to be within the virtual\n    // canvas width/height, I imagine?\n    if (x < 0 || y < 0 || x > 65535 || y > 65535)\n      throw new Error(\"x/y invalid.\")\n\n    if (w <= 0 || h <= 0 || w > 65535 || h > 65535)\n      throw new Error(\"Width/Height invalid.\")\n\n    if (indexed_pixels.length < w * h)\n      throw new Error(\"Not enough pixels for the frame size.\");\n\n    var using_local_palette = true;\n    var palette = opts.palette;\n    if (palette === undefined || palette === null) {\n      using_local_palette = false;\n      palette = global_palette;\n    }\n\n    if (palette === undefined || palette === null)\n      throw new Error(\"Must supply either a local or global palette.\");\n\n    var num_colors = check_palette_and_num_colors(palette);\n\n    // Compute the min_code_size (power of 2), destroying num_colors.\n    var min_code_size = 0;\n    while (num_colors >>= 1) ++min_code_size;\n    num_colors = 1 << min_code_size;  // Now we can easily get it back.\n\n    var delay = opts.delay === undefined ? 0 : opts.delay;\n\n    // From the spec:\n    //     0 -   No disposal specified. The decoder is\n    //           not required to take any action.\n    //     1 -   Do not dispose. The graphic is to be left\n    //           in place.\n    //     2 -   Restore to background color. The area used by the\n    //           graphic must be restored to the background color.\n    //     3 -   Restore to previous. The decoder is required to\n    //           restore the area overwritten by the graphic with\n    //           what was there prior to rendering the graphic.\n    //  4-7 -    To be defined.\n    // NOTE(deanm): Dispose background doesn't really work, apparently most\n    // browsers ignore the background palette index and clear to transparency.\n    var disposal = opts.disposal === undefined ? 0 : opts.disposal;\n    if (disposal < 0 || disposal > 3)  // 4-7 is reserved.\n      throw new Error(\"Disposal out of range.\");\n\n    var use_transparency = false;\n    var transparent_index = 0;\n    if (opts.transparent !== undefined && opts.transparent !== null) {\n      use_transparency = true;\n      transparent_index = opts.transparent;\n      if (transparent_index < 0 || transparent_index >= num_colors)\n        throw new Error(\"Transparent color index.\");\n    }\n\n    if (disposal !== 0 || use_transparency || delay !== 0) {\n      // - Graphics Control Extension\n      buf[p++] = 0x21; buf[p++] = 0xf9;  // Extension / Label.\n      buf[p++] = 4;  // Byte size.\n\n      buf[p++] = disposal << 2 | (use_transparency === true ? 1 : 0);\n      buf[p++] = delay & 0xff; buf[p++] = delay >> 8 & 0xff;\n      buf[p++] = transparent_index;  // Transparent color index.\n      buf[p++] = 0;  // Block Terminator.\n    }\n\n    // - Image Descriptor\n    buf[p++] = 0x2c;  // Image Seperator.\n    buf[p++] = x & 0xff; buf[p++] = x >> 8 & 0xff;  // Left.\n    buf[p++] = y & 0xff; buf[p++] = y >> 8 & 0xff;  // Top.\n    buf[p++] = w & 0xff; buf[p++] = w >> 8 & 0xff;\n    buf[p++] = h & 0xff; buf[p++] = h >> 8 & 0xff;\n    // NOTE: No sort flag (unused?).\n    // TODO(deanm): Support interlace.\n    buf[p++] = using_local_palette === true ? (0x80 | (min_code_size-1)) : 0;\n\n    // - Local Color Table\n    if (using_local_palette === true) {\n      for (var i = 0, il = palette.length; i < il; ++i) {\n        var rgb = palette[i];\n        buf[p++] = rgb >> 16 & 0xff;\n        buf[p++] = rgb >> 8 & 0xff;\n        buf[p++] = rgb & 0xff;\n      }\n    }\n\n    p = GifWriterOutputLZWCodeStream(\n            buf, p, min_code_size < 2 ? 2 : min_code_size, indexed_pixels);\n\n    return p;\n  };\n\n  this.end = function() {\n    if (ended === false) {\n      buf[p++] = 0x3b;  // Trailer.\n      ended = true;\n    }\n    return p;\n  };\n\n  this.getOutputBuffer = function() { return buf; };\n  this.setOutputBuffer = function(v) { buf = v; };\n  this.getOutputBufferPosition = function() { return p; };\n  this.setOutputBufferPosition = function(v) { p = v; };\n}\n\n// Main compression routine, palette indexes -> LZW code stream.\n// |index_stream| must have at least one entry.\nfunction GifWriterOutputLZWCodeStream(buf, p, min_code_size, index_stream) {\n  buf[p++] = min_code_size;\n  var cur_subblock = p++;  // Pointing at the length field.\n\n  var clear_code = 1 << min_code_size;\n  var code_mask = clear_code - 1;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n\n  var cur_code_size = min_code_size + 1;  // Number of bits per code.\n  var cur_shift = 0;\n  // We have at most 12-bit codes, so we should have to hold a max of 19\n  // bits here (and then we would write out).\n  var cur = 0;\n\n  function emit_bytes_to_buffer(bit_block_size) {\n    while (cur_shift >= bit_block_size) {\n      buf[p++] = cur & 0xff;\n      cur >>= 8; cur_shift -= 8;\n      if (p === cur_subblock + 256) {  // Finished a subblock.\n        buf[cur_subblock] = 255;\n        cur_subblock = p++;\n      }\n    }\n  }\n\n  function emit_code(c) {\n    cur |= c << cur_shift;\n    cur_shift += cur_code_size;\n    emit_bytes_to_buffer(8);\n  }\n\n  // I am not an expert on the topic, and I don't want to write a thesis.\n  // However, it is good to outline here the basic algorithm and the few data\n  // structures and optimizations here that make this implementation fast.\n  // The basic idea behind LZW is to build a table of previously seen runs\n  // addressed by a short id (herein called output code).  All data is\n  // referenced by a code, which represents one or more values from the\n  // original input stream.  All input bytes can be referenced as the same\n  // value as an output code.  So if you didn't want any compression, you\n  // could more or less just output the original bytes as codes (there are\n  // some details to this, but it is the idea).  In order to achieve\n  // compression, values greater then the input range (codes can be up to\n  // 12-bit while input only 8-bit) represent a sequence of previously seen\n  // inputs.  The decompressor is able to build the same mapping while\n  // decoding, so there is always a shared common knowledge between the\n  // encoding and decoder, which is also important for \"timing\" aspects like\n  // how to handle variable bit width code encoding.\n  //\n  // One obvious but very important consequence of the table system is there\n  // is always a unique id (at most 12-bits) to map the runs.  'A' might be\n  // 4, then 'AA' might be 10, 'AAA' 11, 'AAAA' 12, etc.  This relationship\n  // can be used for an effecient lookup strategy for the code mapping.  We\n  // need to know if a run has been seen before, and be able to map that run\n  // to the output code.  Since we start with known unique ids (input bytes),\n  // and then from those build more unique ids (table entries), we can\n  // continue this chain (almost like a linked list) to always have small\n  // integer values that represent the current byte chains in the encoder.\n  // This means instead of tracking the input bytes (AAAABCD) to know our\n  // current state, we can track the table entry for AAAABC (it is guaranteed\n  // to exist by the nature of the algorithm) and the next character D.\n  // Therefor the tuple of (table_entry, byte) is guaranteed to also be\n  // unique.  This allows us to create a simple lookup key for mapping input\n  // sequences to codes (table indices) without having to store or search\n  // any of the code sequences.  So if 'AAAA' has a table entry of 12, the\n  // tuple of ('AAAA', K) for any input byte K will be unique, and can be our\n  // key.  This leads to a integer value at most 20-bits, which can always\n  // fit in an SMI value and be used as a fast sparse array / object key.\n\n  // Output code for the current contents of the index buffer.\n  var ib_code = index_stream[0] & code_mask;  // Load first input index.\n  var code_table = { };  // Key'd on our 20-bit \"tuple\".\n\n  emit_code(clear_code);  // Spec says first code should be a clear code.\n\n  // First index already loaded, process the rest of the stream.\n  for (var i = 1, il = index_stream.length; i < il; ++i) {\n    var k = index_stream[i] & code_mask;\n    var cur_key = ib_code << 8 | k;  // (prev, k) unique tuple.\n    var cur_code = code_table[cur_key];  // buffer + k.\n\n    // Check if we have to create a new code table entry.\n    if (cur_code === undefined) {  // We don't have buffer + k.\n      // Emit index buffer (without k).\n      // This is an inline version of emit_code, because this is the core\n      // writing routine of the compressor (and V8 cannot inline emit_code\n      // because it is a closure here in a different context).  Additionally\n      // we can call emit_byte_to_buffer less often, because we can have\n      // 30-bits (from our 31-bit signed SMI), and we know our codes will only\n      // be 12-bits, so can safely have 18-bits there without overflow.\n      // emit_code(ib_code);\n      cur |= ib_code << cur_shift;\n      cur_shift += cur_code_size;\n      while (cur_shift >= 8) {\n        buf[p++] = cur & 0xff;\n        cur >>= 8; cur_shift -= 8;\n        if (p === cur_subblock + 256) {  // Finished a subblock.\n          buf[cur_subblock] = 255;\n          cur_subblock = p++;\n        }\n      }\n\n      if (next_code === 4096) {  // Table full, need a clear.\n        emit_code(clear_code);\n        next_code = eoi_code + 1;\n        cur_code_size = min_code_size + 1;\n        code_table = { };\n      } else {  // Table not full, insert a new entry.\n        // Increase our variable bit code sizes if necessary.  This is a bit\n        // tricky as it is based on \"timing\" between the encoding and\n        // decoder.  From the encoders perspective this should happen after\n        // we've already emitted the index buffer and are about to create the\n        // first table entry that would overflow our current code bit size.\n        if (next_code >= (1 << cur_code_size)) ++cur_code_size;\n        code_table[cur_key] = next_code++;  // Insert into code table.\n      }\n\n      ib_code = k;  // Index buffer to single input k.\n    } else {\n      ib_code = cur_code;  // Index buffer to sequence in code table.\n    }\n  }\n\n  emit_code(ib_code);  // There will still be something in the index buffer.\n  emit_code(eoi_code);  // End Of Information.\n\n  // Flush / finalize the sub-blocks stream to the buffer.\n  emit_bytes_to_buffer(1);\n\n  // Finish the sub-blocks, writing out any unfinished lengths and\n  // terminating with a sub-block of length 0.  If we have already started\n  // but not yet used a sub-block it can just become the terminator.\n  if (cur_subblock + 1 === p) {  // Started but unused.\n    buf[cur_subblock] = 0;\n  } else {  // Started and used, write length and additional terminator block.\n    buf[cur_subblock] = p - cur_subblock - 1;\n    buf[p++] = 0;\n  }\n  return p;\n}\n\nfunction GifReader(buf) {\n  var p = 0;\n\n  // - Header (GIF87a or GIF89a).\n  if (buf[p++] !== 0x47 ||            buf[p++] !== 0x49 || buf[p++] !== 0x46 ||\n      buf[p++] !== 0x38 || (buf[p++]+1 & 0xfd) !== 0x38 || buf[p++] !== 0x61) {\n    throw new Error(\"Invalid GIF 87a/89a header.\");\n  }\n\n  // - Logical Screen Descriptor.\n  var width = buf[p++] | buf[p++] << 8;\n  var height = buf[p++] | buf[p++] << 8;\n  var pf0 = buf[p++];  // <Packed Fields>.\n  var global_palette_flag = pf0 >> 7;\n  var num_global_colors_pow2 = pf0 & 0x7;\n  var num_global_colors = 1 << (num_global_colors_pow2 + 1);\n  var background = buf[p++];\n  buf[p++];  // Pixel aspect ratio (unused?).\n\n  var global_palette_offset = null;\n  var global_palette_size   = null;\n\n  if (global_palette_flag) {\n    global_palette_offset = p;\n    global_palette_size = num_global_colors;\n    p += num_global_colors * 3;  // Seek past palette.\n  }\n\n  var no_eof = true;\n\n  var frames = [ ];\n\n  var delay = 0;\n  var transparent_index = null;\n  var disposal = 0;  // 0 - No disposal specified.\n  var loop_count = null;\n\n  this.width = width;\n  this.height = height;\n\n  while (no_eof && p < buf.length) {\n    switch (buf[p++]) {\n      case 0x21:  // Graphics Control Extension Block\n        switch (buf[p++]) {\n          case 0xff:  // Application specific block\n            // Try if it's a Netscape block (with animation loop counter).\n            if (buf[p   ] !== 0x0b ||  // 21 FF already read, check block size.\n                // NETSCAPE2.0\n                buf[p+1 ] == 0x4e && buf[p+2 ] == 0x45 && buf[p+3 ] == 0x54 &&\n                buf[p+4 ] == 0x53 && buf[p+5 ] == 0x43 && buf[p+6 ] == 0x41 &&\n                buf[p+7 ] == 0x50 && buf[p+8 ] == 0x45 && buf[p+9 ] == 0x32 &&\n                buf[p+10] == 0x2e && buf[p+11] == 0x30 &&\n                // Sub-block\n                buf[p+12] == 0x03 && buf[p+13] == 0x01 && buf[p+16] == 0) {\n              p += 14;\n              loop_count = buf[p++] | buf[p++] << 8;\n              p++;  // Skip terminator.\n            } else {  // We don't know what it is, just try to get past it.\n              p += 12;\n              while (true) {  // Seek through subblocks.\n                var block_size = buf[p++];\n                // Bad block size (ex: undefined from an out of bounds read).\n                if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n                if (block_size === 0) break;  // 0 size is terminator\n                p += block_size;\n              }\n            }\n            break;\n\n          case 0xf9:  // Graphics Control Extension\n            if (buf[p++] !== 0x4 || buf[p+4] !== 0)\n              throw new Error(\"Invalid graphics extension block.\");\n            var pf1 = buf[p++];\n            delay = buf[p++] | buf[p++] << 8;\n            transparent_index = buf[p++];\n            if ((pf1 & 1) === 0) transparent_index = null;\n            disposal = pf1 >> 2 & 0x7;\n            p++;  // Skip terminator.\n            break;\n\n          case 0xfe:  // Comment Extension.\n            while (true) {  // Seek through subblocks.\n              var block_size = buf[p++];\n              // Bad block size (ex: undefined from an out of bounds read).\n              if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n              if (block_size === 0) break;  // 0 size is terminator\n              // console.log(buf.slice(p, p+block_size).toString('ascii'));\n              p += block_size;\n            }\n            break;\n\n          default:\n            throw new Error(\n                \"Unknown graphic control label: 0x\" + buf[p-1].toString(16));\n        }\n        break;\n\n      case 0x2c:  // Image Descriptor.\n        var x = buf[p++] | buf[p++] << 8;\n        var y = buf[p++] | buf[p++] << 8;\n        var w = buf[p++] | buf[p++] << 8;\n        var h = buf[p++] | buf[p++] << 8;\n        var pf2 = buf[p++];\n        var local_palette_flag = pf2 >> 7;\n        var interlace_flag = pf2 >> 6 & 1;\n        var num_local_colors_pow2 = pf2 & 0x7;\n        var num_local_colors = 1 << (num_local_colors_pow2 + 1);\n        var palette_offset = global_palette_offset;\n        var palette_size = global_palette_size;\n        var has_local_palette = false;\n        if (local_palette_flag) {\n          var has_local_palette = true;\n          palette_offset = p;  // Override with local palette.\n          palette_size = num_local_colors;\n          p += num_local_colors * 3;  // Seek past palette.\n        }\n\n        var data_offset = p;\n\n        p++;  // codesize\n        while (true) {\n          var block_size = buf[p++];\n          // Bad block size (ex: undefined from an out of bounds read).\n          if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n          if (block_size === 0) break;  // 0 size is terminator\n          p += block_size;\n        }\n\n        frames.push({x: x, y: y, width: w, height: h,\n                     has_local_palette: has_local_palette,\n                     palette_offset: palette_offset,\n                     palette_size: palette_size,\n                     data_offset: data_offset,\n                     data_length: p - data_offset,\n                     transparent_index: transparent_index,\n                     interlaced: !!interlace_flag,\n                     delay: delay,\n                     disposal: disposal});\n        break;\n\n      case 0x3b:  // Trailer Marker (end of file).\n        no_eof = false;\n        break;\n\n      default:\n        throw new Error(\"Unknown gif block: 0x\" + buf[p-1].toString(16));\n        break;\n    }\n  }\n\n  this.numFrames = function() {\n    return frames.length;\n  };\n\n  this.loopCount = function() {\n    return loop_count;\n  };\n\n  this.frameInfo = function(frame_num) {\n    if (frame_num < 0 || frame_num >= frames.length)\n      throw new Error(\"Frame index out of range.\");\n    return frames[frame_num];\n  }\n\n  this.decodeAndBlitFrameBGRA = function(frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels);  // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(\n        buf, frame.data_offset, index_stream, num_pixels);\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth  = frame.width;\n    var framestride = width - framewidth;\n    var xleft       = framewidth;  // Number of subrect pixels left in scanline.\n\n    // Output indicies of the top left and bottom right corners of the subrect.\n    var opbeg = ((frame.y * width) + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op    = opbeg;\n\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7;  // Pass 1.\n    }\n\n    var interlaceskip = 8;  // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n\n      if (xleft === 0) {  // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) { // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip-1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = b;\n        pixels[op++] = g;\n        pixels[op++] = r;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n\n  // I will go to copy and paste hell one day...\n  this.decodeAndBlitFrameRGBA = function(frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels);  // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(\n        buf, frame.data_offset, index_stream, num_pixels);\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth  = frame.width;\n    var framestride = width - framewidth;\n    var xleft       = framewidth;  // Number of subrect pixels left in scanline.\n\n    // Output indicies of the top left and bottom right corners of the subrect.\n    var opbeg = ((frame.y * width) + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op    = opbeg;\n\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7;  // Pass 1.\n    }\n\n    var interlaceskip = 8;  // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n\n      if (xleft === 0) {  // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) { // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip-1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = r;\n        pixels[op++] = g;\n        pixels[op++] = b;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n}\n\nfunction GifReaderLZWOutputIndexStream(code_stream, p, output, output_length) {\n  var min_code_size = code_stream[p++];\n\n  var clear_code = 1 << min_code_size;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n\n  var cur_code_size = min_code_size + 1;  // Number of bits per code.\n  // NOTE: This shares the same name as the encoder, but has a different\n  // meaning here.  Here this masks each code coming from the code stream.\n  var code_mask = (1 << cur_code_size) - 1;\n  var cur_shift = 0;\n  var cur = 0;\n\n  var op = 0;  // Output pointer.\n\n  var subblock_size = code_stream[p++];\n\n  // TODO(deanm): Would using a TypedArray be any faster?  At least it would\n  // solve the fast mode / backing store uncertainty.\n  // var code_table = Array(4096);\n  var code_table = new Int32Array(4096);  // Can be signed, we only use 20 bits.\n\n  var prev_code = null;  // Track code-1.\n\n  while (true) {\n    // Read up to two bytes, making sure we always 12-bits for max sized code.\n    while (cur_shift < 16) {\n      if (subblock_size === 0) break;  // No more data to be read.\n\n      cur |= code_stream[p++] << cur_shift;\n      cur_shift += 8;\n\n      if (subblock_size === 1) {  // Never let it get to 0 to hold logic above.\n        subblock_size = code_stream[p++];  // Next subblock.\n      } else {\n        --subblock_size;\n      }\n    }\n\n    // TODO(deanm): We should never really get here, we should have received\n    // and EOI.\n    if (cur_shift < cur_code_size)\n      break;\n\n    var code = cur & code_mask;\n    cur >>= cur_code_size;\n    cur_shift -= cur_code_size;\n\n    // TODO(deanm): Maybe should check that the first code was a clear code,\n    // at least this is what you're supposed to do.  But actually our encoder\n    // now doesn't emit a clear code first anyway.\n    if (code === clear_code) {\n      // We don't actually have to clear the table.  This could be a good idea\n      // for greater error checking, but we don't really do any anyway.  We\n      // will just track it with next_code and overwrite old entries.\n\n      next_code = eoi_code + 1;\n      cur_code_size = min_code_size + 1;\n      code_mask = (1 << cur_code_size) - 1;\n\n      // Don't update prev_code ?\n      prev_code = null;\n      continue;\n    } else if (code === eoi_code) {\n      break;\n    }\n\n    // We have a similar situation as the decoder, where we want to store\n    // variable length entries (code table entries), but we want to do in a\n    // faster manner than an array of arrays.  The code below stores sort of a\n    // linked list within the code table, and then \"chases\" through it to\n    // construct the dictionary entries.  When a new entry is created, just the\n    // last byte is stored, and the rest (prefix) of the entry is only\n    // referenced by its table entry.  Then the code chases through the\n    // prefixes until it reaches a single byte code.  We have to chase twice,\n    // first to compute the length, and then to actually copy the data to the\n    // output (backwards, since we know the length).  The alternative would be\n    // storing something in an intermediate stack, but that doesn't make any\n    // more sense.  I implemented an approach where it also stored the length\n    // in the code table, although it's a bit tricky because you run out of\n    // bits (12 + 12 + 8), but I didn't measure much improvements (the table\n    // entries are generally not the long).  Even when I created benchmarks for\n    // very long table entries the complexity did not seem worth it.\n    // The code table stores the prefix entry in 12 bits and then the suffix\n    // byte in 8 bits, so each entry is 20 bits.\n\n    var chase_code = code < next_code ? code : prev_code;\n\n    // Chase what we will output, either {CODE} or {CODE-1}.\n    var chase_length = 0;\n    var chase = chase_code;\n    while (chase > clear_code) {\n      chase = code_table[chase] >> 8;\n      ++chase_length;\n    }\n\n    var k = chase;\n\n    var op_end = op + chase_length + (chase_code !== code ? 1 : 0);\n    if (op_end > output_length) {\n      console.log(\"Warning, gif stream longer than expected.\");\n      return;\n    }\n\n    // Already have the first byte from the chase, might as well write it fast.\n    output[op++] = k;\n\n    op += chase_length;\n    var b = op;  // Track pointer, writing backwards.\n\n    if (chase_code !== code)  // The case of emitting {CODE-1} + k.\n      output[op++] = k;\n\n    chase = chase_code;\n    while (chase_length--) {\n      chase = code_table[chase];\n      output[--b] = chase & 0xff;  // Write backwards.\n      chase >>= 8;  // Pull down to the prefix code.\n    }\n\n    if (prev_code !== null && next_code < 4096) {\n      code_table[next_code++] = prev_code << 8 | k;\n      // TODO(deanm): Figure out this clearing vs code growth logic better.  I\n      // have an feeling that it should just happen somewhere else, for now it\n      // is awkward between when we grow past the max and then hit a clear code.\n      // For now just check if we hit the max 12-bits (then a clear code should\n      // follow, also of course encoded in 12-bits).\n      if (next_code >= code_mask+1 && cur_code_size < 12) {\n        ++cur_code_size;\n        code_mask = code_mask << 1 | 1;\n      }\n    }\n\n    prev_code = code;\n  }\n\n  if (op !== output_length) {\n    console.log(\"Warning, gif stream shorter than expected.\");\n  }\n\n  return output;\n}\n\n// CommonJS.\ntry { exports.GifWriter = GifWriter; exports.GifReader = GifReader } catch(e) {}\n","/**\n * @module Image\n * @submodule Image\n * @for p5\n * @requires core\n */\n\n/**\n * This module defines the p5 methods for the <a href=\"#/p5.Image\">p5.Image</a> class\n * for drawing images to the main display canvas.\n */\nimport p5 from '../core/main';\nimport omggif from 'omggif';\n\n// This is not global, but ESLint is not aware that\n// this module is implicitly enclosed with Browserify: this overrides the\n// redefined-global error and permits using the name \"frames\" for the array\n// of saved animation frames.\n\n/* global frames:true */ let frames = []; // eslint-disable-line no-unused-vars\n\n/**\n * Creates a new <a href=\"#/p5.Image\">p5.Image</a> (the datatype for storing images). This provides a\n * fresh buffer of pixels to play with. Set the size of the buffer with the\n * width and height parameters.\n * <br><br>\n * .<a href=\"#/p5.Image/pixels\">pixels</a> gives access to an array containing the values for all the pixels\n * in the display window.\n * These values are numbers. This array is the size (including an appropriate\n * factor for the <a href=\"#/p5/pixelDensity\">pixelDensity</a>) of the display window x4,\n * representing the R, G, B, A values in order for each pixel, moving from\n * left to right across each row, then down each column. See .<a href=\"#/p5.Image/pixels\">pixels</a> for\n * more info. It may also be simpler to use <a href=\"#/p5.Image/set\">set()</a> or <a href=\"#/p5.Image/get\">get()</a>.\n * <br><br>\n * Before accessing the pixels of an image, the data must loaded with the\n * <a href=\"#/p5.Image/loadPixels\">loadPixels()</a> function. After the array data has been modified, the\n * <a href=\"#/p5.Image/updatePixels\">updatePixels()</a> function must be run to update the changes.\n *\n * @method createImage\n * @param  {Integer} width  width in pixels\n * @param  {Integer} height height in pixels\n * @return {p5.Image}       the <a href=\"#/p5.Image\">p5.Image</a> object\n * @example\n * <div>\n * <code>\n * let img = createImage(66, 66);\n * img.loadPixels();\n * for (let i = 0; i < img.width; i++) {\n *   for (let j = 0; j < img.height; j++) {\n *     img.set(i, j, color(0, 90, 102));\n *   }\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img = createImage(66, 66);\n * img.loadPixels();\n * for (let i = 0; i < img.width; i++) {\n *   for (let j = 0; j < img.height; j++) {\n *     img.set(i, j, color(0, 90, 102, (i % img.width) * 2));\n *   }\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * image(img, 34, 34);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let pink = color(255, 102, 204);\n * let img = createImage(66, 66);\n * img.loadPixels();\n * let d = pixelDensity();\n * let halfImage = 4 * (img.width * d) * (img.height / 2 * d);\n * for (let i = 0; i < halfImage; i += 4) {\n *   img.pixels[i] = red(pink);\n *   img.pixels[i + 1] = green(pink);\n *   img.pixels[i + 2] = blue(pink);\n *   img.pixels[i + 3] = alpha(pink);\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * </code>\n * </div>\n *\n * @alt\n * 66x66 dark turquoise rect in center of canvas.\n * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\n * no image displayed\n *\n */\np5.prototype.createImage = function(width, height) {\n  p5._validateParameters('createImage', arguments);\n  return new p5.Image(width, height);\n};\n\n/**\n *  Save the current canvas as an image. The browser will either save the\n *  file immediately, or prompt the user with a dialogue window.\n *\n *  @method saveCanvas\n *  @param  {p5.Element|HTMLCanvasElement} selectedCanvas   a variable\n *                                  representing a specific html5 canvas (optional)\n *  @param  {String} [filename]\n *  @param  {String} [extension]      'jpg' or 'png'\n *\n *  @example\n * <div class='norender notest'><code>\n * function setup() {\n *   let c = createCanvas(100, 100);\n *   background(255, 0, 0);\n *   saveCanvas(c, 'myCanvas', 'jpg');\n * }\n * </code></div>\n * <div class='norender notest'><code>\n * // note that this example has the same result as above\n * // if no canvas is specified, defaults to main canvas\n * function setup() {\n *   let c = createCanvas(100, 100);\n *   background(255, 0, 0);\n *   saveCanvas('myCanvas', 'jpg');\n *\n *   // all of the following are valid\n *   saveCanvas(c, 'myCanvas', 'jpg');\n *   saveCanvas(c, 'myCanvas.jpg');\n *   saveCanvas(c, 'myCanvas');\n *   saveCanvas(c);\n *   saveCanvas('myCanvas', 'png');\n *   saveCanvas('myCanvas');\n *   saveCanvas();\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n * no image displayed\n * no image displayed\n */\n/**\n *  @method saveCanvas\n *  @param  {String} [filename]\n *  @param  {String} [extension]\n */\np5.prototype.saveCanvas = function() {\n  p5._validateParameters('saveCanvas', arguments);\n\n  // copy arguments to array\n  const args = [].slice.call(arguments);\n  let htmlCanvas, filename, extension;\n\n  if (arguments[0] instanceof HTMLCanvasElement) {\n    htmlCanvas = arguments[0];\n    args.shift();\n  } else if (arguments[0] instanceof p5.Element) {\n    htmlCanvas = arguments[0].elt;\n    args.shift();\n  } else {\n    htmlCanvas = this._curElement && this._curElement.elt;\n  }\n\n  if (args.length >= 1) {\n    filename = args[0];\n  }\n  if (args.length >= 2) {\n    extension = args[1];\n  }\n\n  extension =\n    extension ||\n    p5.prototype._checkFileExtension(filename, extension)[1] ||\n    'png';\n\n  let mimeType;\n  switch (extension) {\n    default:\n      //case 'png':\n      mimeType = 'image/png';\n      break;\n    case 'jpeg':\n    case 'jpg':\n      mimeType = 'image/jpeg';\n      break;\n  }\n\n  htmlCanvas.toBlob(blob => {\n    p5.prototype.downloadFile(blob, filename, extension);\n  }, mimeType);\n};\n\np5.prototype.saveGif = function(pImg, filename) {\n  const props = pImg.gifProperties;\n\n  //convert loopLimit back into Netscape Block formatting\n  let loopLimit = props.loopLimit;\n  if (loopLimit === 1) {\n    loopLimit = null;\n  } else if (loopLimit === null) {\n    loopLimit = 0;\n  }\n  const buffer = new Uint8Array(pImg.width * pImg.height * props.numFrames);\n\n  const allFramesPixelColors = [];\n\n  // Used to determine the occurrence of unique palettes and the frames\n  // which use them\n  const paletteFreqsAndFrames = {};\n\n  // Pass 1:\n  //loop over frames and get the frequency of each palette\n  for (let i = 0; i < props.numFrames; i++) {\n    const paletteSet = new Set();\n    const data = props.frames[i].image.data;\n    const dataLength = data.length;\n    // The color for each pixel in this frame ( for easier lookup later )\n    const pixelColors = new Uint32Array(pImg.width * pImg.height);\n    for (let j = 0, k = 0; j < dataLength; j += 4, k++) {\n      const r = data[j + 0];\n      const g = data[j + 1];\n      const b = data[j + 2];\n      const color = (r << 16) | (g << 8) | (b << 0);\n      paletteSet.add(color);\n\n      // What color does this pixel have in this frame ?\n      pixelColors[k] = color;\n    }\n\n    // A way to put use the entire palette as an object key\n    const paletteStr = [...paletteSet].sort().toString();\n    if (paletteFreqsAndFrames[paletteStr] === undefined) {\n      paletteFreqsAndFrames[paletteStr] = { freq: 1, frames: [i] };\n    } else {\n      paletteFreqsAndFrames[paletteStr].freq += 1;\n      paletteFreqsAndFrames[paletteStr].frames.push(i);\n    }\n\n    allFramesPixelColors.push(pixelColors);\n  }\n\n  let framesUsingGlobalPalette = [];\n\n  // Now to build the global palette\n  // Sort all the unique palettes in descending order of their occurence\n  const palettesSortedByFreq = Object.keys(paletteFreqsAndFrames).sort(function(\n    a,\n    b\n  ) {\n    return paletteFreqsAndFrames[b].freq - paletteFreqsAndFrames[a].freq;\n  });\n\n  // The initial global palette is the one with the most occurence\n  const globalPalette = palettesSortedByFreq[0]\n    .split(',')\n    .map(a => parseInt(a));\n\n  framesUsingGlobalPalette = framesUsingGlobalPalette.concat(\n    paletteFreqsAndFrames[globalPalette].frames\n  );\n\n  const globalPaletteSet = new Set(globalPalette);\n\n  // Build a more complete global palette\n  // Iterate over the remaining palettes in the order of\n  // their occurence and see if the colors in this palette which are\n  // not in the global palette can be added there, while keeping the length\n  // of the global palette <= 256\n  for (let i = 1; i < palettesSortedByFreq.length; i++) {\n    const palette = palettesSortedByFreq[i].split(',').map(a => parseInt(a));\n\n    const difference = palette.filter(x => !globalPaletteSet.has(x));\n    if (globalPalette.length + difference.length <= 256) {\n      for (let j = 0; j < difference.length; j++) {\n        globalPalette.push(difference[j]);\n        globalPaletteSet.add(difference[j]);\n      }\n\n      // All frames using this palette now use the global palette\n      framesUsingGlobalPalette = framesUsingGlobalPalette.concat(\n        paletteFreqsAndFrames[palettesSortedByFreq[i]].frames\n      );\n    }\n  }\n\n  framesUsingGlobalPalette = new Set(framesUsingGlobalPalette);\n\n  // Build a lookup table of the index of each color in the global palette\n  // Maps a color to its index\n  const globalIndicesLookup = {};\n  for (let i = 0; i < globalPalette.length; i++) {\n    if (!globalIndicesLookup[globalPalette[i]]) {\n      globalIndicesLookup[globalPalette[i]] = i;\n    }\n  }\n\n  // force palette to be power of 2\n  let powof2 = 1;\n  while (powof2 < globalPalette.length) {\n    powof2 <<= 1;\n  }\n  globalPalette.length = powof2;\n\n  // global opts\n  const opts = {\n    loop: loopLimit,\n    palette: new Uint32Array(globalPalette)\n  };\n  const gifWriter = new omggif.GifWriter(buffer, pImg.width, pImg.height, opts);\n  let previousFrame = {};\n\n  // Pass 2\n  // Determine if the frame needs a local palette\n  // Also apply transparency optimization. This function will often blow up\n  // the size of a GIF if not for transparency. If a pixel in one frame has\n  // the same color in the previous frame, that pixel can be marked as\n  // transparent. We decide one particular color as transparent and make all\n  // transparent pixels take this color. This helps in later in compression.\n  for (let i = 0; i < props.numFrames; i++) {\n    const localPaletteRequired = !framesUsingGlobalPalette.has(i);\n    const palette = localPaletteRequired ? [] : globalPalette;\n    const pixelPaletteIndex = new Uint8Array(pImg.width * pImg.height);\n\n    // Lookup table mapping color to its indices\n    const colorIndicesLookup = {};\n\n    // All the colors that cannot be marked transparent in this frame\n    const cannotBeTransparent = new Set();\n\n    for (let k = 0; k < allFramesPixelColors[i].length; k++) {\n      const color = allFramesPixelColors[i][k];\n      if (localPaletteRequired) {\n        if (colorIndicesLookup[color] === undefined) {\n          colorIndicesLookup[color] = palette.length;\n          palette.push(color);\n        }\n        pixelPaletteIndex[k] = colorIndicesLookup[color];\n      } else {\n        pixelPaletteIndex[k] = globalIndicesLookup[color];\n      }\n\n      if (i > 0) {\n        // If even one pixel of this color has changed in this frame\n        // from the previous frame, we cannot mark it as transparent\n        if (allFramesPixelColors[i - 1][k] !== color) {\n          cannotBeTransparent.add(color);\n        }\n      }\n    }\n\n    const frameOpts = {};\n\n    // Transparency optimization\n    const canBeTransparent = palette.filter(a => !cannotBeTransparent.has(a));\n    if (canBeTransparent.length > 0) {\n      // Select a color to mark as transparent\n      const transparent = canBeTransparent[0];\n      const transparentIndex = localPaletteRequired\n        ? colorIndicesLookup[transparent]\n        : globalIndicesLookup[transparent];\n      if (i > 0) {\n        for (let k = 0; k < allFramesPixelColors[i].length; k++) {\n          // If this pixel in this frame has the same color in previous frame\n          if (allFramesPixelColors[i - 1][k] === allFramesPixelColors[i][k]) {\n            pixelPaletteIndex[k] = transparentIndex;\n          }\n        }\n        frameOpts.transparent = transparentIndex;\n        // If this frame has any transparency, do not dispose the previous frame\n        previousFrame.frameOpts.disposal = 1;\n      }\n    }\n    frameOpts.delay = props.frames[i].delay / 10; // Move timing back into GIF formatting\n    if (localPaletteRequired) {\n      // force palette to be power of 2\n      let powof2 = 1;\n      while (powof2 < palette.length) {\n        powof2 <<= 1;\n      }\n      palette.length = powof2;\n      frameOpts.palette = new Uint32Array(palette);\n    }\n    if (i > 0) {\n      // add the frame that came before the current one\n      gifWriter.addFrame(\n        0,\n        0,\n        pImg.width,\n        pImg.height,\n        previousFrame.pixelPaletteIndex,\n        previousFrame.frameOpts\n      );\n    }\n    // previous frame object should now have details of this frame\n    previousFrame = {\n      pixelPaletteIndex,\n      frameOpts\n    };\n  }\n\n  previousFrame.frameOpts.disposal = 1;\n  // add the last frame\n  gifWriter.addFrame(\n    0,\n    0,\n    pImg.width,\n    pImg.height,\n    previousFrame.pixelPaletteIndex,\n    previousFrame.frameOpts\n  );\n\n  const extension = 'gif';\n  const blob = new Blob([buffer.slice(0, gifWriter.end())], {\n    type: 'image/gif'\n  });\n  p5.prototype.downloadFile(blob, filename, extension);\n};\n\n/**\n *  Capture a sequence of frames that can be used to create a movie.\n *  Accepts a callback. For example, you may wish to send the frames\n *  to a server where they can be stored or converted into a movie.\n *  If no callback is provided, the browser will pop up save dialogues in an\n *  attempt to download all of the images that have just been created. With the\n *  callback provided the image data isn't saved by default but instead passed\n *  as an argument to the callback function as an array of objects, with the\n *  size of array equal to the total number of frames.\n *\n *  Note that <a href=\"#/p5.Image/saveFrames\">saveFrames()</a> will only save the first 15 frames of an animation.\n *  To export longer animations, you might look into a library like\n *  <a href=\"https://github.com/spite/ccapture.js/\">ccapture.js</a>.\n *\n *  @method saveFrames\n *  @param  {String}   filename\n *  @param  {String}   extension 'jpg' or 'png'\n *  @param  {Number}   duration  Duration in seconds to save the frames for.\n *  @param  {Number}   framerate  Framerate to save the frames in.\n *  @param  {function(Array)} [callback] A callback function that will be executed\n                                  to handle the image data. This function\n                                  should accept an array as argument. The\n                                  array will contain the specified number of\n                                  frames of objects. Each object has three\n                                  properties: imageData - an\n                                  image/octet-stream, filename and extension.\n *  @example\n *  <div><code>\n * function draw() {\n *   background(mouseX);\n * }\n *\n * function mousePressed() {\n *   saveFrames('out', 'png', 1, 25, data => {\n *     print(data);\n *   });\n * }\n</code></div>\n *\n * @alt\n * canvas background goes from light to dark with mouse x.\n *\n */\np5.prototype.saveFrames = function(fName, ext, _duration, _fps, callback) {\n  p5._validateParameters('saveFrames', arguments);\n  let duration = _duration || 3;\n  duration = p5.prototype.constrain(duration, 0, 15);\n  duration = duration * 1000;\n  let fps = _fps || 15;\n  fps = p5.prototype.constrain(fps, 0, 22);\n  let count = 0;\n\n  const makeFrame = p5.prototype._makeFrame;\n  const cnv = this._curElement.elt;\n  const frameFactory = setInterval(() => {\n    makeFrame(fName + count, ext, cnv);\n    count++;\n  }, 1000 / fps);\n\n  setTimeout(() => {\n    clearInterval(frameFactory);\n    if (callback) {\n      callback(frames);\n    } else {\n      for (const f of frames) {\n        p5.prototype.downloadFile(f.imageData, f.filename, f.ext);\n      }\n    }\n    frames = []; // clear frames\n  }, duration + 0.01);\n};\n\np5.prototype._makeFrame = function(filename, extension, _cnv) {\n  let cnv;\n  if (this) {\n    cnv = this._curElement.elt;\n  } else {\n    cnv = _cnv;\n  }\n  let mimeType;\n  if (!extension) {\n    extension = 'png';\n    mimeType = 'image/png';\n  } else {\n    switch (extension.toLowerCase()) {\n      case 'png':\n        mimeType = 'image/png';\n        break;\n      case 'jpeg':\n        mimeType = 'image/jpeg';\n        break;\n      case 'jpg':\n        mimeType = 'image/jpeg';\n        break;\n      default:\n        mimeType = 'image/png';\n        break;\n    }\n  }\n  const downloadMime = 'image/octet-stream';\n  let imageData = cnv.toDataURL(mimeType);\n  imageData = imageData.replace(mimeType, downloadMime);\n\n  const thisFrame = {};\n  thisFrame.imageData = imageData;\n  thisFrame.filename = filename;\n  thisFrame.ext = extension;\n  frames.push(thisFrame);\n};\n\nexport default p5;\n","/**\n * @module Image\n * @submodule Loading & Displaying\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\nimport Filters from './filters';\nimport canvas from '../core/helpers';\nimport * as constants from '../core/constants';\nimport omggif from 'omggif';\n\nimport '../core/error_helpers';\n\n/**\n * Loads an image from a path and creates a <a href=\"#/p5.Image\">p5.Image</a> from it.\n * <br><br>\n * The image may not be immediately available for rendering\n * If you want to ensure that the image is ready before doing\n * anything with it, place the <a href=\"#/p5/loadImage\">loadImage()</a> call in <a href=\"#/p5/preload\">preload()</a>.\n * You may also supply a callback function to handle the image when it's ready.\n * <br><br>\n * The path to the image should be relative to the HTML file\n * that links in your sketch. Loading an image from a URL or other\n * remote location may be blocked due to your browser's built-in\n * security.\n *\n * @method loadImage\n * @param  {String} path Path of the image to be loaded\n * @param  {function(p5.Image)} [successCallback] Function to be called once\n *                                the image is loaded. Will be passed the\n *                                <a href=\"#/p5.Image\">p5.Image</a>.\n * @param  {function(Event)}    [failureCallback] called with event error if\n *                                the image fails to load.\n * @return {p5.Image}             the <a href=\"#/p5.Image\">p5.Image</a> object\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/laDefense.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * function setup() {\n *   // here we use a callback to display the image after loading\n *   loadImage('assets/laDefense.jpg', img => {\n *     image(img, 0, 0);\n *   });\n * }\n * </code>\n * </div>\n *\n * @alt\n * image of the underside of a white umbrella and grided ceililng above\n * image of the underside of a white umbrella and grided ceililng above\n *\n */\np5.prototype.loadImage = function(path, successCallback, failureCallback) {\n  p5._validateParameters('loadImage', arguments);\n  const pImg = new p5.Image(1, 1, this);\n  const self = this;\n\n  const req = new Request(path, {\n    method: 'GET',\n    mode: 'cors'\n  });\n\n  fetch(path, req).then(response => {\n    // GIF section\n    const contentType = response.headers.get('content-type');\n    if (contentType === null) {\n      console.warn(\n        'The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset.'\n      );\n    }\n    if (contentType && contentType.includes('image/gif')) {\n      response.arrayBuffer().then(\n        arrayBuffer => {\n          if (arrayBuffer) {\n            const byteArray = new Uint8Array(arrayBuffer);\n            _createGif(\n              byteArray,\n              pImg,\n              successCallback,\n              failureCallback,\n              (pImg => {\n                self._decrementPreload();\n              }).bind(self)\n            );\n          }\n        },\n        e => {\n          if (typeof failureCallback === 'function') {\n            failureCallback(e);\n          } else {\n            console.error(e);\n          }\n        }\n      );\n    } else {\n      // Non-GIF Section\n      const img = new Image();\n\n      img.onload = () => {\n        pImg.width = pImg.canvas.width = img.width;\n        pImg.height = pImg.canvas.height = img.height;\n\n        // Draw the image into the backing canvas of the p5.Image\n        pImg.drawingContext.drawImage(img, 0, 0);\n        pImg.modified = true;\n        if (typeof successCallback === 'function') {\n          successCallback(pImg);\n        }\n        self._decrementPreload();\n      };\n\n      img.onerror = e => {\n        p5._friendlyFileLoadError(0, img.src);\n        if (typeof failureCallback === 'function') {\n          failureCallback(e);\n        } else {\n          console.error(e);\n        }\n      };\n\n      // Set crossOrigin in case image is served with CORS headers.\n      // This will let us draw to the canvas without tainting it.\n      // See https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image\n      // When using data-uris the file will be loaded locally\n      // so we don't need to worry about crossOrigin with base64 file types.\n      if (path.indexOf('data:image/') !== 0) {\n        img.crossOrigin = 'Anonymous';\n      }\n      // start loading the image\n      img.src = path;\n    }\n    pImg.modified = true;\n  });\n  return pImg;\n};\n\n/**\n * Helper function for loading GIF-based images\n *\n */\nfunction _createGif(\n  arrayBuffer,\n  pImg,\n  successCallback,\n  failureCallback,\n  finishCallback\n) {\n  const gifReader = new omggif.GifReader(arrayBuffer);\n  pImg.width = pImg.canvas.width = gifReader.width;\n  pImg.height = pImg.canvas.height = gifReader.height;\n  const frames = [];\n  const numFrames = gifReader.numFrames();\n  let framePixels = new Uint8ClampedArray(pImg.width * pImg.height * 4);\n  if (numFrames > 1) {\n    const loadGIFFrameIntoImage = (frameNum, gifReader) => {\n      try {\n        gifReader.decodeAndBlitFrameRGBA(frameNum, framePixels);\n      } catch (e) {\n        p5._friendlyFileLoadError(8, pImg.src);\n        if (typeof failureCallback === 'function') {\n          failureCallback(e);\n        } else {\n          console.error(e);\n        }\n      }\n    };\n    for (let j = 0; j < numFrames; j++) {\n      const frameInfo = gifReader.frameInfo(j);\n      // Some GIFs are encoded so that they expect the previous frame\n      // to be under the current frame. This can occur at a sub-frame level\n      // There are possible disposal codes but I didn't encounter any\n      if (gifReader.frameInfo(j).disposal === 1 && j > 0) {\n        pImg.drawingContext.putImageData(frames[j - 1].image, 0, 0);\n      } else {\n        pImg.drawingContext.clearRect(0, 0, pImg.width, pImg.height);\n        framePixels = new Uint8ClampedArray(pImg.width * pImg.height * 4);\n      }\n      loadGIFFrameIntoImage(j, gifReader);\n      const imageData = new ImageData(framePixels, pImg.width, pImg.height);\n      pImg.drawingContext.putImageData(imageData, 0, 0);\n      frames.push({\n        image: pImg.drawingContext.getImageData(0, 0, pImg.width, pImg.height),\n        delay: frameInfo.delay * 10 //GIF stores delay in one-hundredth of a second, shift to ms\n      });\n    }\n\n    //Uses Netscape block encoding\n    //to repeat forever, this will be 0\n    //to repeat just once, this will be null\n    //to repeat N times (1<N), should contain integer for loop number\n    //this is changed to more usable values for us\n    //to repeat forever, loopCount = null\n    //everything else is just the number of loops\n    let loopLimit = gifReader.loopCount();\n    if (loopLimit === null) {\n      loopLimit = 1;\n    } else if (loopLimit === 0) {\n      loopLimit = null;\n    }\n\n    pImg.gifProperties = {\n      displayIndex: 0,\n      loopLimit,\n      loopCount: 0,\n      frames,\n      numFrames,\n      playing: true,\n      timeDisplayed: 0\n    };\n  }\n\n  if (typeof successCallback === 'function') {\n    successCallback(pImg);\n  }\n  finishCallback();\n}\n\n/**\n * Validates clipping params. Per drawImage spec sWidth and sHight cannot be\n * negative or greater than image intrinsic width and height\n * @private\n * @param {Number} sVal\n * @param {Number} iVal\n * @returns {Number}\n * @private\n */\nfunction _sAssign(sVal, iVal) {\n  if (sVal > 0 && sVal < iVal) {\n    return sVal;\n  } else {\n    return iVal;\n  }\n}\n\n/**\n * Draw an image to the p5.js canvas.\n *\n * This function can be used with different numbers of parameters. The\n * simplest use requires only three parameters: img, x, and y—where (x, y) is\n * the position of the image. Two more parameters can optionally be added to\n * specify the width and height of the image.\n *\n * This function can also be used with all eight Number parameters. To\n * differentiate between all these parameters, p5.js uses the language of\n * \"destination rectangle\" (which corresponds to \"dx\", \"dy\", etc.) and \"source\n * image\" (which corresponds to \"sx\", \"sy\", etc.) below. Specifying the\n * \"source image\" dimensions can be useful when you want to display a\n * subsection of the source image instead of the whole thing. Here's a diagram\n * to explain further:\n * <img src=\"assets/drawImage.png\"></img>\n *\n * @method image\n * @param  {p5.Image|p5.Element} img    the image to display\n * @param  {Number}   x     the x-coordinate of the top-left corner of the image\n * @param  {Number}   y     the y-coordinate of the top-left corner of the image\n * @param  {Number}   [width]  the width to draw the image\n * @param  {Number}   [height] the height to draw the image\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/laDefense.jpg');\n * }\n * function setup() {\n *   // Top-left corner of the img is at (0, 0)\n *   // Width and height are the img's original width and height\n *   image(img, 0, 0);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/laDefense.jpg');\n * }\n * function setup() {\n *   background(50);\n *   // Top-left corner of the img is at (10, 10)\n *   // Width and height are 50 x 50\n *   image(img, 10, 10, 50, 50);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * function setup() {\n *   // Here, we use a callback to display the image after loading\n *   loadImage('assets/laDefense.jpg', img => {\n *     image(img, 0, 0);\n *   });\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/gradient.png');\n * }\n * function setup() {\n *   // 1. Background image\n *   // Top-left corner of the img is at (0, 0)\n *   // Width and height are the img's original width and height, 100 x 100\n *   image(img, 0, 0);\n *   // 2. Top right image\n *   // Top-left corner of destination rectangle is at (50, 0)\n *   // Destination rectangle width and height are 40 x 20\n *   // The next parameters are relative to the source image:\n *   // - Starting at position (50, 50) on the source image, capture a 50 x 50\n *   // subsection\n *   // - Draw this subsection to fill the dimensions of the destination rectangle\n *   image(img, 50, 0, 40, 20, 50, 50, 50, 50);\n * }\n * </code>\n * </div>\n * @alt\n * image of the underside of a white umbrella and gridded ceiling above\n * image of the underside of a white umbrella and gridded ceiling above\n *\n */\n/**\n * @method image\n * @param  {p5.Image|p5.Element} img\n * @param  {Number}   dx     the x-coordinate of the destination\n *                           rectangle in which to draw the source image\n * @param  {Number}   dy     the y-coordinate of the destination\n *                           rectangle in which to draw the source image\n * @param  {Number}   dWidth  the width of the destination rectangle\n * @param  {Number}   dHeight the height of the destination rectangle\n * @param  {Number}   sx     the x-coordinate of the subsection of the source\n * image to draw into the destination rectangle\n * @param  {Number}   sy     the y-coordinate of the subsection of the source\n * image to draw into the destination rectangle\n * @param {Number}    [sWidth] the width of the subsection of the\n *                           source image to draw into the destination\n *                           rectangle\n * @param {Number}    [sHeight] the height of the subsection of the\n *                            source image to draw into the destination rectangle\n */\np5.prototype.image = function(\n  img,\n  dx,\n  dy,\n  dWidth,\n  dHeight,\n  sx,\n  sy,\n  sWidth,\n  sHeight\n) {\n  // set defaults per spec: https://goo.gl/3ykfOq\n\n  p5._validateParameters('image', arguments);\n\n  let defW = img.width;\n  let defH = img.height;\n\n  if (img.elt && img.elt.videoWidth && !img.canvas) {\n    // video no canvas\n    defW = img.elt.videoWidth;\n    defH = img.elt.videoHeight;\n  }\n\n  const _dx = dx;\n  const _dy = dy;\n  const _dw = dWidth || defW;\n  const _dh = dHeight || defH;\n  let _sx = sx || 0;\n  let _sy = sy || 0;\n  let _sw = sWidth || defW;\n  let _sh = sHeight || defH;\n\n  _sw = _sAssign(_sw, defW);\n  _sh = _sAssign(_sh, defH);\n\n  // This part needs cleanup and unit tests\n  // see issues https://github.com/processing/p5.js/issues/1741\n  // and https://github.com/processing/p5.js/issues/1673\n  let pd = 1;\n\n  if (img.elt && !img.canvas && img.elt.style.width) {\n    //if img is video and img.elt.size() has been used and\n    //no width passed to image()\n    if (img.elt.videoWidth && !dWidth) {\n      pd = img.elt.videoWidth;\n    } else {\n      //all other cases\n      pd = img.elt.width;\n    }\n    pd /= parseInt(img.elt.style.width, 10);\n  }\n\n  _sx *= pd;\n  _sy *= pd;\n  _sh *= pd;\n  _sw *= pd;\n\n  const vals = canvas.modeAdjust(_dx, _dy, _dw, _dh, this._renderer._imageMode);\n\n  // tint the image if there is a tint\n  this._renderer.image(img, _sx, _sy, _sw, _sh, vals.x, vals.y, vals.w, vals.h);\n};\n\n/**\n * Sets the fill value for displaying images. Images can be tinted to\n * specified colors or made transparent by including an alpha value.\n * <br><br>\n * To apply transparency to an image without affecting its color, use\n * white as the tint color and specify an alpha value. For instance,\n * tint(255, 128) will make an image 50% transparent (assuming the default\n * alpha range of 0-255, which can be changed with <a href=\"#/p5/colorMode\">colorMode()</a>).\n * <br><br>\n * The value for the gray parameter must be less than or equal to the current\n * maximum value as specified by <a href=\"#/p5/colorMode\">colorMode()</a>. The default maximum value is\n * 255.\n *\n *\n * @method tint\n * @param  {Number}        v1      red or hue value relative to\n *                                 the current color range\n * @param  {Number}        v2      green or saturation value\n *                                 relative to the current color range\n * @param  {Number}        v3      blue or brightness value\n *                                 relative to the current color range\n * @param  {Number}        [alpha]\n *\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/laDefense.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   tint(0, 153, 204); // Tint blue\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/laDefense.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   tint(0, 153, 204, 126); // Tint blue and set transparency\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/laDefense.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   tint(255, 126); // Apply transparency without changing color\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 side by side images of umbrella and ceiling, one image with blue tint\n * Images of umbrella and ceiling, one half of image with blue tint\n * 2 side by side images of umbrella and ceiling, one image translucent\n *\n */\n\n/**\n * @method tint\n * @param  {String}        value   a color string\n */\n\n/**\n * @method tint\n * @param  {Number}        gray   a gray value\n * @param  {Number}        [alpha]\n */\n\n/**\n * @method tint\n * @param  {Number[]}      values  an array containing the red,green,blue &\n *                                 and alpha components of the color\n */\n\n/**\n * @method tint\n * @param  {p5.Color}      color   the tint color\n */\np5.prototype.tint = function(...args) {\n  p5._validateParameters('tint', args);\n  const c = this.color(...args);\n  this._renderer._tint = c.levels;\n};\n\n/**\n * Removes the current fill value for displaying images and reverts to\n * displaying images with their original hues.\n *\n * @method noTint\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   tint(0, 153, 204); // Tint blue\n *   image(img, 0, 0);\n *   noTint(); // Disable tint\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 side by side images of bricks, left image with blue tint\n *\n */\np5.prototype.noTint = function() {\n  this._renderer._tint = null;\n};\n\n/**\n * Apply the current tint color to the input image, return the resulting\n * canvas.\n *\n * @private\n * @param {p5.Image} The image to be tinted\n * @return {canvas} The resulting tinted canvas\n *\n */\np5.prototype._getTintedImageCanvas = function(img) {\n  if (!img.canvas) {\n    return img;\n  }\n  const pixels = Filters._toPixels(img.canvas);\n  const tmpCanvas = document.createElement('canvas');\n  tmpCanvas.width = img.canvas.width;\n  tmpCanvas.height = img.canvas.height;\n  const tmpCtx = tmpCanvas.getContext('2d');\n  const id = tmpCtx.createImageData(img.canvas.width, img.canvas.height);\n  const newPixels = id.data;\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    const r = pixels[i];\n    const g = pixels[i + 1];\n    const b = pixels[i + 2];\n    const a = pixels[i + 3];\n\n    newPixels[i] = r * this._renderer._tint[0] / 255;\n    newPixels[i + 1] = g * this._renderer._tint[1] / 255;\n    newPixels[i + 2] = b * this._renderer._tint[2] / 255;\n    newPixels[i + 3] = a * this._renderer._tint[3] / 255;\n  }\n\n  tmpCtx.putImageData(id, 0, 0);\n  return tmpCanvas;\n};\n\n/**\n * Set image mode. Modifies the location from which images are drawn by\n * changing the way in which parameters given to <a href=\"#/p5/image\">image()</a> are interpreted.\n * The default mode is imageMode(CORNER), which interprets the second and\n * third parameters of <a href=\"#/p5/image\">image()</a> as the upper-left corner of the image. If\n * two additional parameters are specified, they are used to set the image's\n * width and height.\n * <br><br>\n * imageMode(CORNERS) interprets the second and third parameters of <a href=\"#/p5/image\">image()</a>\n * as the location of one corner, and the fourth and fifth parameters as the\n * opposite corner.\n * <br><br>\n * imageMode(CENTER) interprets the second and third parameters of <a href=\"#/p5/image\">image()</a>\n * as the image's center point. If two additional parameters are specified,\n * they are used to set the image's width and height.\n *\n * @method imageMode\n * @param {Constant} mode either CORNER, CORNERS, or CENTER\n * @example\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   imageMode(CORNER);\n *   image(img, 10, 10, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   imageMode(CORNERS);\n *   image(img, 10, 10, 90, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   imageMode(CENTER);\n *   image(img, 50, 50, 80, 80);\n * }\n * </code>\n * </div>\n *\n * @alt\n * small square image of bricks\n * horizontal rectangle image of bricks\n * large square image of bricks\n *\n */\np5.prototype.imageMode = function(m) {\n  p5._validateParameters('imageMode', arguments);\n  if (\n    m === constants.CORNER ||\n    m === constants.CORNERS ||\n    m === constants.CENTER\n  ) {\n    this._renderer._imageMode = m;\n  }\n};\n\nexport default p5;\n","/**\n * @module Image\n * @submodule Image\n * @requires core\n * @requires constants\n * @requires filters\n */\n\n/**\n * This module defines the <a href=\"#/p5.Image\">p5.Image</a> class and P5 methods for\n * drawing images to the main display canvas.\n */\n\nimport p5 from '../core/main';\nimport Filters from './filters';\n\n/*\n * Class methods\n */\n\n/**\n * Creates a new <a href=\"#/p5.Image\">p5.Image</a>. A <a href=\"#/p5.Image\">p5.Image</a> is a canvas backed representation of an\n * image.\n * <br><br>\n * p5 can display .gif, .jpg and .png images. Images may be displayed\n * in 2D and 3D space. Before an image is used, it must be loaded with the\n * <a href=\"#/p5/loadImage\">loadImage()</a> function. The <a href=\"#/p5.Image\">p5.Image</a> class contains fields for the width and\n * height of the image, as well as an array called <a href=\"#/p5.Image/pixels\">pixels[]</a> that contains the\n * values for every pixel in the image.\n * <br><br>\n * The methods described below allow easy access to the image's pixels and\n * alpha channel and simplify the process of compositing.\n * <br><br>\n * Before using the <a href=\"#/p5.Image/pixels\">pixels[]</a> array, be sure to use the <a href=\"#/p5.Image/loadPixels\">loadPixels()</a> method on\n * the image to make sure that the pixel data is properly loaded.\n * @example\n * <div><code>\n * function setup() {\n *   let img = createImage(100, 100); // same as new p5.Image(100, 100);\n *   img.loadPixels();\n *   createCanvas(100, 100);\n *   background(0);\n *\n *   // helper for writing color to array\n *   function writeColor(image, x, y, red, green, blue, alpha) {\n *     let index = (x + y * width) * 4;\n *     image.pixels[index] = red;\n *     image.pixels[index + 1] = green;\n *     image.pixels[index + 2] = blue;\n *     image.pixels[index + 3] = alpha;\n *   }\n *\n *   let x, y;\n *   // fill with random colors\n *   for (y = 0; y < img.height; y++) {\n *     for (x = 0; x < img.width; x++) {\n *       let red = random(255);\n *       let green = random(255);\n *       let blue = random(255);\n *       let alpha = 255;\n *       writeColor(img, x, y, red, green, blue, alpha);\n *     }\n *   }\n *\n *   // draw a red line\n *   y = 0;\n *   for (x = 0; x < img.width; x++) {\n *     writeColor(img, x, y, 255, 0, 0, 255);\n *   }\n *\n *   // draw a green line\n *   y = img.height - 1;\n *   for (x = 0; x < img.width; x++) {\n *     writeColor(img, x, y, 0, 255, 0, 255);\n *   }\n *\n *   img.updatePixels();\n *   image(img, 0, 0);\n * }\n * </code></div>\n *\n *\n * @class p5.Image\n * @constructor\n * @param {Number} width\n * @param {Number} height\n */\np5.Image = function(width, height) {\n  /**\n   * Image width.\n   * @property {Number} width\n   * @readOnly\n   * @example\n   * <div><code>\n   * let img;\n   * function preload() {\n   *   img = loadImage('assets/rockies.jpg');\n   * }\n   *\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   image(img, 0, 0);\n   *   for (let i = 0; i < img.width; i++) {\n   *     let c = img.get(i, img.height / 2);\n   *     stroke(c);\n   *     line(i, height / 2, i, height);\n   *   }\n   * }\n   * </code></div>\n   *\n   * @alt\n   * rocky mountains in top and horizontal lines in corresponding colors in bottom.\n   *\n   */\n  this.width = width;\n  /**\n   * Image height.\n   * @property {Number} height\n   * @readOnly\n   * @example\n   * <div><code>\n   * let img;\n   * function preload() {\n   *   img = loadImage('assets/rockies.jpg');\n   * }\n   *\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   image(img, 0, 0);\n   *   for (let i = 0; i < img.height; i++) {\n   *     let c = img.get(img.width / 2, i);\n   *     stroke(c);\n   *     line(0, i, width / 2, i);\n   *   }\n   * }\n   * </code></div>\n   *\n   * @alt\n   * rocky mountains on right and vertical lines in corresponding colors on left.\n   *\n   */\n  this.height = height;\n  this.canvas = document.createElement('canvas');\n  this.canvas.width = this.width;\n  this.canvas.height = this.height;\n  this.drawingContext = this.canvas.getContext('2d');\n  this._pixelsState = this;\n  this._pixelDensity = 1;\n  //Object for working with GIFs, defaults to null\n  this.gifProperties = null;\n  //For WebGL Texturing only: used to determine whether to reupload texture to GPU\n  this._modified = false;\n  /**\n   * Array containing the values for all the pixels in the display window.\n   * These values are numbers. This array is the size (include an appropriate\n   * factor for pixelDensity) of the display window x4,\n   * representing the R, G, B, A values in order for each pixel, moving from\n   * left to right across each row, then down each column. Retina and other\n   * high density displays may have more pixels (by a factor of\n   * pixelDensity^2).\n   * For example, if the image is 100x100 pixels, there will be 40,000. With\n   * pixelDensity = 2, there will be 160,000. The first four values\n   * (indices 0-3) in the array will be the R, G, B, A values of the pixel at\n   * (0, 0). The second four values (indices 4-7) will contain the R, G, B, A\n   * values of the pixel at (1, 0). More generally, to set values for a pixel\n   * at (x, y):\n   * ```javascript\n   * let d = pixelDensity();\n   * for (let i = 0; i < d; i++) {\n   *   for (let j = 0; j < d; j++) {\n   *     // loop over\n   *     index = 4 * ((y * d + j) * width * d + (x * d + i));\n   *     pixels[index] = r;\n   *     pixels[index+1] = g;\n   *     pixels[index+2] = b;\n   *     pixels[index+3] = a;\n   *   }\n   * }\n   * ```\n   * <br><br>\n   * Before accessing this array, the data must loaded with the <a href=\"#/p5.Image/loadPixels\">loadPixels()</a>\n   * function. After the array data has been modified, the <a href=\"#/p5.Image/updatePixels\">updatePixels()</a>\n   * function must be run to update the changes.\n   * @property {Number[]} pixels\n   * @example\n   * <div>\n   * <code>\n   * let img = createImage(66, 66);\n   * img.loadPixels();\n   * for (let i = 0; i < img.width; i++) {\n   *   for (let j = 0; j < img.height; j++) {\n   *     img.set(i, j, color(0, 90, 102));\n   *   }\n   * }\n   * img.updatePixels();\n   * image(img, 17, 17);\n   * </code>\n   * </div>\n   * <div>\n   * <code>\n   * let pink = color(255, 102, 204);\n   * let img = createImage(66, 66);\n   * img.loadPixels();\n   * for (let i = 0; i < 4 * (width * height / 2); i += 4) {\n   *   img.pixels[i] = red(pink);\n   *   img.pixels[i + 1] = green(pink);\n   *   img.pixels[i + 2] = blue(pink);\n   *   img.pixels[i + 3] = alpha(pink);\n   * }\n   * img.updatePixels();\n   * image(img, 17, 17);\n   * </code>\n   * </div>\n   *\n   * @alt\n   * 66x66 turquoise rect in center of canvas\n   * 66x66 pink rect in center of canvas\n   *\n   */\n  this.pixels = [];\n};\n\n/**\n * Helper function for animating GIF-based images with time\n *\n */\np5.Image.prototype._animateGif = function(pInst) {\n  const props = this.gifProperties;\n  if (props.playing) {\n    props.timeDisplayed += pInst.deltaTime;\n    const curDelay = props.frames[props.displayIndex].delay;\n    if (props.timeDisplayed >= curDelay) {\n      //GIF is bound to 'realtime' so can skip frames\n      const skips = Math.floor(props.timeDisplayed / curDelay);\n      props.timeDisplayed = 0;\n      props.displayIndex += skips;\n      props.loopCount = Math.floor(props.displayIndex / props.numFrames);\n      if (props.loopLimit !== null && props.loopCount >= props.loopLimit) {\n        props.playing = false;\n      } else {\n        const ind = props.displayIndex % props.numFrames;\n        this.drawingContext.putImageData(props.frames[ind].image, 0, 0);\n        props.displayIndex = ind;\n        this.setModified(true);\n      }\n    }\n  }\n};\n\n/**\n * Helper fxn for sharing pixel methods\n *\n */\np5.Image.prototype._setProperty = function(prop, value) {\n  this[prop] = value;\n  this.setModified(true);\n};\n\n/**\n * Loads the pixels data for this image into the [pixels] attribute.\n *\n * @method loadPixels\n * @example\n * <div><code>\n * let myImage;\n * let halfImage;\n *\n * function preload() {\n *   myImage = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   myImage.loadPixels();\n *   halfImage = 4 * myImage.width * myImage.height / 2;\n *   for (let i = 0; i < halfImage; i++) {\n *     myImage.pixels[i + halfImage] = myImage.pixels[i];\n *   }\n *   myImage.updatePixels();\n * }\n *\n * function draw() {\n *   image(myImage, 0, 0, width, height);\n * }\n * </code></div>\n *\n * @alt\n * 2 images of rocky mountains vertically stacked\n *\n */\np5.Image.prototype.loadPixels = function() {\n  p5.Renderer2D.prototype.loadPixels.call(this);\n  this.setModified(true);\n};\n\n/**\n * Updates the backing canvas for this image with the contents of\n * the [pixels] array.\n * <br><br>\n * If this image is an animated GIF then the pixels will be updated\n * in the frame that is currently displayed.\n *\n * @method updatePixels\n * @param {Integer} x x-offset of the target update area for the\n *                              underlying canvas\n * @param {Integer} y y-offset of the target update area for the\n *                              underlying canvas\n * @param {Integer} w height of the target update area for the\n *                              underlying canvas\n * @param {Integer} h height of the target update area for the\n *                              underlying canvas\n * @example\n * <div><code>\n * let myImage;\n * let halfImage;\n *\n * function preload() {\n *   myImage = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   myImage.loadPixels();\n *   halfImage = 4 * myImage.width * myImage.height / 2;\n *   for (let i = 0; i < halfImage; i++) {\n *     myImage.pixels[i + halfImage] = myImage.pixels[i];\n *   }\n *   myImage.updatePixels();\n * }\n *\n * function draw() {\n *   image(myImage, 0, 0, width, height);\n * }\n * </code></div>\n *\n * @alt\n * 2 images of rocky mountains vertically stacked\n *\n */\n/**\n * @method updatePixels\n */\np5.Image.prototype.updatePixels = function(x, y, w, h) {\n  p5.Renderer2D.prototype.updatePixels.call(this, x, y, w, h);\n  this.setModified(true);\n};\n\n/**\n * Get a region of pixels from an image.\n *\n * If no params are passed, the whole image is returned.\n * If x and y are the only params passed a single pixel is extracted.\n * If all params are passed a rectangle region is extracted and a <a href=\"#/p5.Image\">p5.Image</a>\n * is returned.\n *\n * @method get\n * @param  {Number}               x x-coordinate of the pixel\n * @param  {Number}               y y-coordinate of the pixel\n * @param  {Number}               w width\n * @param  {Number}               h height\n * @return {p5.Image}             the rectangle <a href=\"#/p5.Image\">p5.Image</a>\n * @example\n * <div><code>\n * let myImage;\n * let c;\n *\n * function preload() {\n *   myImage = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   background(myImage);\n *   noStroke();\n *   c = myImage.get(60, 90);\n *   fill(c);\n *   rect(25, 25, 50, 50);\n * }\n *\n * //get() returns color here\n * </code></div>\n *\n * @alt\n * image of rocky mountains with 50x50 green rect in front\n *\n */\n/**\n * @method get\n * @return {p5.Image}      the whole <a href=\"#/p5.Image\">p5.Image</a>\n */\n/**\n * @method get\n * @param  {Number}        x\n * @param  {Number}        y\n * @return {Number[]}      color of pixel at x,y in array format [R, G, B, A]\n */\np5.Image.prototype.get = function(x, y, w, h) {\n  p5._validateParameters('p5.Image.get', arguments);\n  return p5.Renderer2D.prototype.get.apply(this, arguments);\n};\n\np5.Image.prototype._getPixel = p5.Renderer2D.prototype._getPixel;\n\n/**\n * Set the color of a single pixel or write an image into\n * this <a href=\"#/p5.Image\">p5.Image</a>.\n *\n * Note that for a large number of pixels this will\n * be slower than directly manipulating the pixels array\n * and then calling <a href=\"#/p5.Image/updatePixels\">updatePixels()</a>.\n *\n * @method set\n * @param {Number}              x x-coordinate of the pixel\n * @param {Number}              y y-coordinate of the pixel\n * @param {Number|Number[]|Object}   a grayscale value | pixel array |\n *                                a <a href=\"#/p5.Color\">p5.Color</a> | image to copy\n * @example\n * <div>\n * <code>\n * let img = createImage(66, 66);\n * img.loadPixels();\n * for (let i = 0; i < img.width; i++) {\n *   for (let j = 0; j < img.height; j++) {\n *     img.set(i, j, color(0, 90, 102, (i % img.width) * 2));\n *   }\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * image(img, 34, 34);\n * </code>\n * </div>\n *\n * @alt\n * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\n *\n */\np5.Image.prototype.set = function(x, y, imgOrCol) {\n  p5.Renderer2D.prototype.set.call(this, x, y, imgOrCol);\n  this.setModified(true);\n};\n\n/**\n * Resize the image to a new width and height. To make the image scale\n * proportionally, use 0 as the value for the wide or high parameter.\n * For instance, to make the width of an image 150 pixels, and change\n * the height using the same proportion, use resize(150, 0).\n *\n * @method resize\n * @param {Number} width the resized image width\n * @param {Number} height the resized image height\n * @example\n * <div><code>\n * let img;\n *\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n\n * function draw() {\n *   image(img, 0, 0);\n * }\n *\n * function mousePressed() {\n *   img.resize(50, 100);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. zoomed in\n *\n */\np5.Image.prototype.resize = function(width, height) {\n  // Copy contents to a temporary canvas, resize the original\n  // and then copy back.\n  //\n  // There is a faster approach that involves just one copy and swapping the\n  // this.canvas reference. We could switch to that approach if (as i think\n  // is the case) there an expectation that the user would not hold a\n  // reference to the backing canvas of a p5.Image. But since we do not\n  // enforce that at the moment, I am leaving in the slower, but safer\n  // implementation.\n\n  // auto-resize\n  if (width === 0 && height === 0) {\n    width = this.canvas.width;\n    height = this.canvas.height;\n  } else if (width === 0) {\n    width = this.canvas.width * height / this.canvas.height;\n  } else if (height === 0) {\n    height = this.canvas.height * width / this.canvas.width;\n  }\n\n  width = Math.floor(width);\n  height = Math.floor(height);\n\n  const tempCanvas = document.createElement('canvas');\n  tempCanvas.width = width;\n  tempCanvas.height = height;\n\n  if (this.gifProperties) {\n    const props = this.gifProperties;\n    //adapted from github.com/LinusU/resize-image-data\n    const nearestNeighbor = (src, dst) => {\n      let pos = 0;\n      for (let y = 0; y < dst.height; y++) {\n        for (let x = 0; x < dst.width; x++) {\n          const srcX = Math.floor(x * src.width / dst.width);\n          const srcY = Math.floor(y * src.height / dst.height);\n          let srcPos = (srcY * src.width + srcX) * 4;\n          dst.data[pos++] = src.data[srcPos++]; // R\n          dst.data[pos++] = src.data[srcPos++]; // G\n          dst.data[pos++] = src.data[srcPos++]; // B\n          dst.data[pos++] = src.data[srcPos++]; // A\n        }\n      }\n    };\n    for (let i = 0; i < props.numFrames; i++) {\n      const resizedImageData = this.drawingContext.createImageData(\n        width,\n        height\n      );\n      nearestNeighbor(props.frames[i].image, resizedImageData);\n      props.frames[i].image = resizedImageData;\n    }\n  }\n\n  // prettier-ignore\n  tempCanvas.getContext('2d').drawImage(\n    this.canvas,\n    0, 0, this.canvas.width, this.canvas.height,\n    0, 0, tempCanvas.width, tempCanvas.height\n  );\n\n  // Resize the original canvas, which will clear its contents\n  this.canvas.width = this.width = width;\n  this.canvas.height = this.height = height;\n\n  //Copy the image back\n\n  // prettier-ignore\n  this.drawingContext.drawImage(\n    tempCanvas,\n    0, 0, width, height,\n    0, 0, width, height\n  );\n\n  if (this.pixels.length > 0) {\n    this.loadPixels();\n  }\n\n  this.setModified(true);\n};\n\n/**\n * Copies a region of pixels from one image to another. If no\n * srcImage is specified this is used as the source. If the source\n * and destination regions aren't the same size, it will\n * automatically resize source pixels to fit the specified\n * target region.\n *\n * @method copy\n * @param  {p5.Image|p5.Element} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n * @example\n * <div><code>\n * let photo;\n * let bricks;\n * let x;\n * let y;\n *\n * function preload() {\n *   photo = loadImage('assets/rockies.jpg');\n *   bricks = loadImage('assets/bricks.jpg');\n * }\n *\n * function setup() {\n *   x = bricks.width / 2;\n *   y = bricks.height / 2;\n *   photo.copy(bricks, 0, 0, x, y, 0, 0, x, y);\n *   image(photo, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains and smaller image on top of bricks at top left\n *\n */\n/**\n * @method copy\n * @param  {Integer} sx\n * @param  {Integer} sy\n * @param  {Integer} sw\n * @param  {Integer} sh\n * @param  {Integer} dx\n * @param  {Integer} dy\n * @param  {Integer} dw\n * @param  {Integer} dh\n */\np5.Image.prototype.copy = function(...args) {\n  p5.prototype.copy.apply(this, args);\n};\n\n/**\n * Masks part of an image from displaying by loading another\n * image and using its alpha channel as an alpha channel for\n * this image.\n *\n * @method mask\n * @param {p5.Image} srcImage source image\n * @example\n * <div><code>\n * let photo, maskImage;\n * function preload() {\n *   photo = loadImage('assets/rockies.jpg');\n *   maskImage = loadImage('assets/mask2.png');\n * }\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   photo.mask(maskImage);\n *   image(photo, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains with white at right\n *\n *\n * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\n *\n */\n// TODO: - Accept an array of alpha values.\n//       - Use other channels of an image. p5 uses the\n//       blue channel (which feels kind of arbitrary). Note: at the\n//       moment this method does not match native processing's original\n//       functionality exactly.\np5.Image.prototype.mask = function(p5Image) {\n  if (p5Image === undefined) {\n    p5Image = this;\n  }\n  const currBlend = this.drawingContext.globalCompositeOperation;\n\n  let scaleFactor = 1;\n  if (p5Image instanceof p5.Renderer) {\n    scaleFactor = p5Image._pInst._pixelDensity;\n  }\n\n  const copyArgs = [\n    p5Image,\n    0,\n    0,\n    scaleFactor * p5Image.width,\n    scaleFactor * p5Image.height,\n    0,\n    0,\n    this.width,\n    this.height\n  ];\n\n  this.drawingContext.globalCompositeOperation = 'destination-in';\n  p5.Image.prototype.copy.apply(this, copyArgs);\n  this.drawingContext.globalCompositeOperation = currBlend;\n  this.setModified(true);\n};\n\n/**\n * Applies an image filter to a <a href=\"#/p5.Image\">p5.Image</a>\n *\n * @method filter\n * @param  {Constant} filterType  either THRESHOLD, GRAY, OPAQUE, INVERT,\n *                                POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n *                                See Filters.js for docs on\n *                                each available filter\n * @param  {Number} [filterParam] an optional parameter unique\n *                                to each filter, see above\n * @example\n * <div><code>\n * let photo1;\n * let photo2;\n *\n * function preload() {\n *   photo1 = loadImage('assets/rockies.jpg');\n *   photo2 = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   photo2.filter(GRAY);\n *   image(photo1, 0, 0);\n *   image(photo2, width / 2, 0);\n * }\n * </code></div>\n *\n * @alt\n * 2 images of rocky mountains left one in color, right in black and white\n *\n */\np5.Image.prototype.filter = function(operation, value) {\n  Filters.apply(this.canvas, Filters[operation], value);\n  this.setModified(true);\n};\n\n/**\n * Copies a region of pixels from one image to another, using a specified\n * blend mode to do the operation.\n *\n * @method blend\n * @param  {p5.Image} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n * @param  {Constant} blendMode the blend mode. either\n *     BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n *     MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n *     SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.\n *\n * Available blend modes are: normal | multiply | screen | overlay |\n *            darken | lighten | color-dodge | color-burn | hard-light |\n *            soft-light | difference | exclusion | hue | saturation |\n *            color | luminosity\n *\n *\n * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\n * @example\n * <div><code>\n * let mountains;\n * let bricks;\n *\n * function preload() {\n *   mountains = loadImage('assets/rockies.jpg');\n *   bricks = loadImage('assets/bricks_third.jpg');\n * }\n *\n * function setup() {\n *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n *   image(mountains, 0, 0);\n *   image(bricks, 0, 0);\n * }\n * </code></div>\n * <div><code>\n * let mountains;\n * let bricks;\n *\n * function preload() {\n *   mountains = loadImage('assets/rockies.jpg');\n *   bricks = loadImage('assets/bricks_third.jpg');\n * }\n *\n * function setup() {\n *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n *   image(mountains, 0, 0);\n *   image(bricks, 0, 0);\n * }\n * </code></div>\n * <div><code>\n * let mountains;\n * let bricks;\n *\n * function preload() {\n *   mountains = loadImage('assets/rockies.jpg');\n *   bricks = loadImage('assets/bricks_third.jpg');\n * }\n *\n * function setup() {\n *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n *   image(mountains, 0, 0);\n *   image(bricks, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. Brick images on left and right. Right overexposed\n * image of rockies. Brickwall images on left and right. Right mortar transparent\n * image of rockies. Brickwall images on left and right. Right translucent\n *\n */\n/**\n * @method blend\n * @param  {Integer} sx\n * @param  {Integer} sy\n * @param  {Integer} sw\n * @param  {Integer} sh\n * @param  {Integer} dx\n * @param  {Integer} dy\n * @param  {Integer} dw\n * @param  {Integer} dh\n * @param  {Constant} blendMode\n */\np5.Image.prototype.blend = function(...args) {\n  p5.prototype.blend.apply(this, args);\n  this.setModified(true);\n};\n\n/**\n * helper method for web GL mode to indicate that an image has been\n * changed or unchanged since last upload. gl texture upload will\n * set this value to false after uploading the texture.\n * @method setModified\n * @param {boolean} val sets whether or not the image has been\n * modified.\n * @private\n */\np5.Image.prototype.setModified = function(val) {\n  this._modified = val; //enforce boolean?\n};\n\n/**\n * helper method for web GL mode to figure out if the image\n * has been modified and might need to be re-uploaded to texture\n * memory between frames.\n * @method isModified\n * @private\n * @return {boolean} a boolean indicating whether or not the\n * image has been updated or modified since last texture upload.\n */\np5.Image.prototype.isModified = function() {\n  return this._modified;\n};\n\n/**\n * Saves the image to a file and force the browser to download it.\n * Accepts two strings for filename and file extension\n * Supports png (default), jpg, and gif\n *<br><br>\n * Note that the file will only be downloaded as an animated GIF\n * if the p5.Image was loaded from a GIF file.\n * @method save\n * @param {String} filename give your file a name\n * @param  {String} extension 'png' or 'jpg'\n * @example\n * <div><code>\n * let photo;\n *\n * function preload() {\n *   photo = loadImage('assets/rockies.jpg');\n * }\n *\n * function draw() {\n *   image(photo, 0, 0);\n * }\n *\n * function keyTyped() {\n *   if (key === 's') {\n *     photo.save('photo', 'png');\n *   }\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains.\n *\n */\np5.Image.prototype.save = function(filename, extension) {\n  if (this.gifProperties) {\n    p5.prototype.saveGif(this, filename);\n  } else {\n    p5.prototype.saveCanvas(this.canvas, filename, extension);\n  }\n};\n\n// GIF Section\n/**\n * Starts an animated GIF over at the beginning state.\n *\n * @method reset\n * @example\n * <div><code>\n * let gif;\n *\n * function preload() {\n *   gif = loadImage('assets/arnott-wallace-wink-loop-once.gif');\n * }\n *\n * function draw() {\n *   background(255);\n *   // The GIF file that we loaded only loops once\n *   // so it freezes on the last frame after playing through\n *   image(gif, 0, 0);\n * }\n *\n * function mousePressed() {\n *   // Click to reset the GIF and begin playback from start\n *   gif.reset();\n * }\n * </code></div>\n * @alt\n * Animated image of a cartoon face that winks once and then freezes\n * When you click it animates again, winks once and freezes\n *\n */\np5.Image.prototype.reset = function() {\n  if (this.gifProperties) {\n    const props = this.gifProperties;\n    props.playing = true;\n    props.timeSinceStart = 0;\n    props.timeDisplayed = 0;\n    props.loopCount = 0;\n    props.displayIndex = 0;\n    this.drawingContext.putImageData(props.frames[0].image, 0, 0);\n  }\n};\n\n/**\n * Gets the index for the frame that is currently visible in an animated GIF.\n *\n * @method getCurrentFrame\n * @return {Number}       The index for the currently displaying frame in animated GIF\n * @example\n * <div><code>\n * let gif;\n *\n * function preload() {\n *   gif = loadImage('assets/arnott-wallace-eye-loop-forever.gif');\n * }\n *\n * function draw() {\n *   let frame = gif.getCurrentFrame();\n *   image(gif, 0, 0);\n *   text(frame, 10, 90);\n * }\n * </code></div>\n * @alt\n * Animated image of a cartoon eye looking around and then\n * looking outwards, in the lower-left hand corner a number counts\n * up quickly to 124 and then starts back over at 0\n *\n */\np5.Image.prototype.getCurrentFrame = function() {\n  if (this.gifProperties) {\n    const props = this.gifProperties;\n    return props.displayIndex % props.numFrames;\n  }\n};\n\n/**\n * Sets the index of the frame that is currently visible in an animated GIF\n *\n * @method setFrame\n * @param {Number}       index the index for the frame that should be displayed\n * @example\n * <div><code>\n * let gif;\n *\n * function preload() {\n *   gif = loadImage('assets/arnott-wallace-eye-loop-forever.gif');\n * }\n *\n * // Move your mouse up and down over canvas to see the GIF\n * // frames animate\n * function draw() {\n *   gif.pause();\n *   image(gif, 0, 0);\n *   // Get the highest frame number which is the number of frames - 1\n *   let maxFrame = gif.numFrames() - 1;\n *   // Set the current frame that is mapped to be relative to mouse position\n *   let frameNumber = floor(map(mouseY, 0, height, 0, maxFrame, true));\n *   gif.setFrame(frameNumber);\n * }\n * </code></div>\n * @alt\n * A still image of a cartoon eye that looks around when you move your mouse\n * up and down over the canvas\n *\n */\np5.Image.prototype.setFrame = function(index) {\n  if (this.gifProperties) {\n    const props = this.gifProperties;\n    if (index < props.numFrames && index >= 0) {\n      props.timeDisplayed = 0;\n      props.displayIndex = index;\n      this.drawingContext.putImageData(props.frames[index].image, 0, 0);\n    } else {\n      console.log(\n        'Cannot set GIF to a frame number that is higher than total number of frames or below zero.'\n      );\n    }\n  }\n};\n\n/**\n * Returns the number of frames in an animated GIF\n *\n * @method numFrames\n * @return {Number}\n * @example     The number of frames in the animated GIF\n * <div><code>\n * let gif;\n *\n * function preload() {\n *   gif = loadImage('assets/arnott-wallace-eye-loop-forever.gif');\n * }\n *\n * // Move your mouse up and down over canvas to see the GIF\n * // frames animate\n * function draw() {\n *   gif.pause();\n *   image(gif, 0, 0);\n *   // Get the highest frame number which is the number of frames - 1\n *   let maxFrame = gif.numFrames() - 1;\n *   // Set the current frame that is mapped to be relative to mouse position\n *   let frameNumber = floor(map(mouseY, 0, height, 0, maxFrame, true));\n *   gif.setFrame(frameNumber);\n * }\n * </code></div>\n * @alt\n * A still image of a cartoon eye that looks around when you move your mouse\n * up and down over the canvas\n *\n */\np5.Image.prototype.numFrames = function() {\n  if (this.gifProperties) {\n    return this.gifProperties.numFrames;\n  }\n};\n\n/**\n * Plays an animated GIF that was paused with\n * <a href=\"#/p5.Image/pause\">pause()</a>\n *\n * @method play\n * @example\n * <div><code>\n * let gif;\n *\n * function preload() {\n *   gif = loadImage('assets/nancy-liang-wind-loop-forever.gif');\n * }\n *\n * function draw() {\n *   background(255);\n *   image(gif, 0, 0);\n * }\n *\n * function mousePressed() {\n *   gif.pause();\n * }\n *\n * function mouseReleased() {\n *   gif.play();\n * }\n * </code></div>\n * @alt\n * An animated GIF of a drawing of small child with\n * hair blowing in the wind, when you click the image\n * freezes when you release it animates again\n *\n */\np5.Image.prototype.play = function() {\n  if (this.gifProperties) {\n    this.gifProperties.playing = true;\n  }\n};\n\n/**\n * Pauses an animated GIF.\n *\n * @method pause\n * @example\n * <div><code>\n * let gif;\n *\n * function preload() {\n *   gif = loadImage('assets/nancy-liang-wind-loop-forever.gif');\n * }\n *\n * function draw() {\n *   background(255);\n *   image(gif, 0, 0);\n * }\n *\n * function mousePressed() {\n *   gif.pause();\n * }\n *\n * function mouseReleased() {\n *   gif.play();\n * }\n * </code></div>\n * @alt\n * An animated GIF of a drawing of small child with\n * hair blowing in the wind, when you click the image\n * freezes when you release it animates again\n *\n */\np5.Image.prototype.pause = function() {\n  if (this.gifProperties) {\n    this.gifProperties.playing = false;\n  }\n};\n\n/**\n * Changes the delay between frames in an animated GIF. There is an optional second parameter that\n * indicates an index for a specific frame that should have its delay modified. If no index is given, all frames\n * will have the new delay.\n *\n * @method delay\n * @param {Number}    d the amount in milliseconds to delay between switching frames\n * @param {Number}    [index] the index of the frame that should have the new delay value {optional}\n * @example\n * <div><code>\n * let gifFast, gifSlow;\n *\n * function preload() {\n *   gifFast = loadImage('assets/arnott-wallace-eye-loop-forever.gif');\n *   gifSlow = loadImage('assets/arnott-wallace-eye-loop-forever.gif');\n * }\n *\n * function setup() {\n *   gifFast.resize(width / 2, height / 2);\n *   gifSlow.resize(width / 2, height / 2);\n *\n *   //Change the delay here\n *   gifFast.delay(10);\n *   gifSlow.delay(100);\n * }\n *\n * function draw() {\n *   background(255);\n *   image(gifFast, 0, 0);\n *   image(gifSlow, width / 2, 0);\n * }\n * </code></div>\n * @alt\n * Two animated gifs of cartoon eyes looking around\n * The gif on the left animates quickly, on the right\n * the animation is much slower\n *\n */\np5.Image.prototype.delay = function(d, index) {\n  if (this.gifProperties) {\n    const props = this.gifProperties;\n    if (index < props.numFrames && index >= 0) {\n      props.frames[index].delay = d;\n    } else {\n      // change all frames\n      for (const frame of props.frames) {\n        frame.delay = d;\n      }\n    }\n  }\n};\n\nexport default p5.Image;\n","/**\n * @module Image\n * @submodule Pixels\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\nimport Filters from './filters';\nimport '../color/p5.Color';\n\n/**\n * <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\n * /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a>\n * containing the values for all the pixels in the display window.\n * These values are numbers. This array is the size (include an appropriate\n * factor for <a href=\"#/p5/pixelDensity\">pixelDensity</a>) of the display window x4,\n * representing the R, G, B, A values in order for each pixel, moving from\n * left to right across each row, then down each column. Retina and other\n * high density displays will have more pixels[] (by a factor of\n * pixelDensity^2).\n * For example, if the image is 100x100 pixels, there will be 40,000. On a\n * retina display, there will be 160,000.\n * <br><br>\n * The first four values (indices 0-3) in the array will be the R, G, B, A\n * values of the pixel at (0, 0). The second four values (indices 4-7) will\n * contain the R, G, B, A values of the pixel at (1, 0). More generally, to\n * set values for a pixel at (x, y):\n * ```javascript\n * let d = pixelDensity();\n * for (let i = 0; i < d; i++) {\n *   for (let j = 0; j < d; j++) {\n *     // loop over\n *     index = 4 * ((y * d + j) * width * d + (x * d + i));\n *     pixels[index] = r;\n *     pixels[index+1] = g;\n *     pixels[index+2] = b;\n *     pixels[index+3] = a;\n *   }\n * }\n * ```\n * <p>While the above method is complex, it is flexible enough to work with\n * any pixelDensity. Note that <a href=\"#/p5/set\">set()</a> will automatically take care of\n * setting all the appropriate values in <a href=\"#/p5/pixels\">pixels[]</a> for a given (x, y) at\n * any pixelDensity, but the performance may not be as fast when lots of\n * modifications are made to the pixel array.\n * <br><br>\n * Before accessing this array, the data must loaded with the <a href=\"#/p5/loadPixels\">loadPixels()</a>\n * function. After the array data has been modified, the <a href=\"#/p5/updatePixels\">updatePixels()</a>\n * function must be run to update the changes.\n * <br><br>\n * Note that this is not a standard javascript array.  This means that\n * standard javascript functions such as <a href=\"#/p5/slice\">slice()</a> or\n * <a href=\"#/p5/arrayCopy\">arrayCopy()</a> do not\n * work.</p>\n *\n * @property {Number[]} pixels\n * @example\n * <div>\n * <code>\n * let pink = color(255, 102, 204);\n * loadPixels();\n * let d = pixelDensity();\n * let halfImage = 4 * (width * d) * (height / 2 * d);\n * for (let i = 0; i < halfImage; i += 4) {\n *   pixels[i] = red(pink);\n *   pixels[i + 1] = green(pink);\n *   pixels[i + 2] = blue(pink);\n *   pixels[i + 3] = alpha(pink);\n * }\n * updatePixels();\n * </code>\n * </div>\n *\n * @alt\n * top half of canvas pink, bottom grey\n *\n */\np5.prototype.pixels = [];\n\n/**\n * Copies a region of pixels from one image to another, using a specified\n * blend mode to do the operation.\n *\n * @method blend\n * @param  {p5.Image} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n * @param  {Constant} blendMode the blend mode. either\n *     BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n *     MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n *     SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.\n *\n * @example\n * <div><code>\n * let img0;\n * let img1;\n *\n * function preload() {\n *   img0 = loadImage('assets/rockies.jpg');\n *   img1 = loadImage('assets/bricks_third.jpg');\n * }\n *\n * function setup() {\n *   background(img0);\n *   image(img1, 0, 0);\n *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n * }\n * </code></div>\n * <div><code>\n * let img0;\n * let img1;\n *\n * function preload() {\n *   img0 = loadImage('assets/rockies.jpg');\n *   img1 = loadImage('assets/bricks_third.jpg');\n * }\n *\n * function setup() {\n *   background(img0);\n *   image(img1, 0, 0);\n *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n * }\n * </code></div>\n * <div><code>\n * let img0;\n * let img1;\n *\n * function preload() {\n *   img0 = loadImage('assets/rockies.jpg');\n *   img1 = loadImage('assets/bricks_third.jpg');\n * }\n *\n * function setup() {\n *   background(img0);\n *   image(img1, 0, 0);\n *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. Brick images on left and right. Right overexposed\n * image of rockies. Brickwall images on left and right. Right mortar transparent\n * image of rockies. Brickwall images on left and right. Right translucent\n *\n *\n */\n/**\n * @method blend\n * @param  {Integer} sx\n * @param  {Integer} sy\n * @param  {Integer} sw\n * @param  {Integer} sh\n * @param  {Integer} dx\n * @param  {Integer} dy\n * @param  {Integer} dw\n * @param  {Integer} dh\n * @param  {Constant} blendMode\n */\np5.prototype.blend = function(...args) {\n  p5._validateParameters('blend', args);\n  if (this._renderer) {\n    this._renderer.blend(...args);\n  } else {\n    p5.Renderer2D.prototype.blend.apply(this, args);\n  }\n};\n\n/**\n * Copies a region of the canvas to another region of the canvas\n * and copies a region of pixels from an image used as the srcImg parameter\n * into the canvas srcImage is specified this is used as the source. If\n * the source and destination regions aren't the same size, it will\n * automatically resize source pixels to fit the specified\n * target region.\n *\n * @method copy\n * @param  {p5.Image|p5.Element} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n *\n * @example\n * <div><code>\n * let img;\n *\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   background(img);\n *   copy(img, 7, 22, 10, 10, 35, 25, 50, 50);\n *   stroke(255);\n *   noFill();\n *   // Rectangle shows area being copied\n *   rect(7, 22, 10, 10);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. Brick images on left and right. Right overexposed\n * image of rockies. Brickwall images on left and right. Right mortar transparent\n * image of rockies. Brickwall images on left and right. Right translucent\n *\n */\n/**\n * @method copy\n * @param  {Integer} sx\n * @param  {Integer} sy\n * @param  {Integer} sw\n * @param  {Integer} sh\n * @param  {Integer} dx\n * @param  {Integer} dy\n * @param  {Integer} dw\n * @param  {Integer} dh\n */\np5.prototype.copy = function(...args) {\n  p5._validateParameters('copy', args);\n\n  let srcImage, sx, sy, sw, sh, dx, dy, dw, dh;\n  if (args.length === 9) {\n    srcImage = args[0];\n    sx = args[1];\n    sy = args[2];\n    sw = args[3];\n    sh = args[4];\n    dx = args[5];\n    dy = args[6];\n    dw = args[7];\n    dh = args[8];\n  } else if (args.length === 8) {\n    srcImage = this;\n    sx = args[0];\n    sy = args[1];\n    sw = args[2];\n    sh = args[3];\n    dx = args[4];\n    dy = args[5];\n    dw = args[6];\n    dh = args[7];\n  } else {\n    throw new Error('Signature not supported');\n  }\n\n  p5.prototype._copyHelper(this, srcImage, sx, sy, sw, sh, dx, dy, dw, dh);\n};\n\np5.prototype._copyHelper = (\n  dstImage,\n  srcImage,\n  sx,\n  sy,\n  sw,\n  sh,\n  dx,\n  dy,\n  dw,\n  dh\n) => {\n  srcImage.loadPixels();\n  const s = srcImage.canvas.width / srcImage.width;\n  // adjust coord system for 3D when renderer\n  // ie top-left = -width/2, -height/2\n  let sxMod = 0;\n  let syMod = 0;\n  if (srcImage._renderer && srcImage._renderer.isP3D) {\n    sxMod = srcImage.width / 2;\n    syMod = srcImage.height / 2;\n  }\n  if (dstImage._renderer && dstImage._renderer.isP3D) {\n    p5.RendererGL.prototype.image.call(\n      dstImage._renderer,\n      srcImage,\n      sx + sxMod,\n      sy + syMod,\n      sw,\n      sh,\n      dx,\n      dy,\n      dw,\n      dh\n    );\n  } else {\n    dstImage.drawingContext.drawImage(\n      srcImage.canvas,\n      s * (sx + sxMod),\n      s * (sy + syMod),\n      s * sw,\n      s * sh,\n      dx,\n      dy,\n      dw,\n      dh\n    );\n  }\n};\n\n/**\n * Applies a filter to the canvas.\n * <br><br>\n *\n * The presets options are:\n * <br><br>\n *\n * THRESHOLD\n * Converts the image to black and white pixels depending if they are above or\n * below the threshold defined by the level parameter. The parameter must be\n * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n * <br><br>\n *\n * GRAY\n * Converts any colors in the image to grayscale equivalents. No parameter\n * is used.\n * <br><br>\n *\n * OPAQUE\n * Sets the alpha channel to entirely opaque. No parameter is used.\n * <br><br>\n *\n * INVERT\n * Sets each pixel to its inverse value. No parameter is used.\n * <br><br>\n *\n * POSTERIZE\n * Limits each channel of the image to the number of colors specified as the\n * parameter. The parameter can be set to values between 2 and 255, but\n * results are most noticeable in the lower ranges.\n * <br><br>\n *\n * BLUR\n * Executes a Gaussian blur with the level parameter specifying the extent\n * of the blurring. If no parameter is used, the blur is equivalent to\n * Gaussian blur of radius 1. Larger values increase the blur.\n * <br><br>\n *\n * ERODE\n * Reduces the light areas. No parameter is used.\n * <br><br>\n *\n * DILATE\n * Increases the light areas. No parameter is used.\n * <br><br>\n *\n * filter() does not work in WEBGL mode.\n * A similar effect can be achieved in WEBGL mode using custom\n * shaders. Adam Ferriss has written\n * a <a href=\"https://github.com/aferriss/p5jsShaderExamples\"\n * target='_blank'>selection of shader examples</a> that contains many\n * of the effects present in the filter examples.\n *\n * @method filter\n * @param  {Constant} filterType  either THRESHOLD, GRAY, OPAQUE, INVERT,\n *                                POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n *                                See Filters.js for docs on\n *                                each available filter\n * @param  {Number} [filterParam] an optional parameter unique\n *                                to each filter, see above\n *\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(THRESHOLD);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(GRAY);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(OPAQUE);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(INVERT);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(POSTERIZE, 3);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(DILATE);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(BLUR, 3);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/bricks.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   filter(ERODE);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black and white image of a brick wall.\n * greyscale image of a brickwall\n * image of a brickwall\n * jade colored image of a brickwall\n * red and pink image of a brickwall\n * image of a brickwall\n * blurry image of a brickwall\n * image of a brickwall\n * image of a brickwall with less detail\n *\n */\np5.prototype.filter = function(operation, value) {\n  p5._validateParameters('filter', arguments);\n  if (this.canvas !== undefined) {\n    Filters.apply(this.canvas, Filters[operation], value);\n  } else {\n    Filters.apply(this.elt, Filters[operation], value);\n  }\n};\n\n/**\n * Get a region of pixels, or a single pixel, from the canvas.\n *\n * Returns an array of [R,G,B,A] values for any pixel or grabs a section of\n * an image. If no parameters are specified, the entire image is returned.\n * Use the x and y parameters to get the value of one pixel. Get a section of\n * the display window by specifying additional w and h parameters. When\n * getting an image, the x and y parameters define the coordinates for the\n * upper-left corner of the image, regardless of the current <a href=\"#/p5/imageMode\">imageMode()</a>.\n * <br><br>\n * Getting the color of a single pixel with get(x, y) is easy, but not as fast\n * as grabbing the data directly from <a href=\"#/p5/pixels\">pixels[]</a>. The equivalent statement to\n * get(x, y) using <a href=\"#/p5/pixels\">pixels[]</a> with pixel density d is\n * ```javascript\n * let x, y, d; // set these to the coordinates\n * let off = (y * width + x) * d * 4;\n * let components = [\n *   pixels[off],\n *   pixels[off + 1],\n *   pixels[off + 2],\n *   pixels[off + 3]\n * ];\n * print(components);\n * ```\n * <br><br>\n *\n * See the reference for <a href=\"#/p5/pixels\">pixels[]</a> for more information.\n *\n * If you want to extract an array of colors or a subimage from an p5.Image object,\n * take a look at <a href=\"#/p5.Image/get\">p5.Image.get()</a>\n *\n * @method get\n * @param  {Number}         x x-coordinate of the pixel\n * @param  {Number}         y y-coordinate of the pixel\n * @param  {Number}         w width\n * @param  {Number}         h height\n * @return {p5.Image}       the rectangle <a href=\"#/p5.Image\">p5.Image</a>\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   let c = get();\n *   image(c, width / 2, 0);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   let c = get(50, 90);\n *   fill(c);\n *   noStroke();\n *   rect(25, 25, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 images of the rocky mountains, side-by-side\n * Image of the rocky mountains with 50x50 green rect in center of canvas\n *\n */\n/**\n * @method get\n * @return {p5.Image}      the whole <a href=\"#/p5.Image\">p5.Image</a>\n */\n/**\n * @method get\n * @param  {Number}        x\n * @param  {Number}        y\n * @return {Number[]}      color of pixel at x,y in array format [R, G, B, A]\n */\np5.prototype.get = function(x, y, w, h) {\n  p5._validateParameters('get', arguments);\n  return this._renderer.get(...arguments);\n};\n\n/**\n * Loads the pixel data for the display window into the <a href=\"#/p5/pixels\">pixels[]</a> array. This\n * function must always be called before reading from or writing to <a href=\"#/p5/pixels\">pixels[]</a>.\n * Note that only changes made with <a href=\"#/p5/set\">set()</a> or direct manipulation of <a href=\"#/p5/pixels\">pixels[]</a>\n * will occur.\n *\n * @method loadPixels\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   image(img, 0, 0, width, height);\n *   let d = pixelDensity();\n *   let halfImage = 4 * (width * d) * (height * d / 2);\n *   loadPixels();\n *   for (let i = 0; i < halfImage; i++) {\n *     pixels[i + halfImage] = pixels[i];\n *   }\n *   updatePixels();\n * }\n * </code>\n * </div>\n *\n * @alt\n * two images of the rocky mountains. one on top, one on bottom of canvas.\n *\n */\np5.prototype.loadPixels = function(...args) {\n  p5._validateParameters('loadPixels', args);\n  this._renderer.loadPixels();\n};\n\n/**\n * <p>Changes the color of any pixel, or writes an image directly to the\n * display window.</p>\n * <p>The x and y parameters specify the pixel to change and the c parameter\n * specifies the color value. This can be a <a href=\"#/p5.Color\">p5.Color</a> object, or [R, G, B, A]\n * pixel array. It can also be a single grayscale value.\n * When setting an image, the x and y parameters define the coordinates for\n * the upper-left corner of the image, regardless of the current <a href=\"#/p5/imageMode\">imageMode()</a>.\n * </p>\n * <p>\n * After using <a href=\"#/p5/set\">set()</a>, you must call <a href=\"#/p5/updatePixels\">updatePixels()</a> for your changes to appear.\n * This should be called once all pixels have been set, and must be called before\n * calling .<a href=\"#/p5/get\">get()</a> or drawing the image.\n * </p>\n * <p>Setting the color of a single pixel with set(x, y) is easy, but not as\n * fast as putting the data directly into <a href=\"#/p5/pixels\">pixels[]</a>. Setting the <a href=\"#/p5/pixels\">pixels[]</a>\n * values directly may be complicated when working with a retina display,\n * but will perform better when lots of pixels need to be set directly on\n * every loop.</p>\n * <p>See the reference for <a href=\"#/p5/pixels\">pixels[]</a> for more information.</p>\n *\n * @method set\n * @param {Number}              x x-coordinate of the pixel\n * @param {Number}              y y-coordinate of the pixel\n * @param {Number|Number[]|Object} c insert a grayscale value | a pixel array |\n *                                a <a href=\"#/p5.Color\">p5.Color</a> object | a <a href=\"#/p5.Image\">p5.Image</a> to copy\n * @example\n * <div>\n * <code>\n * let black = color(0);\n * set(30, 20, black);\n * set(85, 20, black);\n * set(85, 75, black);\n * set(30, 75, black);\n * updatePixels();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * for (let i = 30; i < width - 15; i++) {\n *   for (let j = 20; j < height - 25; j++) {\n *     let c = color(204 - j, 153 - i, 0);\n *     set(i, j, c);\n *   }\n * }\n * updatePixels();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   set(0, 0, img);\n *   updatePixels();\n *   line(0, 0, width, height);\n *   line(0, height, width, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 4 black points in the shape of a square middle-right of canvas.\n * square with orangey-brown gradient lightening at bottom right.\n * image of the rocky mountains. with lines like an 'x' through the center.\n */\np5.prototype.set = function(x, y, imgOrCol) {\n  this._renderer.set(x, y, imgOrCol);\n};\n/**\n * Updates the display window with the data in the <a href=\"#/p5/pixels\">pixels[]</a> array.\n * Use in conjunction with <a href=\"#/p5/loadPixels\">loadPixels()</a>. If you're only reading pixels from\n * the array, there's no need to call <a href=\"#/p5/updatePixels\">updatePixels()</a> — updating is only\n * necessary to apply changes. <a href=\"#/p5/updatePixels\">updatePixels()</a> should be called anytime the\n * pixels array is manipulated or <a href=\"#/p5/set\">set()</a> is called, and only changes made with\n * <a href=\"#/p5/set\">set()</a> or direct changes to <a href=\"#/p5/pixels\">pixels[]</a> will occur.\n *\n * @method updatePixels\n * @param  {Number} [x]    x-coordinate of the upper-left corner of region\n *                         to update\n * @param  {Number} [y]    y-coordinate of the upper-left corner of region\n *                         to update\n * @param  {Number} [w]    width of region to update\n * @param  {Number} [h]    height of region to update\n * @example\n * <div>\n * <code>\n * let img;\n * function preload() {\n *   img = loadImage('assets/rockies.jpg');\n * }\n *\n * function setup() {\n *   image(img, 0, 0, width, height);\n *   let d = pixelDensity();\n *   let halfImage = 4 * (width * d) * (height * d / 2);\n *   loadPixels();\n *   for (let i = 0; i < halfImage; i++) {\n *     pixels[i + halfImage] = pixels[i];\n *   }\n *   updatePixels();\n * }\n * </code>\n * </div>\n * @alt\n * two images of the rocky mountains. one on top, one on bottom of canvas.\n */\np5.prototype.updatePixels = function(x, y, w, h) {\n  p5._validateParameters('updatePixels', arguments);\n  // graceful fail - if loadPixels() or set() has not been called, pixel\n  // array will be empty, ignore call to updatePixels()\n  if (this.pixels.length === 0) {\n    return;\n  }\n  this._renderer.updatePixels(x, y, w, h);\n};\n\nexport default p5;\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import Promise from './es6-promise/promise';\nimport polyfill from './es6-promise/polyfill';\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\nexport default Promise;","export function objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\n\nexport function isMaybeThenable(x) {\n  return x !== null && typeof x === 'object';\n}\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nexport var isArray = _isArray;","var len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nexport var asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nexport function setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nexport function setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}","import { invokeCallback, subscribe, FULFILLED, REJECTED, noop, makePromise, PROMISE_ID } from './-internal';\n\nimport { asap } from './asap';\n\nexport default function then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}","import { noop, resolve as _resolve } from '../-internal';\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nexport default function resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}","import { objectOrFunction, isFunction } from './utils';\n\nimport { asap } from './asap';\n\nimport originalThen from './then';\nimport originalResolve from './promise/resolve';\n\nexport var PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then) {\n  if (maybeThenable.constructor === promise.constructor && then === originalThen && maybeThenable.constructor.resolve === originalResolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then)) {\n      handleForeignThenable(promise, maybeThenable, then);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then = void 0;\n    try {\n      then = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nexport { nextId, makePromise, noop, resolve, reject, fulfill, subscribe, publish, publishRejection, initializePromise, invokeCallback, FULFILLED, REJECTED, PENDING, handleMaybeThenable };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { isArray, isMaybeThenable } from './utils';\nimport { noop, reject, fulfill, subscribe, FULFILLED, REJECTED, PENDING, handleMaybeThenable } from './-internal';\n\nimport then from './then';\nimport Promise from './promise';\nimport originalResolve from './promise/resolve';\nimport originalThen from './then';\nimport { makePromise, PROMISE_ID } from './-internal';\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve = c.resolve;\n\n\n    if (resolve === originalResolve) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === originalThen && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve) {\n          return resolve(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\nexport default Enumerator;\n;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { isFunction } from './utils';\nimport { noop, nextId, PROMISE_ID, initializePromise } from './-internal';\nimport { asap, setAsap, setScheduler } from './asap';\n\nimport all from './promise/all';\nimport race from './promise/race';\nimport Resolve from './promise/resolve';\nimport Reject from './promise/reject';\nimport then from './then';\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise.prototype.then = then;\nexport default Promise;\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = Resolve;\nPromise.reject = Reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;","import Enumerator from '../enumerator';\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nexport default function all(entries) {\n  return new Enumerator(this, entries).promise;\n}","import { isArray } from \"../utils\";\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nexport default function race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}","import { noop, reject as _reject } from '../-internal';\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nexport default function reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}","/*global self*/\nimport Promise from './promise';\n\nexport default function polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise;\n}","// This file can be required in Browserify and Node.js for automatic polyfill\n// To use it:  require('es6-promise/auto');\n'use strict';\nmodule.exports = require('./').polyfill();\n","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.fetchJsonp = mod.exports;\n  }\n})(this, function (exports, module) {\n  'use strict';\n\n  var defaultOptions = {\n    timeout: 5000,\n    jsonpCallback: 'callback',\n    jsonpCallbackFunction: null\n  };\n\n  function generateCallbackFunction() {\n    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n  }\n\n  function clearFunction(functionName) {\n    // IE8 throws an exception when you try to delete a property on window\n    // http://stackoverflow.com/a/1824228/751089\n    try {\n      delete window[functionName];\n    } catch (e) {\n      window[functionName] = undefined;\n    }\n  }\n\n  function removeScript(scriptId) {\n    var script = document.getElementById(scriptId);\n    if (script) {\n      document.getElementsByTagName('head')[0].removeChild(script);\n    }\n  }\n\n  function fetchJsonp(_url) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    // to avoid param reassign\n    var url = _url;\n    var timeout = options.timeout || defaultOptions.timeout;\n    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;\n\n    var timeoutId = undefined;\n\n    return new Promise(function (resolve, reject) {\n      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();\n      var scriptId = jsonpCallback + '_' + callbackFunction;\n\n      window[callbackFunction] = function (response) {\n        resolve({\n          ok: true,\n          // keep consistent with fetch API\n          json: function json() {\n            return Promise.resolve(response);\n          }\n        });\n\n        if (timeoutId) clearTimeout(timeoutId);\n\n        removeScript(scriptId);\n\n        clearFunction(callbackFunction);\n      };\n\n      // Check if the user set their own params, and if not add a ? to start a list of params\n      url += url.indexOf('?') === -1 ? '?' : '&';\n\n      var jsonpScript = document.createElement('script');\n      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);\n      if (options.charset) {\n        jsonpScript.setAttribute('charset', options.charset);\n      }\n      jsonpScript.id = scriptId;\n      document.getElementsByTagName('head')[0].appendChild(jsonpScript);\n\n      timeoutId = setTimeout(function () {\n        reject(new Error('JSONP request to ' + _url + ' timed out'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        window[callbackFunction] = function () {\n          clearFunction(callbackFunction);\n        };\n      }, timeout);\n\n      // Caught if got 404/500\n      jsonpScript.onerror = function () {\n        reject(new Error('JSONP request to ' + _url + ' failed'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    });\n  }\n\n  // export as global function\n  /*\n  let local;\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n  local.fetchJsonp = fetchJsonp;\n  */\n\n  module.exports = fetchJsonp;\n});","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","/**\n * @module IO\n * @submodule Input\n * @for p5\n * @requires core\n */\n\n/* globals Request: false */\n/* globals Headers: false */\n\nimport p5 from '../core/main';\nimport 'whatwg-fetch';\nimport 'es6-promise/auto';\nimport fetchJsonp from 'fetch-jsonp';\nimport fileSaver from 'file-saver';\nimport '../core/error_helpers';\n\n/**\n * Loads a JSON file from a file or a URL, and returns an Object.\n * Note that even if the JSON file contains an Array, an Object will be\n * returned with index numbers as keys.\n *\n * This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed. JSONP is supported via a polyfill and you\n * can pass in as the second argument an object with definitions of the json\n * callback following the syntax specified <a href=\"https://github.com/camsong/\n * fetch-jsonp\">here</a>.\n *\n * This method is suitable for fetching files up to size of 64MB.\n * @method loadJSON\n * @param  {String}        path       name of the file or url to load\n * @param  {Object}        [jsonpOptions] options object for jsonp related settings\n * @param  {String}        [datatype] \"json\" or \"jsonp\"\n * @param  {function}      [callback] function to be executed after\n *                                    <a href=\"#/p5/loadJSON\">loadJSON()</a> completes, data is passed\n *                                    in as first argument\n * @param  {function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n * @return {Object|Array}             JSON data\n * @example\n *\n * <p>Calling <a href=\"#/p5/loadJSON\">loadJSON()</a> inside <a href=\"#/p5/preload\">preload()</a> guarantees to complete the\n * operation before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.</p>\n *\n * <div><code>\n * // Examples use USGS Earthquake API:\n * //   https://earthquake.usgs.gov/fdsnws/event/1/#methods\n * let earthquakes;\n * function preload() {\n *   // Get the most recent earthquake in the database\n *   let url =\n    'https://earthquake.usgs.gov/earthquakes/feed/v1.0/' +\n *     'summary/all_day.geojson';\n *   earthquakes = loadJSON(url);\n * }\n *\n * function setup() {\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(200);\n *   // Get the magnitude and name of the earthquake out of the loaded JSON\n *   let earthquakeMag = earthquakes.features[0].properties.mag;\n *   let earthquakeName = earthquakes.features[0].properties.place;\n *   ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);\n *   textAlign(CENTER);\n *   text(earthquakeName, 0, height - 30, width, 30);\n * }\n * </code></div>\n *\n *\n * <p>Outside of preload(), you may supply a callback function to handle the\n * object:</p>\n * <div><code>\n * function setup() {\n *   noLoop();\n *   let url =\n    'https://earthquake.usgs.gov/earthquakes/feed/v1.0/' +\n *     'summary/all_day.geojson';\n *   loadJSON(url, drawEarthquake);\n * }\n *\n * function draw() {\n *   background(200);\n * }\n *\n * function drawEarthquake(earthquakes) {\n *   // Get the magnitude and name of the earthquake out of the loaded JSON\n *   let earthquakeMag = earthquakes.features[0].properties.mag;\n *   let earthquakeName = earthquakes.features[0].properties.place;\n *   ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);\n *   textAlign(CENTER);\n *   text(earthquakeName, 0, height - 30, width, 30);\n * }\n * </code></div>\n *\n * @alt\n * 50x50 ellipse that changes from black to white depending on the current humidity\n * 50x50 ellipse that changes from black to white depending on the current humidity\n *\n */\n/**\n * @method loadJSON\n * @param  {String}        path\n * @param  {String}        datatype\n * @param  {function}      [callback]\n * @param  {function}      [errorCallback]\n * @return {Object|Array}\n */\n/**\n * @method loadJSON\n * @param  {String}        path\n * @param  {function}      callback\n * @param  {function}      [errorCallback]\n * @return {Object|Array}\n */\np5.prototype.loadJSON = function(...args) {\n  p5._validateParameters('loadJSON', args);\n  const path = args[0];\n  let callback;\n  let errorCallback;\n  let options;\n\n  const ret = {}; // object needed for preload\n  let t = 'json';\n\n  // check for explicit data type argument\n  for (let i = 1; i < args.length; i++) {\n    const arg = args[i];\n    if (typeof arg === 'string') {\n      if (arg === 'jsonp' || arg === 'json') {\n        t = arg;\n      }\n    } else if (typeof arg === 'function') {\n      if (!callback) {\n        callback = arg;\n      } else {\n        errorCallback = arg;\n      }\n    } else if (\n      typeof arg === 'object' &&\n      (arg.hasOwnProperty('jsonpCallback') ||\n        arg.hasOwnProperty('jsonpCallbackFunction'))\n    ) {\n      t = 'jsonp';\n      options = arg;\n    }\n  }\n\n  const self = this;\n  this.httpDo(\n    path,\n    'GET',\n    options,\n    t,\n    resp => {\n      for (const k in resp) {\n        ret[k] = resp[k];\n      }\n      if (typeof callback !== 'undefined') {\n        callback(resp);\n      }\n\n      self._decrementPreload();\n    },\n    err => {\n      // Error handling\n      p5._friendlyFileLoadError(5, path);\n\n      if (errorCallback) {\n        errorCallback(err);\n      } else {\n        throw err;\n      }\n    }\n  );\n\n  return ret;\n};\n\n/**\n * Reads the contents of a file and creates a String array of its individual\n * lines. If the name of the file is used as the parameter, as in the above\n * example, the file must be located in the sketch directory/folder.\n * <br><br>\n * Alternatively, the file maybe be loaded from anywhere on the local\n * computer using an absolute path (something that starts with / on Unix and\n * Linux, or a drive letter on Windows), or the filename parameter can be a\n * URL for a file found on a network.\n * <br><br>\n * This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed.\n *\n * This method is suitable for fetching files up to size of 64MB.\n * @method loadStrings\n * @param  {String}   filename   name of the file or url to load\n * @param  {function} [callback] function to be executed after <a href=\"#/p5/loadStrings\">loadStrings()</a>\n *                               completes, Array is passed in as first\n *                               argument\n * @param  {function} [errorCallback] function to be executed if\n *                               there is an error, response is passed\n *                               in as first argument\n * @return {String[]}            Array of Strings\n * @example\n *\n * <p>Calling loadStrings() inside <a href=\"#/p5/preload\">preload()</a> guarantees to complete the\n * operation before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.</p>\n *\n * <div><code>\n * let result;\n * function preload() {\n *   result = loadStrings('assets/test.txt');\n * }\n\n * function setup() {\n *   background(200);\n *   text(random(result), 10, 10, 80, 80);\n * }\n * </code></div>\n *\n * <p>Outside of preload(), you may supply a callback function to handle the\n * object:</p>\n *\n * <div><code>\n * function setup() {\n *   loadStrings('assets/test.txt', pickString);\n * }\n *\n * function pickString(result) {\n *   background(200);\n *   text(random(result), 10, 10, 80, 80);\n * }\n * </code></div>\n *\n * @alt\n * randomly generated text from a file, for example \"i smell like butter\"\n * randomly generated text from a file, for example \"i have three feet\"\n *\n */\np5.prototype.loadStrings = function(...args) {\n  p5._validateParameters('loadStrings', args);\n\n  const ret = [];\n  let callback, errorCallback;\n\n  for (let i = 1; i < args.length; i++) {\n    const arg = args[i];\n    if (typeof arg === 'function') {\n      if (typeof callback === 'undefined') {\n        callback = arg;\n      } else if (typeof errorCallback === 'undefined') {\n        errorCallback = arg;\n      }\n    }\n  }\n\n  const self = this;\n  p5.prototype.httpDo.call(\n    this,\n    args[0],\n    'GET',\n    'text',\n    data => {\n      // split lines handling mac/windows/linux endings\n      const lines = data\n        .replace(/\\r\\n/g, '\\r')\n        .replace(/\\n/g, '\\r')\n        .split(/\\r/);\n      Array.prototype.push.apply(ret, lines);\n\n      if (typeof callback !== 'undefined') {\n        callback(ret);\n      }\n\n      self._decrementPreload();\n    },\n    function(err) {\n      // Error handling\n      p5._friendlyFileLoadError(3, arguments[0]);\n\n      if (errorCallback) {\n        errorCallback(err);\n      } else {\n        throw err;\n      }\n    }\n  );\n\n  return ret;\n};\n\n/**\n * <p>Reads the contents of a file or URL and creates a <a href=\"#/p5.Table\">p5.Table</a> object with\n * its values. If a file is specified, it must be located in the sketch's\n * \"data\" folder. The filename parameter can also be a URL to a file found\n * online. By default, the file is assumed to be comma-separated (in CSV\n * format). Table only looks for a header row if the 'header' option is\n * included.</p>\n *\n * <p>Possible options include:\n * <ul>\n * <li>csv - parse the table as comma-separated values</li>\n * <li>tsv - parse the table as tab-separated values</li>\n * <li>header - this table has a header (title) row</li>\n * </ul>\n * </p>\n *\n * <p>When passing in multiple options, pass them in as separate parameters,\n * seperated by commas. For example:\n * <br><br>\n * <code>\n * loadTable('my_csv_file.csv', 'csv', 'header');\n * </code>\n * </p>\n *\n * <p> All files loaded and saved use UTF-8 encoding.</p>\n *\n * <p>This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed. Calling <a href=\"#/p5/loadTable\">loadTable()</a> inside <a href=\"#/p5/preload\">preload()</a>\n * guarantees to complete the operation before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.\n * <p>Outside of <a href=\"#/p5/preload\">preload()</a>, you may supply a callback function to handle the\n * object:</p>\n * </p>\n *\n * This method is suitable for fetching files up to size of 64MB.\n * @method loadTable\n * @param  {String}         filename   name of the file or URL to load\n * @param  {String}         options  \"header\" \"csv\" \"tsv\"\n * @param  {function}       [callback] function to be executed after\n *                                     <a href=\"#/p5/loadTable\">loadTable()</a> completes. On success, the\n *                                     <a href=\"#/p5.Table\">Table</a> object is passed in as the\n *                                     first argument.\n * @param  {function}  [errorCallback] function to be executed if\n *                                     there is an error, response is passed\n *                                     in as first argument\n * @return {Object}                    <a href=\"#/p5.Table\">Table</a> object containing data\n *\n * @example\n * <div class='norender'>\n * <code>\n * // Given the following CSV file called \"mammals.csv\"\n * // located in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n *   //the file can be remote\n *   //table = loadTable(\"http://p5js.org/reference/assets/mammals.csv\",\n *   //                  \"csv\", \"header\");\n * }\n *\n * function setup() {\n *   //count the columns\n *   print(table.getRowCount() + ' total rows in table');\n *   print(table.getColumnCount() + ' total columns in table');\n *\n *   print(table.getColumn('name'));\n *   //[\"Goat\", \"Leopard\", \"Zebra\"]\n *\n *   //cycle through the table\n *   for (let r = 0; r < table.getRowCount(); r++)\n *     for (let c = 0; c < table.getColumnCount(); c++) {\n *       print(table.getString(r, c));\n *     }\n * }\n * </code>\n * </div>\n *\n * @alt\n * randomly generated text from a file, for example \"i smell like butter\"\n * randomly generated text from a file, for example \"i have three feet\"\n *\n */\n/**\n * @method loadTable\n * @param  {String}         filename\n * @param  {function}       [callback]\n * @param  {function}  [errorCallback]\n * @return {Object}\n */\np5.prototype.loadTable = function(path) {\n  let callback;\n  let errorCallback;\n  const options = [];\n  let header = false;\n  const ext = path.substring(path.lastIndexOf('.') + 1, path.length);\n  let sep = ',';\n  let separatorSet = false;\n\n  if (ext === 'tsv') {\n    //Only need to check extension is tsv because csv is default\n    sep = '\\t';\n  }\n\n  for (let i = 1; i < arguments.length; i++) {\n    if (typeof arguments[i] === 'function') {\n      if (typeof callback === 'undefined') {\n        callback = arguments[i];\n      } else if (typeof errorCallback === 'undefined') {\n        errorCallback = arguments[i];\n      }\n    } else if (typeof arguments[i] === 'string') {\n      options.push(arguments[i]);\n      if (arguments[i] === 'header') {\n        header = true;\n      }\n      if (arguments[i] === 'csv') {\n        if (separatorSet) {\n          throw new Error('Cannot set multiple separator types.');\n        } else {\n          sep = ',';\n          separatorSet = true;\n        }\n      } else if (arguments[i] === 'tsv') {\n        if (separatorSet) {\n          throw new Error('Cannot set multiple separator types.');\n        } else {\n          sep = '\\t';\n          separatorSet = true;\n        }\n      }\n    }\n  }\n\n  const t = new p5.Table();\n\n  const self = this;\n  this.httpDo(\n    path,\n    'GET',\n    'table',\n    resp => {\n      const state = {};\n\n      // define constants\n      const PRE_TOKEN = 0,\n        MID_TOKEN = 1,\n        POST_TOKEN = 2,\n        POST_RECORD = 4;\n\n      const QUOTE = '\"',\n        CR = '\\r',\n        LF = '\\n';\n\n      const records = [];\n      let offset = 0;\n      let currentRecord = null;\n      let currentChar;\n\n      const tokenBegin = () => {\n        state.currentState = PRE_TOKEN;\n        state.token = '';\n      };\n\n      const tokenEnd = () => {\n        currentRecord.push(state.token);\n        tokenBegin();\n      };\n\n      const recordBegin = () => {\n        state.escaped = false;\n        currentRecord = [];\n        tokenBegin();\n      };\n\n      const recordEnd = () => {\n        state.currentState = POST_RECORD;\n        records.push(currentRecord);\n        currentRecord = null;\n      };\n\n      for (;;) {\n        currentChar = resp[offset++];\n\n        // EOF\n        if (currentChar == null) {\n          if (state.escaped) {\n            throw new Error('Unclosed quote in file.');\n          }\n          if (currentRecord) {\n            tokenEnd();\n            recordEnd();\n            break;\n          }\n        }\n        if (currentRecord === null) {\n          recordBegin();\n        }\n\n        // Handle opening quote\n        if (state.currentState === PRE_TOKEN) {\n          if (currentChar === QUOTE) {\n            state.escaped = true;\n            state.currentState = MID_TOKEN;\n            continue;\n          }\n          state.currentState = MID_TOKEN;\n        }\n\n        // mid-token and escaped, look for sequences and end quote\n        if (state.currentState === MID_TOKEN && state.escaped) {\n          if (currentChar === QUOTE) {\n            if (resp[offset] === QUOTE) {\n              state.token += QUOTE;\n              offset++;\n            } else {\n              state.escaped = false;\n              state.currentState = POST_TOKEN;\n            }\n          } else if (currentChar === CR) {\n            continue;\n          } else {\n            state.token += currentChar;\n          }\n          continue;\n        }\n\n        // fall-through: mid-token or post-token, not escaped\n        if (currentChar === CR) {\n          if (resp[offset] === LF) {\n            offset++;\n          }\n          tokenEnd();\n          recordEnd();\n        } else if (currentChar === LF) {\n          tokenEnd();\n          recordEnd();\n        } else if (currentChar === sep) {\n          tokenEnd();\n        } else if (state.currentState === MID_TOKEN) {\n          state.token += currentChar;\n        }\n      }\n\n      // set up column names\n      if (header) {\n        t.columns = records.shift();\n      } else {\n        for (let i = 0; i < records[0].length; i++) {\n          t.columns[i] = 'null';\n        }\n      }\n      let row;\n      for (let i = 0; i < records.length; i++) {\n        //Handles row of 'undefined' at end of some CSVs\n        if (records[i].length === 1) {\n          if (records[i][0] === 'undefined' || records[i][0] === '') {\n            continue;\n          }\n        }\n        row = new p5.TableRow();\n        row.arr = records[i];\n        row.obj = makeObject(records[i], t.columns);\n        t.addRow(row);\n      }\n      if (typeof callback === 'function') {\n        callback(t);\n      }\n\n      self._decrementPreload();\n    },\n    err => {\n      // Error handling\n      p5._friendlyFileLoadError(2, path);\n\n      if (errorCallback) {\n        errorCallback(err);\n      } else {\n        console.error(err);\n      }\n    }\n  );\n\n  return t;\n};\n\n// helper function to turn a row into a JSON object\nfunction makeObject(row, headers) {\n  const ret = {};\n  headers = headers || [];\n  if (typeof headers === 'undefined') {\n    for (let j = 0; j < row.length; j++) {\n      headers[j.toString()] = j;\n    }\n  }\n  for (let i = 0; i < headers.length; i++) {\n    const key = headers[i];\n    const val = row[i];\n    ret[key] = val;\n  }\n  return ret;\n}\n\n/**\n * Reads the contents of a file and creates an XML object with its values.\n * If the name of the file is used as the parameter, as in the above example,\n * the file must be located in the sketch directory/folder.\n *\n * Alternatively, the file maybe be loaded from anywhere on the local\n * computer using an absolute path (something that starts with / on Unix and\n * Linux, or a drive letter on Windows), or the filename parameter can be a\n * URL for a file found on a network.\n *\n * This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed. Calling <a href=\"#/p5/loadXML\">loadXML()</a> inside <a href=\"#/p5/preload\">preload()</a>\n * guarantees to complete the operation before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.\n *\n * Outside of <a href=\"#/p5/preload\">preload()</a>, you may supply a callback function to handle the\n * object.\n *\n * This method is suitable for fetching files up to size of 64MB.\n * @method loadXML\n * @param  {String}   filename   name of the file or URL to load\n * @param  {function} [callback] function to be executed after <a href=\"#/p5/loadXML\">loadXML()</a>\n *                               completes, XML object is passed in as\n *                               first argument\n * @param  {function} [errorCallback] function to be executed if\n *                               there is an error, response is passed\n *                               in as first argument\n * @return {Object}              XML object containing data\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let children = xml.getChildren('animal');\n *\n *   for (let i = 0; i < children.length; i++) {\n *     let id = children[i].getNum('id');\n *     let coloring = children[i].getString('species');\n *     let name = children[i].getContent();\n *     print(id + ', ' + coloring + ', ' + name);\n *   }\n * }\n *\n * // Sketch prints:\n * // 0, Capra hircus, Goat\n * // 1, Panthera pardus, Leopard\n * // 2, Equus zebra, Zebra\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.loadXML = function(...args) {\n  const ret = new p5.XML();\n  let callback, errorCallback;\n\n  for (let i = 1; i < args.length; i++) {\n    const arg = args[i];\n    if (typeof arg === 'function') {\n      if (typeof callback === 'undefined') {\n        callback = arg;\n      } else if (typeof errorCallback === 'undefined') {\n        errorCallback = arg;\n      }\n    }\n  }\n\n  const self = this;\n  this.httpDo(\n    args[0],\n    'GET',\n    'xml',\n    xml => {\n      for (const key in xml) {\n        ret[key] = xml[key];\n      }\n      if (typeof callback !== 'undefined') {\n        callback(ret);\n      }\n\n      self._decrementPreload();\n    },\n    function(err) {\n      // Error handling\n      p5._friendlyFileLoadError(1, arguments[0]);\n\n      if (errorCallback) {\n        errorCallback(err);\n      } else {\n        throw err;\n      }\n    }\n  );\n\n  return ret;\n};\n\n/**\n * This method is suitable for fetching files up to size of 64MB.\n * @method loadBytes\n * @param {string}   file            name of the file or URL to load\n * @param {function} [callback]      function to be executed after <a href=\"#/p5/loadBytes\">loadBytes()</a>\n *                                    completes\n * @param {function} [errorCallback] function to be executed if there\n *                                    is an error\n * @returns {Object} an object whose 'bytes' property will be the loaded buffer\n *\n * @example\n * <div class='norender'><code>\n * let data;\n *\n * function preload() {\n *   data = loadBytes('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   for (let i = 0; i < 5; i++) {\n *     console.log(data.bytes[i].toString(16));\n *   }\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.loadBytes = function(file, callback, errorCallback) {\n  const ret = {};\n\n  const self = this;\n  this.httpDo(\n    file,\n    'GET',\n    'arrayBuffer',\n    arrayBuffer => {\n      ret.bytes = new Uint8Array(arrayBuffer);\n\n      if (typeof callback === 'function') {\n        callback(ret);\n      }\n\n      self._decrementPreload();\n    },\n    err => {\n      // Error handling\n      p5._friendlyFileLoadError(6, file);\n\n      if (errorCallback) {\n        errorCallback(err);\n      } else {\n        throw err;\n      }\n    }\n  );\n  return ret;\n};\n\n/**\n * Method for executing an HTTP GET request. If data type is not specified,\n * p5 will try to guess based on the URL, defaulting to text. This is equivalent to\n * calling <code>httpDo(path, 'GET')</code>. The 'binary' datatype will return\n * a Blob object, and the 'arrayBuffer' datatype will return an ArrayBuffer\n * which can be used to initialize typed arrays (such as Uint8Array).\n *\n * @method httpGet\n * @param  {String}        path       name of the file or url to load\n * @param  {String}        [datatype] \"json\", \"jsonp\", \"binary\", \"arrayBuffer\",\n *                                    \"xml\", or \"text\"\n * @param  {Object|Boolean} [data]    param data passed sent with request\n * @param  {function}      [callback] function to be executed after\n *                                    <a href=\"#/p5/httpGet\">httpGet()</a> completes, data is passed in\n *                                    as first argument\n * @param  {function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n * @return {Promise} A promise that resolves with the data when the operation\n *                   completes successfully or rejects with the error after\n *                   one occurs.\n * @example\n * <div class='norender'><code>\n * // Examples use USGS Earthquake API:\n * //   https://earthquake.usgs.gov/fdsnws/event/1/#methods\n * let earthquakes;\n * function preload() {\n *   // Get the most recent earthquake in the database\n *   let url =\n    'https://earthquake.usgs.gov/fdsnws/event/1/query?' +\n *     'format=geojson&limit=1&orderby=time';\n *   httpGet(url, 'jsonp', false, function(response) {\n *     // when the HTTP request completes, populate the variable that holds the\n *     // earthquake data used in the visualization.\n *     earthquakes = response;\n *   });\n * }\n *\n * function draw() {\n *   if (!earthquakes) {\n *     // Wait until the earthquake data has loaded before drawing.\n *     return;\n *   }\n *   background(200);\n *   // Get the magnitude and name of the earthquake out of the loaded JSON\n *   let earthquakeMag = earthquakes.features[0].properties.mag;\n *   let earthquakeName = earthquakes.features[0].properties.place;\n *   ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);\n *   textAlign(CENTER);\n *   text(earthquakeName, 0, height - 30, width, 30);\n *   noLoop();\n * }\n * </code></div>\n */\n/**\n * @method httpGet\n * @param  {String}        path\n * @param  {Object|Boolean} data\n * @param  {function}      [callback]\n * @param  {function}      [errorCallback]\n * @return {Promise}\n */\n/**\n * @method httpGet\n * @param  {String}        path\n * @param  {function}      callback\n * @param  {function}      [errorCallback]\n * @return {Promise}\n */\np5.prototype.httpGet = function() {\n  p5._validateParameters('httpGet', arguments);\n\n  const args = Array.prototype.slice.call(arguments);\n  args.splice(1, 0, 'GET');\n  return p5.prototype.httpDo.apply(this, args);\n};\n\n/**\n * Method for executing an HTTP POST request. If data type is not specified,\n * p5 will try to guess based on the URL, defaulting to text. This is equivalent to\n * calling <code>httpDo(path, 'POST')</code>.\n *\n * @method httpPost\n * @param  {String}        path       name of the file or url to load\n * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\".\n *                                    If omitted, <a href=\"#/p5/httpPost\">httpPost()</a> will guess.\n * @param  {Object|Boolean} [data]    param data passed sent with request\n * @param  {function}      [callback] function to be executed after\n *                                    <a href=\"#/p5/httpPost\">httpPost()</a> completes, data is passed in\n *                                    as first argument\n * @param  {function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n * @return {Promise} A promise that resolves with the data when the operation\n *                   completes successfully or rejects with the error after\n *                   one occurs.\n *\n * @example\n * <div>\n * <code>\n * // Examples use jsonplaceholder.typicode.com for a Mock Data API\n *\n * let url = 'https://jsonplaceholder.typicode.com/posts';\n * let postData = { userId: 1, title: 'p5 Clicked!', body: 'p5.js is way cool.' };\n *\n * function setup() {\n *   createCanvas(800, 800);\n * }\n *\n * function mousePressed() {\n *   // Pick new random color values\n *   let r = random(255);\n *   let g = random(255);\n *   let b = random(255);\n *\n *   httpPost(url, 'json', postData, function(result) {\n *     strokeWeight(2);\n *     stroke(r, g, b);\n *     fill(r, g, b, 127);\n *     ellipse(mouseX, mouseY, 200, 200);\n *     text(result.body, mouseX, mouseY);\n *   });\n * }\n * </code>\n * </div>\n *\n *\n * <div><code>\n * let url = 'ttps://invalidURL'; // A bad URL that will cause errors\n * let postData = { title: 'p5 Clicked!', body: 'p5.js is way cool.' };\n *\n * function setup() {\n *   createCanvas(800, 800);\n * }\n *\n * function mousePressed() {\n *   // Pick new random color values\n *   let r = random(255);\n *   let g = random(255);\n *   let b = random(255);\n *\n *   httpPost(\n *     url,\n *     'json',\n *     postData,\n *     function(result) {\n *       // ... won't be called\n *     },\n *     function(error) {\n *       strokeWeight(2);\n *       stroke(r, g, b);\n *       fill(r, g, b, 127);\n *       text(error.toString(), mouseX, mouseY);\n *     }\n *   );\n * }\n * </code></div>\n *\n */\n/**\n * @method httpPost\n * @param  {String}        path\n * @param  {Object|Boolean} data\n * @param  {function}      [callback]\n * @param  {function}      [errorCallback]\n * @return {Promise}\n */\n/**\n * @method httpPost\n * @param  {String}        path\n * @param  {function}      callback\n * @param  {function}      [errorCallback]\n * @return {Promise}\n */\np5.prototype.httpPost = function() {\n  p5._validateParameters('httpPost', arguments);\n\n  const args = Array.prototype.slice.call(arguments);\n  args.splice(1, 0, 'POST');\n  return p5.prototype.httpDo.apply(this, args);\n};\n\n/**\n * Method for executing an HTTP request. If data type is not specified,\n * p5 will try to guess based on the URL, defaulting to text.<br><br>\n * For more advanced use, you may also pass in the path as the first argument\n * and a object as the second argument, the signature follows the one specified\n * in the Fetch API specification.\n * This method is suitable for fetching files up to size of 64MB when \"GET\" is used.\n *\n * @method httpDo\n * @param  {String}        path       name of the file or url to load\n * @param  {String}        [method]   either \"GET\", \"POST\", or \"PUT\",\n *                                    defaults to \"GET\"\n * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n * @param  {Object}        [data]     param data passed sent with request\n * @param  {function}      [callback] function to be executed after\n *                                    <a href=\"#/p5/httpGet\">httpGet()</a> completes, data is passed in\n *                                    as first argument\n * @param  {function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n * @return {Promise} A promise that resolves with the data when the operation\n *                   completes successfully or rejects with the error after\n *                   one occurs.\n *\n * @example\n * <div>\n * <code>\n * // Examples use USGS Earthquake API:\n * // https://earthquake.usgs.gov/fdsnws/event/1/#methods\n *\n * // displays an animation of all USGS earthquakes\n * let earthquakes;\n * let eqFeatureIndex = 0;\n *\n * function preload() {\n *   let url = 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson';\n *   httpDo(\n *     url,\n *     {\n *       method: 'GET',\n *       // Other Request options, like special headers for apis\n *       headers: { authorization: 'Bearer secretKey' }\n *     },\n *     function(res) {\n *       earthquakes = res;\n *     }\n *   );\n * }\n *\n * function draw() {\n *   // wait until the data is loaded\n *   if (!earthquakes || !earthquakes.features[eqFeatureIndex]) {\n *     return;\n *   }\n *   clear();\n *\n *   let feature = earthquakes.features[eqFeatureIndex];\n *   let mag = feature.properties.mag;\n *   let rad = mag / 11 * ((width + height) / 2);\n *   fill(255, 0, 0, 100);\n *   ellipse(width / 2 + random(-2, 2), height / 2 + random(-2, 2), rad, rad);\n *\n *   if (eqFeatureIndex >= earthquakes.features.length) {\n *     eqFeatureIndex = 0;\n *   } else {\n *     eqFeatureIndex += 1;\n *   }\n * }\n * </code>\n * </div>\n */\n/**\n * @method httpDo\n * @param  {String}        path\n * @param  {Object}        options   Request object options as documented in the\n *                                    \"fetch\" API\n * <a href=\"https://developer.mozilla.org/en/docs/Web/API/Fetch_API\">reference</a>\n * @param  {function}      [callback]\n * @param  {function}      [errorCallback]\n * @return {Promise}\n */\np5.prototype.httpDo = function(...args) {\n  let type;\n  let callback;\n  let errorCallback;\n  let request;\n  let promise;\n  const jsonpOptions = {};\n  let cbCount = 0;\n  let contentType = 'text/plain';\n  // Trim the callbacks off the end to get an idea of how many arguments are passed\n  for (let i = args.length - 1; i > 0; i--) {\n    if (typeof args[i] === 'function') {\n      cbCount++;\n    } else {\n      break;\n    }\n  }\n  // The number of arguments minus callbacks\n  const argsCount = args.length - cbCount;\n  const path = args[0];\n  if (\n    argsCount === 2 &&\n    typeof path === 'string' &&\n    typeof args[1] === 'object'\n  ) {\n    // Intended for more advanced use, pass in Request parameters directly\n    request = new Request(path, args[1]);\n    callback = args[2];\n    errorCallback = args[3];\n  } else {\n    // Provided with arguments\n    let method = 'GET';\n    let data;\n\n    for (let j = 1; j < args.length; j++) {\n      const a = args[j];\n      if (typeof a === 'string') {\n        if (a === 'GET' || a === 'POST' || a === 'PUT' || a === 'DELETE') {\n          method = a;\n        } else if (\n          a === 'json' ||\n          a === 'jsonp' ||\n          a === 'binary' ||\n          a === 'arrayBuffer' ||\n          a === 'xml' ||\n          a === 'text' ||\n          a === 'table'\n        ) {\n          type = a;\n        } else {\n          data = a;\n        }\n      } else if (typeof a === 'number') {\n        data = a.toString();\n      } else if (typeof a === 'object') {\n        if (\n          a.hasOwnProperty('jsonpCallback') ||\n          a.hasOwnProperty('jsonpCallbackFunction')\n        ) {\n          for (const attr in a) {\n            jsonpOptions[attr] = a[attr];\n          }\n        } else if (a instanceof p5.XML) {\n          data = a.serialize();\n          contentType = 'application/xml';\n        } else {\n          data = JSON.stringify(a);\n          contentType = 'application/json';\n        }\n      } else if (typeof a === 'function') {\n        if (!callback) {\n          callback = a;\n        } else {\n          errorCallback = a;\n        }\n      }\n    }\n\n    request = new Request(path, {\n      method,\n      mode: 'cors',\n      body: data,\n      headers: new Headers({\n        'Content-Type': contentType\n      })\n    });\n  }\n  // do some sort of smart type checking\n  if (!type) {\n    if (path.includes('json')) {\n      type = 'json';\n    } else if (path.includes('xml')) {\n      type = 'xml';\n    } else {\n      type = 'text';\n    }\n  }\n\n  if (type === 'jsonp') {\n    promise = fetchJsonp(path, jsonpOptions);\n  } else {\n    promise = fetch(request);\n  }\n  promise = promise.then(res => {\n    if (!res.ok) {\n      const err = new Error(res.body);\n      err.status = res.status;\n      err.ok = false;\n      throw err;\n    } else {\n      let fileSize = 0;\n      if (type !== 'jsonp') {\n        fileSize = res.headers.get('content-length');\n      }\n      if (fileSize && fileSize > 64000000) {\n        p5._friendlyFileLoadError(7, path);\n      }\n      switch (type) {\n        case 'json':\n        case 'jsonp':\n          return res.json();\n        case 'binary':\n          return res.blob();\n        case 'arrayBuffer':\n          return res.arrayBuffer();\n        case 'xml':\n          return res.text().then(text => {\n            const parser = new DOMParser();\n            const xml = parser.parseFromString(text, 'text/xml');\n            return new p5.XML(xml.documentElement);\n          });\n        default:\n          return res.text();\n      }\n    }\n  });\n  promise.then(callback || (() => {}));\n  promise.catch(errorCallback || console.error);\n  return promise;\n};\n\n/**\n * @module IO\n * @submodule Output\n * @for p5\n */\n\nwindow.URL = window.URL || window.webkitURL;\n\n// private array of p5.PrintWriter objects\np5.prototype._pWriters = [];\n\n/**\n * @method createWriter\n * @param {String} name name of the file to be created\n * @param {String} [extension]\n * @return {p5.PrintWriter}\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   text('click here to save', 10, 10, 70, 80);\n * }\n *\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n *     const writer = createWriter('squares.txt');\n *     for (let i = 0; i < 10; i++) {\n *       writer.print(i * i);\n *     }\n *     writer.close();\n *     writer.clear();\n *   }\n * }\n * </code>\n * </div>\n */\np5.prototype.createWriter = function(name, extension) {\n  let newPW;\n  // check that it doesn't already exist\n  for (const i in p5.prototype._pWriters) {\n    if (p5.prototype._pWriters[i].name === name) {\n      // if a p5.PrintWriter w/ this name already exists...\n      // return p5.prototype._pWriters[i]; // return it w/ contents intact.\n      // or, could return a new, empty one with a unique name:\n      newPW = new p5.PrintWriter(name + this.millis(), extension);\n      p5.prototype._pWriters.push(newPW);\n      return newPW;\n    }\n  }\n  newPW = new p5.PrintWriter(name, extension);\n  p5.prototype._pWriters.push(newPW);\n  return newPW;\n};\n\n/**\n *  @class p5.PrintWriter\n *  @param  {String}     filename\n *  @param  {String}     [extension]\n */\np5.PrintWriter = function(filename, extension) {\n  let self = this;\n  this.name = filename;\n  this.content = '';\n  //Changed to write because it was being overloaded by function below.\n  /**\n   * Writes data to the PrintWriter stream\n   * @method write\n   * @param {Array} data all data to be written by the PrintWriter\n   * @example\n   * <div class=\"norender notest\">\n   * <code>\n   * // creates a file called 'newFile.txt'\n   * let writer = createWriter('newFile.txt');\n   * // write 'Hello world!'' to the file\n   * writer.write(['Hello world!']);\n   * // close the PrintWriter and save the file\n   * writer.close();\n   * </code>\n   * </div>\n   * <div class='norender notest'>\n   * <code>\n   * // creates a file called 'newFile2.txt'\n   * let writer = createWriter('newFile2.txt');\n   * // write 'apples,bananas,123' to the file\n   * writer.write(['apples', 'bananas', 123]);\n   * // close the PrintWriter and save the file\n   * writer.close();\n   * </code>\n   * </div>\n   * <div class='norender notest'>\n   * <code>\n   * // creates a file called 'newFile3.txt'\n   * let writer = createWriter('newFile3.txt');\n   * // write 'My name is: Teddy' to the file\n   * writer.write('My name is:');\n   * writer.write(' Teddy');\n   * // close the PrintWriter and save the file\n   * writer.close();\n   * </code>\n   * </div>\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   button = createButton('SAVE FILE');\n   *   button.position(21, 40);\n   *   button.mousePressed(createFile);\n   * }\n   *\n   * function createFile() {\n   *   // creates a file called 'newFile.txt'\n   *   let writer = createWriter('newFile.txt');\n   *   // write 'Hello world!'' to the file\n   *   writer.write(['Hello world!']);\n   *   // close the PrintWriter and save the file\n   *   writer.close();\n   * }\n   * </code>\n   * </div>\n   */\n  this.write = function(data) {\n    this.content += data;\n  };\n  /**\n   * Writes data to the PrintWriter stream, and adds a new line at the end\n   * @method print\n   * @param {Array} data all data to be printed by the PrintWriter\n   * @example\n   * <div class='norender notest'>\n   * <code>\n   * // creates a file called 'newFile.txt'\n   * let writer = createWriter('newFile.txt');\n   * // creates a file containing\n   * //  My name is:\n   * //  Teddy\n   * writer.print('My name is:');\n   * writer.print('Teddy');\n   * // close the PrintWriter and save the file\n   * writer.close();\n   * </code>\n   * </div>\n   * <div class='norender notest'>\n   * <code>\n   * let writer;\n   *\n   * function setup() {\n   *   createCanvas(400, 400);\n   *   // create a PrintWriter\n   *   writer = createWriter('newFile.txt');\n   * }\n   *\n   * function draw() {\n   *   writer.print([mouseX, mouseY]);\n   * }\n   *\n   * function mouseClicked() {\n   *   writer.close();\n   * }\n   * </code>\n   * </div>\n   */\n  this.print = function(data) {\n    this.content += `${data}\\n`;\n  };\n  /**\n   * Clears the data already written to the PrintWriter object\n   * @method clear\n   * @example\n   * <div class =\"norender notest\"><code>\n   * // create writer object\n   * let writer = createWriter('newFile.txt');\n   * writer.write(['clear me']);\n   * // clear writer object here\n   * writer.clear();\n   * // close writer\n   * writer.close();\n   * </code></div>\n   * <div>\n   * <code>\n   * function setup() {\n   *   button = createButton('CLEAR ME');\n   *   button.position(21, 40);\n   *   button.mousePressed(createFile);\n   * }\n   *\n   * function createFile() {\n   *   let writer = createWriter('newFile.txt');\n   *   writer.write(['clear me']);\n   *   writer.clear();\n   *   writer.close();\n   * }\n   * </code>\n   * </div>\n   *\n   */\n  this.clear = function() {\n    this.content = '';\n  };\n  /**\n   * Closes the PrintWriter\n   * @method close\n   * @example\n   * <div class=\"norender notest\">\n   * <code>\n   * // create a file called 'newFile.txt'\n   * let writer = createWriter('newFile.txt');\n   * // close the PrintWriter and save the file\n   * writer.close();\n   * </code>\n   * </div>\n   * <div class='norender notest'>\n   * <code>\n   * // create a file called 'newFile2.txt'\n   * let writer = createWriter('newFile2.txt');\n   * // write some data to the file\n   * writer.write([100, 101, 102]);\n   * // close the PrintWriter and save the file\n   * writer.close();\n   * </code>\n   * </div>\n   */\n  this.close = function() {\n    // convert String to Array for the writeFile Blob\n    const arr = [];\n    arr.push(this.content);\n    p5.prototype.writeFile(arr, filename, extension);\n    // remove from _pWriters array and delete self\n    for (const i in p5.prototype._pWriters) {\n      if (p5.prototype._pWriters[i].name === this.name) {\n        // remove from _pWriters array\n        p5.prototype._pWriters.splice(i, 1);\n      }\n    }\n    self.clear();\n    self = {};\n  };\n};\n\n/**\n * @module IO\n * @submodule Output\n * @for p5\n */\n\n// object, filename, options --> saveJSON, saveStrings,\n// filename, [extension] [canvas] --> saveImage\n\n/**\n *  Saves a given element(image, text, json, csv, wav, or html) to the client's\n *  computer. The first parameter can be a pointer to element we want to save.\n *  The element can be one of <a href=\"#/p5.Element\">p5.Element</a>,an Array of\n *  Strings, an Array of JSON, a JSON object, a <a href=\"#/p5.Table\">p5.Table\n *  </a>, a <a href=\"#/p5.Image\">p5.Image</a>, or a p5.SoundFile (requires\n *  p5.sound). The second parameter is a filename (including extension).The\n *  third parameter is for options specific to this type of object. This method\n *  will save a file that fits the given parameters.\n *  If it is called without specifying an element, by default it will save the\n *  whole canvas as an image file. You can optionally specify a filename as\n *  the first parameter in such a case.\n *  **Note that it is not recommended to\n *  call this method within draw, as it will open a new save dialog on every\n *  render.**\n *\n * @method save\n * @param  {Object|String} [objectOrFilename]  If filename is provided, will\n *                                             save canvas as an image with\n *                                             either png or jpg extension\n *                                             depending on the filename.\n *                                             If object is provided, will\n *                                             save depending on the object\n *                                             and filename (see examples\n *                                             above).\n * @param  {String} [filename] If an object is provided as the first\n *                               parameter, then the second parameter\n *                               indicates the filename,\n *                               and should include an appropriate\n *                               file extension (see examples above).\n * @param  {Boolean|String} [options]  Additional options depend on\n *                            filetype. For example, when saving JSON,\n *                            <code>true</code> indicates that the\n *                            output will be optimized for filesize,\n *                            rather than readability.\n *\n * @example\n * <div class=\"norender\"><code>\n * // Saves the canvas as an image\n * cnv = createCanvas(300, 300);\n * save(cnv, 'myCanvas.jpg');\n *\n * // Saves the canvas as an image by default\n * save('myCanvas.jpg');\n * </code></div>\n *\n *  <div class=\"norender\"><code>\n * // Saves p5.Image as an image\n * img = createImage(10, 10);\n * save(img, 'myImage.png');\n * </code></div>\n *\n * <div class=\"norender\"><code>\n * // Saves p5.Renderer object as an image\n * obj = createGraphics(100, 100);\n * save(obj, 'myObject.png');\n * </code></div>\n *\n * <div class=\"norender\"><code>\n * let myTable = new p5.Table();\n * // Saves table as html file\n * save(myTable, 'myTable.html');\n *\n * // Comma Separated Values\n * save(myTable, 'myTable.csv');\n *\n * // Tab Separated Values\n * save(myTable, 'myTable.tsv');\n * </code></div>\n *\n * <div class=\"norender\"><code>\n * let myJSON = { a: 1, b: true };\n *\n * // Saves pretty JSON\n * save(myJSON, 'my.json');\n *\n * // Optimizes JSON filesize\n * save(myJSON, 'my.json', true);\n * </code></div>\n *\n * <div class=\"norender\"><code>\n * // Saves array of strings to text file with line breaks after each item\n * let arrayOfStrings = ['a', 'b'];\n * save(arrayOfStrings, 'my.txt');\n * </code></div>\n *\n * @alt\n * An example for saving a canvas as an image.\n * An example for saving a p5.Image element as an image.\n * An example for saving a p5.Renderer element.\n * An example showing how to save a table in formats of HTML, CSV and TSV.\n * An example for saving JSON to a txt file with some extra arguments.\n * An example for saving an array of strings to text file with line breaks.\n */\n\np5.prototype.save = function(object, _filename, _options) {\n  // parse the arguments and figure out which things we are saving\n  const args = arguments;\n  // =================================================\n  // OPTION 1: saveCanvas...\n\n  // if no arguments are provided, save canvas\n  const cnv = this._curElement ? this._curElement.elt : this.elt;\n  if (args.length === 0) {\n    p5.prototype.saveCanvas(cnv);\n    return;\n  } else if (args[0] instanceof p5.Renderer || args[0] instanceof p5.Graphics) {\n    // otherwise, parse the arguments\n\n    // if first param is a p5Graphics, then saveCanvas\n    p5.prototype.saveCanvas(args[0].elt, args[1], args[2]);\n    return;\n  } else if (args.length === 1 && typeof args[0] === 'string') {\n    // if 1st param is String and only one arg, assume it is canvas filename\n    p5.prototype.saveCanvas(cnv, args[0]);\n  } else {\n    // =================================================\n    // OPTION 2: extension clarifies saveStrings vs. saveJSON\n    const extension = _checkFileExtension(args[1], args[2])[1];\n    switch (extension) {\n      case 'json':\n        p5.prototype.saveJSON(args[0], args[1], args[2]);\n        return;\n      case 'txt':\n        p5.prototype.saveStrings(args[0], args[1], args[2]);\n        return;\n      // =================================================\n      // OPTION 3: decide based on object...\n      default:\n        if (args[0] instanceof Array) {\n          p5.prototype.saveStrings(args[0], args[1], args[2]);\n        } else if (args[0] instanceof p5.Table) {\n          p5.prototype.saveTable(args[0], args[1], args[2]);\n        } else if (args[0] instanceof p5.Image) {\n          p5.prototype.saveCanvas(args[0].canvas, args[1]);\n        } else if (args[0] instanceof p5.SoundFile) {\n          p5.prototype.saveSound(args[0], args[1], args[2], args[3]);\n        }\n    }\n  }\n};\n\n/**\n *  Writes the contents of an Array or a JSON object to a .json file.\n *  The file saving process and location of the saved file will\n *  vary between web browsers.\n *\n *  @method saveJSON\n *  @param  {Array|Object} json\n *  @param  {String} filename\n *  @param  {Boolean} [optimize]   If true, removes line breaks\n *                                 and spaces from the output\n *                                 file to optimize filesize\n *                                 (but not readability).\n *  @example\n * <div><code>\n * let json = {}; // new  JSON Object\n *\n * json.id = 0;\n * json.species = 'Panthera leo';\n * json.name = 'Lion';\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   text('click here to save', 10, 10, 70, 80);\n * }\n *\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n *     saveJSON(json, 'lion.json');\n *   }\n * }\n *\n * // saves the following to a file called \"lion.json\":\n * // {\n * //   \"id\": 0,\n * //   \"species\": \"Panthera leo\",\n * //   \"name\": \"Lion\"\n * // }\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.saveJSON = function(json, filename, opt) {\n  p5._validateParameters('saveJSON', arguments);\n  let stringify;\n  if (opt) {\n    stringify = JSON.stringify(json);\n  } else {\n    stringify = JSON.stringify(json, undefined, 2);\n  }\n  this.saveStrings(stringify.split('\\n'), filename, 'json');\n};\n\np5.prototype.saveJSONObject = p5.prototype.saveJSON;\np5.prototype.saveJSONArray = p5.prototype.saveJSON;\n\n/**\n *  Writes an array of Strings to a text file, one line per String.\n *  The file saving process and location of the saved file will\n *  vary between web browsers.\n *\n *  @method saveStrings\n *  @param  {String[]} list   string array to be written\n *  @param  {String} filename filename for output\n *  @param  {String} [extension] the filename's extension\n *  @param  {Boolean} [isCRLF] if true, change line-break to CRLF\n *  @example\n * <div><code>\n * let words = 'apple bear cat dog';\n *\n * // .split() outputs an Array\n * let list = split(words, ' ');\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   text('click here to save', 10, 10, 70, 80);\n * }\n *\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n *     saveStrings(list, 'nouns.txt');\n *   }\n * }\n *\n * // Saves the following to a file called 'nouns.txt':\n * //\n * // apple\n * // bear\n * // cat\n * // dog\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.saveStrings = function(list, filename, extension, isCRLF) {\n  p5._validateParameters('saveStrings', arguments);\n  const ext = extension || 'txt';\n  const pWriter = this.createWriter(filename, ext);\n  for (let i = 0; i < list.length; i++) {\n    isCRLF ? pWriter.write(list[i] + '\\r\\n') : pWriter.write(list[i] + '\\n');\n  }\n  pWriter.close();\n  pWriter.clear();\n};\n\n// =======\n// HELPERS\n// =======\n\nfunction escapeHelper(content) {\n  return content\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\n/**\n *  Writes the contents of a <a href=\"#/p5.Table\">Table</a> object to a file. Defaults to a\n *  text file with comma-separated-values ('csv') but can also\n *  use tab separation ('tsv'), or generate an HTML table ('html').\n *  The file saving process and location of the saved file will\n *  vary between web browsers.\n *\n *  @method saveTable\n *  @param  {p5.Table} Table  the <a href=\"#/p5.Table\">Table</a> object to save to a file\n *  @param  {String} filename the filename to which the Table should be saved\n *  @param  {String} [options]  can be one of \"tsv\", \"csv\", or \"html\"\n *  @example\n *  <div><code>\n * let table;\n *\n * function setup() {\n *   table = new p5.Table();\n *\n *   table.addColumn('id');\n *   table.addColumn('species');\n *   table.addColumn('name');\n *\n *   let newRow = table.addRow();\n *   newRow.setNum('id', table.getRowCount() - 1);\n *   newRow.setString('species', 'Panthera leo');\n *   newRow.setString('name', 'Lion');\n *\n *   // To save, un-comment next line then click 'run'\n *   // saveTable(table, 'new.csv');\n * }\n *\n * // Saves the following to a file called 'new.csv':\n * // id,species,name\n * // 0,Panthera leo,Lion\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.saveTable = function(table, filename, options) {\n  p5._validateParameters('saveTable', arguments);\n  let ext;\n  if (options === undefined) {\n    ext = filename.substring(filename.lastIndexOf('.') + 1, filename.length);\n  } else {\n    ext = options;\n  }\n  const pWriter = this.createWriter(filename, ext);\n\n  const header = table.columns;\n\n  let sep = ','; // default to CSV\n  if (ext === 'tsv') {\n    sep = '\\t';\n  }\n  if (ext !== 'html') {\n    // make header if it has values\n    if (header[0] !== '0') {\n      for (let h = 0; h < header.length; h++) {\n        if (h < header.length - 1) {\n          pWriter.write(header[h] + sep);\n        } else {\n          pWriter.write(header[h]);\n        }\n      }\n      pWriter.write('\\n');\n    }\n\n    // make rows\n    for (let i = 0; i < table.rows.length; i++) {\n      let j;\n      for (j = 0; j < table.rows[i].arr.length; j++) {\n        if (j < table.rows[i].arr.length - 1) {\n          pWriter.write(table.rows[i].arr[j] + sep);\n        } else if (i < table.rows.length - 1) {\n          pWriter.write(table.rows[i].arr[j]);\n        } else {\n          pWriter.write(table.rows[i].arr[j]);\n        }\n      }\n      pWriter.write('\\n');\n    }\n  } else {\n    // otherwise, make HTML\n    pWriter.print('<html>');\n    pWriter.print('<head>');\n    let str = '  <meta http-equiv=\"content-type\" content';\n    str += '=\"text/html;charset=utf-8\" />';\n    pWriter.print(str);\n    pWriter.print('</head>');\n\n    pWriter.print('<body>');\n    pWriter.print('  <table>');\n\n    // make header if it has values\n    if (header[0] !== '0') {\n      pWriter.print('    <tr>');\n      for (let k = 0; k < header.length; k++) {\n        const e = escapeHelper(header[k]);\n        pWriter.print(`      <td>${e}`);\n        pWriter.print('      </td>');\n      }\n      pWriter.print('    </tr>');\n    }\n\n    // make rows\n    for (let row = 0; row < table.rows.length; row++) {\n      pWriter.print('    <tr>');\n      for (let col = 0; col < table.columns.length; col++) {\n        const entry = table.rows[row].getString(col);\n        const htmlEntry = escapeHelper(entry);\n        pWriter.print(`      <td>${htmlEntry}`);\n        pWriter.print('      </td>');\n      }\n      pWriter.print('    </tr>');\n    }\n    pWriter.print('  </table>');\n    pWriter.print('</body>');\n    pWriter.print('</html>');\n  }\n  // close and clear the pWriter\n  pWriter.close();\n  pWriter.clear();\n}; // end saveTable()\n\n/**\n *  Generate a blob of file data as a url to prepare for download.\n *  Accepts an array of data, a filename, and an extension (optional).\n *  This is a private function because it does not do any formatting,\n *  but it is used by <a href=\"#/p5/saveStrings\">saveStrings</a>, <a href=\"#/p5/saveJSON\">saveJSON</a>, <a href=\"#/p5/saveTable\">saveTable</a> etc.\n *\n *  @param  {Array} dataToDownload\n *  @param  {String} filename\n *  @param  {String} [extension]\n *  @private\n */\np5.prototype.writeFile = function(dataToDownload, filename, extension) {\n  let type = 'application/octet-stream';\n  if (p5.prototype._isSafari()) {\n    type = 'text/plain';\n  }\n  const blob = new Blob(dataToDownload, {\n    type\n  });\n  p5.prototype.downloadFile(blob, filename, extension);\n};\n\n/**\n *  Forces download. Accepts a url to filedata/blob, a filename,\n *  and an extension (optional).\n *  This is a private function because it does not do any formatting,\n *  but it is used by <a href=\"#/p5/saveStrings\">saveStrings</a>, <a href=\"#/p5/saveJSON\">saveJSON</a>, <a href=\"#/p5/saveTable\">saveTable</a> etc.\n *\n *  @method downloadFile\n *  @private\n *  @param  {String|Blob} data    either an href generated by createObjectURL,\n *                                or a Blob object containing the data\n *  @param  {String} [filename]\n *  @param  {String} [extension]\n */\np5.prototype.downloadFile = function(data, fName, extension) {\n  const fx = _checkFileExtension(fName, extension);\n  const filename = fx[0];\n\n  if (data instanceof Blob) {\n    fileSaver.saveAs(data, filename);\n    return;\n  }\n\n  const a = document.createElement('a');\n  a.href = data;\n  a.download = filename;\n\n  // Firefox requires the link to be added to the DOM before click()\n  a.onclick = e => {\n    destroyClickedElement(e);\n    e.stopPropagation();\n  };\n\n  a.style.display = 'none';\n  document.body.appendChild(a);\n\n  // Safari will open this file in the same page as a confusing Blob.\n  if (p5.prototype._isSafari()) {\n    let aText = 'Hello, Safari user! To download this file...\\n';\n    aText += '1. Go to File --> Save As.\\n';\n    aText += '2. Choose \"Page Source\" as the Format.\\n';\n    aText += `3. Name it with this extension: .\"${fx[1]}\"`;\n    alert(aText);\n  }\n  a.click();\n};\n\n/**\n *  Returns a file extension, or another string\n *  if the provided parameter has no extension.\n *\n *  @param   {String} filename\n *  @param   {String} [extension]\n *  @return  {String[]} [fileName, fileExtension]\n *\n *  @private\n */\nfunction _checkFileExtension(filename, extension) {\n  if (!extension || extension === true || extension === 'true') {\n    extension = '';\n  }\n  if (!filename) {\n    filename = 'untitled';\n  }\n  let ext = '';\n  // make sure the file will have a name, see if filename needs extension\n  if (filename && filename.includes('.')) {\n    ext = filename.split('.').pop();\n  }\n  // append extension if it doesn't exist\n  if (extension) {\n    if (ext !== extension) {\n      ext = extension;\n      filename = `${filename}.${ext}`;\n    }\n  }\n  return [filename, ext];\n}\np5.prototype._checkFileExtension = _checkFileExtension;\n\n/**\n *  Returns true if the browser is Safari, false if not.\n *  Safari makes trouble for downloading files.\n *\n *  @return  {Boolean} [description]\n *  @private\n */\np5.prototype._isSafari = function() {\n  const x = Object.prototype.toString.call(window.HTMLElement);\n  return x.indexOf('Constructor') > 0;\n};\n\n/**\n *  Helper function, a callback for download that deletes\n *  an invisible anchor element from the DOM once the file\n *  has been automatically downloaded.\n *\n *  @private\n */\nfunction destroyClickedElement(event) {\n  document.body.removeChild(event.target);\n}\n\nexport default p5;\n","/**\n * @module IO\n * @submodule Table\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n *  Table Options\n *  <p>Generic class for handling tabular data, typically from a\n *  CSV, TSV, or other sort of spreadsheet file.</p>\n *  <p>CSV files are\n *  <a href=\"http://en.wikipedia.org/wiki/Comma-separated_values\">\n *  comma separated values</a>, often with the data in quotes. TSV\n *  files use tabs as separators, and usually don't bother with the\n *  quotes.</p>\n *  <p>File names should end with .csv if they're comma separated.</p>\n *  <p>A rough \"spec\" for CSV can be found\n *  <a href=\"http://tools.ietf.org/html/rfc4180\">here</a>.</p>\n *  <p>To load files, use the <a href=\"#/p5/loadTable\">loadTable</a> method.</p>\n *  <p>To save tables to your computer, use the <a href=\"#/p5/save\">save</a> method\n *   or the <a href=\"#/p5/saveTable\">saveTable</a> method.</p>\n *\n *  Possible options include:\n *  <ul>\n *  <li>csv - parse the table as comma-separated values\n *  <li>tsv - parse the table as tab-separated values\n *  <li>header - this table has a header (title) row\n *  </ul>\n */\n\n/**\n *  <a href=\"#/p5.Table\">Table</a> objects store data with multiple rows and columns, much\n *  like in a traditional spreadsheet. Tables can be generated from\n *  scratch, dynamically, or using data from an existing file.\n *\n *  @class p5.Table\n *  @constructor\n *  @param  {p5.TableRow[]}     [rows] An array of p5.TableRow objects\n */\np5.Table = function(rows) {\n  /**\n   * An array containing the names of the columns in the table, if the \"header\" the table is\n   * loaded with the \"header\" parameter.\n   * @property columns {String[]}\n   * @example\n   * <div class=\"norender\">\n   * <code>\n   * // Given the CSV file \"mammals.csv\"\n   * // in the project's \"assets\" folder:\n   * //\n   * // id,species,name\n   * // 0,Capra hircus,Goat\n   * // 1,Panthera pardus,Leopard\n   * // 2,Equus zebra,Zebra\n   *\n   * let table;\n   *\n   * function preload() {\n   *   //my table is comma separated value \"csv\"\n   *   //and has a header specifying the columns labels\n   *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n   * }\n   *\n   * function setup() {\n   *   //print the column names\n   *   for (let c = 0; c < table.getColumnCount(); c++) {\n   *     print('column ' + c + ' is named ' + table.columns[c]);\n   *   }\n   * }\n   * </code>\n   * </div>\n   */\n  this.columns = [];\n\n  /**\n   * An array containing the <a href=\"#/p5.Table\">p5.TableRow</a> objects that make up the\n   * rows of the table. The same result as calling <a href=\"#/p5/getRows\">getRows()</a>\n   * @property rows {p5.TableRow[]}\n   */\n  this.rows = [];\n};\n\n/**\n *  Use <a href=\"#/p5/addRow\">addRow()</a> to add a new row of data to a <a href=\"#/p5.Table\">p5.Table</a> object. By default,\n *  an empty row is created. Typically, you would store a reference to\n *  the new row in a TableRow object (see newRow in the example above),\n *  and then set individual values using <a href=\"#/p5/set\">set()</a>.\n *\n *  If a <a href=\"#/p5.TableRow\">p5.TableRow</a> object is included as a parameter, then that row is\n *  duplicated and added to the table.\n *\n *  @method  addRow\n *  @param   {p5.TableRow} [row] row to be added to the table\n *  @return  {p5.TableRow} the row that was added\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //add a row\n *   let newRow = table.addRow();\n *   newRow.setString('id', table.getRowCount() - 1);\n *   newRow.setString('species', 'Canis Lupus');\n *   newRow.setString('name', 'Wolf');\n *\n *   //print the results\n *   for (let r = 0; r < table.getRowCount(); r++)\n *     for (let c = 0; c < table.getColumnCount(); c++)\n *       print(table.getString(r, c));\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image displayed\n *\n */\np5.Table.prototype.addRow = function(row) {\n  // make sure it is a valid TableRow\n  const r = row || new p5.TableRow();\n\n  if (typeof r.arr === 'undefined' || typeof r.obj === 'undefined') {\n    //r = new p5.prototype.TableRow(r);\n    throw new Error(`invalid TableRow: ${r}`);\n  }\n  r.table = this;\n  this.rows.push(r);\n  return r;\n};\n\n/**\n * Removes a row from the table object.\n *\n * @method  removeRow\n * @param   {Integer} id ID number of the row to remove\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //remove the first row\n *   table.removeRow(0);\n *\n *   //print the results\n *   for (let r = 0; r < table.getRowCount(); r++)\n *     for (let c = 0; c < table.getColumnCount(); c++)\n *       print(table.getString(r, c));\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image displayed\n *\n */\np5.Table.prototype.removeRow = function(id) {\n  this.rows[id].table = null; // remove reference to table\n  const chunk = this.rows.splice(id + 1, this.rows.length);\n  this.rows.pop();\n  this.rows = this.rows.concat(chunk);\n};\n\n/**\n * Returns a reference to the specified <a href=\"#/p5.TableRow\">p5.TableRow</a>. The reference\n * can then be used to get and set values of the selected row.\n *\n * @method  getRow\n * @param  {Integer}   rowID ID number of the row to get\n * @return {p5.TableRow} <a href=\"#/p5.TableRow\">p5.TableRow</a> object\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let row = table.getRow(1);\n *   //print it column by column\n *   //note: a row is an object, not an array\n *   for (let c = 0; c < table.getColumnCount(); c++) {\n *     print(row.getString(c));\n *   }\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.getRow = function(r) {\n  return this.rows[r];\n};\n\n/**\n *  Gets all rows from the table. Returns an array of <a href=\"#/p5.TableRow\">p5.TableRow</a>s.\n *\n *  @method  getRows\n *  @return {p5.TableRow[]}   Array of <a href=\"#/p5.TableRow\">p5.TableRow</a>s\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let rows = table.getRows();\n *\n *   //warning: rows is an array of objects\n *   for (let r = 0; r < rows.length; r++) {\n *     rows[r].set('name', 'Unicorn');\n *   }\n *\n *   //print the results\n *   for (let r = 0; r < table.getRowCount(); r++)\n *     for (let c = 0; c < table.getColumnCount(); c++)\n *       print(table.getString(r, c));\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image displayed\n *\n */\np5.Table.prototype.getRows = function() {\n  return this.rows;\n};\n\n/**\n *  Finds the first row in the Table that contains the value\n *  provided, and returns a reference to that row. Even if\n *  multiple rows are possible matches, only the first matching\n *  row is returned. The column to search may be specified by\n *  either its ID or title.\n *\n *  @method  findRow\n *  @param  {String} value  The value to match\n *  @param  {Integer|String} column ID number or title of the\n *                                 column to search\n *  @return {p5.TableRow}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //find the animal named zebra\n *   let row = table.findRow('Zebra', 'name');\n *   //find the corresponding species\n *   print(row.getString('species'));\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image displayed\n *\n */\np5.Table.prototype.findRow = function(value, column) {\n  // try the Object\n  if (typeof column === 'string') {\n    for (let i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].obj[column] === value) {\n        return this.rows[i];\n      }\n    }\n  } else {\n    // try the Array\n    for (let j = 0; j < this.rows.length; j++) {\n      if (this.rows[j].arr[column] === value) {\n        return this.rows[j];\n      }\n    }\n  }\n  // otherwise...\n  return null;\n};\n\n/**\n *  Finds the rows in the Table that contain the value\n *  provided, and returns references to those rows. Returns an\n *  Array, so for must be used to iterate through all the rows,\n *  as shown in the example above. The column to search may be\n *  specified by either its ID or title.\n *\n *  @method  findRows\n *  @param  {String} value  The value to match\n *  @param  {Integer|String} column ID number or title of the\n *                                 column to search\n *  @return {p5.TableRow[]}        An Array of TableRow objects\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //add another goat\n *   let newRow = table.addRow();\n *   newRow.setString('id', table.getRowCount() - 1);\n *   newRow.setString('species', 'Scape Goat');\n *   newRow.setString('name', 'Goat');\n *\n *   //find the rows containing animals named Goat\n *   let rows = table.findRows('Goat', 'name');\n *   print(rows.length + ' Goats found');\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.findRows = function(value, column) {\n  const ret = [];\n  if (typeof column === 'string') {\n    for (let i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].obj[column] === value) {\n        ret.push(this.rows[i]);\n      }\n    }\n  } else {\n    // try the Array\n    for (let j = 0; j < this.rows.length; j++) {\n      if (this.rows[j].arr[column] === value) {\n        ret.push(this.rows[j]);\n      }\n    }\n  }\n  return ret;\n};\n\n/**\n * Finds the first row in the Table that matches the regular\n * expression provided, and returns a reference to that row.\n * Even if multiple rows are possible matches, only the first\n * matching row is returned. The column to search may be\n * specified by either its ID or title.\n *\n * @method  matchRow\n * @param  {String|RegExp} regexp The regular expression to match\n * @param  {String|Integer} column The column ID (number) or\n *                                  title (string)\n * @return {p5.TableRow}        TableRow object\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //Search using specified regex on a given column, return TableRow object\n *   let mammal = table.matchRow(new RegExp('ant'), 1);\n *   print(mammal.getString(1));\n *   //Output \"Panthera pardus\"\n * }\n * </code>\n * </div>\n *\n */\np5.Table.prototype.matchRow = function(regexp, column) {\n  if (typeof column === 'number') {\n    for (let j = 0; j < this.rows.length; j++) {\n      if (this.rows[j].arr[column].match(regexp)) {\n        return this.rows[j];\n      }\n    }\n  } else {\n    for (let i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].obj[column].match(regexp)) {\n        return this.rows[i];\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Finds the rows in the Table that match the regular expression provided,\n * and returns references to those rows. Returns an array, so for must be\n * used to iterate through all the rows, as shown in the example. The\n * column to search may be specified by either its ID or title.\n *\n * @method  matchRows\n * @param  {String} regexp The regular expression to match\n * @param  {String|Integer} [column] The column ID (number) or\n *                                  title (string)\n * @return {p5.TableRow[]}          An Array of TableRow objects\n * @example\n * <div class=\"norender\">\n * <code>\n * let table;\n *\n * function setup() {\n *   table = new p5.Table();\n *\n *   table.addColumn('name');\n *   table.addColumn('type');\n *\n *   let newRow = table.addRow();\n *   newRow.setString('name', 'Lion');\n *   newRow.setString('type', 'Mammal');\n *\n *   newRow = table.addRow();\n *   newRow.setString('name', 'Snake');\n *   newRow.setString('type', 'Reptile');\n *\n *   newRow = table.addRow();\n *   newRow.setString('name', 'Mosquito');\n *   newRow.setString('type', 'Insect');\n *\n *   newRow = table.addRow();\n *   newRow.setString('name', 'Lizard');\n *   newRow.setString('type', 'Reptile');\n *\n *   let rows = table.matchRows('R.*', 'type');\n *   for (let i = 0; i < rows.length; i++) {\n *     print(rows[i].getString('name') + ': ' + rows[i].getString('type'));\n *   }\n * }\n * // Sketch prints:\n * // Snake: Reptile\n * // Lizard: Reptile\n * </code>\n * </div>\n */\np5.Table.prototype.matchRows = function(regexp, column) {\n  const ret = [];\n  if (typeof column === 'number') {\n    for (let j = 0; j < this.rows.length; j++) {\n      if (this.rows[j].arr[column].match(regexp)) {\n        ret.push(this.rows[j]);\n      }\n    }\n  } else {\n    for (let i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].obj[column].match(regexp)) {\n        ret.push(this.rows[i]);\n      }\n    }\n  }\n  return ret;\n};\n\n/**\n *  Retrieves all values in the specified column, and returns them\n *  as an array. The column may be specified by either its ID or title.\n *\n *  @method  getColumn\n *  @param  {String|Number} column String or Number of the column to return\n *  @return {Array}       Array of column values\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //getColumn returns an array that can be printed directly\n *   print(table.getColumn('species'));\n *   //outputs [\"Capra hircus\", \"Panthera pardus\", \"Equus zebra\"]\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.getColumn = function(value) {\n  const ret = [];\n  if (typeof value === 'string') {\n    for (let i = 0; i < this.rows.length; i++) {\n      ret.push(this.rows[i].obj[value]);\n    }\n  } else {\n    for (let j = 0; j < this.rows.length; j++) {\n      ret.push(this.rows[j].arr[value]);\n    }\n  }\n  return ret;\n};\n\n/**\n *  Removes all rows from a Table. While all rows are removed,\n *  columns and column titles are maintained.\n *\n *  @method  clearRows\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   table.clearRows();\n *   print(table.getRowCount() + ' total rows in table');\n *   print(table.getColumnCount() + ' total columns in table');\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.clearRows = function() {\n  delete this.rows;\n  this.rows = [];\n};\n\n/**\n *  Use <a href=\"#/p5/addColumn\">addColumn()</a> to add a new column to a <a href=\"#/p5.Table\">Table</a> object.\n *  Typically, you will want to specify a title, so the column\n *  may be easily referenced later by name. (If no title is\n *  specified, the new column's title will be null.)\n *\n *  @method  addColumn\n *  @param {String} [title] title of the given column\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   table.addColumn('carnivore');\n *   table.set(0, 'carnivore', 'no');\n *   table.set(1, 'carnivore', 'yes');\n *   table.set(2, 'carnivore', 'no');\n *\n *   //print the results\n *   for (let r = 0; r < table.getRowCount(); r++)\n *     for (let c = 0; c < table.getColumnCount(); c++)\n *       print(table.getString(r, c));\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.addColumn = function(title) {\n  const t = title || null;\n  this.columns.push(t);\n};\n\n/**\n *  Returns the total number of columns in a Table.\n *\n *  @method  getColumnCount\n *  @return {Integer} Number of columns in this table\n * @example\n * <div>\n * <code>\n * // given the cvs file \"blobs.csv\" in /assets directory\n * // ID, Name, Flavor, Shape, Color\n * // Blob1, Blobby, Sweet, Blob, Pink\n * // Blob2, Saddy, Savory, Blob, Blue\n *\n * let table;\n *\n * function preload() {\n *   table = loadTable('assets/blobs.csv');\n * }\n *\n * function setup() {\n *   createCanvas(200, 100);\n *   textAlign(CENTER);\n *   background(255);\n * }\n *\n * function draw() {\n *   let numOfColumn = table.getColumnCount();\n *   text('There are ' + numOfColumn + ' columns in the table.', 100, 50);\n * }\n * </code>\n * </div>\n */\np5.Table.prototype.getColumnCount = function() {\n  return this.columns.length;\n};\n\n/**\n *  Returns the total number of rows in a Table.\n *\n *  @method  getRowCount\n *  @return {Integer} Number of rows in this table\n * @example\n * <div>\n * <code>\n * // given the cvs file \"blobs.csv\" in /assets directory\n * //\n * // ID, Name, Flavor, Shape, Color\n * // Blob1, Blobby, Sweet, Blob, Pink\n * // Blob2, Saddy, Savory, Blob, Blue\n *\n * let table;\n *\n * function preload() {\n *   table = loadTable('assets/blobs.csv');\n * }\n *\n * function setup() {\n *   createCanvas(200, 100);\n *   textAlign(CENTER);\n *   background(255);\n * }\n *\n * function draw() {\n *   text('There are ' + table.getRowCount() + ' rows in the table.', 100, 50);\n * }\n * </code>\n * </div>\n */\np5.Table.prototype.getRowCount = function() {\n  return this.rows.length;\n};\n\n/**\n *  <p>Removes any of the specified characters (or \"tokens\").</p>\n *\n *  <p>If no column is specified, then the values in all columns and\n *  rows are processed. A specific column may be referenced by\n *  either its ID or title.</p>\n *\n *  @method  removeTokens\n *  @param  {String} chars  String listing characters to be removed\n *  @param  {String|Integer} [column] Column ID (number)\n *                                   or name (string)\n *\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   let table = new p5.Table();\n *\n *   table.addColumn('name');\n *   table.addColumn('type');\n *\n *   let newRow = table.addRow();\n *   newRow.setString('name', '   $Lion  ,');\n *   newRow.setString('type', ',,,Mammal');\n *\n *   newRow = table.addRow();\n *   newRow.setString('name', '$Snake  ');\n *   newRow.setString('type', ',,,Reptile');\n *\n *   table.removeTokens(',$ ');\n *   print(table.getArray());\n * }\n *\n * // prints:\n * //  0  \"Lion\"   \"Mamal\"\n * //  1  \"Snake\"  \"Reptile\"\n * </code></div>\n */\np5.Table.prototype.removeTokens = function(chars, column) {\n  const escape = s => s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  const charArray = [];\n  for (let i = 0; i < chars.length; i++) {\n    charArray.push(escape(chars.charAt(i)));\n  }\n  const regex = new RegExp(charArray.join('|'), 'g');\n\n  if (typeof column === 'undefined') {\n    for (let c = 0; c < this.columns.length; c++) {\n      for (let d = 0; d < this.rows.length; d++) {\n        let s = this.rows[d].arr[c];\n        s = s.replace(regex, '');\n        this.rows[d].arr[c] = s;\n        this.rows[d].obj[this.columns[c]] = s;\n      }\n    }\n  } else if (typeof column === 'string') {\n    for (let j = 0; j < this.rows.length; j++) {\n      let val = this.rows[j].obj[column];\n      val = val.replace(regex, '');\n      this.rows[j].obj[column] = val;\n      const pos = this.columns.indexOf(column);\n      this.rows[j].arr[pos] = val;\n    }\n  } else {\n    for (let k = 0; k < this.rows.length; k++) {\n      let str = this.rows[k].arr[column];\n      str = str.replace(regex, '');\n      this.rows[k].arr[column] = str;\n      this.rows[k].obj[this.columns[column]] = str;\n    }\n  }\n};\n\n/**\n *  Trims leading and trailing whitespace, such as spaces and tabs,\n *  from String table values. If no column is specified, then the\n *  values in all columns and rows are trimmed. A specific column\n *  may be referenced by either its ID or title.\n *\n *  @method  trim\n *  @param  {String|Integer} [column] Column ID (number)\n *                                   or name (string)\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   let table = new p5.Table();\n *\n *   table.addColumn('name');\n *   table.addColumn('type');\n *\n *   let newRow = table.addRow();\n *   newRow.setString('name', '   Lion  ,');\n *   newRow.setString('type', ' Mammal  ');\n *\n *   newRow = table.addRow();\n *   newRow.setString('name', '  Snake  ');\n *   newRow.setString('type', '  Reptile  ');\n *\n *   table.trim();\n *   print(table.getArray());\n * }\n *\n * // prints:\n * //  0  \"Lion\"   \"Mamal\"\n * //  1  \"Snake\"  \"Reptile\"\n * </code></div>\n */\np5.Table.prototype.trim = function(column) {\n  const regex = new RegExp(' ', 'g');\n\n  if (typeof column === 'undefined') {\n    for (let c = 0; c < this.columns.length; c++) {\n      for (let d = 0; d < this.rows.length; d++) {\n        let s = this.rows[d].arr[c];\n        s = s.replace(regex, '');\n        this.rows[d].arr[c] = s;\n        this.rows[d].obj[this.columns[c]] = s;\n      }\n    }\n  } else if (typeof column === 'string') {\n    for (let j = 0; j < this.rows.length; j++) {\n      let val = this.rows[j].obj[column];\n      val = val.replace(regex, '');\n      this.rows[j].obj[column] = val;\n      const pos = this.columns.indexOf(column);\n      this.rows[j].arr[pos] = val;\n    }\n  } else {\n    for (let k = 0; k < this.rows.length; k++) {\n      let str = this.rows[k].arr[column];\n      str = str.replace(regex, '');\n      this.rows[k].arr[column] = str;\n      this.rows[k].obj[this.columns[column]] = str;\n    }\n  }\n};\n\n/**\n *  Use <a href=\"#/p5/removeColumn\">removeColumn()</a> to remove an existing column from a Table\n *  object. The column to be removed may be identified by either\n *  its title (a String) or its index value (an int).\n *  removeColumn(0) would remove the first column, removeColumn(1)\n *  would remove the second column, and so on.\n *\n *  @method  removeColumn\n *  @param  {String|Integer} column columnName (string) or ID (number)\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   table.removeColumn('id');\n *   print(table.getColumnCount());\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.removeColumn = function(c) {\n  let cString;\n  let cNumber;\n  if (typeof c === 'string') {\n    // find the position of c in the columns\n    cString = c;\n    cNumber = this.columns.indexOf(c);\n  } else {\n    cNumber = c;\n    cString = this.columns[c];\n  }\n\n  const chunk = this.columns.splice(cNumber + 1, this.columns.length);\n  this.columns.pop();\n  this.columns = this.columns.concat(chunk);\n\n  for (let i = 0; i < this.rows.length; i++) {\n    const tempR = this.rows[i].arr;\n    const chip = tempR.splice(cNumber + 1, tempR.length);\n    tempR.pop();\n    this.rows[i].arr = tempR.concat(chip);\n    delete this.rows[i].obj[cString];\n  }\n};\n\n/**\n * Stores a value in the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified\n * by either its ID or title.\n *\n * @method  set\n * @param {Integer} row row ID\n * @param {String|Integer} column column ID (Number)\n *                               or title (String)\n * @param {String|Number} value  value to assign\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   table.set(0, 'species', 'Canis Lupus');\n *   table.set(0, 'name', 'Wolf');\n *\n *   //print the results\n *   for (let r = 0; r < table.getRowCount(); r++)\n *     for (let c = 0; c < table.getColumnCount(); c++)\n *       print(table.getString(r, c));\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.set = function(row, column, value) {\n  this.rows[row].set(column, value);\n};\n\n/**\n * Stores a Float value in the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified\n * by either its ID or title.\n *\n * @method setNum\n * @param {Integer} row row ID\n * @param {String|Integer} column column ID (Number)\n *                               or title (String)\n * @param {Number} value  value to assign\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   table.setNum(1, 'id', 1);\n *\n *   print(table.getColumn(0));\n *   //[\"0\", 1, \"2\"]\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n */\np5.Table.prototype.setNum = function(row, column, value) {\n  this.rows[row].setNum(column, value);\n};\n\n/**\n * Stores a String value in the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified\n * by either its ID or title.\n *\n * @method  setString\n * @param {Integer} row row ID\n * @param {String|Integer} column column ID (Number)\n *                               or title (String)\n * @param {String} value  value to assign\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   //add a row\n *   let newRow = table.addRow();\n *   newRow.setString('id', table.getRowCount() - 1);\n *   newRow.setString('species', 'Canis Lupus');\n *   newRow.setString('name', 'Wolf');\n *\n *   print(table.getArray());\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.Table.prototype.setString = function(row, column, value) {\n  this.rows[row].setString(column, value);\n};\n\n/**\n * Retrieves a value from the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified by\n * either its ID or title.\n *\n * @method  get\n * @param {Integer} row row ID\n * @param  {String|Integer} column columnName (string) or\n *                                   ID (number)\n * @return {String|Number}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   print(table.get(0, 1));\n *   //Capra hircus\n *   print(table.get(0, 'species'));\n *   //Capra hircus\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.get = function(row, column) {\n  return this.rows[row].get(column);\n};\n\n/**\n * Retrieves a Float value from the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified by\n * either its ID or title.\n *\n * @method  getNum\n * @param {Integer} row row ID\n * @param  {String|Integer} column columnName (string) or\n *                                   ID (number)\n * @return {Number}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   print(table.getNum(1, 0) + 100);\n *   //id 1 + 100 = 101\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.getNum = function(row, column) {\n  return this.rows[row].getNum(column);\n};\n\n/**\n * Retrieves a String value from the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified by\n * either its ID or title.\n *\n * @method  getString\n * @param {Integer} row row ID\n * @param  {String|Integer} column columnName (string) or\n *                                   ID (number)\n * @return {String}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   // table is comma separated value \"CSV\"\n *   // and has specifiying header for column labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   print(table.getString(0, 0)); // 0\n *   print(table.getString(0, 1)); // Capra hircus\n *   print(table.getString(0, 2)); // Goat\n *   print(table.getString(1, 0)); // 1\n *   print(table.getString(1, 1)); // Panthera pardus\n *   print(table.getString(1, 2)); // Leopard\n *   print(table.getString(2, 0)); // 2\n *   print(table.getString(2, 1)); // Equus zebra\n *   print(table.getString(2, 2)); // Zebra\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\n\np5.Table.prototype.getString = function(row, column) {\n  return this.rows[row].getString(column);\n};\n\n/**\n * Retrieves all table data and returns as an object. If a column name is\n * passed in, each row object will be stored with that attribute as its\n * title.\n *\n * @method  getObject\n * @param {String} [headerColumn] Name of the column which should be used to\n *                              title each row object (optional)\n * @return {Object}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let tableObject = table.getObject();\n *\n *   print(tableObject);\n *   //outputs an object\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.getObject = function(headerColumn) {\n  const tableObject = {};\n  let obj, cPos, index;\n\n  for (let i = 0; i < this.rows.length; i++) {\n    obj = this.rows[i].obj;\n\n    if (typeof headerColumn === 'string') {\n      cPos = this.columns.indexOf(headerColumn); // index of columnID\n      if (cPos >= 0) {\n        index = obj[headerColumn];\n        tableObject[index] = obj;\n      } else {\n        throw new Error(`This table has no column named \"${headerColumn}\"`);\n      }\n    } else {\n      tableObject[i] = this.rows[i].obj;\n    }\n  }\n  return tableObject;\n};\n\n/**\n * Retrieves all table data and returns it as a multidimensional array.\n *\n * @method  getArray\n * @return {Array}\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the CSV file \"mammals.csv\"\n * // in the project's \"assets\" folder\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leoperd\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   // table is comma separated value \"CSV\"\n *   // and has specifiying header for column labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let tableArray = table.getArray();\n *   for (let i = 0; i < tableArray.length; i++) {\n *     print(tableArray[i]);\n *   }\n * }\n * </code>\n * </div>\n *\n *@alt\n * no image displayed\n *\n */\np5.Table.prototype.getArray = function() {\n  const tableArray = [];\n  for (let i = 0; i < this.rows.length; i++) {\n    tableArray.push(this.rows[i].arr);\n  }\n  return tableArray;\n};\n\nexport default p5;\n","/**\n * @module IO\n * @submodule Table\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n *  A TableRow object represents a single row of data values,\n *  stored in columns, from a table.\n *\n *  A Table Row contains both an ordered array, and an unordered\n *  JSON object.\n *\n *  @class p5.TableRow\n *  @constructor\n *  @param {String} [str]       optional: populate the row with a\n *                              string of values, separated by the\n *                              separator\n *  @param {String} [separator] comma separated values (csv) by default\n */\np5.TableRow = function(str, separator) {\n  let arr = [];\n  const obj = {};\n  if (str) {\n    separator = separator || ',';\n    arr = str.split(separator);\n  }\n  for (let i = 0; i < arr.length; i++) {\n    const key = i;\n    const val = arr[i];\n    obj[key] = val;\n  }\n  this.arr = arr;\n  this.obj = obj;\n  this.table = null;\n};\n\n/**\n *  Stores a value in the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  set\n *  @param {String|Integer} column Column ID (Number)\n *                                or Title (String)\n *  @param {String|Number} value  The value to be stored\n *\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let rows = table.getRows();\n *   for (let r = 0; r < rows.length; r++) {\n *     rows[r].set('name', 'Unicorn');\n *   }\n *\n *   //print the results\n *   print(table.getArray());\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.TableRow.prototype.set = function(column, value) {\n  // if typeof column is string, use .obj\n  if (typeof column === 'string') {\n    const cPos = this.table.columns.indexOf(column); // index of columnID\n    if (cPos >= 0) {\n      this.obj[column] = value;\n      this.arr[cPos] = value;\n    } else {\n      throw new Error(`This table has no column named \"${column}\"`);\n    }\n  } else {\n    // if typeof column is number, use .arr\n    if (column < this.table.columns.length) {\n      this.arr[column] = value;\n      const cTitle = this.table.columns[column];\n      this.obj[cTitle] = value;\n    } else {\n      throw new Error(`Column #${column} is out of the range of this table`);\n    }\n  }\n};\n\n/**\n *  Stores a Float value in the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  setNum\n *  @param {String|Integer} column Column ID (Number)\n *                                or Title (String)\n *  @param {Number|String} value  The value to be stored\n *                                as a Float\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let rows = table.getRows();\n *   for (let r = 0; r < rows.length; r++) {\n *     rows[r].setNum('id', r + 10);\n *   }\n *\n *   print(table.getArray());\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.TableRow.prototype.setNum = function(column, value) {\n  const floatVal = parseFloat(value);\n  this.set(column, floatVal);\n};\n\n/**\n *  Stores a String value in the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  setString\n *  @param {String|Integer} column Column ID (Number)\n *                                or Title (String)\n *  @param {String|Number|Boolean|Object} value  The value to be stored\n *                                as a String\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let rows = table.getRows();\n *   for (let r = 0; r < rows.length; r++) {\n *     let name = rows[r].getString('name');\n *     rows[r].setString('name', 'A ' + name + ' named George');\n *   }\n *\n *   print(table.getArray());\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.TableRow.prototype.setString = function(column, value) {\n  const stringVal = value.toString();\n  this.set(column, stringVal);\n};\n\n/**\n *  Retrieves a value from the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  get\n *  @param  {String|Integer} column columnName (string) or\n *                                   ID (number)\n *  @return {String|Number}\n *\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let names = [];\n *   let rows = table.getRows();\n *   for (let r = 0; r < rows.length; r++) {\n *     names.push(rows[r].get('name'));\n *   }\n *\n *   print(names);\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.TableRow.prototype.get = function(column) {\n  if (typeof column === 'string') {\n    return this.obj[column];\n  } else {\n    return this.arr[column];\n  }\n};\n\n/**\n *  Retrieves a Float value from the TableRow's specified\n *  column. The column may be specified by either its ID or\n *  title.\n *\n *  @method  getNum\n *  @param  {String|Integer} column columnName (string) or\n *                                   ID (number)\n *  @return {Number}  Float Floating point number\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let rows = table.getRows();\n *   let minId = Infinity;\n *   let maxId = -Infinity;\n *   for (let r = 0; r < rows.length; r++) {\n *     let id = rows[r].getNum('id');\n *     minId = min(minId, id);\n *     maxId = min(maxId, id);\n *   }\n *   print('minimum id = ' + minId + ', maximum id = ' + maxId);\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.TableRow.prototype.getNum = function(column) {\n  let ret;\n  if (typeof column === 'string') {\n    ret = parseFloat(this.obj[column]);\n  } else {\n    ret = parseFloat(this.arr[column]);\n  }\n\n  if (ret.toString() === 'NaN') {\n    throw `Error: ${this.obj[column]} is NaN (Not a Number)`;\n  }\n  return ret;\n};\n\n/**\n *  Retrieves an String value from the TableRow's specified\n *  column. The column may be specified by either its ID or\n *  title.\n *\n *  @method  getString\n *  @param  {String|Integer} column columnName (string) or\n *                                   ID (number)\n *  @return {String}  String\n * @example\n * <div class=\"norender\"><code>\n * // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * let table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable('assets/mammals.csv', 'csv', 'header');\n * }\n *\n * function setup() {\n *   let rows = table.getRows();\n *   let longest = '';\n *   for (let r = 0; r < rows.length; r++) {\n *     let species = rows[r].getString('species');\n *     if (longest.length < species.length) {\n *       longest = species;\n *     }\n *   }\n *\n *   print('longest: ' + longest);\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n */\np5.TableRow.prototype.getString = function(column) {\n  if (typeof column === 'string') {\n    return this.obj[column].toString();\n  } else {\n    return this.arr[column].toString();\n  }\n};\n\nexport default p5;\n","/**\n * @module IO\n * @submodule Input\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * XML is a representation of an XML object, able to parse XML code. Use\n * <a href=\"#/p5/loadXML\">loadXML()</a> to load external XML files and create XML objects.\n *\n * @class p5.XML\n * @constructor\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let children = xml.getChildren('animal');\n *\n *   for (let i = 0; i < children.length; i++) {\n *     let id = children[i].getNum('id');\n *     let coloring = children[i].getString('species');\n *     let name = children[i].getContent();\n *     print(id + ', ' + coloring + ', ' + name);\n *   }\n * }\n *\n * // Sketch prints:\n * // 0, Capra hircus, Goat\n * // 1, Panthera pardus, Leopard\n * // 2, Equus zebra, Zebra\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.XML = function(DOM) {\n  if (!DOM) {\n    const xmlDoc = document.implementation.createDocument(null, 'doc');\n    this.DOM = xmlDoc.createElement('root');\n  } else {\n    this.DOM = DOM;\n  }\n};\n\n/**\n * Gets a copy of the element's parent. Returns the parent as another\n * <a href=\"#/p5.XML\">p5.XML</a> object.\n *\n * @method getParent\n * @return {p5.XML}   element parent\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let children = xml.getChildren('animal');\n *   let parent = children[1].getParent();\n *   print(parent.getName());\n * }\n *\n * // Sketch prints:\n * // mammals\n * </code></div>\n */\np5.XML.prototype.getParent = function() {\n  return new p5.XML(this.DOM.parentElement);\n};\n\n/**\n *  Gets the element's full name, which is returned as a String.\n *\n * @method getName\n * @return {String} the name of the node\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   print(xml.getName());\n * }\n *\n * // Sketch prints:\n * // mammals\n * </code></div>\n */\np5.XML.prototype.getName = function() {\n  return this.DOM.tagName;\n};\n\n/**\n * Sets the element's name, which is specified as a String.\n *\n * @method setName\n * @param {String} the new name of the node\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   print(xml.getName());\n *   xml.setName('fish');\n *   print(xml.getName());\n * }\n *\n * // Sketch prints:\n * // mammals\n * // fish\n * </code></div>\n */\np5.XML.prototype.setName = function(name) {\n  const content = this.DOM.innerHTML;\n  const attributes = this.DOM.attributes;\n  const xmlDoc = document.implementation.createDocument(null, 'default');\n  const newDOM = xmlDoc.createElement(name);\n  newDOM.innerHTML = content;\n  for (let i = 0; i < attributes.length; i++) {\n    newDOM.setAttribute(attributes[i].nodeName, attributes.nodeValue);\n  }\n  this.DOM = newDOM;\n};\n\n/**\n * Checks whether or not the element has any children, and returns the result\n * as a boolean.\n *\n * @method hasChildren\n * @return {boolean}\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   print(xml.hasChildren());\n * }\n *\n * // Sketch prints:\n * // true\n * </code></div>\n */\np5.XML.prototype.hasChildren = function() {\n  return this.DOM.children.length > 0;\n};\n\n/**\n * Get the names of all of the element's children, and returns the names as an\n * array of Strings. This is the same as looping through and calling <a href=\"#/p5.XML/getName\">getName()</a>\n * on each child element individually.\n *\n * @method listChildren\n * @return {String[]} names of the children of the element\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   print(xml.listChildren());\n * }\n *\n * // Sketch prints:\n * // [\"animal\", \"animal\", \"animal\"]\n * </code></div>\n */\np5.XML.prototype.listChildren = function() {\n  const arr = [];\n  for (let i = 0; i < this.DOM.childNodes.length; i++) {\n    arr.push(this.DOM.childNodes[i].nodeName);\n  }\n  return arr;\n};\n\n/**\n * Returns all of the element's children as an array of <a href=\"#/p5.XML\">p5.XML</a> objects. When\n * the name parameter is specified, then it will return all children that match\n * that name.\n *\n * @method getChildren\n * @param {String} [name] element name\n * @return {p5.XML[]} children of the element\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let animals = xml.getChildren('animal');\n *\n *   for (let i = 0; i < animals.length; i++) {\n *     print(animals[i].getContent());\n *   }\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Leopard\"\n * // \"Zebra\"\n * </code></div>\n */\np5.XML.prototype.getChildren = function(param) {\n  if (param) {\n    return elementsToP5XML(this.DOM.getElementsByTagName(param));\n  } else {\n    return elementsToP5XML(this.DOM.children);\n  }\n};\n\nfunction elementsToP5XML(elements) {\n  const arr = [];\n  for (let i = 0; i < elements.length; i++) {\n    arr.push(new p5.XML(elements[i]));\n  }\n  return arr;\n}\n\n/**\n * Returns the first of the element's children that matches the name parameter\n * or the child of the given index.It returns undefined if no matching\n * child is found.\n *\n * @method getChild\n * @param {String|Integer} name element name or index\n * @return {p5.XML}\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * </code></div>\n * <div class='norender'><code>\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let secondChild = xml.getChild(1);\n *   print(secondChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Leopard\"\n * </code></div>\n */\np5.XML.prototype.getChild = function(param) {\n  if (typeof param === 'string') {\n    for (const child of this.DOM.children) {\n      if (child.tagName === param) return new p5.XML(child);\n    }\n  } else {\n    return new p5.XML(this.DOM.children[param]);\n  }\n};\n\n/**\n * Appends a new child to the element. The child can be specified with\n * either a String, which will be used as the new tag's name, or as a\n * reference to an existing <a href=\"#/p5.XML\">p5.XML</a> object.\n * A reference to the newly created child is returned as an <a href=\"#/p5.XML\">p5.XML</a> object.\n *\n * @method addChild\n * @param {p5.XML} node a <a href=\"#/p5.XML\">p5.XML</a> Object which will be the child to be added\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let child = new p5.XML();\n *   child.setName('animal');\n *   child.setAttribute('id', '3');\n *   child.setAttribute('species', 'Ornithorhynchus anatinus');\n *   child.setContent('Platypus');\n *   xml.addChild(child);\n *\n *   let animals = xml.getChildren('animal');\n *   print(animals[animals.length - 1].getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Leopard\"\n * // \"Zebra\"\n * </code></div>\n */\np5.XML.prototype.addChild = function(node) {\n  if (node instanceof p5.XML) {\n    this.DOM.appendChild(node.DOM);\n  } else {\n    // PEND\n  }\n};\n\n/**\n * Removes the element specified by name or index.\n *\n * @method removeChild\n * @param {String|Integer} name element name or index\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   xml.removeChild('animal');\n *   let children = xml.getChildren();\n *   for (let i = 0; i < children.length; i++) {\n *     print(children[i].getContent());\n *   }\n * }\n *\n * // Sketch prints:\n * // \"Leopard\"\n * // \"Zebra\"\n * </code></div>\n * <div class='norender'><code>\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   xml.removeChild(1);\n *   let children = xml.getChildren();\n *   for (let i = 0; i < children.length; i++) {\n *     print(children[i].getContent());\n *   }\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Zebra\"\n * </code></div>\n */\np5.XML.prototype.removeChild = function(param) {\n  let ind = -1;\n  if (typeof param === 'string') {\n    for (let i = 0; i < this.DOM.children.length; i++) {\n      if (this.DOM.children[i].tagName === param) {\n        ind = i;\n        break;\n      }\n    }\n  } else {\n    ind = param;\n  }\n  if (ind !== -1) {\n    this.DOM.removeChild(this.DOM.children[ind]);\n  }\n};\n\n/**\n * Counts the specified element's number of attributes, returned as an Number.\n *\n * @method getAttributeCount\n * @return {Integer}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getAttributeCount());\n * }\n *\n * // Sketch prints:\n * // 2\n * </code></div>\n */\np5.XML.prototype.getAttributeCount = function() {\n  return this.DOM.attributes.length;\n};\n\n/**\n * Gets all of the specified element's attributes, and returns them as an\n * array of Strings.\n *\n * @method listAttributes\n * @return {String[]} an array of strings containing the names of attributes\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.listAttributes());\n * }\n *\n * // Sketch prints:\n * // [\"id\", \"species\"]\n * </code></div>\n */\np5.XML.prototype.listAttributes = function() {\n  const arr = [];\n\n  for (const attribute of this.DOM.attributes) {\n    arr.push(attribute.nodeName);\n  }\n\n  return arr;\n};\n\n/**\n *  Checks whether or not an element has the specified attribute.\n *\n * @method hasAttribute\n * @param {String} the attribute to be checked\n * @return {boolean} true if attribute found else false\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.hasAttribute('species'));\n *   print(firstChild.hasAttribute('color'));\n * }\n *\n * // Sketch prints:\n * // true\n * // false\n * </code></div>\n */\np5.XML.prototype.hasAttribute = function(name) {\n  const obj = {};\n\n  for (const attribute of this.DOM.attributes) {\n    obj[attribute.nodeName] = attribute.nodeValue;\n  }\n\n  return obj[name] ? true : false;\n};\n\n/**\n * Returns an attribute value of the element as an Number. If the defaultValue\n * parameter is specified and the attribute doesn't exist, then defaultValue\n * is returned. If no defaultValue is specified and the attribute doesn't\n * exist, the value 0 is returned.\n *\n * @method getNum\n * @param {String} name            the non-null full name of the attribute\n * @param {Number} [defaultValue]  the default value of the attribute\n * @return {Number}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getNum('id'));\n * }\n *\n * // Sketch prints:\n * // 0\n * </code></div>\n */\np5.XML.prototype.getNum = function(name, defaultValue) {\n  const obj = {};\n\n  for (const attribute of this.DOM.attributes) {\n    obj[attribute.nodeName] = attribute.nodeValue;\n  }\n\n  return Number(obj[name]) || defaultValue || 0;\n};\n\n/**\n * Returns an attribute value of the element as an String. If the defaultValue\n * parameter is specified and the attribute doesn't exist, then defaultValue\n * is returned. If no defaultValue is specified and the attribute doesn't\n * exist, null is returned.\n *\n * @method getString\n * @param {String} name            the non-null full name of the attribute\n * @param {Number} [defaultValue]  the default value of the attribute\n * @return {String}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getString('species'));\n * }\n *\n * // Sketch prints:\n * // \"Capra hircus\"\n * </code></div>\n */\np5.XML.prototype.getString = function(name, defaultValue) {\n  const obj = {};\n\n  for (const attribute of this.DOM.attributes) {\n    obj[attribute.nodeName] = attribute.nodeValue;\n  }\n\n  return obj[name] ? String(obj[name]) : defaultValue || null;\n};\n\n/**\n * Sets the content of an element's attribute. The first parameter specifies\n * the attribute name, while the second specifies the new content.\n *\n * @method setAttribute\n * @param {String} name            the full name of the attribute\n * @param {Number|String|Boolean} value  the value of the attribute\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getString('species'));\n *   firstChild.setAttribute('species', 'Jamides zebra');\n *   print(firstChild.getString('species'));\n * }\n *\n * // Sketch prints:\n * // \"Capra hircus\"\n * // \"Jamides zebra\"\n * </code></div>\n */\np5.XML.prototype.setAttribute = function(name, value) {\n  this.DOM.setAttribute(name, value);\n};\n\n/**\n * Returns the content of an element. If there is no such content,\n * defaultValue is returned if specified, otherwise null is returned.\n *\n * @method getContent\n * @param {String} [defaultValue] value returned if no content is found\n * @return {String}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * </code></div>\n */\np5.XML.prototype.getContent = function(defaultValue) {\n  let str;\n  str = this.DOM.textContent;\n  str = str.replace(/\\s\\s+/g, ',');\n  return str || defaultValue || null;\n};\n\n/**\n * Sets the element's content.\n *\n * @method setContent\n * @param {String} text the new content\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   let firstChild = xml.getChild('animal');\n *   print(firstChild.getContent());\n *   firstChild.setContent('Mountain Goat');\n *   print(firstChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Mountain Goat\"\n * </code></div>\n */\np5.XML.prototype.setContent = function(content) {\n  if (!this.DOM.children.length) {\n    this.DOM.textContent = content;\n  }\n};\n\n/**\n * Serializes the element into a string. This function is useful for preparing\n * the content to be sent over a http request or saved to file.\n *\n * @method serialize\n * @return {String} Serialized string of the element\n * @example\n * <div class='norender'><code>\n * let xml;\n *\n * function preload() {\n *   xml = loadXML('assets/mammals.xml');\n * }\n *\n * function setup() {\n *   print(xml.serialize());\n * }\n *\n * // Sketch prints:\n * // <mammals>\n * //   <animal id=\"0\" species=\"Capra hircus\">Goat</animal>\n * //   <animal id=\"1\" species=\"Panthera pardus\">Leopard</animal>\n * //   <animal id=\"2\" species=\"Equus zebra\">Zebra</animal>\n * // </mammals>\n * </code></div>\n */\np5.XML.prototype.serialize = function() {\n  const xmlSerializer = new XMLSerializer();\n  return xmlSerializer.serializeToString(this.DOM);\n};\n\nexport default p5;\n","/**\n * @module Math\n * @submodule Calculation\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * Calculates the absolute value (magnitude) of a number. Maps to Math.abs().\n * The absolute value of a number is always positive.\n *\n * @method abs\n * @param  {Number} n number to compute\n * @return {Number}   absolute value of given number\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   let x = -3;\n *   let y = abs(x);\n *\n *   print(x); // -3\n *   print(y); // 3\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.abs = Math.abs;\n\n/**\n * Calculates the closest int value that is greater than or equal to the\n * value of the parameter. Maps to Math.ceil(). For example, ceil(9.03)\n * returns the value 10.\n *\n * @method ceil\n * @param  {Number} n number to round up\n * @return {Integer}   rounded up number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   // map, mouseX between 0 and 5.\n *   let ax = map(mouseX, 0, 100, 0, 5);\n *   let ay = 66;\n *\n *   //Get the ceiling of the mapped number.\n *   let bx = ceil(map(mouseX, 0, 100, 0, 5));\n *   let by = 33;\n *\n *   // Multiply the mapped numbers by 20 to more easily\n *   // see the changes.\n *   stroke(0);\n *   fill(0);\n *   line(0, ay, ax * 20, ay);\n *   line(0, by, bx * 20, by);\n *\n *   // Reformat the float returned by map and draw it.\n *   noStroke();\n *   text(nfc(ax, 2), ax, ay - 5);\n *   text(nfc(bx, 1), bx, by - 5);\n * }\n * </code></div>\n *\n * @alt\n * 2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals\n *\n */\np5.prototype.ceil = Math.ceil;\n\n/**\n * Constrains a value between a minimum and maximum value.\n *\n * @method constrain\n * @param  {Number} n    number to constrain\n * @param  {Number} low  minimum limit\n * @param  {Number} high maximum limit\n * @return {Number}      constrained number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *\n *   let leftWall = 25;\n *   let rightWall = 75;\n *\n *   // xm is just the mouseX, while\n *   // xc is the mouseX, but constrained\n *   // between the leftWall and rightWall!\n *   let xm = mouseX;\n *   let xc = constrain(mouseX, leftWall, rightWall);\n *\n *   // Draw the walls.\n *   stroke(150);\n *   line(leftWall, 0, leftWall, height);\n *   line(rightWall, 0, rightWall, height);\n *\n *   // Draw xm and xc as circles.\n *   noStroke();\n *   fill(150);\n *   ellipse(xm, 33, 9, 9); // Not Constrained\n *   fill(0);\n *   ellipse(xc, 66, 9, 9); // Constrained\n * }\n * </code></div>\n *\n * @alt\n * 2 vertical lines. 2 ellipses move with mouse X 1 does not move passed lines\n *\n */\np5.prototype.constrain = function(n, low, high) {\n  p5._validateParameters('constrain', arguments);\n  return Math.max(Math.min(n, high), low);\n};\n\n/**\n * Calculates the distance between two points, in either two or three dimensions.\n *\n * @method dist\n * @param  {Number} x1 x-coordinate of the first point\n * @param  {Number} y1 y-coordinate of the first point\n * @param  {Number} x2 x-coordinate of the second point\n * @param  {Number} y2 y-coordinate of the second point\n * @return {Number}    distance between the two points\n *\n * @example\n * <div><code>\n * // Move your mouse inside the canvas to see the\n * // change in distance between two points!\n * function draw() {\n *   background(200);\n *   fill(0);\n *\n *   let x1 = 10;\n *   let y1 = 90;\n *   let x2 = mouseX;\n *   let y2 = mouseY;\n *\n *   line(x1, y1, x2, y2);\n *   ellipse(x1, y1, 7, 7);\n *   ellipse(x2, y2, 7, 7);\n *\n *   // d is the length of the line\n *   // the distance from point 1 to point 2.\n *   let d = int(dist(x1, y1, x2, y2));\n *\n *   // Let's write d along the line we are drawing!\n *   push();\n *   translate((x1 + x2) / 2, (y1 + y2) / 2);\n *   rotate(atan2(y2 - y1, x2 - x1));\n *   text(nfc(d, 1), 0, -5);\n *   pop();\n *   // Fancy!\n * }\n * </code></div>\n *\n * @alt\n * 2 ellipses joined by line. 1 ellipse moves with mouse X&Y. Distance displayed.\n */\n/**\n * @method dist\n * @param  {Number} x1\n * @param  {Number} y1\n * @param  {Number} z1 z-coordinate of the first point\n * @param  {Number} x2\n * @param  {Number} y2\n * @param  {Number} z2 z-coordinate of the second point\n * @return {Number}    distance between the two points\n */\np5.prototype.dist = function(...args) {\n  p5._validateParameters('dist', args);\n  if (args.length === 4) {\n    //2D\n    return hypot(args[2] - args[0], args[3] - args[1]);\n  } else if (args.length === 6) {\n    //3D\n    return hypot(args[3] - args[0], args[4] - args[1], args[5] - args[2]);\n  }\n};\n\n/**\n * Returns Euler's number e (2.71828...) raised to the power of the n\n * parameter. Maps to Math.exp().\n *\n * @method exp\n * @param  {Number} n exponent to raise\n * @return {Number}   e^n\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *\n *   // Compute the exp() function with a value between 0 and 2\n *   let xValue = map(mouseX, 0, width, 0, 2);\n *   let yValue = exp(xValue);\n *\n *   let y = map(yValue, 0, 8, height, 0);\n *\n *   let legend = 'exp (' + nfc(xValue, 3) + ')\\n= ' + nf(yValue, 1, 4);\n *   stroke(150);\n *   line(mouseX, y, mouseX, height);\n *   fill(0);\n *   text(legend, 5, 15);\n *   noStroke();\n *   ellipse(mouseX, y, 7, 7);\n *\n *   // Draw the exp(x) curve,\n *   // over the domain of x from 0 to 2\n *   noFill();\n *   stroke(0);\n *   beginShape();\n *   for (let x = 0; x < width; x++) {\n *     xValue = map(x, 0, width, 0, 2);\n *     yValue = exp(xValue);\n *     y = map(yValue, 0, 8, height, 0);\n *     vertex(x, y);\n *   }\n *\n *   endShape();\n *   line(0, 0, 0, height);\n *   line(0, height - 1, width, height - 1);\n * }\n * </code></div>\n *\n * @alt\n * ellipse moves along a curve with mouse x. e^n displayed.\n *\n */\np5.prototype.exp = Math.exp;\n\n/**\n * Calculates the closest int value that is less than or equal to the\n * value of the parameter. Maps to Math.floor().\n *\n * @method floor\n * @param  {Number} n number to round down\n * @return {Integer}  rounded down number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   //map, mouseX between 0 and 5.\n *   let ax = map(mouseX, 0, 100, 0, 5);\n *   let ay = 66;\n *\n *   //Get the floor of the mapped number.\n *   let bx = floor(map(mouseX, 0, 100, 0, 5));\n *   let by = 33;\n *\n *   // Multiply the mapped numbers by 20 to more easily\n *   // see the changes.\n *   stroke(0);\n *   fill(0);\n *   line(0, ay, ax * 20, ay);\n *   line(0, by, bx * 20, by);\n *\n *   // Reformat the float returned by map and draw it.\n *   noStroke();\n *   text(nfc(ax, 2), ax, ay - 5);\n *   text(nfc(bx, 1), bx, by - 5);\n * }\n * </code></div>\n *\n * @alt\n * 2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals\n *\n */\np5.prototype.floor = Math.floor;\n\n/**\n * Calculates a number between two numbers at a specific increment. The amt\n * parameter is the amount to interpolate between the two values where 0.0\n * equal to the first point, 0.1 is very near the first point, 0.5 is\n * half-way in between, and 1.0 is equal to the second point. If the\n * value of amt is more than 1.0 or less than 0.0, the number will be\n * calculated accordingly in the ratio of the two given numbers. The lerp\n * function is convenient for creating motion along a straight\n * path and for drawing dotted lines.\n *\n * @method lerp\n * @param  {Number} start first value\n * @param  {Number} stop  second value\n * @param  {Number} amt   number\n * @return {Number}       lerped value\n * @example\n * <div><code>\n * function setup() {\n *   background(200);\n *   let a = 20;\n *   let b = 80;\n *   let c = lerp(a, b, 0.2);\n *   let d = lerp(a, b, 0.5);\n *   let e = lerp(a, b, 0.8);\n *\n *   let y = 50;\n *\n *   strokeWeight(5);\n *   stroke(0); // Draw the original points in black\n *   point(a, y);\n *   point(b, y);\n *\n *   stroke(100); // Draw the lerp points in gray\n *   point(c, y);\n *   point(d, y);\n *   point(e, y);\n * }\n * </code></div>\n *\n * @alt\n * 5 points horizontally staggered mid-canvas. mid 3 are grey, outer black\n *\n */\np5.prototype.lerp = function(start, stop, amt) {\n  p5._validateParameters('lerp', arguments);\n  return amt * (stop - start) + start;\n};\n\n/**\n * Calculates the natural logarithm (the base-e logarithm) of a number. This\n * function expects the n parameter to be a value greater than 0.0. Maps to\n * Math.log().\n *\n * @method log\n * @param  {Number} n number greater than 0\n * @return {Number}   natural logarithm of n\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   let maxX = 2.8;\n *   let maxY = 1.5;\n *\n *   // Compute the natural log of a value between 0 and maxX\n *   let xValue = map(mouseX, 0, width, 0, maxX);\n *   let yValue, y;\n *   if (xValue > 0) {\n    // Cannot take the log of a negative number.\n *     yValue = log(xValue);\n *     y = map(yValue, -maxY, maxY, height, 0);\n *\n *     // Display the calculation occurring.\n *     let legend = 'log(' + nf(xValue, 1, 2) + ')\\n= ' + nf(yValue, 1, 3);\n *     stroke(150);\n *     line(mouseX, y, mouseX, height);\n *     fill(0);\n *     text(legend, 5, 15);\n *     noStroke();\n *     ellipse(mouseX, y, 7, 7);\n *   }\n *\n *   // Draw the log(x) curve,\n *   // over the domain of x from 0 to maxX\n *   noFill();\n *   stroke(0);\n *   beginShape();\n *   for (let x = 0; x < width; x++) {\n *     xValue = map(x, 0, width, 0, maxX);\n *     yValue = log(xValue);\n *     y = map(yValue, -maxY, maxY, height, 0);\n *     vertex(x, y);\n *   }\n *   endShape();\n *   line(0, 0, 0, height);\n *   line(0, height / 2, width, height / 2);\n * }\n * </code></div>\n *\n * @alt\n * ellipse moves along a curve with mouse x. natural logarithm of n displayed.\n *\n */\np5.prototype.log = Math.log;\n\n/**\n * Calculates the magnitude (or length) of a vector. A vector is a direction\n * in space commonly used in computer graphics and linear algebra. Because it\n * has no \"start\" position, the magnitude of a vector can be thought of as\n * the distance from the coordinate 0,0 to its x,y value. Therefore, <a href=\"#/p5/mag\">mag()</a> is\n * a shortcut for writing dist(0, 0, x, y).\n *\n * @method mag\n * @param  {Number} a first value\n * @param  {Number} b second value\n * @return {Number}   magnitude of vector from (0,0) to (a,b)\n * @example\n * <div><code>\n * function setup() {\n *   let x1 = 20;\n *   let x2 = 80;\n *   let y1 = 30;\n *   let y2 = 70;\n *\n *   line(0, 0, x1, y1);\n *   print(mag(x1, y1)); // Prints \"36.05551275463989\"\n *   line(0, 0, x2, y1);\n *   print(mag(x2, y1)); // Prints \"85.44003745317531\"\n *   line(0, 0, x1, y2);\n *   print(mag(x1, y2)); // Prints \"72.80109889280519\"\n *   line(0, 0, x2, y2);\n *   print(mag(x2, y2)); // Prints \"106.3014581273465\"\n * }\n * </code></div>\n *\n * @alt\n * 4 lines of different length radiate from top left of canvas.\n *\n */\np5.prototype.mag = function(x, y) {\n  p5._validateParameters('mag', arguments);\n  return hypot(x, y);\n};\n\n/**\n * Re-maps a number from one range to another.\n * <br><br>\n * In the first example above, the number 25 is converted from a value in the\n * range of 0 to 100 into a value that ranges from the left edge of the\n * window (0) to the right edge (width).\n *\n * @method map\n * @param  {Number} value  the incoming value to be converted\n * @param  {Number} start1 lower bound of the value's current range\n * @param  {Number} stop1  upper bound of the value's current range\n * @param  {Number} start2 lower bound of the value's target range\n * @param  {Number} stop2  upper bound of the value's target range\n * @param  {Boolean} [withinBounds] constrain the value to the newly mapped range\n * @return {Number}        remapped number\n * @example\n *   <div><code>\n * let value = 25;\n * let m = map(value, 0, 100, 0, width);\n * ellipse(m, 50, 10, 10);\n</code></div>\n *\n *   <div><code>\n * function setup() {\n *   noStroke();\n * }\n *\n * function draw() {\n *   background(204);\n *   let x1 = map(mouseX, 0, width, 25, 75);\n *   ellipse(x1, 25, 25, 25);\n *   //This ellipse is constrained to the 0-100 range\n *   //after setting withinBounds to true\n *   let x2 = map(mouseX, 0, width, 0, 100, true);\n *   ellipse(x2, 75, 25, 25);\n * }\n</code></div>\n *\n * @alt\n * 10 by 10 white ellipse with in mid left canvas\n * 2 25 by 25 white ellipses move with mouse x. Bottom has more range from X\n *\n */\np5.prototype.map = function(n, start1, stop1, start2, stop2, withinBounds) {\n  p5._validateParameters('map', arguments);\n  const newval = (n - start1) / (stop1 - start1) * (stop2 - start2) + start2;\n  if (!withinBounds) {\n    return newval;\n  }\n  if (start2 < stop2) {\n    return this.constrain(newval, start2, stop2);\n  } else {\n    return this.constrain(newval, stop2, start2);\n  }\n};\n\n/**\n * Determines the largest value in a sequence of numbers, and then returns\n * that value. <a href=\"#/p5/max\">max()</a> accepts any number of Number parameters, or an Array\n * of any length.\n *\n * @method max\n * @param  {Number} n0 Number to compare\n * @param  {Number} n1 Number to compare\n * @return {Number}             maximum Number\n * @example\n * <div><code>\n * function setup() {\n *   // Change the elements in the array and run the sketch\n *   // to show how max() works!\n *   let numArray = [2, 1, 5, 4, 8, 9];\n *   fill(0);\n *   noStroke();\n *   text('Array Elements', 0, 10);\n *   // Draw all numbers in the array\n *   let spacing = 15;\n *   let elemsY = 25;\n *   for (let i = 0; i < numArray.length; i++) {\n *     text(numArray[i], i * spacing, elemsY);\n *   }\n *   let maxX = 33;\n *   let maxY = 80;\n *   // Draw the Maximum value in the array.\n *   textSize(32);\n *   text(max(numArray), maxX, maxY);\n * }\n * </code></div>\n *\n * @alt\n * Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 9\n *\n */\n/**\n * @method max\n * @param  {Number[]} nums Numbers to compare\n * @return {Number}\n */\np5.prototype.max = function(...args) {\n  p5._validateParameters('max', args);\n  if (args[0] instanceof Array) {\n    return Math.max.apply(null, args[0]);\n  } else {\n    return Math.max.apply(null, args);\n  }\n};\n\n/**\n * Determines the smallest value in a sequence of numbers, and then returns\n * that value. <a href=\"#/p5/min\">min()</a> accepts any number of Number parameters, or an Array\n * of any length.\n *\n * @method min\n * @param  {Number} n0 Number to compare\n * @param  {Number} n1 Number to compare\n * @return {Number}             minimum Number\n * @example\n * <div><code>\n * function setup() {\n *   // Change the elements in the array and run the sketch\n *   // to show how min() works!\n *   let numArray = [2, 1, 5, 4, 8, 9];\n *   fill(0);\n *   noStroke();\n *   text('Array Elements', 0, 10);\n *   // Draw all numbers in the array\n *   let spacing = 15;\n *   let elemsY = 25;\n *   for (let i = 0; i < numArray.length; i++) {\n *     text(numArray[i], i * spacing, elemsY);\n *   }\n *   let maxX = 33;\n *   let maxY = 80;\n *   // Draw the Minimum value in the array.\n *   textSize(32);\n *   text(min(numArray), maxX, maxY);\n * }\n * </code></div>\n *\n * @alt\n * Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 1\n *\n */\n/**\n * @method min\n * @param  {Number[]} nums Numbers to compare\n * @return {Number}\n */\np5.prototype.min = function(...args) {\n  p5._validateParameters('min', args);\n  if (args[0] instanceof Array) {\n    return Math.min.apply(null, args[0]);\n  } else {\n    return Math.min.apply(null, args);\n  }\n};\n\n/**\n * Normalizes a number from another range into a value between 0 and 1.\n * Identical to map(value, low, high, 0, 1).\n * Numbers outside of the range are not clamped to 0 and 1, because\n * out-of-range values are often intentional and useful. (See the example above.)\n *\n * @method norm\n * @param  {Number} value incoming value to be normalized\n * @param  {Number} start lower bound of the value's current range\n * @param  {Number} stop  upper bound of the value's current range\n * @return {Number}       normalized number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   let currentNum = mouseX;\n *   let lowerBound = 0;\n *   let upperBound = width; //100;\n *   let normalized = norm(currentNum, lowerBound, upperBound);\n *   let lineY = 70;\n *   stroke(3);\n *   line(0, lineY, width, lineY);\n *   //Draw an ellipse mapped to the non-normalized value.\n *   noStroke();\n *   fill(50);\n *   let s = 7; // ellipse size\n *   ellipse(currentNum, lineY, s, s);\n *\n *   // Draw the guide\n *   let guideY = lineY + 15;\n *   text('0', 0, guideY);\n *   textAlign(RIGHT);\n *   text('100', width, guideY);\n *\n *   // Draw the normalized value\n *   textAlign(LEFT);\n *   fill(0);\n *   textSize(32);\n *   let normalY = 40;\n *   let normalX = 20;\n *   text(normalized, normalX, normalY);\n * }\n * </code></div>\n *\n * @alt\n * ellipse moves with mouse. 0 shown left & 100 right and updating values center\n *\n */\np5.prototype.norm = function(n, start, stop) {\n  p5._validateParameters('norm', arguments);\n  return this.map(n, start, stop, 0, 1);\n};\n\n/**\n * Facilitates exponential expressions. The <a href=\"#/p5/pow\">pow()</a> function is an efficient\n * way of multiplying numbers by themselves (or their reciprocals) in large\n * quantities. For example, pow(3, 5) is equivalent to the expression\n * 3 &times; 3 &times; 3 &times; 3 &times; 3 and pow(3, -5) is equivalent to 1 /\n * 3 &times; 3 &times; 3 &times; 3 &times; 3. Maps to\n * Math.pow().\n *\n * @method pow\n * @param  {Number} n base of the exponential expression\n * @param  {Number} e power by which to raise the base\n * @return {Number}   n^e\n * @example\n * <div><code>\n * function setup() {\n *   //Exponentially increase the size of an ellipse.\n *   let eSize = 3; // Original Size\n *   let eLoc = 10; // Original Location\n *\n *   ellipse(eLoc, eLoc, eSize, eSize);\n *\n *   ellipse(eLoc * 2, eLoc * 2, pow(eSize, 2), pow(eSize, 2));\n *\n *   ellipse(eLoc * 4, eLoc * 4, pow(eSize, 3), pow(eSize, 3));\n *\n *   ellipse(eLoc * 8, eLoc * 8, pow(eSize, 4), pow(eSize, 4));\n * }\n * </code></div>\n *\n * @alt\n * small to large ellipses radiating from top left of canvas\n *\n */\np5.prototype.pow = Math.pow;\n\n/**\n * Calculates the integer closest to the n parameter. For example,\n * round(133.8) returns the value 134. Maps to Math.round().\n *\n * @method round\n * @param  {Number} n number to round\n * @param  {Number} [decimals] number of decimal places to round to, default is 0\n * @return {Integer}  rounded number\n * @example\n * <div><code>\n * let x = round(3.7);\n * text(x, width / 2, height / 2);\n * </code></div>\n * <div><code>\n * let x = round(12.782383, 2);\n * text(x, width / 2, height / 2);\n * </code></div>\n * <div><code>\n * function draw() {\n *   background(200);\n *   //map, mouseX between 0 and 5.\n *   let ax = map(mouseX, 0, 100, 0, 5);\n *   let ay = 66;\n *\n *   // Round the mapped number.\n *   let bx = round(map(mouseX, 0, 100, 0, 5));\n *   let by = 33;\n *\n *   // Multiply the mapped numbers by 20 to more easily\n *   // see the changes.\n *   stroke(0);\n *   fill(0);\n *   line(0, ay, ax * 20, ay);\n *   line(0, by, bx * 20, by);\n *\n *   // Reformat the float returned by map and draw it.\n *   noStroke();\n *   text(nfc(ax, 2), ax, ay - 5);\n *   text(nfc(bx, 1), bx, by - 5);\n * }\n * </code></div>\n *\n * @alt\n * \"3\" written in middle of canvas\n * \"12.78\" written in middle of canvas\n * horizontal center line squared values displayed on top and regular on bottom.\n *\n */\np5.prototype.round = function(n, decimals) {\n  if (!decimals) {\n    return Math.round(n);\n  }\n  return Number(Math.round(n + 'e' + decimals) + 'e-' + decimals);\n};\n\n/**\n * Squares a number (multiplies a number by itself). The result is always a\n * positive number, as multiplying two negative numbers always yields a\n * positive result. For example, -1 * -1 = 1.\n *\n * @method sq\n * @param  {Number} n number to square\n * @return {Number}   squared number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   let eSize = 7;\n *   let x1 = map(mouseX, 0, width, 0, 10);\n *   let y1 = 80;\n *   let x2 = sq(x1);\n *   let y2 = 20;\n *\n *   // Draw the non-squared.\n *   line(0, y1, width, y1);\n *   ellipse(x1, y1, eSize, eSize);\n *\n *   // Draw the squared.\n *   line(0, y2, width, y2);\n *   ellipse(x2, y2, eSize, eSize);\n *\n *   // Draw dividing line.\n *   stroke(100);\n *   line(0, height / 2, width, height / 2);\n *\n *   // Draw text.\n *   let spacing = 15;\n *   noStroke();\n *   fill(0);\n *   text('x = ' + x1, 0, y1 + spacing);\n *   text('sq(x) = ' + x2, 0, y2 + spacing);\n * }\n * </code></div>\n *\n * @alt\n * horizontal center line squared values displayed on top and regular on bottom.\n *\n */\np5.prototype.sq = n => n * n;\n\n/**\n * Calculates the square root of a number. The square root of a number is\n * always positive, even though there may be a valid negative root. The\n * square root s of number a is such that s*s = a. It is the opposite of\n * squaring. Maps to Math.sqrt().\n *\n * @method sqrt\n * @param  {Number} n non-negative number to square root\n * @return {Number}   square root of number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   let eSize = 7;\n *   let x1 = mouseX;\n *   let y1 = 80;\n *   let x2 = sqrt(x1);\n *   let y2 = 20;\n *\n *   // Draw the non-squared.\n *   line(0, y1, width, y1);\n *   ellipse(x1, y1, eSize, eSize);\n *\n *   // Draw the squared.\n *   line(0, y2, width, y2);\n *   ellipse(x2, y2, eSize, eSize);\n *\n *   // Draw dividing line.\n *   stroke(100);\n *   line(0, height / 2, width, height / 2);\n *\n *   // Draw text.\n *   noStroke();\n *   fill(0);\n *   let spacing = 15;\n *   text('x = ' + x1, 0, y1 + spacing);\n *   text('sqrt(x) = ' + x2, 0, y2 + spacing);\n * }\n * </code></div>\n *\n * @alt\n * horizontal center line squareroot values displayed on top and regular on bottom.\n *\n */\np5.prototype.sqrt = Math.sqrt;\n\n// Calculate the length of the hypotenuse of a right triangle\n// This won't under- or overflow in intermediate steps\n// https://en.wikipedia.org/wiki/Hypot\nfunction hypot(x, y, z) {\n  // Use the native implementation if it's available\n  if (typeof Math.hypot === 'function') {\n    return Math.hypot.apply(null, arguments);\n  }\n\n  // Otherwise use the V8 implementation\n  // https://github.com/v8/v8/blob/8cd3cf297287e581a49e487067f5cbd991b27123/src/js/math.js#L217\n  const length = arguments.length;\n  const args = [];\n  let max = 0;\n  for (let i = 0; i < length; i++) {\n    let n = arguments[i];\n    n = +n;\n    if (n === Infinity || n === -Infinity) {\n      return Infinity;\n    }\n    n = Math.abs(n);\n    if (n > max) {\n      max = n;\n    }\n    args[i] = n;\n  }\n\n  if (max === 0) {\n    max = 1;\n  }\n  let sum = 0;\n  let compensation = 0;\n  for (let j = 0; j < length; j++) {\n    const m = args[j] / max;\n    const summand = m * m - compensation;\n    const preliminary = sum + summand;\n    compensation = preliminary - sum - summand;\n    sum = preliminary;\n  }\n  return Math.sqrt(sum) * max;\n}\n\n/**\n * Calculates the fractional part of a number.\n *\n * @method fract\n * @param {Number} num Number whose fractional part needs to be found out\n * @returns {Number} fractional part of x, i.e, {x}\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(windowWidth, windowHeight);\n *   fill(0);\n *   text(7345.73472742, 0, 50);\n *   text(fract(7345.73472742), 0, 100);\n *   text(1.4215e-15, 150, 50);\n *   text(fract(1.4215e-15), 150, 100);\n * }\n * </code>\n * </div>\n * @alt\n * 2 rows of numbers, the first row having 8 numbers and the second having the fractional parts of those numbers.\n */\np5.prototype.fract = function(toConvert) {\n  p5._validateParameters('fract', arguments);\n  let sign = 0;\n  let num = Number(toConvert);\n  if (isNaN(num) || Math.abs(num) === Infinity) {\n    return num;\n  } else if (num < 0) {\n    num = -num;\n    sign = 1;\n  }\n  if (String(num).includes('.') && !String(num).includes('e')) {\n    let toFract = String(num);\n    toFract = Number('0' + toFract.slice(toFract.indexOf('.')));\n    return Math.abs(sign - toFract);\n  } else if (num < 1) {\n    return Math.abs(sign - num);\n  } else {\n    return 0;\n  }\n};\n\nexport default p5;\n","/**\n * @module Math\n * @submodule Vector\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * Creates a new <a href=\"#/p5.Vector\">p5.Vector</a> (the datatype for storing vectors). This provides a\n * two or three dimensional vector, specifically a Euclidean (also known as\n * geometric) vector. A vector is an entity that has both magnitude and\n * direction.\n *\n * @method createVector\n * @param {Number} [x] x component of the vector\n * @param {Number} [y] y component of the vector\n * @param {Number} [z] z component of the vector\n * @return {p5.Vector}\n * @example\n * <div><code>\n * let v1;\n * function setup() {\n *   createCanvas(100, 100);\n *   stroke(255, 0, 255);\n *   v1 = createVector(width / 2, height / 2);\n * }\n *\n * function draw() {\n *   background(255);\n *   line(v1.x, v1.y, mouseX, mouseY);\n * }\n * </code></div>\n *\n * @alt\n * draws a line from center of canvas to mouse pointer position.\n */\np5.prototype.createVector = function(x, y, z) {\n  if (this instanceof p5) {\n    return new p5.Vector(this, arguments);\n  } else {\n    return new p5.Vector(x, y, z);\n  }\n};\n\nexport default p5;\n","//////////////////////////////////////////////////////////////\n\n// http://mrl.nyu.edu/~perlin/noise/\n// Adapting from PApplet.java\n// which was adapted from toxi\n// which was adapted from the german demo group farbrausch\n// as used in their demo \"art\": http://www.farb-rausch.de/fr010src.zip\n\n// someday we might consider using \"improved noise\"\n// http://mrl.nyu.edu/~perlin/paper445.pdf\n// See: https://github.com/shiffman/The-Nature-of-Code-Examples-p5.js/\n//      blob/master/introduction/Noise1D/noise.js\n\n/**\n * @module Math\n * @submodule Noise\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\nconst PERLIN_YWRAPB = 4;\nconst PERLIN_YWRAP = 1 << PERLIN_YWRAPB;\nconst PERLIN_ZWRAPB = 8;\nconst PERLIN_ZWRAP = 1 << PERLIN_ZWRAPB;\nconst PERLIN_SIZE = 4095;\n\nlet perlin_octaves = 4; // default to medium smooth\nlet perlin_amp_falloff = 0.5; // 50% reduction/octave\n\nconst scaled_cosine = i => 0.5 * (1.0 - Math.cos(i * Math.PI));\n\nlet perlin; // will be initialized lazily by noise() or noiseSeed()\n\n/**\n * Returns the Perlin noise value at specified coordinates. Perlin noise is\n * a random sequence generator producing a more naturally ordered, harmonic\n * succession of numbers compared to the standard <b>random()</b> function.\n * It was invented by Ken Perlin in the 1980s and been used since in\n * graphical applications to produce procedural textures, natural motion,\n * shapes, terrains etc.<br /><br /> The main difference to the\n * <b>random()</b> function is that Perlin noise is defined in an infinite\n * n-dimensional space where each pair of coordinates corresponds to a\n * fixed semi-random value (fixed only for the lifespan of the program; see\n * the <a href=\"#/p5/noiseSeed\">noiseSeed()</a> function). p5.js can compute 1D, 2D and 3D noise,\n * depending on the number of coordinates given. The resulting value will\n * always be between 0.0 and 1.0. The noise value can be animated by moving\n * through the noise space as demonstrated in the example above. The 2nd\n * and 3rd dimension can also be interpreted as time.<br /><br />The actual\n * noise is structured similar to an audio signal, in respect to the\n * function's use of frequencies. Similar to the concept of harmonics in\n * physics, perlin noise is computed over several octaves which are added\n * together for the final result. <br /><br />Another way to adjust the\n * character of the resulting sequence is the scale of the input\n * coordinates. As the function works within an infinite space the value of\n * the coordinates doesn't matter as such, only the distance between\n * successive coordinates does (eg. when using <b>noise()</b> within a\n * loop). As a general rule the smaller the difference between coordinates,\n * the smoother the resulting noise sequence will be. Steps of 0.005-0.03\n * work best for most applications, but this will differ depending on use.\n *\n *\n * @method noise\n * @param  {Number} x   x-coordinate in noise space\n * @param  {Number} [y] y-coordinate in noise space\n * @param  {Number} [z] z-coordinate in noise space\n * @return {Number}     Perlin noise value (between 0 and 1) at specified\n *                      coordinates\n * @example\n * <div>\n * <code>\n * let xoff = 0.0;\n *\n * function draw() {\n *   background(204);\n *   xoff = xoff + 0.01;\n *   let n = noise(xoff) * width;\n *   line(n, 0, n, height);\n * }\n * </code>\n * </div>\n * <div>\n * <code>let noiseScale=0.02;\n *\n * function draw() {\n *   background(0);\n *   for (let x=0; x < width; x++) {\n *     let noiseVal = noise((mouseX+x)*noiseScale, mouseY*noiseScale);\n *     stroke(noiseVal*255);\n *     line(x, mouseY+noiseVal*80, x, height);\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical line moves left to right with updating noise values.\n * horizontal wave pattern effected by mouse x-position & updating noise values.\n *\n */\n\np5.prototype.noise = function(x, y = 0, z = 0) {\n  if (perlin == null) {\n    perlin = new Array(PERLIN_SIZE + 1);\n    for (let i = 0; i < PERLIN_SIZE + 1; i++) {\n      perlin[i] = Math.random();\n    }\n  }\n\n  if (x < 0) {\n    x = -x;\n  }\n  if (y < 0) {\n    y = -y;\n  }\n  if (z < 0) {\n    z = -z;\n  }\n\n  let xi = Math.floor(x),\n    yi = Math.floor(y),\n    zi = Math.floor(z);\n  let xf = x - xi;\n  let yf = y - yi;\n  let zf = z - zi;\n  let rxf, ryf;\n\n  let r = 0;\n  let ampl = 0.5;\n\n  let n1, n2, n3;\n\n  for (let o = 0; o < perlin_octaves; o++) {\n    let of = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);\n\n    rxf = scaled_cosine(xf);\n    ryf = scaled_cosine(yf);\n\n    n1 = perlin[of & PERLIN_SIZE];\n    n1 += rxf * (perlin[(of + 1) & PERLIN_SIZE] - n1);\n    n2 = perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];\n    n2 += rxf * (perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n2);\n    n1 += ryf * (n2 - n1);\n\n    of += PERLIN_ZWRAP;\n    n2 = perlin[of & PERLIN_SIZE];\n    n2 += rxf * (perlin[(of + 1) & PERLIN_SIZE] - n2);\n    n3 = perlin[(of + PERLIN_YWRAP) & PERLIN_SIZE];\n    n3 += rxf * (perlin[(of + PERLIN_YWRAP + 1) & PERLIN_SIZE] - n3);\n    n2 += ryf * (n3 - n2);\n\n    n1 += scaled_cosine(zf) * (n2 - n1);\n\n    r += n1 * ampl;\n    ampl *= perlin_amp_falloff;\n    xi <<= 1;\n    xf *= 2;\n    yi <<= 1;\n    yf *= 2;\n    zi <<= 1;\n    zf *= 2;\n\n    if (xf >= 1.0) {\n      xi++;\n      xf--;\n    }\n    if (yf >= 1.0) {\n      yi++;\n      yf--;\n    }\n    if (zf >= 1.0) {\n      zi++;\n      zf--;\n    }\n  }\n  return r;\n};\n\n/**\n *\n * Adjusts the character and level of detail produced by the Perlin noise\n * function. Similar to harmonics in physics, noise is computed over\n * several octaves. Lower octaves contribute more to the output signal and\n * as such define the overall intensity of the noise, whereas higher octaves\n * create finer grained details in the noise sequence.\n * <br><br>\n * By default, noise is computed over 4 octaves with each octave contributing\n * exactly half than its predecessor, starting at 50% strength for the 1st\n * octave. This falloff amount can be changed by adding an additional function\n * parameter. Eg. a falloff factor of 0.75 means each octave will now have\n * 75% impact (25% less) of the previous lower octave. Any value between\n * 0.0 and 1.0 is valid, however note that values greater than 0.5 might\n * result in greater than 1.0 values returned by <b>noise()</b>.\n * <br><br>\n * By changing these parameters, the signal created by the <b>noise()</b>\n * function can be adapted to fit very specific needs and characteristics.\n *\n * @method noiseDetail\n * @param {Number} lod number of octaves to be used by the noise\n * @param {Number} falloff falloff factor for each octave\n * @example\n * <div>\n * <code>\n * let noiseVal;\n * let noiseScale = 0.02;\n *\n * function setup() {\n *   createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(0);\n *   for (let y = 0; y < height; y++) {\n *     for (let x = 0; x < width / 2; x++) {\n *       noiseDetail(2, 0.2);\n *       noiseVal = noise((mouseX + x) * noiseScale, (mouseY + y) * noiseScale);\n *       stroke(noiseVal * 255);\n *       point(x, y);\n *       noiseDetail(8, 0.65);\n *       noiseVal = noise(\n *         (mouseX + x + width / 2) * noiseScale,\n *         (mouseY + y) * noiseScale\n *       );\n *       stroke(noiseVal * 255);\n *       point(x + width / 2, y);\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 vertical grey smokey patterns affected my mouse x-position and noise.\n *\n */\np5.prototype.noiseDetail = function(lod, falloff) {\n  if (lod > 0) {\n    perlin_octaves = lod;\n  }\n  if (falloff > 0) {\n    perlin_amp_falloff = falloff;\n  }\n};\n\n/**\n * Sets the seed value for <b>noise()</b>. By default, <b>noise()</b>\n * produces different results each time the program is run. Set the\n * <b>value</b> parameter to a constant to return the same pseudo-random\n * numbers each time the software is run.\n *\n * @method noiseSeed\n * @param {Number} seed   the seed value\n * @example\n * <div>\n * <code>let xoff = 0.0;\n *\n * function setup() {\n *   noiseSeed(99);\n *   stroke(0, 10);\n * }\n *\n * function draw() {\n *   xoff = xoff + .01;\n *   let n = noise(xoff) * width;\n *   line(n, 0, n, height);\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical grey lines drawing in pattern affected by noise.\n *\n */\np5.prototype.noiseSeed = function(seed) {\n  // Linear Congruential Generator\n  // Variant of a Lehman Generator\n  const lcg = (() => {\n    // Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes\n    // m is basically chosen to be large (as it is the max period)\n    // and for its relationships to a and c\n    const m = 4294967296;\n    // a - 1 should be divisible by m's prime factors\n    const a = 1664525;\n    // c and m should be co-prime\n    const c = 1013904223;\n    let seed, z;\n    return {\n      setSeed(val) {\n        // pick a random seed if val is undefined or null\n        // the >>> 0 casts the seed to an unsigned 32-bit integer\n        z = seed = (val == null ? Math.random() * m : val) >>> 0;\n      },\n      getSeed() {\n        return seed;\n      },\n      rand() {\n        // define the recurrence relationship\n        z = (a * z + c) % m;\n        // return a float in [0, 1)\n        // if z = m then z / m = 0 therefore (z % m) / m < 1 always\n        return z / m;\n      }\n    };\n  })();\n\n  lcg.setSeed(seed);\n  perlin = new Array(PERLIN_SIZE + 1);\n  for (let i = 0; i < PERLIN_SIZE + 1; i++) {\n    perlin[i] = lcg.rand();\n  }\n};\n\nexport default p5;\n","/**\n * @module Math\n * @submodule Vector\n * @requires constants\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\n\n/**\n * A class to describe a two or three dimensional vector, specifically\n * a Euclidean (also known as geometric) vector. A vector is an entity\n * that has both magnitude and direction. The datatype, however, stores\n * the components of the vector (x, y for 2D, and x, y, z for 3D). The magnitude\n * and direction can be accessed via the methods <a href=\"#/p5/mag\">mag()</a> and <a href=\"#/p5/heading\">heading()</a>.\n * <br><br>\n * In many of the p5.js examples, you will see <a href=\"#/p5.Vector\">p5.Vector</a> used to describe a\n * position, velocity, or acceleration. For example, if you consider a rectangle\n * moving across the screen, at any given instant it has a position (a vector\n * that points from the origin to its location), a velocity (the rate at which\n * the object's position changes per time unit, expressed as a vector), and\n * acceleration (the rate at which the object's velocity changes per time\n * unit, expressed as a vector).\n * <br><br>\n * Since vectors represent groupings of values, we cannot simply use\n * traditional addition/multiplication/etc. Instead, we'll need to do some\n * \"vector\" math, which is made easy by the methods inside the <a href=\"#/p5.Vector\">p5.Vector</a> class.\n *\n * @class p5.Vector\n * @constructor\n * @param {Number} [x] x component of the vector\n * @param {Number} [y] y component of the vector\n * @param {Number} [z] z component of the vector\n * @example\n * <div>\n * <code>\n * let v1 = createVector(40, 50);\n * let v2 = createVector(40, 50);\n *\n * ellipse(v1.x, v1.y, 50, 50);\n * ellipse(v2.x, v2.y, 50, 50);\n * v1.add(v2);\n * ellipse(v1.x, v1.y, 50, 50);\n * </code>\n * </div>\n *\n * @alt\n * 2 white ellipses. One center-left the other bottom right and off canvas\n *\n */\np5.Vector = function Vector() {\n  let x, y, z;\n  // This is how it comes in with createVector()\n  if (arguments[0] instanceof p5) {\n    // save reference to p5 if passed in\n    this.p5 = arguments[0];\n    x = arguments[1][0] || 0;\n    y = arguments[1][1] || 0;\n    z = arguments[1][2] || 0;\n    // This is what we'll get with new p5.Vector()\n  } else {\n    x = arguments[0] || 0;\n    y = arguments[1] || 0;\n    z = arguments[2] || 0;\n  }\n  /**\n   * The x component of the vector\n   * @property x {Number}\n   */\n  this.x = x;\n  /**\n   * The y component of the vector\n   * @property y {Number}\n   */\n  this.y = y;\n  /**\n   * The z component of the vector\n   * @property z {Number}\n   */\n  this.z = z;\n};\n\n/**\n * Returns a string representation of a vector v by calling String(v)\n * or v.toString(). This method is useful for logging vectors in the\n * console.\n * @method  toString\n * @return {String}\n * @example\n * <div class = \"norender\">\n * <code>\n * function setup() {\n *   let v = createVector(20, 30);\n *   print(String(v)); // prints \"p5.Vector Object : [20, 30, 0]\"\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v1, 'black');\n *\n *   noStroke();\n *   text(v1.toString(), 10, 25, 90, 75);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.toString = function p5VectorToString() {\n  return `p5.Vector Object : [${this.x}, ${this.y}, ${this.z}]`;\n};\n\n/**\n * Sets the x, y, and z component of the vector using two or three separate\n * variables, the data from a <a href=\"#/p5.Vector\">p5.Vector</a>, or the values from a float array.\n * @method set\n * @param {Number} [x] the x component of the vector\n * @param {Number} [y] the y component of the vector\n * @param {Number} [z] the z component of the vector\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *   let v = createVector(1, 2, 3);\n *   v.set(4, 5, 6); // Sets vector to [4, 5, 6]\n *\n *   let v1 = createVector(0, 0, 0);\n *   let arr = [1, 2, 3];\n *   v1.set(arr); // Sets vector to [1, 2, 3]\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let v0, v1;\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   v0 = createVector(0, 0);\n *   v1 = createVector(50, 50);\n * }\n *\n * function draw() {\n *   background(240);\n *\n *   drawArrow(v0, v1, 'black');\n *   v1.set(v1.x + random(-1, 1), v1.y + random(-1, 1));\n *\n *   noStroke();\n *   text('x: ' + round(v1.x) + ' y: ' + round(v1.y), 20, 90);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n/**\n * @method set\n * @param {p5.Vector|Number[]} value the vector to set\n * @chainable\n */\np5.Vector.prototype.set = function set(x, y, z) {\n  if (x instanceof p5.Vector) {\n    this.x = x.x || 0;\n    this.y = x.y || 0;\n    this.z = x.z || 0;\n    return this;\n  }\n  if (x instanceof Array) {\n    this.x = x[0] || 0;\n    this.y = x[1] || 0;\n    this.z = x[2] || 0;\n    return this;\n  }\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  return this;\n};\n\n/**\n * Gets a copy of the vector, returns a <a href=\"#/p5.Vector\">p5.Vector</a> object.\n *\n * @method copy\n * @return {p5.Vector} the copy of the <a href=\"#/p5.Vector\">p5.Vector</a> object\n * @example\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(1, 2, 3);\n * let v2 = v1.copy();\n * print(v1.x === v2.x && v1.y === v2.y && v1.z === v2.z);\n * // Prints \"true\"\n * </code>\n * </div>\n */\np5.Vector.prototype.copy = function copy() {\n  if (this.p5) {\n    return new p5.Vector(this.p5, [this.x, this.y, this.z]);\n  } else {\n    return new p5.Vector(this.x, this.y, this.z);\n  }\n};\n\n/**\n * Adds x, y, and z components to a vector, adds one vector to another, or\n * adds two independent vectors together. The version of the method that adds\n * two vectors together is a static method and returns a <a href=\"#/p5.Vector\">p5.Vector</a>, the others\n * acts directly on the vector. Additionally, you may provide arguments to this function as an array.\n * See the examples for more context.\n *\n * @method add\n * @param  {Number} x   the x component of the vector to be added\n * @param  {Number} [y] the y component of the vector to be added\n * @param  {Number} [z] the z component of the vector to be added\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(1, 2, 3);\n * v.add(4, 5, 6);\n * // v's components are set to [5, 7, 9]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v = createVector(1, 2, 3);\n * // Provide arguments as an array\n * let arr = [4, 5, 6];\n * v.add(arr);\n * // v's components are set to [5, 7, 9]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(1, 2, 3);\n * let v2 = createVector(2, 3, 4);\n *\n * let v3 = p5.Vector.add(v1, v2);\n * // v3 has components [3, 5, 7]\n * print(v3);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // red vector + blue vector = purple vector\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v1, 'red');\n *\n *   let v2 = createVector(-30, 20);\n *   drawArrow(v1, v2, 'blue');\n *\n *   let v3 = p5.Vector.add(v1, v2);\n *   drawArrow(v0, v3, 'purple');\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n/**\n * @method add\n * @param  {p5.Vector|Number[]} value the vector to add\n * @chainable\n */\np5.Vector.prototype.add = function add(x, y, z) {\n  if (x instanceof p5.Vector) {\n    this.x += x.x || 0;\n    this.y += x.y || 0;\n    this.z += x.z || 0;\n    return this;\n  }\n  if (x instanceof Array) {\n    this.x += x[0] || 0;\n    this.y += x[1] || 0;\n    this.z += x[2] || 0;\n    return this;\n  }\n  this.x += x || 0;\n  this.y += y || 0;\n  this.z += z || 0;\n  return this;\n};\n\n/// HELPERS FOR REMAINDER METHOD\nconst calculateRemainder2D = function(xComponent, yComponent) {\n  if (xComponent !== 0) {\n    this.x = this.x % xComponent;\n  }\n  if (yComponent !== 0) {\n    this.y = this.y % yComponent;\n  }\n  return this;\n};\n\nconst calculateRemainder3D = function(xComponent, yComponent, zComponent) {\n  if (xComponent !== 0) {\n    this.x = this.x % xComponent;\n  }\n  if (yComponent !== 0) {\n    this.y = this.y % yComponent;\n  }\n  if (zComponent !== 0) {\n    this.z = this.z % zComponent;\n  }\n  return this;\n};\n/**\n * Gives remainder of a vector when it is divided by another vector.\n * See examples for more context.\n *\n * @method rem\n * @param {Number} x the x component of divisor vector\n * @param {Number} y the y component of divisor vector\n * @param {Number} z the z component of divisor vector\n * @chainable\n * @example\n * <div class='norender'>\n * <code>\n * let v = createVector(3, 4, 5);\n * v.rem(2, 3, 4);\n * // v's components are set to [1, 1, 1]\n * </code>\n * </div>\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(3, 4, 5);\n * let v2 = createVector(2, 3, 4);\n *\n * let v3 = p5.Vector.rem(v1, v2);\n * // v3 has components [1, 1, 1]\n * print(v3);\n * </code>\n * </div>\n */\n/**\n * @method rem\n * @param {p5.Vector | Number[]}  value  divisor vector\n * @chainable\n */\np5.Vector.prototype.rem = function rem(x, y, z) {\n  if (x instanceof p5.Vector) {\n    if (Number.isFinite(x.x) && Number.isFinite(x.y) && Number.isFinite(x.z)) {\n      const xComponent = parseFloat(x.x);\n      const yComponent = parseFloat(x.y);\n      const zComponent = parseFloat(x.z);\n      calculateRemainder3D.call(this, xComponent, yComponent, zComponent);\n    }\n  } else if (x instanceof Array) {\n    if (x.every(element => Number.isFinite(element))) {\n      if (x.length === 2) {\n        calculateRemainder2D.call(this, x[0], x[1]);\n      }\n      if (x.length === 3) {\n        calculateRemainder3D.call(this, x[0], x[1], x[2]);\n      }\n    }\n  } else if (arguments.length === 1) {\n    if (Number.isFinite(arguments[0]) && arguments[0] !== 0) {\n      this.x = this.x % arguments[0];\n      this.y = this.y % arguments[0];\n      this.z = this.z % arguments[0];\n      return this;\n    }\n  } else if (arguments.length === 2) {\n    const vectorComponents = [...arguments];\n    if (vectorComponents.every(element => Number.isFinite(element))) {\n      if (vectorComponents.length === 2) {\n        calculateRemainder2D.call(\n          this,\n          vectorComponents[0],\n          vectorComponents[1]\n        );\n      }\n    }\n  } else if (arguments.length === 3) {\n    const vectorComponents = [...arguments];\n    if (vectorComponents.every(element => Number.isFinite(element))) {\n      if (vectorComponents.length === 3) {\n        calculateRemainder3D.call(\n          this,\n          vectorComponents[0],\n          vectorComponents[1],\n          vectorComponents[2]\n        );\n      }\n    }\n  }\n};\n\n/**\n * Subtracts x, y, and z components from a vector, subtracts one vector from\n * another, or subtracts two independent vectors. The version of the method\n * that subtracts two vectors is a static method and returns a <a href=\"#/p5.Vector\">p5.Vector</a>, the\n * other acts directly on the vector. Additionally, you may provide arguments to this function as an array.\n * See the examples for more context.\n *\n * @method sub\n * @param  {Number} x   the x component of the vector to subtract\n * @param  {Number} [y] the y component of the vector to subtract\n * @param  {Number} [z] the z component of the vector to subtract\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(4, 5, 6);\n * v.sub(1, 1, 1);\n * // v's components are set to [3, 4, 5]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v = createVector(4, 5, 6);\n * // Provide arguments as an array\n * let arr = [1, 1, 1];\n * v.sub(arr);\n * // v's components are set to [3, 4, 5]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(2, 3, 4);\n * let v2 = createVector(1, 2, 3);\n *\n * let v3 = p5.Vector.sub(v1, v2);\n * // v3 has components [1, 1, 1]\n * print(v3);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // red vector - blue vector = purple vector\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(70, 50);\n *   drawArrow(v0, v1, 'red');\n *\n *   let v2 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v2, 'blue');\n *\n *   let v3 = p5.Vector.sub(v1, v2);\n *   drawArrow(v2, v3, 'purple');\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n/**\n * @method sub\n * @param  {p5.Vector|Number[]} value the vector to subtract\n * @chainable\n */\np5.Vector.prototype.sub = function sub(x, y, z) {\n  if (x instanceof p5.Vector) {\n    this.x -= x.x || 0;\n    this.y -= x.y || 0;\n    this.z -= x.z || 0;\n    return this;\n  }\n  if (x instanceof Array) {\n    this.x -= x[0] || 0;\n    this.y -= x[1] || 0;\n    this.z -= x[2] || 0;\n    return this;\n  }\n  this.x -= x || 0;\n  this.y -= y || 0;\n  this.z -= z || 0;\n  return this;\n};\n\n/**\n * Multiplies the vector by a scalar, multiplies the x, y, and z components from a vector, or multiplies\n * the x, y, and z components of two independent vectors. When multiplying a vector by a scalar, the x, y,\n * and z components of the vector are all multiplied by the scalar. When multiplying a vector by a vector,\n * the x, y, z components of both vectors are multiplied by each other\n * (for example, with two vectors a and b: a.x * b.x, a.y * b.y, a.z * b.z). The static version of this method\n * creates a new <a href=\"#/p5.Vector\">p5.Vector</a> while the non static version acts on the vector\n * directly. Additionally, you may provide arguments to this function as an array.\n * See the examples for more context.\n *\n * @method mult\n * @param  {Number} n The number to multiply with the vector\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(1, 2, 3);\n * v.mult(2);\n * // v's components are set to [2, 4, 6]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v0 = createVector(1, 2, 3);\n * let v1 = createVector(2, 3, 4);\n * v0.mult(v1); // v0's components are set to [2, 6, 12]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v0 = createVector(1, 2, 3);\n * // Provide arguments as an array\n * let arr = [2, 3, 4];\n * v0.mult(arr); // v0's components are set to [2, 6, 12]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v0 = createVector(1, 2, 3);\n * let v1 = createVector(2, 3, 4);\n * const result = p5.Vector.mult(v0, v1);\n * print(result); // result's components are set to [2, 6, 12]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(1, 2, 3);\n * let v2 = p5.Vector.mult(v1, 2);\n * // v2 has components [2, 4, 6]\n * print(v2);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(50, 50);\n *   let v1 = createVector(25, -25);\n *   drawArrow(v0, v1, 'red');\n *\n *   let num = map(mouseX, 0, width, -2, 2, true);\n *   let v2 = p5.Vector.mult(v1, num);\n *   drawArrow(v0, v2, 'blue');\n *\n *   noStroke();\n *   text('multiplied by ' + num.toFixed(2), 5, 90);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n\n/**\n * @method mult\n * @param  {Number} x The number to multiply with the x component of the vector\n * @param  {Number} y The number to multiply with the y component of the vector\n * @param  {Number} [z] The number to multiply with the z component of the vector\n * @chainable\n */\n\n/**\n * @method mult\n * @param  {Number[]} arr The array to multiply with the components of the vector\n * @chainable\n */\n\n/**\n * @method mult\n * @param  {p5.Vector} v The vector to multiply with the components of the original vector\n * @chainable\n */\n\np5.Vector.prototype.mult = function mult(x, y, z) {\n  if (x instanceof p5.Vector) {\n    // new p5.Vector will check that values are valid upon construction but it's possible\n    // that someone could change the value of a component after creation, which is why we still\n    // perform this check\n    if (\n      Number.isFinite(x.x) &&\n      Number.isFinite(x.y) &&\n      Number.isFinite(x.z) &&\n      typeof x.x === 'number' &&\n      typeof x.y === 'number' &&\n      typeof x.z === 'number'\n    ) {\n      this.x *= x.x;\n      this.y *= x.y;\n      this.z *= x.z;\n    } else {\n      console.warn(\n        'p5.Vector.prototype.mult:',\n        'x contains components that are either undefined or not finite numbers'\n      );\n    }\n    return this;\n  }\n  if (x instanceof Array) {\n    if (\n      x.every(element => Number.isFinite(element)) &&\n      x.every(element => typeof element === 'number')\n    ) {\n      if (x.length === 1) {\n        this.x *= x[0];\n        this.y *= x[0];\n        this.z *= x[0];\n      } else if (x.length === 2) {\n        this.x *= x[0];\n        this.y *= x[1];\n      } else if (x.length === 3) {\n        this.x *= x[0];\n        this.y *= x[1];\n        this.z *= x[2];\n      }\n    } else {\n      console.warn(\n        'p5.Vector.prototype.mult:',\n        'x contains elements that are either undefined or not finite numbers'\n      );\n    }\n    return this;\n  }\n\n  const vectorComponents = [...arguments];\n  if (\n    vectorComponents.every(element => Number.isFinite(element)) &&\n    vectorComponents.every(element => typeof element === 'number')\n  ) {\n    if (arguments.length === 1) {\n      this.x *= x;\n      this.y *= x;\n      this.z *= x;\n    }\n    if (arguments.length === 2) {\n      this.x *= x;\n      this.y *= y;\n    }\n    if (arguments.length === 3) {\n      this.x *= x;\n      this.y *= y;\n      this.z *= z;\n    }\n  } else {\n    console.warn(\n      'p5.Vector.prototype.mult:',\n      'x, y, or z arguments are either undefined or not a finite number'\n    );\n  }\n\n  return this;\n};\n\n/**\n * Divides the vector by a scalar, divides a vector by the x, y, and z arguments, or divides the x, y, and\n * z components of two vectors against each other. When dividing a vector by a scalar, the x, y,\n * and z components of the vector are all divided by the scalar. When dividing a vector by a vector,\n * the x, y, z components of the source vector are treated as the dividend, and the x, y, z components\n * of the argument is treated as the divisor (for example with two vectors a and b: a.x / b.x, a.y / b.y, a.z / b.z).\n * The static version of this method creates a\n * new <a href=\"#/p5.Vector\">p5.Vector</a> while the non static version acts on the vector directly.\n * Additionally, you may provide arguments to this function as an array.\n * See the examples for more context.\n *\n * @method div\n * @param  {number}    n The number to divide the vector by\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(6, 4, 2);\n * v.div(2); //v's components are set to [3, 2, 1]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v0 = createVector(9, 4, 2);\n * let v1 = createVector(3, 2, 4);\n * v0.div(v1); // v0's components are set to [3, 2, 0.5]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v0 = createVector(9, 4, 2);\n * // Provide arguments as an array\n * let arr = [3, 2, 4];\n * v0.div(arr); // v0's components are set to [3, 2, 0.5]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v0 = createVector(9, 4, 2);\n * let v1 = createVector(3, 2, 4);\n * let result = p5.Vector.div(v0, v1);\n * print(result); // result's components are set to [3, 2, 0.5]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(6, 4, 2);\n * let v2 = p5.Vector.div(v1, 2);\n * // v2 has components [3, 2, 1]\n * print(v2);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 100);\n *   let v1 = createVector(50, -50);\n *   drawArrow(v0, v1, 'red');\n *\n *   let num = map(mouseX, 0, width, 10, 0.5, true);\n *   let v2 = p5.Vector.div(v1, num);\n *   drawArrow(v0, v2, 'blue');\n *\n *   noStroke();\n *   text('divided by ' + num.toFixed(2), 10, 90);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n\n/**\n * @method div\n * @param  {Number} x The number to divide with the x component of the vector\n * @param  {Number} y The number to divide with the y component of the vector\n * @param  {Number} [z] The number to divide with the z component of the vector\n * @chainable\n */\n\n/**\n * @method div\n * @param  {Number[]} arr The array to divide the components of the vector by\n * @chainable\n */\n\n/**\n * @method div\n * @param  {p5.Vector} v The vector to divide the components of the original vector by\n * @chainable\n */\np5.Vector.prototype.div = function div(x, y, z) {\n  if (x instanceof p5.Vector) {\n    // new p5.Vector will check that values are valid upon construction but it's possible\n    // that someone could change the value of a component after creation, which is why we still\n    // perform this check\n    if (\n      Number.isFinite(x.x) &&\n      Number.isFinite(x.y) &&\n      Number.isFinite(x.z) &&\n      typeof x.x === 'number' &&\n      typeof x.y === 'number' &&\n      typeof x.z === 'number'\n    ) {\n      if (x.x === 0 || x.y === 0 || x.z === 0) {\n        console.warn('p5.Vector.prototype.div:', 'divide by 0');\n        return this;\n      }\n      this.x /= x.x;\n      this.y /= x.y;\n      this.z /= x.z;\n    } else {\n      console.warn(\n        'p5.Vector.prototype.div:',\n        'x contains components that are either undefined or not finite numbers'\n      );\n    }\n    return this;\n  }\n  if (x instanceof Array) {\n    if (\n      x.every(element => Number.isFinite(element)) &&\n      x.every(element => typeof element === 'number')\n    ) {\n      if (x.some(element => element === 0)) {\n        console.warn('p5.Vector.prototype.div:', 'divide by 0');\n        return this;\n      }\n\n      if (x.length === 1) {\n        this.x /= x[0];\n        this.y /= x[0];\n        this.z /= x[0];\n      } else if (x.length === 2) {\n        this.x /= x[0];\n        this.y /= x[1];\n      } else if (x.length === 3) {\n        this.x /= x[0];\n        this.y /= x[1];\n        this.z /= x[2];\n      }\n    } else {\n      console.warn(\n        'p5.Vector.prototype.div:',\n        'x contains components that are either undefined or not finite numbers'\n      );\n    }\n\n    return this;\n  }\n\n  const vectorComponents = [...arguments];\n  if (\n    vectorComponents.every(element => Number.isFinite(element)) &&\n    vectorComponents.every(element => typeof element === 'number')\n  ) {\n    if (vectorComponents.some(element => element === 0)) {\n      console.warn('p5.Vector.prototype.div:', 'divide by 0');\n      return this;\n    }\n\n    if (arguments.length === 1) {\n      this.x /= x;\n      this.y /= x;\n      this.z /= x;\n    }\n    if (arguments.length === 2) {\n      this.x /= x;\n      this.y /= y;\n    }\n    if (arguments.length === 3) {\n      this.x /= x;\n      this.y /= y;\n      this.z /= z;\n    }\n  } else {\n    console.warn(\n      'p5.Vector.prototype.div:',\n      'x, y, or z arguments are either undefined or not a finite number'\n    );\n  }\n\n  return this;\n};\n/**\n * Calculates the magnitude (length) of the vector and returns the result as\n * a float (this is simply the equation sqrt(x\\*x + y\\*y + z\\*z).)\n *\n * @method mag\n * @return {Number} magnitude of the vector\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v1, 'black');\n *\n *   noStroke();\n *   text('vector length: ' + v1.mag().toFixed(2), 10, 70, 90, 30);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n * <div class=\"norender\">\n * <code>\n * let v = createVector(20.0, 30.0, 40.0);\n * let m = v.mag();\n * print(m); // Prints \"53.85164807134504\"\n * </code>\n * </div>\n */\np5.Vector.prototype.mag = function mag() {\n  return Math.sqrt(this.magSq());\n};\n\n/**\n * Calculates the squared magnitude of the vector and returns the result\n * as a float (this is simply the equation <em>(x\\*x + y\\*y + z\\*z)</em>.)\n * Faster if the real length is not required in the\n * case of comparing vectors, etc.\n *\n * @method magSq\n * @return {number} squared magnitude of the vector\n * @example\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(6, 4, 2);\n * print(v1.magSq()); // Prints \"56\"\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v1, 'black');\n *\n *   noStroke();\n *   text('vector length squared: ' + v1.magSq().toFixed(2), 10, 45, 90, 55);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.magSq = function magSq() {\n  const x = this.x;\n  const y = this.y;\n  const z = this.z;\n  return x * x + y * y + z * z;\n};\n\n/**\n * Calculates the dot product of two vectors. The version of the method\n * that computes the dot product of two independent vectors is a static\n * method. See the examples for more context.\n *\n *\n * @method dot\n * @param  {Number} x   x component of the vector\n * @param  {Number} [y] y component of the vector\n * @param  {Number} [z] z component of the vector\n * @return {Number}       the dot product\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(1, 2, 3);\n * let v2 = createVector(2, 3, 4);\n *\n * print(v1.dot(v2)); // Prints \"20\"\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * //Static method\n * let v1 = createVector(1, 2, 3);\n * let v2 = createVector(3, 2, 1);\n * print(p5.Vector.dot(v1, v2)); // Prints \"10\"\n * </code>\n * </div>\n */\n/**\n * @method dot\n * @param  {p5.Vector} value value component of the vector or a <a href=\"#/p5.Vector\">p5.Vector</a>\n * @return {Number}\n */\np5.Vector.prototype.dot = function dot(x, y, z) {\n  if (x instanceof p5.Vector) {\n    return this.dot(x.x, x.y, x.z);\n  }\n  return this.x * (x || 0) + this.y * (y || 0) + this.z * (z || 0);\n};\n\n/**\n * Calculates and returns a vector composed of the cross product between\n * two vectors. Both the static and non static methods return a new <a href=\"#/p5.Vector\">p5.Vector</a>.\n * See the examples for more context.\n *\n * @method cross\n * @param  {p5.Vector} v <a href=\"#/p5.Vector\">p5.Vector</a> to be crossed\n * @return {p5.Vector}   <a href=\"#/p5.Vector\">p5.Vector</a> composed of cross product\n * @example\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(1, 2, 3);\n * let v2 = createVector(1, 2, 3);\n *\n * let v = v1.cross(v2); // v's components are [0, 0, 0]\n * print(v);\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(1, 0, 0);\n * let v2 = createVector(0, 1, 0);\n *\n * let crossProduct = p5.Vector.cross(v1, v2);\n * // crossProduct has components [0, 0, 1]\n * print(crossProduct);\n * </code>\n * </div>\n */\np5.Vector.prototype.cross = function cross(v) {\n  const x = this.y * v.z - this.z * v.y;\n  const y = this.z * v.x - this.x * v.z;\n  const z = this.x * v.y - this.y * v.x;\n  if (this.p5) {\n    return new p5.Vector(this.p5, [x, y, z]);\n  } else {\n    return new p5.Vector(x, y, z);\n  }\n};\n\n/**\n * Calculates the Euclidean distance between two points (considering a\n * point as a vector object).\n *\n * @method dist\n * @param  {p5.Vector} v the x, y, and z coordinates of a <a href=\"#/p5.Vector\">p5.Vector</a>\n * @return {Number}      the distance\n * @example\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(1, 0, 0);\n * let v2 = createVector(0, 1, 0);\n *\n * let distance = v1.dist(v2); // distance is 1.4142...\n * print(distance);\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * let v1 = createVector(1, 0, 0);\n * let v2 = createVector(0, 1, 0);\n *\n * let distance = p5.Vector.dist(v1, v2);\n * // distance is 1.4142...\n * print(distance);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *\n *   let v1 = createVector(70, 50);\n *   drawArrow(v0, v1, 'red');\n *\n *   let v2 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v2, 'blue');\n *\n *   noStroke();\n *   text('distance between vectors: ' + v2.dist(v1).toFixed(2), 5, 50, 95, 50);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.dist = function dist(v) {\n  return v\n    .copy()\n    .sub(this)\n    .mag();\n};\n\n/**\n * Normalize the vector to length 1 (make it a unit vector).\n *\n * @method normalize\n * @return {p5.Vector} normalized <a href=\"#/p5.Vector\">p5.Vector</a>\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(10, 20, 2);\n * // v has components [10.0, 20.0, 2.0]\n * v.normalize();\n * // v's components are set to\n * // [0.4454354, 0.8908708, 0.089087084]\n * </code>\n * </div>\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(50, 50);\n *   let v1 = createVector(mouseX - 50, mouseY - 50);\n *\n *   drawArrow(v0, v1, 'red');\n *   v1.normalize();\n *   drawArrow(v0, v1.mult(35), 'blue');\n *\n *   noFill();\n *   ellipse(50, 50, 35 * 2);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.normalize = function normalize() {\n  const len = this.mag();\n  // here we multiply by the reciprocal instead of calling 'div()'\n  // since div duplicates this zero check.\n  if (len !== 0) this.mult(1 / len);\n  return this;\n};\n\n/**\n * Limit the magnitude of this vector to the value used for the <b>max</b>\n * parameter.\n *\n * @method limit\n * @param  {Number}    max the maximum magnitude for the vector\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(10, 20, 2);\n * // v has components [10.0, 20.0, 2.0]\n * v.limit(5);\n * // v's components are set to\n * // [2.2271771, 4.4543543, 0.4454354]\n * </code>\n * </div>\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(50, 50);\n *   let v1 = createVector(mouseX - 50, mouseY - 50);\n *\n *   drawArrow(v0, v1, 'red');\n *   drawArrow(v0, v1.limit(35), 'blue');\n *\n *   noFill();\n *   ellipse(50, 50, 35 * 2);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.limit = function limit(max) {\n  const mSq = this.magSq();\n  if (mSq > max * max) {\n    this.div(Math.sqrt(mSq)) //normalize it\n      .mult(max);\n  }\n  return this;\n};\n\n/**\n * Set the magnitude of this vector to the value used for the <b>len</b>\n * parameter.\n *\n * @method setMag\n * @param  {number}    len the new length for this vector\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(10, 20, 2);\n * // v has components [10.0, 20.0, 2.0]\n * v.setMag(10);\n * // v's components are set to [6.0, 8.0, 0.0]\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(50, 50);\n *\n *   drawArrow(v0, v1, 'red');\n *\n *   let length = map(mouseX, 0, width, 0, 141, true);\n *   v1.setMag(length);\n *   drawArrow(v0, v1, 'blue');\n *\n *   noStroke();\n *   text('magnitude set to: ' + length.toFixed(2), 10, 70, 90, 30);\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.setMag = function setMag(n) {\n  return this.normalize().mult(n);\n};\n\n/**\n * Calculate the angle of rotation for this vector (only 2D vectors)\n *\n * @method heading\n * @return {Number} the angle of rotation\n * @example\n * <div class = \"norender\">\n * <code>\n * function setup() {\n *   let v1 = createVector(30, 50);\n *   print(v1.heading()); // 1.0303768265243125\n *\n *   v1 = createVector(40, 50);\n *   print(v1.heading()); // 0.8960553845713439\n *\n *   v1 = createVector(30, 70);\n *   print(v1.heading()); // 1.1659045405098132\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(50, 50);\n *   let v1 = createVector(mouseX - 50, mouseY - 50);\n *\n *   drawArrow(v0, v1, 'black');\n *\n *   let myHeading = v1.heading();\n *   noStroke();\n *   text(\n *     'vector heading: ' +\n *       myHeading.toFixed(2) +\n *       ' radians or ' +\n *       degrees(myHeading).toFixed(2) +\n *       ' degrees',\n *     10,\n *     50,\n *     90,\n *     50\n *   );\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.heading = function heading() {\n  const h = Math.atan2(this.y, this.x);\n  if (this.p5) return this.p5._fromRadians(h);\n  return h;\n};\n\n/**\n * Rotate the vector by an angle (only 2D vectors), magnitude remains the\n * same\n *\n * @method rotate\n * @param  {number}    angle the angle of rotation\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(10.0, 20.0);\n * // v has components [10.0, 20.0, 0.0]\n * v.rotate(HALF_PI);\n * // v's components are set to [-20.0, 9.999999, 0.0]\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let angle = 0;\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(50, 50);\n *   let v1 = createVector(50, 0);\n *\n *   drawArrow(v0, v1.rotate(angle), 'black');\n *   angle += 0.01;\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.rotate = function rotate(a) {\n  let newHeading = this.heading() + a;\n  if (this.p5) newHeading = this.p5._toRadians(newHeading);\n  const mag = this.mag();\n  this.x = Math.cos(newHeading) * mag;\n  this.y = Math.sin(newHeading) * mag;\n  return this;\n};\n\n/**\n * Calculates and returns the angle (in radians) between two vectors.\n * @method angleBetween\n * @param  {p5.Vector}    value the x, y, and z components of a <a href=\"#/p5.Vector\">p5.Vector</a>\n * @return {Number}       the angle between (in radians)\n * @example\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(1, 0, 0);\n * let v2 = createVector(0, 1, 0);\n *\n * let angle = v1.angleBetween(v2);\n * // angle is PI/2\n * print(angle);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *   let v0 = createVector(50, 50);\n *\n *   let v1 = createVector(50, 0);\n *   drawArrow(v0, v1, 'red');\n *\n *   let v2 = createVector(mouseX - 50, mouseY - 50);\n *   drawArrow(v0, v2, 'blue');\n *\n *   let angleBetween = v1.angleBetween(v2);\n *   noStroke();\n *   text(\n *     'angle between: ' +\n *       angleBetween.toFixed(2) +\n *       ' radians or ' +\n *       degrees(angleBetween).toFixed(2) +\n *       ' degrees',\n *     10,\n *     50,\n *     90,\n *     50\n *   );\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n\np5.Vector.prototype.angleBetween = function angleBetween(v) {\n  const dotmagmag = this.dot(v) / (this.mag() * v.mag());\n  // Mathematically speaking: the dotmagmag variable will be between -1 and 1\n  // inclusive. Practically though it could be slightly outside this range due\n  // to floating-point rounding issues. This can make Math.acos return NaN.\n  //\n  // Solution: we'll clamp the value to the -1,1 range\n  let angle;\n  angle = Math.acos(Math.min(1, Math.max(-1, dotmagmag)));\n  angle = angle * Math.sign(this.cross(v).z || 1);\n  if (this.p5) {\n    angle = this.p5._fromRadians(angle);\n  }\n  return angle;\n};\n/**\n * Linear interpolate the vector to another vector\n *\n * @method lerp\n * @param  {Number}    x   the x component\n * @param  {Number}    y   the y component\n * @param  {Number}    z   the z component\n * @param  {Number}    amt the amount of interpolation; some value between 0.0\n *                         (old vector) and 1.0 (new vector). 0.9 is very near\n *                         the new vector. 0.5 is halfway in between.\n * @chainable\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(1, 1, 0);\n *\n * v.lerp(3, 3, 0, 0.5); // v now has components [2,2,0]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(0, 0, 0);\n * let v2 = createVector(100, 100, 0);\n *\n * let v3 = p5.Vector.lerp(v1, v2, 0.5);\n * // v3 has components [50,50,0]\n * print(v3);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * let step = 0.01;\n * let amount = 0;\n *\n * function draw() {\n *   background(240);\n *   let v0 = createVector(0, 0);\n *\n *   let v1 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v1, 'red');\n *\n *   let v2 = createVector(90, 90);\n *   drawArrow(v0, v2, 'blue');\n *\n *   if (amount > 1 || amount < 0) {\n *     step *= -1;\n *   }\n *   amount += step;\n *   let v3 = p5.Vector.lerp(v1, v2, amount);\n *\n *   drawArrow(v0, v3, 'purple');\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\n/**\n * @method lerp\n * @param  {p5.Vector} v   the <a href=\"#/p5.Vector\">p5.Vector</a> to lerp to\n * @param  {Number}    amt\n * @chainable\n */\np5.Vector.prototype.lerp = function lerp(x, y, z, amt) {\n  if (x instanceof p5.Vector) {\n    return this.lerp(x.x, x.y, x.z, y);\n  }\n  this.x += (x - this.x) * amt || 0;\n  this.y += (y - this.y) * amt || 0;\n  this.z += (z - this.z) * amt || 0;\n  return this;\n};\n\n/**\n * Reflect the incoming vector about a normal to a line in 2D, or about a normal to a plane in 3D\n * This method acts on the vector directly\n *\n * @method reflect\n * @param  {p5.Vector} surfaceNormal   the <a href=\"#/p5.Vector\">p5.Vector</a> to reflect about, will be normalized by this method\n * @chainable\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = createVector(4, 6); // incoming vector, this example vector is heading to the right and downward\n * let n = createVector(0, -1); // surface normal to a plane (this example normal points directly upwards)\n * v.reflect(n); // v is reflected about the surface normal n.  v's components are now set to [4, -6]\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(0, 0);\n *   let v1 = createVector(mouseX, mouseY);\n *   drawArrow(v0, v1, 'red');\n *\n *   let n = createVector(0, -30);\n *   drawArrow(v1, n, 'blue');\n *\n *   let r = v1.copy();\n *   r.reflect(n);\n *   drawArrow(v1, r, 'purple');\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.reflect = function reflect(surfaceNormal) {\n  surfaceNormal.normalize();\n  return this.sub(surfaceNormal.mult(2 * this.dot(surfaceNormal)));\n};\n\n/**\n * Return a representation of this vector as a float array. This is only\n * for temporary use. If used in any other fashion, the contents should be\n * copied by using the <b>p5.Vector.<a href=\"#/p5.Vector/copy\">copy()</a></b> method to copy into your own\n * array.\n *\n * @method array\n * @return {Number[]} an Array with the 3 values\n * @example\n * <div class = \"norender\">\n * <code>\n * function setup() {\n *   let v = createVector(20, 30);\n *   print(v.array()); // Prints : Array [20, 30, 0]\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v = createVector(10.0, 20.0, 30.0);\n * let f = v.array();\n * print(f[0]); // Prints \"10.0\"\n * print(f[1]); // Prints \"20.0\"\n * print(f[2]); // Prints \"30.0\"\n * </code>\n * </div>\n */\np5.Vector.prototype.array = function array() {\n  return [this.x || 0, this.y || 0, this.z || 0];\n};\n\n/**\n * Equality check against a <a href=\"#/p5.Vector\">p5.Vector</a>\n *\n * @method equals\n * @param {Number} [x] the x component of the vector\n * @param {Number} [y] the y component of the vector\n * @param {Number} [z] the z component of the vector\n * @return {Boolean} whether the vectors are equals\n * @example\n * <div class = \"norender\">\n * <code>\n * let v1 = createVector(5, 10, 20);\n * let v2 = createVector(5, 10, 20);\n * let v3 = createVector(13, 10, 19);\n *\n * print(v1.equals(v2.x, v2.y, v2.z)); // true\n * print(v1.equals(v3.x, v3.y, v3.z)); // false\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * let v1 = createVector(10.0, 20.0, 30.0);\n * let v2 = createVector(10.0, 20.0, 30.0);\n * let v3 = createVector(0.0, 0.0, 0.0);\n * print(v1.equals(v2)); // true\n * print(v1.equals(v3)); // false\n * </code>\n * </div>\n */\n/**\n * @method equals\n * @param {p5.Vector|Array} value the vector to compare\n * @return {Boolean}\n */\np5.Vector.prototype.equals = function equals(x, y, z) {\n  let a, b, c;\n  if (x instanceof p5.Vector) {\n    a = x.x || 0;\n    b = x.y || 0;\n    c = x.z || 0;\n  } else if (x instanceof Array) {\n    a = x[0] || 0;\n    b = x[1] || 0;\n    c = x[2] || 0;\n  } else {\n    a = x || 0;\n    b = y || 0;\n    c = z || 0;\n  }\n  return this.x === a && this.y === b && this.z === c;\n};\n\n// Static Methods\n\n/**\n * Make a new 2D vector from an angle\n *\n * @method fromAngle\n * @static\n * @param {Number}     angle the desired angle, in radians (unaffected by <a href=\"#/p5/angleMode\">angleMode</a>)\n * @param {Number}     [length] the length of the new vector (defaults to 1)\n * @return {p5.Vector}       the new <a href=\"#/p5.Vector\">p5.Vector</a> object\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(200);\n *\n *   // Create a variable, proportional to the mouseX,\n *   // varying from 0-360, to represent an angle in degrees.\n *   let myDegrees = map(mouseX, 0, width, 0, 360);\n *\n *   // Display that variable in an onscreen text.\n *   // (Note the nfc() function to truncate additional decimal places,\n *   // and the \"\\xB0\" character for the degree symbol.)\n *   let readout = 'angle = ' + nfc(myDegrees, 1) + '\\xB0';\n *   noStroke();\n *   fill(0);\n *   text(readout, 5, 15);\n *\n *   // Create a p5.Vector using the fromAngle function,\n *   // and extract its x and y components.\n *   let v = p5.Vector.fromAngle(radians(myDegrees), 30);\n *   let vx = v.x;\n *   let vy = v.y;\n *\n *   push();\n *   translate(width / 2, height / 2);\n *   noFill();\n *   stroke(150);\n *   line(0, 0, 30, 0);\n *   stroke(0);\n *   line(0, 0, vx, vy);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.fromAngle = function fromAngle(angle, length) {\n  if (typeof length === 'undefined') {\n    length = 1;\n  }\n  return new p5.Vector(length * Math.cos(angle), length * Math.sin(angle), 0);\n};\n\n/**\n * Make a new 3D vector from a pair of ISO spherical angles\n *\n * @method fromAngles\n * @static\n * @param {Number}     theta    the polar angle, in radians (zero is up)\n * @param {Number}     phi      the azimuthal angle, in radians\n *                               (zero is out of the screen)\n * @param {Number}     [length] the length of the new vector (defaults to 1)\n * @return {p5.Vector}          the new <a href=\"#/p5.Vector\">p5.Vector</a> object\n * @example\n * <div modernizr='webgl'>\n * <code>\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   fill(255);\n *   noStroke();\n * }\n * function draw() {\n *   background(255);\n *\n *   let t = millis() / 1000;\n *\n *   // add three point lights\n *   pointLight(color('#f00'), p5.Vector.fromAngles(t * 1.0, t * 1.3, 100));\n *   pointLight(color('#0f0'), p5.Vector.fromAngles(t * 1.1, t * 1.2, 100));\n *   pointLight(color('#00f'), p5.Vector.fromAngles(t * 1.2, t * 1.1, 100));\n *\n *   sphere(35);\n * }\n * </code>\n * </div>\n */\np5.Vector.fromAngles = function(theta, phi, length) {\n  if (typeof length === 'undefined') {\n    length = 1;\n  }\n  const cosPhi = Math.cos(phi);\n  const sinPhi = Math.sin(phi);\n  const cosTheta = Math.cos(theta);\n  const sinTheta = Math.sin(theta);\n\n  return new p5.Vector(\n    length * sinTheta * sinPhi,\n    -length * cosTheta,\n    length * sinTheta * cosPhi\n  );\n};\n\n/**\n * Make a new 2D unit vector from a random angle\n *\n * @method random2D\n * @static\n * @return {p5.Vector} the new <a href=\"#/p5.Vector\">p5.Vector</a> object\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = p5.Vector.random2D();\n * // May make v's attributes something like:\n * // [0.61554617, -0.51195765, 0.0] or\n * // [-0.4695841, -0.14366731, 0.0] or\n * // [0.6091097, -0.22805278, 0.0]\n * print(v);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * function setup() {\n *   frameRate(1);\n * }\n *\n * function draw() {\n *   background(240);\n *\n *   let v0 = createVector(50, 50);\n *   let v1 = p5.Vector.random2D();\n *   drawArrow(v0, v1.mult(50), 'black');\n * }\n *\n * // draw an arrow for a vector at a given base position\n * function drawArrow(base, vec, myColor) {\n *   push();\n *   stroke(myColor);\n *   strokeWeight(3);\n *   fill(myColor);\n *   translate(base.x, base.y);\n *   line(0, 0, vec.x, vec.y);\n *   rotate(vec.heading());\n *   let arrowSize = 7;\n *   translate(vec.mag() - arrowSize, 0);\n *   triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n *   pop();\n * }\n * </code>\n * </div>\n */\np5.Vector.random2D = function random2D() {\n  return this.fromAngle(Math.random() * constants.TWO_PI);\n};\n\n/**\n * Make a new random 3D unit vector.\n *\n * @method random3D\n * @static\n * @return {p5.Vector} the new <a href=\"#/p5.Vector\">p5.Vector</a> object\n * @example\n * <div class=\"norender\">\n * <code>\n * let v = p5.Vector.random3D();\n * // May make v's attributes something like:\n * // [0.61554617, -0.51195765, 0.599168] or\n * // [-0.4695841, -0.14366731, -0.8711202] or\n * // [0.6091097, -0.22805278, -0.7595902]\n * print(v);\n * </code>\n * </div>\n */\np5.Vector.random3D = function random3D() {\n  const angle = Math.random() * constants.TWO_PI;\n  const vz = Math.random() * 2 - 1;\n  const vzBase = Math.sqrt(1 - vz * vz);\n  const vx = vzBase * Math.cos(angle);\n  const vy = vzBase * Math.sin(angle);\n  return new p5.Vector(vx, vy, vz);\n};\n\n// Adds two vectors together and returns a new one.\n/**\n * @method add\n * @static\n * @param  {p5.Vector} v1 a <a href=\"#/p5.Vector\">p5.Vector</a> to add\n * @param  {p5.Vector} v2 a <a href=\"#/p5.Vector\">p5.Vector</a> to add\n * @param  {p5.Vector} [target] the vector to receive the result (Optional)\n * @return {p5.Vector} the resulting <a href=\"#/p5.Vector\">p5.Vector</a>\n *\n */\n\np5.Vector.add = function add(v1, v2, target) {\n  if (!target) {\n    target = v1.copy();\n    if (arguments.length === 3) {\n      p5._friendlyError(\n        'The target parameter is undefined, it should be of type p5.Vector',\n        ''\n      );\n    }\n  } else {\n    target.set(v1);\n  }\n  target.add(v2);\n  return target;\n};\n\n// Returns a vector remainder when it is divided by another vector\n/**\n * @method rem\n * @static\n * @param  {p5.Vector} v1 dividend <a href=\"#/p5.Vector\">p5.Vector</a>\n * @param  {p5.Vector} v2 divisor <a href=\"#/p5.Vector\">p5.Vector</a>\n */\n/**\n * @method rem\n * @static\n * @param  {p5.Vector} v1\n * @param  {p5.Vector} v2\n * @return {p5.Vector} the resulting <a href=\"#/p5.Vector\">p5.Vector</a>\n *\n */\np5.Vector.rem = function rem(v1, v2) {\n  if (v1 instanceof p5.Vector && v2 instanceof p5.Vector) {\n    let target = v1.copy();\n    target.rem(v2);\n    return target;\n  }\n};\n\n/*\n * Subtracts one <a href=\"#/p5.Vector\">p5.Vector</a> from another and returns a new one.  The second\n * vector (v2) is subtracted from the first (v1), resulting in v1-v2.\n */\n/**\n * @method sub\n * @static\n * @param  {p5.Vector} v1 a <a href=\"#/p5.Vector\">p5.Vector</a> to subtract from\n * @param  {p5.Vector} v2 a <a href=\"#/p5.Vector\">p5.Vector</a> to subtract\n * @param  {p5.Vector} [target] the vector to receive the result (Optional)\n * @return {p5.Vector} the resulting <a href=\"#/p5.Vector\">p5.Vector</a>\n */\n\np5.Vector.sub = function sub(v1, v2, target) {\n  if (!target) {\n    target = v1.copy();\n    if (arguments.length === 3) {\n      p5._friendlyError(\n        'The target parameter is undefined, it should be of type p5.Vector',\n        ''\n      );\n    }\n  } else {\n    target.set(v1);\n  }\n  target.sub(v2);\n  return target;\n};\n\n/**\n * Multiplies a vector by a scalar and returns a new vector.\n */\n\n/**\n * @method mult\n * @static\n * @param  {Number} x\n * @param  {Number} y\n * @param  {Number} [z]\n * @return {p5.Vector} The resulting new <a href=\"#/p5.Vector\">p5.Vector</a>\n */\n\n/**\n * @method mult\n * @static\n * @param  {p5.Vector} v\n * @param  {Number}  n\n * @param  {p5.Vector} [target] the vector to receive the result (Optional)\n */\n\n/**\n * @method mult\n * @static\n * @param  {p5.Vector} v0\n * @param  {p5.Vector} v1\n * @param  {p5.Vector} [target]\n */\n\n/**\n * @method mult\n * @static\n * @param  {p5.Vector} v0\n * @param  {Number[]} arr\n * @param  {p5.Vector} [target]\n */\np5.Vector.mult = function mult(v, n, target) {\n  if (!target) {\n    target = v.copy();\n    if (arguments.length === 3) {\n      p5._friendlyError(\n        'The target parameter is undefined, it should be of type p5.Vector',\n        ''\n      );\n    }\n  } else {\n    target.set(v);\n  }\n  target.mult(n);\n  return target;\n};\n\n/**\n * Divides a vector by a scalar and returns a new vector.\n */\n\n/**\n * @method div\n * @static\n * @param  {Number} x\n * @param  {Number} y\n * @param  {Number} [z]\n * @return {p5.Vector} The resulting new <a href=\"#/p5.Vector\">p5.Vector</a>\n */\n\n/**\n * @method div\n * @static\n * @param  {p5.Vector} v\n * @param  {Number}  n\n * @param  {p5.Vector} [target] the vector to receive the result (Optional)\n */\n\n/**\n * @method div\n * @static\n * @param  {p5.Vector} v0\n * @param  {p5.Vector} v1\n * @param  {p5.Vector} [target]\n */\n\n/**\n * @method div\n * @static\n * @param  {p5.Vector} v0\n * @param  {Number[]} arr\n * @param  {p5.Vector} [target]\n */\np5.Vector.div = function div(v, n, target) {\n  if (!target) {\n    target = v.copy();\n\n    if (arguments.length === 3) {\n      p5._friendlyError(\n        'The target parameter is undefined, it should be of type p5.Vector',\n        ''\n      );\n    }\n  } else {\n    target.set(v);\n  }\n  target.div(n);\n  return target;\n};\n\n/**\n * Calculates the dot product of two vectors.\n */\n/**\n * @method dot\n * @static\n * @param  {p5.Vector} v1 the first <a href=\"#/p5.Vector\">p5.Vector</a>\n * @param  {p5.Vector} v2 the second <a href=\"#/p5.Vector\">p5.Vector</a>\n * @return {Number}     the dot product\n */\np5.Vector.dot = function dot(v1, v2) {\n  return v1.dot(v2);\n};\n\n/**\n * Calculates the cross product of two vectors.\n */\n/**\n * @method cross\n * @static\n * @param  {p5.Vector} v1 the first <a href=\"#/p5.Vector\">p5.Vector</a>\n * @param  {p5.Vector} v2 the second <a href=\"#/p5.Vector\">p5.Vector</a>\n * @return {Number}     the cross product\n */\np5.Vector.cross = function cross(v1, v2) {\n  return v1.cross(v2);\n};\n\n/**\n * Calculates the Euclidean distance between two points (considering a\n * point as a vector object).\n */\n/**\n * @method dist\n * @static\n * @param  {p5.Vector} v1 the first <a href=\"#/p5.Vector\">p5.Vector</a>\n * @param  {p5.Vector} v2 the second <a href=\"#/p5.Vector\">p5.Vector</a>\n * @return {Number}     the distance\n */\np5.Vector.dist = function dist(v1, v2) {\n  return v1.dist(v2);\n};\n\n/**\n * Linear interpolate a vector to another vector and return the result as a\n * new vector.\n */\n/**\n * @method lerp\n * @static\n * @param {p5.Vector} v1\n * @param {p5.Vector} v2\n * @param {Number} amt\n * @param {p5.Vector} [target] the vector to receive the result (Optional)\n * @return {p5.Vector}      the lerped value\n */\np5.Vector.lerp = function lerp(v1, v2, amt, target) {\n  if (!target) {\n    target = v1.copy();\n    if (arguments.length === 4) {\n      p5._friendlyError(\n        'The target parameter is undefined, it should be of type p5.Vector',\n        ''\n      );\n    }\n  } else {\n    target.set(v1);\n  }\n  target.lerp(v2, amt);\n  return target;\n};\n\n/**\n * @method mag\n * @param {p5.Vector} vecT the vector to return the magnitude of\n * @return {Number}        the magnitude of vecT\n * @static\n */\np5.Vector.mag = function mag(vecT) {\n  const x = vecT.x,\n    y = vecT.y,\n    z = vecT.z;\n  const magSq = x * x + y * y + z * z;\n  return Math.sqrt(magSq);\n};\n\nexport default p5.Vector;\n","/**\n * @module Math\n * @submodule Random\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n// variables used for random number generators\nconst randomStateProp = '_lcg_random_state';\n// Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes\n// m is basically chosen to be large (as it is the max period)\n// and for its relationships to a and c\nconst m = 4294967296;\n// a - 1 should be divisible by m's prime factors\nconst a = 1664525;\n// c and m should be co-prime\nconst c = 1013904223;\nlet y2 = 0;\n\n// Linear Congruential Generator that stores its state at instance[stateProperty]\np5.prototype._lcg = function(stateProperty) {\n  // define the recurrence relationship\n  this[stateProperty] = (a * this[stateProperty] + c) % m;\n  // return a float in [0, 1)\n  // we've just used % m, so / m is always < 1\n  return this[stateProperty] / m;\n};\n\np5.prototype._lcgSetSeed = function(stateProperty, val) {\n  // pick a random seed if val is undefined or null\n  // the >>> 0 casts the seed to an unsigned 32-bit integer\n  this[stateProperty] = (val == null ? Math.random() * m : val) >>> 0;\n};\n\n/**\n * Sets the seed value for <a href=\"#/p5/random\">random()</a>.\n *\n * By default, <a href=\"#/p5/random\">random()</a> produces different results each time the program\n * is run. Set the seed parameter to a constant to return the same\n * pseudo-random numbers each time the software is run.\n *\n * @method randomSeed\n * @param {Number} seed   the seed value\n * @example\n * <div>\n * <code>\n * randomSeed(99);\n * for (let i = 0; i < 100; i++) {\n *   let r = random(0, 255);\n *   stroke(r);\n *   line(i, 0, i, 100);\n * }\n * </code>\n * </div>\n *\n * @alt\n * many vertical lines drawn in white, black or grey.\n *\n */\np5.prototype.randomSeed = function(seed) {\n  this._lcgSetSeed(randomStateProp, seed);\n  this._gaussian_previous = false;\n};\n\n/**\n * Return a random floating-point number.\n *\n * Takes either 0, 1 or 2 arguments.\n *\n * If no argument is given, returns a random number from 0\n * up to (but not including) 1.\n *\n * If one argument is given and it is a number, returns a random number from 0\n * up to (but not including) the number.\n *\n * If one argument is given and it is an array, returns a random element from\n * that array.\n *\n * If two arguments are given, returns a random number from the\n * first argument up to (but not including) the second argument.\n *\n * @method random\n * @param  {Number} [min]   the lower bound (inclusive)\n * @param  {Number} [max]   the upper bound (exclusive)\n * @return {Number} the random number\n * @example\n * <div>\n * <code>\n * for (let i = 0; i < 100; i++) {\n *   let r = random(50);\n *   stroke(r * 5);\n *   line(50, i, 50 + r, i);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * for (let i = 0; i < 100; i++) {\n *   let r = random(-50, 50);\n *   line(50, i, 50 + r, i);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * // Get a random element from an array using the random(Array) syntax\n * let words = ['apple', 'bear', 'cat', 'dog'];\n * let word = random(words); // select random word\n * text(word, 10, 50); // draw the word\n * </code>\n * </div>\n *\n * @alt\n * 100 horizontal lines from center canvas to right. size+fill change each time\n * 100 horizontal lines from center of canvas. height & side change each render\n * word displayed at random. Either apple, bear, cat, or dog\n *\n */\n/**\n * @method random\n * @param  {Array} choices   the array to choose from\n * @return {*} the random element from the array\n * @example\n */\np5.prototype.random = function(min, max) {\n  p5._validateParameters('random', arguments);\n  let rand;\n\n  if (this[randomStateProp] != null) {\n    rand = this._lcg(randomStateProp);\n  } else {\n    rand = Math.random();\n  }\n  if (typeof min === 'undefined') {\n    return rand;\n  } else if (typeof max === 'undefined') {\n    if (min instanceof Array) {\n      return min[Math.floor(rand * min.length)];\n    } else {\n      return rand * min;\n    }\n  } else {\n    if (min > max) {\n      const tmp = min;\n      min = max;\n      max = tmp;\n    }\n\n    return rand * (max - min) + min;\n  }\n};\n\n/**\n *\n * Returns a random number fitting a Gaussian, or\n * normal, distribution. There is theoretically no minimum or maximum\n * value that <a href=\"#/p5/randomGaussian\">randomGaussian()</a> might return. Rather, there is\n * just a very low probability that values far from the mean will be\n * returned; and a higher probability that numbers near the mean will\n * be returned.\n * <br><br>\n * Takes either 0, 1 or 2 arguments.<br>\n * If no args, returns a mean of 0 and standard deviation of 1.<br>\n * If one arg, that arg is the mean (standard deviation is 1).<br>\n * If two args, first is mean, second is standard deviation.\n *\n * @method randomGaussian\n * @param  {Number} mean  the mean\n * @param  {Number} sd    the standard deviation\n * @return {Number} the random number\n * @example\n * <div>\n * <code>\n * for (let y = 0; y < 100; y++) {\n *   let x = randomGaussian(50, 15);\n *   line(50, y, x, y);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * let distribution = new Array(360);\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   for (let i = 0; i < distribution.length; i++) {\n *     distribution[i] = floor(randomGaussian(0, 15));\n *   }\n * }\n *\n * function draw() {\n *   background(204);\n *\n *   translate(width / 2, width / 2);\n *\n *   for (let i = 0; i < distribution.length; i++) {\n *     rotate(TWO_PI / distribution.length);\n *     stroke(0);\n *     let dist = abs(distribution[i]);\n *     line(0, 0, dist, 0);\n *   }\n * }\n * </code>\n * </div>\n * @alt\n * 100 horizontal lines from center of canvas. height & side change each render\n * black lines radiate from center of canvas. size determined each render\n */\np5.prototype.randomGaussian = function(mean, sd) {\n  let y1, x1, x2, w;\n  if (this._gaussian_previous) {\n    y1 = y2;\n    this._gaussian_previous = false;\n  } else {\n    do {\n      x1 = this.random(2) - 1;\n      x2 = this.random(2) - 1;\n      w = x1 * x1 + x2 * x2;\n    } while (w >= 1);\n    w = Math.sqrt(-2 * Math.log(w) / w);\n    y1 = x1 * w;\n    y2 = x2 * w;\n    this._gaussian_previous = true;\n  }\n\n  const m = mean || 0;\n  const s = sd || 1;\n  return y1 * s + m;\n};\n\nexport default p5;\n","/**\n * @module Math\n * @submodule Trigonometry\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\n\n/*\n * all DEGREES/RADIANS conversion should be done in the p5 instance\n * if possible, using the p5._toRadians(), p5._fromRadians() methods.\n */\np5.prototype._angleMode = constants.RADIANS;\n\n/**\n * The inverse of <a href=\"#/p5/cos\">cos()</a>, returns the arc cosine of a value. This function\n * expects the values in the range of -1 to 1 and values are returned in\n * the range 0 to PI (3.1415927).\n *\n * @method acos\n * @param  {Number} value the value whose arc cosine is to be returned\n * @return {Number}       the arc cosine of the given value\n *\n * @example\n * <div class= “norender\">\n * <code>\n * let a = PI;\n * let c = cos(a);\n * let ac = acos(c);\n * // Prints: \"3.1415927 : -1.0 : 3.1415927\"\n * print(a + ' : ' + c + ' : ' + ac);\n * </code>\n * </div>\n *\n * <div class= “norender\">\n * <code>\n * let a = PI + PI / 4.0;\n * let c = cos(a);\n * let ac = acos(c);\n * // Prints: \"3.926991 : -0.70710665 : 2.3561943\"\n * print(a + ' : ' + c + ' : ' + ac);\n * </code>\n * </div>\n */\np5.prototype.acos = function(ratio) {\n  return this._fromRadians(Math.acos(ratio));\n};\n\n/**\n * The inverse of <a href=\"#/p5/sin\">sin()</a>, returns the arc sine of a value. This function\n * expects the values in the range of -1 to 1 and values are returned\n * in the range -PI/2 to PI/2.\n *\n * @method asin\n * @param  {Number} value the value whose arc sine is to be returned\n * @return {Number}       the arc sine of the given value\n *\n * @example\n * <div class= “norender\">\n * <code>\n * let a = PI / 3.0;\n * let s = sin(a);\n * let as = asin(s);\n * // Prints: \"1.0471975 : 0.86602540 : 1.0471975\"\n * print(a + ' : ' + s + ' : ' + as);\n * </code>\n * </div>\n *\n * <div class= “norender\">\n * <code>\n * let a = PI + PI / 3.0;\n * let s = sin(a);\n * let as = asin(s);\n * // Prints: \"4.1887902 : -0.86602540 : -1.0471975\"\n * print(a + ' : ' + s + ' : ' + as);\n * </code>\n * </div>\n *\n */\np5.prototype.asin = function(ratio) {\n  return this._fromRadians(Math.asin(ratio));\n};\n\n/**\n * The inverse of <a href=\"#/p5/tan\">tan()</a>, returns the arc tangent of a value. This function\n * expects the values in the range of -Infinity to Infinity (exclusive) and\n * values are returned in the range -PI/2 to PI/2.\n *\n * @method atan\n * @param  {Number} value the value whose arc tangent is to be returned\n * @return {Number}       the arc tangent of the given value\n *\n * @example\n * <div class= “norender\">\n * <code>\n * let a = PI / 3.0;\n * let t = tan(a);\n * let at = atan(t);\n * // Prints: \"1.0471975 : 1.7320508 : 1.0471975\"\n * print(a + ' : ' + t + ' : ' + at);\n * </code>\n * </div>\n *\n * <div class= “norender\">\n * <code>\n * let a = PI + PI / 3.0;\n * let t = tan(a);\n * let at = atan(t);\n * // Prints: \"4.1887902 : 1.7320508 : 1.0471975\"\n * print(a + ' : ' + t + ' : ' + at);\n * </code>\n * </div>\n *\n */\np5.prototype.atan = function(ratio) {\n  return this._fromRadians(Math.atan(ratio));\n};\n\n/**\n * Calculates the angle (in radians) from a specified point to the coordinate\n * origin as measured from the positive x-axis. Values are returned as a\n * float in the range from PI to -PI. The atan2<a href=\"#/p5/\">()</a> function is most often used\n * for orienting geometry to the position of the cursor.\n * <br><br>\n * Note: The y-coordinate of the point is the first parameter, and the\n * x-coordinate is the second parameter, due the the structure of calculating\n * the tangent.\n *\n * @method atan2\n * @param  {Number} y y-coordinate of the point\n * @param  {Number} x x-coordinate of the point\n * @return {Number}   the arc tangent of the given point\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(204);\n *   translate(width / 2, height / 2);\n *   let a = atan2(mouseY - height / 2, mouseX - width / 2);\n *   rotate(a);\n *   rect(-30, -5, 60, 10);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60 by 10 rect at center of canvas rotates with mouse movements\n *\n */\np5.prototype.atan2 = function(y, x) {\n  return this._fromRadians(Math.atan2(y, x));\n};\n\n/**\n * Calculates the cosine of an angle. This function takes into account the\n * current <a href=\"#/p5/angleMode\">angleMode</a>. Values are returned in the range -1 to 1.\n *\n * @method cos\n * @param  {Number} angle the angle\n * @return {Number}       the cosine of the angle\n *\n * @example\n * <div>\n * <code>\n * let a = 0.0;\n * let inc = TWO_PI / 25.0;\n * for (let i = 0; i < 25; i++) {\n *   line(i * 4, 50, i * 4, 50 + cos(a) * 40.0);\n *   a = a + inc;\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical black lines form wave patterns, extend-down on left and right side\n *\n */\np5.prototype.cos = function(angle) {\n  return Math.cos(this._toRadians(angle));\n};\n\n/**\n * Calculates the sine of an angle. This function takes into account the\n * current <a href=\"#/p5/angleMode\">angleMode</a>. Values are returned in the range -1 to 1.\n *\n * @method sin\n * @param  {Number} angle the angle\n * @return {Number}       the sine of the angle\n *\n * @example\n * <div>\n * <code>\n * let a = 0.0;\n * let inc = TWO_PI / 25.0;\n * for (let i = 0; i < 25; i++) {\n *   line(i * 4, 50, i * 4, 50 + sin(a) * 40.0);\n *   a = a + inc;\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical black lines extend down and up from center to form wave pattern\n *\n */\np5.prototype.sin = function(angle) {\n  return Math.sin(this._toRadians(angle));\n};\n\n/**\n * Calculates the tangent of an angle. This function takes into account\n * the current <a href=\"#/p5/angleMode\">angleMode</a>. Values are returned in the range of all real numbers.\n *\n * @method tan\n * @param  {Number} angle the angle\n * @return {Number}       the tangent of the angle\n *\n * @example\n * <div>\n * <code>\n * let a = 0.0;\n * let inc = TWO_PI / 50.0;\n * for (let i = 0; i < 100; i = i + 2) {\n *   line(i, 50, i, 50 + tan(a) * 2.0);\n *   a = a + inc;\n * }\n * </code>\n *\n *\n * @alt\n * vertical black lines end down and up from center to form spike pattern\n *\n */\np5.prototype.tan = function(angle) {\n  return Math.tan(this._toRadians(angle));\n};\n\n/**\n * Converts a radian measurement to its corresponding value in degrees.\n * Radians and degrees are two ways of measuring the same thing. There are\n * 360 degrees in a circle and 2*PI radians in a circle. For example,\n * 90° = PI/2 = 1.5707964. This function does not take into account the\n * current <a href=\"#/p5/angleMode\">angleMode</a>.\n *\n * @method degrees\n * @param  {Number} radians the radians value to convert to degrees\n * @return {Number}         the converted angle\n *\n *\n * @example\n * <div class= “norender\">\n * <code>\n * let rad = PI / 4;\n * let deg = degrees(rad);\n * print(rad + ' radians is ' + deg + ' degrees');\n * // Prints: 0.7853981633974483 radians is 45 degrees\n * </code>\n * </div>\n *\n */\np5.prototype.degrees = angle => angle * constants.RAD_TO_DEG;\n\n/**\n * Converts a degree measurement to its corresponding value in radians.\n * Radians and degrees are two ways of measuring the same thing. There are\n * 360 degrees in a circle and 2*PI radians in a circle. For example,\n * 90° = PI/2 = 1.5707964. This function does not take into account the\n * current <a href=\"#/p5/angleMode\">angleMode</a>.\n *\n * @method radians\n * @param  {Number} degrees the degree value to convert to radians\n * @return {Number}         the converted angle\n *\n * @example\n * <div class= “norender\">\n * <code>\n * let deg = 45.0;\n * let rad = radians(deg);\n * print(deg + ' degrees is ' + rad + ' radians');\n * // Prints: 45 degrees is 0.7853981633974483 radians\n * </code>\n * </div>\n */\np5.prototype.radians = angle => angle * constants.DEG_TO_RAD;\n\n/**\n * Sets the current mode of p5 to given mode. Default mode is RADIANS.\n *\n * @method angleMode\n * @param {Constant} mode either RADIANS or DEGREES\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(204);\n *   angleMode(DEGREES); // Change the mode to DEGREES\n *   let a = atan2(mouseY - height / 2, mouseX - width / 2);\n *   translate(width / 2, height / 2);\n *   push();\n *   rotate(a);\n *   rect(-20, -5, 40, 10); // Larger rectangle is rotating in degrees\n *   pop();\n *   angleMode(RADIANS); // Change the mode to RADIANS\n *   rotate(a); // variable a stays the same\n *   rect(-40, -5, 20, 10); // Smaller rectangle is rotating in radians\n * }\n * </code>\n * </div>\n *\n * @alt\n * 40 by 10 rect in center rotates with mouse moves. 20 by 10 rect moves faster.\n *\n *\n */\np5.prototype.angleMode = function(mode) {\n  if (mode === constants.DEGREES || mode === constants.RADIANS) {\n    this._angleMode = mode;\n  }\n};\n\n/**\n * converts angles from the current angleMode to RADIANS\n *\n * @method _toRadians\n * @private\n * @param {Number} angle\n * @returns {Number}\n */\np5.prototype._toRadians = function(angle) {\n  if (this._angleMode === constants.DEGREES) {\n    return angle * constants.DEG_TO_RAD;\n  }\n  return angle;\n};\n\n/**\n * converts angles from the current angleMode to DEGREES\n *\n * @method _toDegrees\n * @private\n * @param {Number} angle\n * @returns {Number}\n */\np5.prototype._toDegrees = function(angle) {\n  if (this._angleMode === constants.RADIANS) {\n    return angle * constants.RAD_TO_DEG;\n  }\n  return angle;\n};\n\n/**\n * converts angles from RADIANS into the current angleMode\n *\n * @method _fromRadians\n * @private\n * @param {Number} angle\n * @returns {Number}\n */\np5.prototype._fromRadians = function(angle) {\n  if (this._angleMode === constants.DEGREES) {\n    return angle * constants.RAD_TO_DEG;\n  }\n  return angle;\n};\n\nexport default p5;\n","/**\n * @module Typography\n * @submodule Attributes\n * @for p5\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../core/main';\n\n/**\n * Sets the current alignment for drawing text. Accepts two\n * arguments: horizAlign (LEFT, CENTER, or RIGHT) and\n * vertAlign (TOP, BOTTOM, CENTER, or BASELINE).\n *\n * The horizAlign parameter is in reference to the x value\n * of the <a href=\"#/p5/text\">text()</a> function, while the vertAlign parameter is\n * in reference to the y value.\n *\n * So if you write textAlign(LEFT), you are aligning the left\n * edge of your text to the x value you give in <a href=\"#/p5/text\">text()</a>. If you\n * write textAlign(RIGHT, TOP), you are aligning the right edge\n * of your text to the x value and the top of edge of the text\n * to the y value.\n *\n * @method textAlign\n * @param {Constant} horizAlign horizontal alignment, either LEFT,\n *                            CENTER, or RIGHT\n * @param {Constant} [vertAlign] vertical alignment, either TOP,\n *                            BOTTOM, CENTER, or BASELINE\n * @chainable\n * @example\n * <div>\n * <code>\n * textSize(16);\n * textAlign(RIGHT);\n * text('ABCD', 50, 30);\n * textAlign(CENTER);\n * text('EFGH', 50, 50);\n * textAlign(LEFT);\n * text('IJKL', 50, 70);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * textSize(16);\n * strokeWeight(0.5);\n *\n * line(0, 12, width, 12);\n * textAlign(CENTER, TOP);\n * text('TOP', 0, 12, width);\n *\n * line(0, 37, width, 37);\n * textAlign(CENTER, CENTER);\n * text('CENTER', 0, 37, width);\n *\n * line(0, 62, width, 62);\n * textAlign(CENTER, BASELINE);\n * text('BASELINE', 0, 62, width);\n *\n * line(0, 87, width, 87);\n * textAlign(CENTER, BOTTOM);\n * text('BOTTOM', 0, 87, width);\n * </code>\n * </div>\n *\n * @alt\n *Letters ABCD displayed at top right, EFGH at center and IJKL at bottom left.\n * The names of the four vertical alignments rendered each showing that alignment's placement relative to a horizontal line.\n *\n */\n/**\n * @method textAlign\n * @return {Object}\n */\np5.prototype.textAlign = function(horizAlign, vertAlign) {\n  p5._validateParameters('textAlign', arguments);\n  return this._renderer.textAlign(...arguments);\n};\n\n/**\n * Sets/gets the spacing, in pixels, between lines of text. This\n * setting will be used in all subsequent calls to the <a href=\"#/p5/text\">text()</a> function.\n *\n * @method textLeading\n * @param {Number} leading the size in pixels for spacing between lines\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * // Text to display. The \"\\n\" is a \"new line\" character\n * let lines = 'L1\\nL2\\nL3';\n * textSize(12);\n *\n * textLeading(10); // Set leading to 10\n * text(lines, 10, 25);\n *\n * textLeading(20); // Set leading to 20\n * text(lines, 40, 25);\n *\n * textLeading(30); // Set leading to 30\n * text(lines, 70, 25);\n * </code>\n * </div>\n *\n * @alt\n *set L1 L2 & L3 displayed vertically 3 times. spacing increases for each set\n */\n/**\n * @method textLeading\n * @return {Number}\n */\np5.prototype.textLeading = function(theLeading) {\n  p5._validateParameters('textLeading', arguments);\n  return this._renderer.textLeading(...arguments);\n};\n\n/**\n * Sets/gets the current font size. This size will be used in all subsequent\n * calls to the <a href=\"#/p5/text\">text()</a> function. Font size is measured in pixels.\n *\n * @method textSize\n * @param {Number} theSize the size of the letters in units of pixels\n * @chainable\n *\n * @example\n * <div>\n * <code>\n * textSize(12);\n * text('Font Size 12', 10, 30);\n * textSize(14);\n * text('Font Size 14', 10, 60);\n * textSize(16);\n * text('Font Size 16', 10, 90);\n * </code>\n * </div>\n *\n * @alt\n *Font Size 12 displayed small, Font Size 14 medium & Font Size 16 large\n */\n/**\n * @method textSize\n * @return {Number}\n */\np5.prototype.textSize = function(theSize) {\n  p5._validateParameters('textSize', arguments);\n  return this._renderer.textSize(...arguments);\n};\n\n/**\n * Sets/gets the style of the text for system fonts to NORMAL, ITALIC, BOLD or BOLDITALIC.\n * Note: this may be is overridden by CSS styling. For non-system fonts\n * (opentype, truetype, etc.) please load styled fonts instead.\n *\n * @method textStyle\n * @param {Constant} theStyle styling for text, either NORMAL,\n *                            ITALIC, BOLD or BOLDITALIC\n * @chainable\n * @example\n * <div>\n * <code>\n * strokeWeight(0);\n * textSize(12);\n * textStyle(NORMAL);\n * text('Font Style Normal', 10, 15);\n * textStyle(ITALIC);\n * text('Font Style Italic', 10, 40);\n * textStyle(BOLD);\n * text('Font Style Bold', 10, 65);\n * textStyle(BOLDITALIC);\n * text('Font Style Bold Italic', 10, 90);\n * </code>\n * </div>\n *\n * @alt\n *words Font Style Normal displayed normally, Italic in italic, bold in bold and bold italic in bold italics.\n */\n/**\n * @method textStyle\n * @return {String}\n */\np5.prototype.textStyle = function(theStyle) {\n  p5._validateParameters('textStyle', arguments);\n  return this._renderer.textStyle(...arguments);\n};\n\n/**\n * Calculates and returns the width of any character or text string.\n *\n * @method textWidth\n * @param {String} theText the String of characters to measure\n * @return {Number}\n * @example\n * <div>\n * <code>\n * textSize(28);\n *\n * let aChar = 'P';\n * let cWidth = textWidth(aChar);\n * text(aChar, 0, 40);\n * line(cWidth, 0, cWidth, 50);\n *\n * let aString = 'p5.js';\n * let sWidth = textWidth(aString);\n * text(aString, 0, 85);\n * line(sWidth, 50, sWidth, 100);\n * </code>\n * </div>\n *\n * @alt\n *Letter P and p5.js are displayed with vertical lines at end. P is wide\n *\n */\np5.prototype.textWidth = function(...args) {\n  args[0] += '';\n  p5._validateParameters('textWidth', args);\n  if (args[0].length === 0) {\n    return 0;\n  }\n  return this._renderer.textWidth(...args);\n};\n\n/**\n * Returns the ascent of the current font at its current size. The ascent\n * represents the distance, in pixels, of the tallest character above\n * the baseline.\n * @method textAscent\n * @return {Number}\n * @example\n * <div>\n * <code>\n * let base = height * 0.75;\n * let scalar = 0.8; // Different for each font\n *\n * textSize(32); // Set initial text size\n * let asc = textAscent() * scalar; // Calc ascent\n * line(0, base - asc, width, base - asc);\n * text('dp', 0, base); // Draw text on baseline\n *\n * textSize(64); // Increase text size\n * asc = textAscent() * scalar; // Recalc ascent\n * line(40, base - asc, width, base - asc);\n * text('dp', 40, base); // Draw text on baseline\n * </code>\n * </div>\n */\np5.prototype.textAscent = function(...args) {\n  p5._validateParameters('textAscent', args);\n  return this._renderer.textAscent();\n};\n\n/**\n * Returns the descent of the current font at its current size. The descent\n * represents the distance, in pixels, of the character with the longest\n * descender below the baseline.\n * @method textDescent\n * @return {Number}\n * @example\n * <div>\n * <code>\n * let base = height * 0.75;\n * let scalar = 0.8; // Different for each font\n *\n * textSize(32); // Set initial text size\n * let desc = textDescent() * scalar; // Calc ascent\n * line(0, base + desc, width, base + desc);\n * text('dp', 0, base); // Draw text on baseline\n *\n * textSize(64); // Increase text size\n * desc = textDescent() * scalar; // Recalc ascent\n * line(40, base + desc, width, base + desc);\n * text('dp', 40, base); // Draw text on baseline\n * </code>\n * </div>\n */\np5.prototype.textDescent = function(...args) {\n  p5._validateParameters('textDescent', args);\n  return this._renderer.textDescent();\n};\n\n/**\n * Helper function to measure ascent and descent.\n */\np5.prototype._updateTextMetrics = function() {\n  return this._renderer._updateTextMetrics();\n};\n\nexport default p5;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// opentype.js\n// https://github.com/opentypejs/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\nimport 'string.prototype.codepointat';\nimport inflate from 'tiny-inflate';\nimport Font from './font';\nimport Glyph from './glyph';\nimport { CmapEncoding, GlyphNames, addGlyphNames } from './encoding';\nimport parse from './parse';\nimport BoundingBox from './bbox';\nimport Path from './path';\nimport { nodeBufferToArrayBuffer } from './util';\nimport cmap from './tables/cmap';\nimport cff from './tables/cff';\nimport fvar from './tables/fvar';\nimport glyf from './tables/glyf';\nimport gpos from './tables/gpos';\nimport gsub from './tables/gsub';\nimport head from './tables/head';\nimport hhea from './tables/hhea';\nimport hmtx from './tables/hmtx';\nimport kern from './tables/kern';\nimport ltag from './tables/ltag';\nimport loca from './tables/loca';\nimport maxp from './tables/maxp';\nimport _name from './tables/name';\nimport os2 from './tables/os2';\nimport post from './tables/post';\nimport meta from './tables/meta';\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// File loaders /////////////////////////////////////////////////////////\n/**\n * Loads a font from a file. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} path - The path of the file\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromFile(path, callback) {\n    const fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, nodeBufferToArrayBuffer(buffer));\n    });\n}\n/**\n * Loads a font from a URL. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} url - The URL of the font file.\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromUrl(url, callback) {\n    const request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.response) {\n            return callback(null, request.response);\n        } else {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n    };\n\n    request.onerror = function () {\n        callback('Font could not be loaded');\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 12;\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const checksum = parse.getULong(data, p + 4);\n        const offset = parse.getULong(data, p + 8);\n        const length = parse.getULong(data, p + 12);\n        tableEntries.push({tag: tag, checksum: checksum, offset: offset, length: length, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 44; // offset to the first table directory entry.\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const offset = parse.getULong(data, p + 4);\n        const compLength = parse.getULong(data, p + 8);\n        const origLength = parse.getULong(data, p + 12);\n        let compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, length: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        const inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        const outBuffer = new Uint8Array(tableEntry.length);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        const view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @param  {Object} opt - options for parsing\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer, opt) {\n    opt = (opt === undefined || opt === null) ?  {} : opt;\n\n    let indexToLocFormat;\n    let ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    const font = new Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    const data = new DataView(buffer, 0);\n    let numTables;\n    let tableEntries = [];\n    const signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0) || signature === 'true' || signature === 'typ1') {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        const flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    let cffTableEntry;\n    let fvarTableEntry;\n    let glyfTableEntry;\n    let gposTableEntry;\n    let gsubTableEntry;\n    let hmtxTableEntry;\n    let kernTableEntry;\n    let locaTableEntry;\n    let nameTableEntry;\n    let metaTableEntry;\n    let p;\n\n    for (let i = 0; i < numTables; i += 1) {\n        const tableEntry = tableEntries[i];\n        let table;\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameTableEntry = tableEntry;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                font.glyphNames = new GlyphNames(font.tables.post);\n                break;\n            case 'prep' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    const nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        const shortVersion = indexToLocFormat === 0;\n        const locaTable = uncompressTable(data, locaTableEntry);\n        const locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        const glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font, opt);\n    } else if (cffTableEntry) {\n        const cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font, opt);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    const hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(font, hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs, opt);\n    addGlyphNames(font, opt);\n\n    if (kernTableEntry) {\n        const kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        const gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        const gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        const fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    if (metaTableEntry) {\n        const metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\n/**\n * Asynchronously load the font from a URL or a filesystem. When done, call the callback\n * with two arguments `(err, font)`. The `err` will be null on success,\n * the `font` is a Font object.\n * We use the node.js callback convention so that\n * opentype.js can integrate with frameworks like async.js.\n * @alias opentype.load\n * @param  {string} url - The URL of the font to load.\n * @param  {Function} callback - The callback.\n */\nfunction load(url, callback, opt) {\n    const isNode = typeof window === 'undefined';\n    const loadFn = isNode ? loadFromFile : loadFromUrl;\n\n    return new Promise((resolve, reject) => {\n        loadFn(url, function(err, arrayBuffer) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                } else {\n                    reject(err);\n                }\n            }\n            let font;\n            try {\n                font = parseBuffer(arrayBuffer, opt);\n            } catch (e) {\n                if (callback) {\n                    return callback(e, null);\n                } else {\n                    reject(e);\n                }\n            }\n            if (callback) {\n                return callback(null, font);\n            } else {\n                resolve(font);\n            }\n        });\n    });\n}\n\n/**\n * Synchronously load the font from a URL or file.\n * When done, returns the font object or throws an error.\n * @alias opentype.loadSync\n * @param  {string} url - The URL of the font to load.\n * @param  {Object} opt - opt.lowMemory\n * @return {opentype.Font}\n */\nfunction loadSync(url, opt) {\n    const fs = require('fs');\n    const buffer = fs.readFileSync(url);\n    return parseBuffer(nodeBufferToArrayBuffer(buffer), opt);\n}\n\nexport {\n    Font,\n    Glyph,\n    Path,\n    BoundingBox,\n    parse as _parse,\n    parseBuffer as parse,\n    load,\n    loadSync\n};\n","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","// The Bounding Box object\n\nfunction derive(v0, v1, v2, v3, t) {\n    return Math.pow(1 - t, 3) * v0 +\n        3 * Math.pow(1 - t, 2) * t * v1 +\n        3 * (1 - t) * Math.pow(t, 2) * v2 +\n        Math.pow(t, 3) * v3;\n}\n/**\n * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.\n * It is used to calculate the bounding box of a glyph or text path.\n *\n * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.\n *\n * @exports opentype.BoundingBox\n * @class\n * @constructor\n */\nfunction BoundingBox() {\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n}\n\n/**\n * Returns true if the bounding box is empty, that is, no points have been added to the box yet.\n */\nBoundingBox.prototype.isEmpty = function() {\n    return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);\n};\n\n/**\n * Add the point to the bounding box.\n * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.\n * @param {number} x - The X coordinate of the point.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addPoint = function(x, y) {\n    if (typeof x === 'number') {\n        if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n        }\n        if (x < this.x1) {\n            this.x1 = x;\n        }\n        if (x > this.x2) {\n            this.x2 = x;\n        }\n    }\n    if (typeof y === 'number') {\n        if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n        }\n        if (y < this.y1) {\n            this.y1 = y;\n        }\n        if (y > this.y2) {\n            this.y2 = y;\n        }\n    }\n};\n\n/**\n * Add a X coordinate to the bounding box.\n * This extends the bounding box to include the X coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} x - The X coordinate of the point.\n */\nBoundingBox.prototype.addX = function(x) {\n    this.addPoint(x, null);\n};\n\n/**\n * Add a Y coordinate to the bounding box.\n * This extends the bounding box to include the Y coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addY = function(y) {\n    this.addPoint(null, y);\n};\n\n/**\n * Add a Bézier curve to the bounding box.\n * This extends the bounding box to include the entire Bézier.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the first control point.\n * @param {number} y1 - The Y coordinate of the first control point.\n * @param {number} x2 - The X coordinate of the second control point.\n * @param {number} y2 - The Y coordinate of the second control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {\n    // This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // and https://github.com/icons8/svg-path-bounding-box\n\n    const p0 = [x0, y0];\n    const p1 = [x1, y1];\n    const p2 = [x2, y2];\n    const p3 = [x, y];\n\n    this.addPoint(x0, y0);\n    this.addPoint(x, y);\n\n    for (let i = 0; i <= 1; i++) {\n        const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n        const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n        const c = 3 * p1[i] - 3 * p0[i];\n\n        if (a === 0) {\n            if (b === 0) continue;\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));\n                if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));\n            }\n            continue;\n        }\n\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) continue;\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));\n        }\n    }\n};\n\n/**\n * Add a quadratic curve to the bounding box.\n * This extends the bounding box to include the entire quadratic curve.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the control point.\n * @param {number} y1 - The Y coordinate of the control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {\n    const cp1x = x0 + 2 / 3 * (x1 - x0);\n    const cp1y = y0 + 2 / 3 * (y1 - y0);\n    const cp2x = cp1x + 1 / 3 * (x - x0);\n    const cp2y = cp1y + 1 / 3 * (y - y0);\n    this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);\n};\n\nexport default BoundingBox;\n","// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n","// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n","// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\nimport check from './check';\n\nconst LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nconst LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nconst decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nconst encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nconst sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    let value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    const m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        const epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    let nibbles = '';\n    for (let i = 0, ii = value.length; i < ii; i += 1) {\n        const c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    const out = [30];\n    for (let i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes;\n    for (let j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes / 2;\n    for (let j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        const codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nconst eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    const table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    let result = '';\n    for (let i = 0; i < dataLength; i++) {\n        const c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nconst macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nlet macEncodingCacheKeys;\nconst getMacEncodingTable = function (encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (let e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    const cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        const cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    const decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    const encodingTable = {};\n    for (let i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    const table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    const b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Helper for encode.VARDELTAS\nfunction isByteEncodable(value) {\n    return value >= -128 && value <= 127;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsZeroes(deltas, pos, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x80 | (runLength - 1));\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsBytes(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n        if (!isByteEncodable(value)) {\n            break;\n        }\n\n        // Within a byte-encoded run of deltas, a single zero is best\n        // stored literally as 0x00 value. However, if we have two or\n        // more zeroes in a sequence, it is better to start a new run.\n        // Fore example, the sequence of deltas [15, 15, 0, 15, 15]\n        // becomes 6 bytes (04 0F 0F 00 0F 0F) when storing the zero\n        // within the current run, but 7 bytes (01 0F 0F 80 01 0F 0F)\n        // when starting a new run.\n        if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(runLength - 1);\n    for (let i = offset; i < pos; ++i) {\n        result.push((deltas[i] + 256) & 0xff);\n    }\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsWords(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n\n        // Within a word-encoded run of deltas, it is easiest to start\n        // a new run (with a different encoding) whenever we encounter\n        // a zero value. For example, the sequence [0x6666, 0, 0x7777]\n        // needs 7 bytes when storing the zero inside the current run\n        // (42 66 66 00 00 77 77), and equally 7 bytes when starting a\n        // new run (40 66 66 80 40 77 77).\n        if (value === 0) {\n            break;\n        }\n\n        // Within a word-encoded run of deltas, a single value in the\n        // range (-128..127) should be encoded within the current run\n        // because it is more compact. For example, the sequence\n        // [0x6666, 2, 0x7777] becomes 7 bytes when storing the value\n        // literally (42 66 66 00 02 77 77), but 8 bytes when starting\n        // a new run (40 66 66 00 02 40 77 77).\n        if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x40 | (runLength - 1));\n    for (let i = offset; i < pos; ++i) {\n        const val = deltas[i];\n        result.push(((val + 0x10000) >> 8) & 0xff, (val + 0x100) & 0xff);\n    }\n    return pos;\n}\n\n/**\n * Encode a list of variation adjustment deltas.\n *\n * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.\n * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted\n * when generating instances of variation fonts.\n *\n * @see https://www.microsoft.com/typography/otspec/gvar.htm\n * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html\n * @param {Array}\n * @return {Array}\n */\nencode.VARDELTAS = function(deltas) {\n    let pos = 0;\n    const result = [];\n    while (pos < deltas.length) {\n        const value = deltas[pos];\n        if (value === 0) {\n            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);\n        } else if (value >= -128 && value <= 127) {\n            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);\n        } else {\n            pos = encodeVarDeltaRunAsWords(deltas, pos, result);\n        }\n    }\n    return result;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offsets, then again to encode the offsets using the fitting data type.\n    let offset = 1; // First offset is always 1.\n    const offsets = [offset];\n    const data = [];\n    for (let i = 0; i < l.length; i += 1) {\n        const v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    const encodedOffsets = [];\n    const offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    const offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (let i = 0; i < offsets.length; i += 1) {\n        const encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    let d = [];\n    const keys = Object.keys(m);\n    const length = keys.length;\n\n    for (let i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        const k = parseInt(keys[i], 0);\n        const v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    let d = [];\n    if (Array.isArray(type)) {\n        for (let i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nconst wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        const cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    let d = [];\n    const length = ops.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    const encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    const sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    let d = [];\n    const length = table.fields.length;\n    const subtables = [];\n    const subtableOffsets = [];\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        const bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (let i = 0; i < subtables.length; i += 1) {\n        const o = subtableOffsets[i];\n        const offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    let numBytes = 0;\n    const length = table.fields.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexport { decode, encode, sizeOf };\n","// Table metadata\n\nimport check from './check';\nimport { encode, sizeOf } from './types';\n\n/**\n * @exports opentype.Table\n * @class\n * @param {string} tableName\n * @param {Array} fields\n * @param {Object} options\n * @constructor\n */\nfunction Table(tableName, fields, options) {\n    for (let i = 0; i < fields.length; i += 1) {\n        const field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        const optionKeys = Object.keys(options);\n        for (let i = 0; i < optionKeys.length; i += 1) {\n            const k = optionKeys[i];\n            const v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\n/**\n * Encodes the table and returns an array of bytes\n * @return {Array}\n */\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\n/**\n * Get the size of the table.\n * @return {number}\n */\nTable.prototype.sizeOf = function() {\n    return sizeOf.TABLE(this);\n};\n\n/**\n * @private\n */\nfunction ushortList(itemName, list, count) {\n    if (count === undefined) {\n        count = list.length;\n    }\n    const fields = new Array(list.length + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < list.length; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'USHORT', value: list[i]};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction tableList(itemName, records, itemCallback) {\n    const count = records.length;\n    const fields = new Array(count + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'TABLE', value: itemCallback(records[i], i)};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction recordList(itemName, records, itemCallback) {\n    const count = records.length;\n    let fields = [];\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields = fields.concat(itemCallback(records[i], i));\n    }\n    return fields;\n}\n\n// Common Layout Tables\n\n/**\n * @exports opentype.Coverage\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction Coverage(coverageTable) {\n    if (coverageTable.format === 1) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 1}]\n            .concat(ushortList('glyph', coverageTable.glyphs))\n        );\n    } else {\n        check.assert(false, 'Can\\'t create coverage table format 2 yet.');\n    }\n}\nCoverage.prototype = Object.create(Table.prototype);\nCoverage.prototype.constructor = Coverage;\n\nfunction ScriptList(scriptListTable) {\n    Table.call(this, 'scriptListTable',\n        recordList('scriptRecord', scriptListTable, function(scriptRecord, i) {\n            const script = scriptRecord.script;\n            let defaultLangSys = script.defaultLangSys;\n            check.assert(!!defaultLangSys, 'Unable to write GSUB: script ' + scriptRecord.tag + ' has no default language system.');\n            return [\n                {name: 'scriptTag' + i, type: 'TAG', value: scriptRecord.tag},\n                {name: 'script' + i, type: 'TABLE', value: new Table('scriptTable', [\n                    {name: 'defaultLangSys', type: 'TABLE', value: new Table('defaultLangSys', [\n                        {name: 'lookupOrder', type: 'USHORT', value: 0},\n                        {name: 'reqFeatureIndex', type: 'USHORT', value: defaultLangSys.reqFeatureIndex}]\n                        .concat(ushortList('featureIndex', defaultLangSys.featureIndexes)))}\n                    ].concat(recordList('langSys', script.langSysRecords, function(langSysRecord, i) {\n                        const langSys = langSysRecord.langSys;\n                        return [\n                            {name: 'langSysTag' + i, type: 'TAG', value: langSysRecord.tag},\n                            {name: 'langSys' + i, type: 'TABLE', value: new Table('langSys', [\n                                {name: 'lookupOrder', type: 'USHORT', value: 0},\n                                {name: 'reqFeatureIndex', type: 'USHORT', value: langSys.reqFeatureIndex}\n                                ].concat(ushortList('featureIndex', langSys.featureIndexes)))}\n                        ];\n                    })))}\n            ];\n        })\n    );\n}\nScriptList.prototype = Object.create(Table.prototype);\nScriptList.prototype.constructor = ScriptList;\n\n/**\n * @exports opentype.FeatureList\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction FeatureList(featureListTable) {\n    Table.call(this, 'featureListTable',\n        recordList('featureRecord', featureListTable, function(featureRecord, i) {\n            const feature = featureRecord.feature;\n            return [\n                {name: 'featureTag' + i, type: 'TAG', value: featureRecord.tag},\n                {name: 'feature' + i, type: 'TABLE', value: new Table('featureTable', [\n                    {name: 'featureParams', type: 'USHORT', value: feature.featureParams},\n                    ].concat(ushortList('lookupListIndex', feature.lookupListIndexes)))}\n            ];\n        })\n    );\n}\nFeatureList.prototype = Object.create(Table.prototype);\nFeatureList.prototype.constructor = FeatureList;\n\n/**\n * @exports opentype.LookupList\n * @class\n * @param {opentype.Table}\n * @param {Object}\n * @constructor\n * @extends opentype.Table\n */\nfunction LookupList(lookupListTable, subtableMakers) {\n    Table.call(this, 'lookupListTable', tableList('lookup', lookupListTable, function(lookupTable) {\n        let subtableCallback = subtableMakers[lookupTable.lookupType];\n        check.assert(!!subtableCallback, 'Unable to write GSUB lookup type ' + lookupTable.lookupType + ' tables.');\n        return new Table('lookupTable', [\n            {name: 'lookupType', type: 'USHORT', value: lookupTable.lookupType},\n            {name: 'lookupFlag', type: 'USHORT', value: lookupTable.lookupFlag}\n        ].concat(tableList('subtable', lookupTable.subtables, subtableCallback)));\n    }));\n}\nLookupList.prototype = Object.create(Table.prototype);\nLookupList.prototype.constructor = LookupList;\n\n// Record = same as Table, but inlined (a Table has an offset and its data is further in the stream)\n// Don't use offsets inside Records (probable bug), only in Tables.\nexport default {\n    Table,\n    Record: Table,\n    Coverage,\n    ScriptList,\n    FeatureList,\n    LookupList,\n    ushortList,\n    tableList,\n    recordList,\n};\n","// Parsing utility functions\n\nimport check from './check';\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    const decimal = dataView.getInt16(offset, false);\n    const fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    let tag = '';\n    for (let i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    let v = 0;\n    for (let i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    const bytes = [];\n    for (let i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    let s = '';\n    for (let i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nconst typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    const v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    const v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    const v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    const v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    const v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    const dataView = this.data;\n    const offset = this.offset + this.relativeOffset;\n    let string = '';\n    this.relativeOffset += length;\n    for (let i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    let v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    const major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    const minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) minorBase = 0x1000;\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        const fields = Object.keys(description);\n        const struct = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    const valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    const valueFormat = this.parseUShort();\n    const valueCount = this.parseUShort();\n    const values = new Array(valueCount);\n    for (let i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    const structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    const structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    const offsets = this.parseOffset16List();\n    const count = offsets.length;\n    const relativeOffset = this.relativeOffset;\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            const subOffsets = this.parseOffset16List();\n            const subList = new Array(subOffsets.length);\n            for (let j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    const count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        const ranges = new Array(count);\n        for (let i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nconst langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        const lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        const lookupFlag = this.parseUShort();\n        const useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        const majorVersion = this.parseUShort();\n        const minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        const featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nexport default {\n    getByte,\n    getCard8: getByte,\n    getUShort,\n    getCard16: getUShort,\n    getShort,\n    getULong,\n    getFixed,\n    getTag,\n    getOffset,\n    getBytes,\n    bytesToString,\n    Parser,\n};\n\nexport { Parser };\n","// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    let groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (let i = 0; i < groupCount; i += 1) {\n        const startCharCode = p.parseULong();\n        const endCharCode = p.parseULong();\n        let startGlyphId = p.parseULong();\n\n        for (let c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    let segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    const endCountParser = new parse.Parser(data, start + offset + 14);\n    const startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    const idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    const idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    let glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (let i = 0; i < segCount - 1; i += 1) {\n        let glyphIndex;\n        const endCount = endCountParser.parseUShort();\n        const startCount = startCountParser.parseUShort();\n        const idDelta = idDeltaParser.parseShort();\n        const idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (let c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    const cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    let offset = -1;\n    for (let i = cmap.numTables - 1; i >= 0; i -= 1) {\n        const platformId = parse.getUShort(data, start + 4 + (i * 8));\n        const encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if ((platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4))) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    const p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error('Only format 4 and 12 cmap tables are supported (found format ' + cmap.format + ').');\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0,\n        glyphIndex: glyphIndex\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\n// Make cmap table, format 4 by default, 12 if needed only\nfunction makeCmapTable(glyphs) {\n    // Plan 0 is the base Unicode Plan but emojis, for example are on another plan, and needs cmap 12 format (with 32bit)\n    let isPlan0Only = true;\n    let i;\n\n    // Check if we need to add cmap format 12 or if format 4 only is fine\n    for (i = glyphs.length - 1; i > 0; i -= 1) {\n        const g = glyphs.get(i);\n        if (g.unicode > 65535) {\n            console.log('Adding CMAP format 12 (needed!)');\n            isPlan0Only = false;\n            break;\n        }\n    }\n\n    let cmapTable = [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: isPlan0Only ? 1 : 2},\n\n        // CMAP 4 header\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: isPlan0Only ? 12 : (12 + 8)}\n    ];\n\n    if (!isPlan0Only)\n        cmapTable = cmapTable.concat([\n            // CMAP 12 header\n            {name: 'cmap12PlatformID', type: 'USHORT', value: 3}, // We encode only for PlatformID = 3 (Windows) because it is supported everywhere\n            {name: 'cmap12EncodingID', type: 'USHORT', value: 10},\n            {name: 'cmap12Offset', type: 'ULONG', value: 0}\n        ]);\n\n    cmapTable = cmapTable.concat([\n        // CMAP 4 Subtable\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'cmap4Length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    const t = new table.Table('cmap', cmapTable);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        for (let j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function (a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    const segCount = t.segments.length;\n    let segCountToRemove = 0;\n\n    // CMAP 4\n    // Set up parallel segment arrays.\n    let endCounts = [];\n    let startCounts = [];\n    let idDeltas = [];\n    let idRangeOffsets = [];\n    let glyphIds = [];\n\n    // CMAP 12\n    let cmap12Groups = [];\n\n    // Reminder this loop is not following the specification at 100%\n    // The specification -> find suites of characters and make a group\n    // Here we're doing one group for each letter\n    // Doing as the spec can save 8 times (or more) space\n    for (i = 0; i < segCount; i += 1) {\n        const segment = t.segments[i];\n\n        // CMAP 4\n        if (segment.end <= 65535 && segment.start <= 65535) {\n            endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n            startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n            idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n            idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n            if (segment.glyphId !== undefined) {\n                glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n            }\n        } else {\n            // Skip Unicode > 65535 (16bit unsigned max) for CMAP 4, will be added in CMAP 12\n            segCountToRemove += 1;\n        }\n\n        // CMAP 12\n        // Skip Terminator Segment\n        if (!isPlan0Only && segment.glyphIndex !== undefined) {\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Start_' + i, type: 'ULONG', value: segment.start});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12End_' + i, type: 'ULONG', value: segment.end});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Glyph_' + i, type: 'ULONG', value: segment.glyphIndex});\n        }\n    }\n\n    // CMAP 4 Subtable\n    t.segCountX2 = (segCount - segCountToRemove) * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log((segCount - segCountToRemove)) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.cmap4Length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    if (!isPlan0Only) {\n        // CMAP 12 Subtable\n        const cmap12Length = 16 + // Subtable header\n            cmap12Groups.length * 4;\n\n        t.cmap12Offset = 12 + (2 * 2) + 4 + t.cmap4Length;\n        t.fields = t.fields.concat([\n            {name: 'cmap12Format', type: 'USHORT', value: 12},\n            {name: 'cmap12Reserved', type: 'USHORT', value: 0},\n            {name: 'cmap12Length', type: 'ULONG', value: cmap12Length},\n            {name: 'cmap12Language', type: 'ULONG', value: 0},\n            {name: 'cmap12nGroups', type: 'ULONG', value: cmap12Groups.length / 3}\n        ]);\n\n        t.fields = t.fields.concat(cmap12Groups);\n    }\n\n    return t;\n}\n\nexport default { parse: parseCmapTable, make: makeCmapTable };\n","// Glyph encoding\n\nconst cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nconst cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nconst cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nconst standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    const code = c.codePointAt(0);\n    const glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (let i = 0; i < glyphs.length; i += 1) {\n            const glyph = glyphs.get(i);\n            for (let j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    const code = s.codePointAt(0);\n    const charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\n/**\n * @exports opentype.GlyphNames\n * @class\n * @constructor\n * @param {Object} post\n */\nfunction GlyphNames(post) {\n    switch (post.version) {\n        case 1:\n            this.names = standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < standardNames.length) {\n                    this.names[i] = standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        default:\n            this.names = [];\n            break;\n    }\n}\n\n/**\n * Gets the index of a glyph by name.\n * @param  {string} name - The glyph name\n * @return {number} The index\n */\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\n/**\n * @param  {number} gid\n * @return {string}\n */\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNamesAll(font) {\n    let glyph;\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        const glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            if (font.isCIDFont) {\n                glyph.name = 'gid' + i;\n            } else {\n                glyph.name = font.cffEncoding.charset[i];\n            }\n        } else if (font.glyphNames.names) {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nfunction addGlyphNamesToUnicodeMap(font) {\n    font._IndexToUnicodeMap = {};\n\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        let glyphIndex = glyphIndexMap[c];\n        if (font._IndexToUnicodeMap[glyphIndex] === undefined) {\n            font._IndexToUnicodeMap[glyphIndex] = {\n                unicodes: [parseInt(c)]\n            };\n        } else {\n            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));\n        }\n    }\n}\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n * @param {Object}\n */\nfunction addGlyphNames(font, opt) {\n    if (opt.lowMemory) {\n        addGlyphNamesToUnicodeMap(font);\n    } else {\n        addGlyphNamesAll(font);\n    }\n}\n\nexport {\n    cffStandardStrings,\n    cffStandardEncoding,\n    cffExpertEncoding,\n    standardNames,\n    DefaultEncoding,\n    CmapEncoding,\n    CffEncoding,\n    GlyphNames,\n    addGlyphNames\n};\n","// Drawing utility functions.\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport default { line };\n","// The Glyph object\n\nimport check from './check';\nimport draw from './draw';\nimport Path from './path';\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    let _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if (options.xMin) {\n        this.xMin = options.xMin;\n    }\n\n    if (options.yMin) {\n        this.yMin = options.yMin;\n    }\n\n    if (options.xMax) {\n        this.xMax = options.xMax;\n    }\n\n    if (options.yMax) {\n        this.yMax = options.yMax;\n    }\n\n    if (options.advanceWidth) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n/**\n * Calculate the minimum bounding box for this glyph.\n * @return {opentype.BoundingBox}\n */\nGlyph.prototype.getBoundingBox = function() {\n    return this.path.getBoundingBox();\n};\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function(x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    let commands;\n    let hPoints;\n    if (!options) options = { };\n    let xScale = options.xScale;\n    let yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        const scale = 1 / (this.path.unitsPerEm || 1000) * fontSize;\n        if (xScale === undefined) xScale = scale;\n        if (yScale === undefined) yScale = scale;\n    }\n\n    const p = new Path();\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                               x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                      x + (cmd.x2 * xScale), y + (-cmd.y2 * yScale),\n                      x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < this.points.length; i += 1) {\n        const pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function() {\n    const commands = this.path.commands;\n    const xCoords = [];\n    const yCoords = [];\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    const metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n/**\n * Draw the glyph on the given context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n */\nGlyph.prototype.draw = function(ctx, x, y, fontSize, options) {\n    this.getPath(x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of the glyph.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n    function drawCircles(l, x, y, scale) {\n        ctx.beginPath();\n        for (let j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, Math.PI * 2, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    const scale = 1 / this.path.unitsPerEm * fontSize;\n\n    const blueCircles = [];\n    const redCircles = [];\n    const path = this.path;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        const cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n/**\n * Draw lines indicating important font measurements.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    let scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    const xMin = this.xMin || 0;\n    let yMin = this.yMin || 0;\n    const xMax = this.xMax || 0;\n    let yMax = this.yMax || 0;\n    const advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexport default Glyph;\n","// The GlyphSet object\n\nimport Glyph from './glyph';\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (let i = 0; i < glyphs.length; i++) {\n            const glyph = glyphs[i];\n            glyph.path.unitsPerEm = font.unitsPerEm;\n            this.glyphs[i] = glyph;\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    // this.glyphs[index] is 'undefined' when low memory mode is on. glyph is pushed on request only.\n    if (this.glyphs[index] === undefined) {\n        this.font._push(index);\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        let glyph = this.glyphs[index];\n        let unicodeObj = this.font._IndexToUnicodeMap[index];\n\n        if (unicodeObj) {\n            for (let j = 0; j < unicodeObj.unicodes.length; j++)\n                glyph.addUnicode(unicodeObj.unicodes[j]);\n        }\n\n        if (this.font.cffEncoding) {\n            if (this.font.isCIDFont) {\n                glyph.name = 'gid' + index;\n            } else {\n                glyph.name = this.font.cffEncoding.charset[index];\n            }\n        } else if (this.font.glyphNames.names) {\n            glyph.name = this.font.glyphNames.glyphIndexToName(index);\n        }\n\n        this.glyphs[index].advanceWidth = this.font._hmtxTableData[index].advanceWidth;\n        this.glyphs[index].leftSideBearing = this.font._hmtxTableData[index].leftSideBearing;\n    } else {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            const path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            const path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexport default { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };\n","// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\nimport { CffEncoding, cffStandardEncoding, cffExpertEncoding, cffStandardStrings } from '../encoding';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\nimport table from '../table';\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    let bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    const offsets = [];\n    const objects = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (let i = 0; i < offsets.length - 1; i += 1) {\n        let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\nfunction parseCFFIndexLowMemory(data, start) {\n    const offsets = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    return {offsets: offsets, startOffset: start, endOffset: endOffset};\n}\nfunction getCffIndexObject(i, offsets, data, start, conversionFn) {\n    const count = parse.getCard16(data, start);\n    let objectOffset = 0;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n    }\n\n    let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n    if (conversionFn) {\n        value = conversionFn(value);\n    }\n    return value;\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    let s = '';\n    const eof = 15;\n    const lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        const b = parser.parseByte();\n        const n1 = b >> 4;\n        const n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    let b1;\n    let b2;\n    let b3;\n    let b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    const o = {};\n    for (let i = 0; i < entries.length; i += 1) {\n        const key = entries[i][0];\n        const values = entries[i][1];\n        let value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    const parser = new parse.Parser(data, start);\n    const entries = [];\n    let operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        let op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    const newDict = {};\n    let value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (let i = 0; i < meta.length; i += 1) {\n        const m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            const values = [];\n            values.length = m.type.length;\n            for (let j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value = m.value !== undefined && m.value[j] !== undefined ? m.value[j] : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    const header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nconst TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0]\n    },\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]},\n    {name: 'ros', op: 1230, type: ['SID', 'SID', 'number']},\n    {name: 'cidFontVersion', op: 1231, type: 'number', value: 0},\n    {name: 'cidFontRevision', op: 1232, type: 'number', value: 0},\n    {name: 'cidFontType', op: 1233, type: 'number', value: 0},\n    {name: 'cidCount', op: 1234, type: 'number', value: 8720},\n    {name: 'uidBase', op: 1235, type: 'number'},\n    {name: 'fdArray', op: 1236, type: 'offset'},\n    {name: 'fdSelect', op: 1237, type: 'offset'},\n    {name: 'fontName', op: 1238, type: 'SID'}\n];\n\nconst PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    const dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    const dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    const topDictArray = [];\n    for (let iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        const topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);\n        const topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        const privateSize = topDict.private[0];\n        const privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            const privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                const subrOffset = privateOffset + privateDict.subrs;\n                const subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    let sid;\n    let count;\n    const parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    const charset = ['.notdef'];\n\n    const format = parser.parseCard8();\n    if (format === 0) {\n        for (let i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    let code;\n    const enc = {};\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        const nCodes = parser.parseCard8();\n        for (let i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        const nRanges = parser.parseCard8();\n        code = 1;\n        for (let i = 0; i < nRanges; i += 1) {\n            const first = parser.parseCard8();\n            const nLeft = parser.parseCard8();\n            for (let j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    let c1x;\n    let c1y;\n    let c2x;\n    let c2y;\n    const p = new Path();\n    const stack = [];\n    let nStems = 0;\n    let haveWidth = false;\n    let open = false;\n    let x = 0;\n    let y = 0;\n    let subrs;\n    let subrsBias;\n    let defaultWidthX;\n    let nominalWidthX;\n    if (font.isCIDFont) {\n        const fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        const fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    let width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        let hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        let b1;\n        let b2;\n        let b3;\n        let b4;\n        let codeIndex;\n        let subrCode;\n        let jpx;\n        let jpy;\n        let c3x;\n        let c3y;\n        let c4x;\n        let c4y;\n\n        let i = 0;\n        while (i < code.length) {\n            let v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x   + stack.shift();    // dx6\n                            y = c4y   + stack.shift();    // dy6\n                            stack.shift();                // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y;                      // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = y;                      // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    const fdSelect = [];\n    let fdIndex;\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (let iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        const nRanges = parser.parseCard16();\n        let first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad initial GID ' + first);\n        }\n        let next;\n        for (let iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            if (next > nGlyphs) {\n                throw new Error('CFF Table CID Font FDSelect format 3 range has bad GID ' + next);\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad final GID ' + next);\n        }\n    } else {\n        throw new Error('CFF Table CID Font FDSelect table has unsupported format ' + format);\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font, opt) {\n    font.tables.cff = {};\n    const header = parseCFFHeader(data, start);\n    const nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    const topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    const stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    const globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    const topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);\n    if (topDictArray.length !== 1) {\n        throw new Error('CFF table has too many fonts in \\'FontSet\\' - count of fonts NameIndex.length = ' + topDictArray.length);\n    }\n\n    const topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        let fdArrayOffset = topDict.fdArray;\n        let fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error('Font is marked as a CID font, but FDArray and/or FDSelect information is missing');\n        }\n        fdArrayOffset += start;\n        const fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        const fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);\n    }\n\n    const privateDictOffset = start + topDict.private[1];\n    const privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        const subrOffset = privateDictOffset + privateDict.subrs;\n        const subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    let charStringsIndex;\n    if (opt.lowMemory) {\n        charStringsIndex = parseCFFIndexLowMemory(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.offsets.length;\n    } else {\n        charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n    }\n\n    const charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    if (opt.lowMemory) {\n        font._push = function(i) {\n            const charString = getCffIndexObject(i, charStringsIndex.offsets, data, start + topDict.charStrings);\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        };\n    } else {\n        for (let i = 0; i < font.nGlyphs; i += 1) {\n            const charString = charStringsIndex.objects[i];\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        }\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    let sid;\n\n    // Is the string in the CFF standard strings?\n    let i = cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + cffStandardStrings.length;\n    } else {\n        sid = cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Record('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    const t = new table.Record('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (let i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    const m = {};\n    for (let i = 0; i < meta.length; i += 1) {\n        const entry = meta[i];\n        let value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    const t = new table.Record('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    const t = new table.Record('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    const t = new table.Record('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (let i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Record('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    const t = new table.Record('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (let i = 0; i < glyphNames.length; i += 1) {\n        const glyphName = glyphNames[i];\n        const glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    const ops = [];\n    const path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    let x = 0;\n    let y = 0;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        let dx;\n        let dy;\n        let cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            const _13 = 1 / 3;\n            const _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            const dx1 = Math.round(cmd.x1 - x);\n            const dy1 = Math.round(cmd.y1 - y);\n            const dx2 = Math.round(cmd.x2 - cmd.x1);\n            const dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    const t = new table.Record('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    const t = new table.Record('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    const t = new table.Table('CFF ', [\n        {name: 'header', type: 'RECORD'},\n        {name: 'nameIndex', type: 'RECORD'},\n        {name: 'topDictIndex', type: 'RECORD'},\n        {name: 'stringIndex', type: 'RECORD'},\n        {name: 'globalSubrIndex', type: 'RECORD'},\n        {name: 'charsets', type: 'RECORD'},\n        {name: 'charStringsIndex', type: 'RECORD'},\n        {name: 'privateDict', type: 'RECORD'}\n    ]);\n\n    const fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    const attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    const privateAttrs = {};\n\n    const glyphNames = [];\n    let glyph;\n\n    // Skip first glyph (.notdef)\n    for (let i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    const strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    let topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    const startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexport default { parse: parseCFFTable, make: makeCFFTable };\n","// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    const head = {};\n    const p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    // Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970\n    const timestamp = Math.round(new Date().getTime() / 1000) + 2082844800;\n    let createdTimestamp = timestamp;\n\n    if (options.createdTimestamp) {\n        createdTimestamp = options.createdTimestamp + 2082844800;\n    }\n\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: createdTimestamp},\n        {name: 'modified', type: 'LONGDATETIME', value: timestamp},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHeadTable, make: makeHeadTable };\n","// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n","// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        const glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {\n    font._hmtxTableData = {};\n\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        font._hmtxTableData[i] = {\n            advanceWidth: advanceWidth,\n            leftSideBearing: leftSideBearing\n        };\n    }\n}\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {\n    if (opt.lowMemory)\n        parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs);\n    else\n        parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs);\n}\n\nfunction makeHmtxTable(glyphs) {\n    const t = new table.Table('hmtx', []);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const advanceWidth = glyph.advanceWidth || 0;\n        const leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexport default { parse: parseHmtxTable, make: makeHmtxTable };\n","// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction makeLtagTable(tags) {\n    const result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    let stringPool = '';\n    const stringPoolOffset = 12 + tags.length * 4;\n    for (let i = 0; i < tags.length; ++i) {\n        let pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    const numTags = p.parseULong();\n\n    const tags = [];\n    for (let i = 0; i < numTags; i++) {\n        let tag = '';\n        const offset = start + p.parseUShort();\n        const length = p.parseUShort();\n        for (let j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexport default { make: makeLtagTable, parse: parseLtagTable };\n","// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    const maxp = {};\n    const p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexport default { parse: parseMaxpTable, make: makeMaxpTable };\n","// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\nimport { decode, encode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// NameIDs for the name table.\nconst nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nconst macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nconst windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nconst utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nconst macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    const name = {};\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    const count = p.parseUShort();\n    const stringOffset = p.offset + p.parseUShort();\n    for (let i = 0; i < count; i++) {\n        const platformID = p.parseUShort();\n        const encodingID = p.parseUShort();\n        const languageID = p.parseUShort();\n        const nameID = p.parseUShort();\n        const property = nameTableNames[nameID] || nameID;\n        const byteLength = p.parseUShort();\n        const offset = p.parseUShort();\n        const language = getLanguageCode(platformID, languageID, ltag);\n        const encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            let text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                let translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    let langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    const result = {};\n    for (let key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Record('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    const needleLength = needle.length;\n    const limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (let pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (let k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    let offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        let i = 0;\n        const len = s.length;\n        for (; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    let nameID;\n    const nameIDs = [];\n\n    const namesWithNumericKeys = {};\n    const nameTableIds = reverseDict(nameTableNames);\n    for (let key in names) {\n        let id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n\n        if (isNaN(nameID)) {\n            throw new Error('Name table entry \"' + key + '\" does not exist, see nameTableNames for complete list.');\n        }\n\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    const macLanguageIds = reverseDict(macLanguages);\n    const windowsLanguageIds = reverseDict(windowsLanguages);\n\n    const nameRecords = [];\n    const stringPool = [];\n\n    for (let i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        const translations = namesWithNumericKeys[nameID];\n        for (let lang in translations) {\n            const text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            let macPlatform = 1;  // Macintosh\n            let macLanguage = macLanguageIds[lang];\n            let macScript = macLanguageToScript[macLanguage];\n            const macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            let macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            const macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            const winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                const winName = encode.UTF16(text);\n                const winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    const t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (let r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'RECORD', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexport default { parse: parseNameTable, make: makeNameTable };\n","// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nconst unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (let i = 0; i < unicodeRanges.length; i += 1) {\n        const range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    const os2 = {};\n    const p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (let i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange };\n","// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\nimport { standardNames } from '../encoding';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    const post = {};\n    const p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n        case 1:\n            post.names = standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= standardNames.length) {\n                    const nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexport default { parse: parsePostTable, make: makePostTable };\n","// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(9);         // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nconst lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        const glyphCount = this.parseUShort();\n        const substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    const extensionLookupType = this.parseUShort();\n    const extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GSUB table version.');\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GSUB Writing //////////////////////////////////////////////\nconst subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGsubTable, make: makeGsubTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport { decode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    const numDataMaps = p.parseULong();\n\n    const tags = {};\n    for (let i = 0; i < numDataMaps; i++) {\n        const tag = p.parseTag();\n        const dataOffset = p.parseULong();\n        const dataLength = p.parseULong();\n        const text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    const numTags = Object.keys(tags).length;\n    let stringPool = '';\n    const stringPoolOffset = 16 + numTags * 12;\n\n    const result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (let tag in tags) {\n        const pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexport default { parse: parseMetaTable, make: makeMetaTable };\n","// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\nimport check from '../check';\nimport table from '../table';\n\nimport cmap from './cmap';\nimport cff from './cff';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport ltag from './ltag';\nimport maxp from './maxp';\nimport _name from './name';\nimport os2 from './os2';\nimport post from './post';\nimport gsub from './gsub';\nimport meta from './meta';\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    let sum = 0;\n    for (let i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Record('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    const sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    const highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    const recordFields = [];\n    const tableFields = [];\n\n    let offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (let i = 0; i < tables.length; i += 1) {\n        const t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        const tableLength = t.sizeOf();\n        const tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'RECORD', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'RECORD', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (let i = 0; i < chars.length; i += 1) {\n        const glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            const glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    let sum = 0;\n    for (let i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    const xMins = [];\n    const yMins = [];\n    const xMaxs = [];\n    const yMaxs = [];\n    const advanceWidths = [];\n    const leftSideBearings = [];\n    const rightSideBearings = [];\n    let firstCharIndex;\n    let lastCharIndex = 0;\n    let ulUnicodeRange1 = 0;\n    let ulUnicodeRange2 = 0;\n    let ulUnicodeRange3 = 0;\n    let ulUnicodeRange4 = 0;\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        const glyph = font.glyphs.get(i);\n        const unicode = glyph.unicode | 0;\n\n        if (isNaN(glyph.advanceWidth)) {\n            throw new Error('Glyph ' + glyph.name + ' (' + i + '): advanceWidth is not a number.');\n        }\n\n        if (firstCharIndex > unicode || firstCharIndex === undefined) {\n            // ignore .notdef char\n            if (unicode > 0) {\n                firstCharIndex = unicode;\n            }\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        const position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        const metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    const globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender;\n    globals.descender = font.descender;\n\n    const headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3,\n        createdTimestamp: font.createdTimestamp\n    });\n\n    const hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    const maxpTable = maxp.make(font.glyphs.length);\n\n    const os2Table = os2.make(Object.assign({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0, // Use space as the break character, if available.\n    }, font.tables.os2));\n\n    const hmtxTable = hmtx.make(font.glyphs);\n    const cmapTable = cmap.make(font.glyphs);\n\n    const englishFamilyName = font.getEnglishName('fontFamily');\n    const englishStyleName = font.getEnglishName('fontSubfamily');\n    const englishFullName = englishFamilyName + ' ' + englishStyleName;\n    let postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    const names = {};\n    for (let n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    const languageTags = [];\n    const nameTable = _name.make(names, languageTags);\n    const ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    const postTable = post.make();\n    const cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    const metaTable = (font.metas && Object.keys(font.metas).length > 0) ? meta.make(font.metas) : undefined;\n\n    // The order does not matter because makeSfntTable() will sort them.\n    const tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n    // Optional tables\n    if (font.tables.gsub) {\n        tables.push(gsub.make(font.tables.gsub));\n    }\n    if (metaTable) {\n        tables.push(metaTable);\n    }\n\n    const sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    const bytes = sfntTable.encode();\n    const checkSum = computeCheckSum(bytes);\n    const tableFields = sfntTable.fields;\n    let checkSumAdjusted = false;\n    for (let i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexport default { make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum };\n","// The Layout object is the prototype of Substitution objects, and provides\n// utility methods to manipulate common layout tables (GPOS, GSUB, GDEF...)\n\nimport check from './check';\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    let range;\n    let imin = 0;\n    let imax = ranges.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        const start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) return 0;\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        let layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        let layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        let layout = this.getTable();\n        if (!layout) { return; }\n        let hasLatn = false;\n        for (let i = 0; i < layout.scripts.length; i++) {\n            const name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        const layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            const scripts = layout.scripts;\n            const pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                const scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []},\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        const scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            const pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                const langSysRecord = {\n                    tag: language,\n                    langSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []}\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        const langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            let featureRecord;\n            const featIndexes = langSysTable.featureIndexes;\n            const allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (let i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                const index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        const featureTable = this.getFeatureTable(script, language, feature, create);\n        const tables = [];\n        if (featureTable) {\n            let lookupTable;\n            const lookupListIndexes = featureTable.lookupListIndexes;\n            const allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (let i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                const index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function(classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {\n                    return classDefTable.classes[glyphIndex - classDefTable.startGlyph];\n                }\n                return 0;\n            case 2:\n                const range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function(coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                const index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                const range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            const glyphs = [];\n            const ranges = coverageTable.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                const start = range.start;\n                const end = range.end;\n                for (let j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nexport default Layout;\n","// The Position object provides utility methods to manipulate\n// the GPOS position table.\n\nimport Layout from './layout';\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    const script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (let i = 0; i < kerningLookups.length; i++) {\n        const subtables = kerningLookups[i].subtables;\n        for (let j = 0; j < subtables.length; j++) {\n            const subtable = subtables[j];\n            const covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) continue;\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    let pairSet = subtable.pairSets[covIndex];\n                    for (let k = 0; k < pairSet.length; k++) {\n                        let pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    const class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    const class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    const pair = subtable.classRecords[class1][class2];\n                    return pair.value1 && pair.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\nexport default Position;\n","// The Substitution object provides utility methods to manipulate\n// the GSUB substitution table.\n\nimport check from './check';\nimport Layout from './layout';\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    const n = ar1.length;\n    if (n !== ar2.length) { return false; }\n    for (let i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) { return false; }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    const subtables = lookupTable.subtables;\n    for (let i = 0; i < subtables.length; i++) {\n        const subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function() {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [{\n            tag: 'DFLT',\n            script: {\n                defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                langSysRecords: []\n            }\n        }],\n        features: [],\n        lookups: []\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n            if (subtable.substFormat === 1) {\n                const delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    const glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                const substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function(feature, script, language) {\n    const alternates = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const alternateSets = subtable.alternateSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function(feature, script, language) {\n    const ligatures = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const ligatureSets = subtable.ligatureSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                const startGlyph = glyphs[j];\n                const ligSet = ligatureSets[j];\n                for (let k = 0; k < ligSet.length; k++) {\n                    const lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, delta: number } for format 1 or { sub: id, by: id } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];\n    const subtable = getSubstFormat(lookupTable, 2, {                // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: {format: 1, glyphs: []},\n        substitute: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 1)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        alternateSets: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function(feature, ligature, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];\n    let subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {                // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: []\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = ligature.sub[0];\n    const ligComponents = ligature.sub.slice(1);\n    const ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents\n    };\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        const ligatureSet = subtable.ligatureSets[pos];\n        for (let i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function(feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language)\n                    .concat(this.getAlternates(feature, script, language));\n        case 'dlig':\n        case 'liga':\n        case 'rlig': return this.getLigatures(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function(feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nexport default Substitution;\n","function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isNode() {\n    return typeof window === 'undefined';\n}\n\nfunction nodeBufferToArrayBuffer(buffer) {\n    const ab = new ArrayBuffer(buffer.length);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n}\n\nfunction arrayBufferToNodeBuffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n}\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\nexport { isBrowser, isNode, nodeBufferToArrayBuffer, arrayBufferToNodeBuffer, checkArgument };\n","// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\nimport check from '../check';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    let v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    const p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    let flags;\n    let flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        const endPointIndices = glyph.endPointIndices = [];\n        for (let i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (let i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        const numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (let i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                const repeatCount = p.parseByte();\n                for (let j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            const points = [];\n            let point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                let px = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                let py = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        let moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            const component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (let i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    const newPoints = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        const newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    const p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    const contours = getContours(points);\n\n    for (let contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        const contour = contours[contourIndex];\n\n        let prev = null;\n        let curr = contour[contour.length - 1];\n        let next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                const start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (let i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                let prev2 = prev;\n                let next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (let j = 0; j < glyph.components.length; j += 1) {\n            const component = glyph.components[j];\n            const componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                let transformedPoints;\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    const firstPt = glyph.points[component.matchedPoints[0]];\n                    let secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    const transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\nfunction parseGlyfTableAll(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (let i = 0; i < loca.length - 1; i += 1) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nfunction parseGlyfTableOnLowMemory(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    font._push = function(i) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    };\n\n    return glyphs;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font, opt) {\n    if (opt.lowMemory)\n        return parseGlyfTableOnLowMemory(data, start, loca, font);\n    else\n        return parseGlyfTableAll(data, start, loca, font);\n}\n\nexport default { getPath, parse: parseGlyfTable};\n","/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n'use strict';\n\nimport glyf from './tables/glyf';\n\nlet instructionTable;\nlet exec;\nlet execGlyph;\nlet execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nconst roundSuper = function (v) {\n    const period = this.srPeriod;\n    let phase = this.srPhase;\n    const threshold = this.srThreshold;\n    let sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) return phase * sign;\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nconst xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nconst yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    let dm1;\n    let dm2;\n    let do1;\n    let do2;\n    let doa1;\n    let doa2;\n    let dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    const rpx = org ? rp.xo : rp.x;\n    const rpy = org ? rp.yo : rp.y;\n    const rpdx = rpx + d * pv.x;\n    const rpdy = rpy + d * pv.y;\n\n    const pvns = pv.normalSlope;\n    const fvs = this.slope;\n\n    const px = p.x;\n    const py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    const d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) return xUnitVector;\n    else if (x === 0 && y === 1) return yUnitVector;\n    else return new UnitVector(x, y);\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    let p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.nextPointOnContour;\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    let p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.prevPointOnContour;\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nconst HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nconst defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) return;\n\n    const font = this.font;\n    let prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        let fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        const oCvt = font.tables.cvt;\n        if (oCvt) {\n            const cvt = prepState.cvt = new Array(oCvt.length);\n            const scale = ppem / font.unitsPerEm;\n            for (let c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) return;\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    const xScale = prepState.ppem / prepState.font.unitsPerEm;\n    const yScale = xScale;\n    let components = glyph.components;\n    let contours;\n    let gZone;\n    let state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        const font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (let i = 0; i < components.length; i++) {\n            const c = components[i];\n            const cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            const dx = Math.round(c.dx * xScale);\n            const dy = Math.round(c.dy * yScale);\n            const gz = state.gZone;\n            const cc = state.contours;\n            for (let pi = 0; pi < gz.length; pi++) {\n                const p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            const gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (let j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    const points = glyph.points || [];\n    const pLen = points.length;\n    const gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    const contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    let cp; // current point\n    for (let i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    let sp; // start point\n    let np; // next point\n\n    for (let i = 0; i < pLen; i++) {\n        cp = gZone[i];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) return;\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    let prog = state.prog;\n\n    if (!prog) return;\n\n    const pLen = prog.length;\n    let ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) state.step++;\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    const tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (let i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    const prog = state.prog;\n    let ip = state.ip;\n    let nesting = 1;\n    let ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            nesting++;\n        else if (ins === 0x59) // EIF\n            nesting--;\n        else if (ins === 0x40) // NPUSHB\n            ip += prog[ip + 1] + 1;\n        else if (ins === 0x41) // NPUSHW\n            ip += 2 * prog[ip + 1] + 1;\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            ip += ins - 0xB0 + 1;\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            ip += (ins - 0xB8 + 1) * 2;\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            break;\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SVTCA[' + v.axis + ']');\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SPVTCA[' + v.axis + ']');\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SFVTCA[' + v.axis + ']');\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SFVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    const stack = state.stack;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'GPV[]');\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    const stack = state.stack;\n    const fv = state.fv;\n\n    if (exports.DEBUG) console.log(state.step, 'GFV[]');\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'SFVTPV[]');\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    const stack = state.stack;\n    const pa0i = stack.pop();\n    const pa1i = stack.pop();\n    const pb0i = stack.pop();\n    const pb1i = stack.pop();\n    const pi = stack.pop();\n    const z0 = state.z0;\n    const z1 = state.z1;\n    const pa0 = z0[pa0i];\n    const pa1 = z0[pa1i];\n    const pb0 = z1[pb0i];\n    const pb1 = z1[pb1i];\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi);\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    const x1 = pa0.x;\n    const y1 = pa0.y;\n    const x2 = pa1.x;\n    const y2 = pa1.y;\n    const x3 = pb0.x;\n    const y3 = pb0.y;\n    const x4 = pb1.x;\n    const y4 = pb1.y;\n\n    const div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    const f1 = x1 * y2 - y1 * x2;\n    const f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP0[]', state.rp0);\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP1[]', state.rp1);\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP2[]', state.rp2);\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP0[]', n);\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP1[]', n);\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP2[]', n);\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZPS[]', n);\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SLOOP[]', state.loop);\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTG[]');\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTHG[]');\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    const d = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SMD[]', d);\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) console.log(state.step, 'ELSE[]');\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    const o = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'JMPR[]', o);\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SCVTCI[]', n);\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DUP[]');\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) console.log(state.step, 'POP[]');\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) console.log(state.step, 'CLEAR[]');\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    const stack = state.stack;\n\n    const a = stack.pop();\n    const b = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SWAP[]');\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DEPTH[]');\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    const stack = state.stack;\n    const fn = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LOOPCALL[]', fn, c);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (let i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        );\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    const fn = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CALL[]', fn);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) console.log(++state.step, 'returning from', fn);\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CINDEX[]', k);\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MINDEX[]', k);\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') throw new Error('FDEF not allowed here');\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    const fn = stack.pop();\n    const ipBegin = ip;\n\n    if (exports.DEBUG) console.log(state.step, 'FDEF[]', fn);\n\n    while (prog[++ip] !== 0x2D);\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    const pi = state.stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'MDAP[' + round + ']', pi);\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) d = state.round(d);\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    const z2 = state.z2;\n    const pLen = z2.length - 2;\n    let cp;\n    let pp;\n    let np;\n\n    if (exports.DEBUG) console.log(state.step, 'IUP[' + v.axis + ']');\n\n    for (let i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) continue;\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) continue;\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let loop = state.loop;\n    const z2 = state.z2;\n\n    while (loop--)\n    {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        const d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    const ci = stack.pop();\n    const sp = state.z2[state.contours[ci]];\n    let p = sp;\n\n    if (exports.DEBUG) console.log(state.step, 'SHC[' + a + ']', ci);\n\n    const d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SHZ[' + a + ']', e);\n\n    let z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    let p;\n    const d = pv.distance(rp, rp, false, true);\n    const pLen = z.length - 2;\n    for (let i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    const stack = state.stack;\n    let loop = state.loop;\n    const fv = state.fv;\n    const d = stack.pop() / 0x40;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    const stack = state.stack;\n    const rp1i = state.rp1;\n    const rp2i = state.rp2;\n    let loop = state.loop;\n    const rp1 = state.z0[rp1i];\n    const rp2 = state.z1[rp2i];\n    const fv = state.fv;\n    const pv = state.dpv;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    const stack = state.stack;\n    const d = stack.pop() / 64;\n    const pi = stack.pop();\n    const p = state.z1[pi];\n    const rp0 = state.z0[state.rp0];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) console.log(state.step, 'MSIRP[' + a + ']', d, pi);\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) state.rp0 = pi;\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    const stack = state.stack;\n    const rp0i = state.rp0;\n    const rp0 = state.z0[rp0i];\n    let loop = state.loop;\n    const fv = state.fv;\n    const pv = state.pv;\n    const z1 = state.z1;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTDG[]');\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const pi = stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) d = cv;\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    const prog = state.prog;\n    let ip = state.ip;\n    const stack = state.stack;\n\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHB[]', n);\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHW[]', n);\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    const stack = state.stack;\n    let store = state.store;\n\n    if (!store) store = state.store = [];\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WS', v, l);\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    const stack = state.stack;\n    const store = state.store;\n\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RS', l);\n\n    const v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    const stack = state.stack;\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTP', v, l);\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    const stack = state.stack;\n    const cvte = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RCVT', cvte);\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    const stack = state.stack;\n    const pi = stack.pop();\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log(state.step, 'GC[' + a + ']', pi);\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    const stack = state.stack;\n    const pi2 = stack.pop();\n    const pi1 = stack.pop();\n    const p2 = state.z1[pi2];\n    const p1 = state.z0[pi1];\n    const d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d);\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) console.log(state.step, 'MPPEM[]');\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) console.log(state.step, 'FLIPON[]');\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LT[]', e2, e1);\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LTEQ[]', e2, e1);\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GT[]', e2, e1);\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GTEQ[]', e2, e1);\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EQ[]', e2, e1);\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEQ[]', e2, e1);\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ODD[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EVEN[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    let test = state.stack.pop();\n    let ins;\n\n    if (exports.DEBUG) console.log(state.step, 'IF[]', test);\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) console.log(state.step, ins === 0x1B ? 'ELSE[]' : 'EIF[]');\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) console.log(state.step, 'EIF[]');\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'AND[]', e2, e1);\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'OR[]', e2, e1);\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    const stack = state.stack;\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NOT[]', e);\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const fv = state.fv;\n    const pv = state.pv;\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n    const z0 = state.z0;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAP[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const pi = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n        if (exports.DEBUG) console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds);\n\n        const p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDB[]', n);\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDS[]', n);\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ADD[]', n2, n1);\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SUB[]', n2, n1);\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'DIV[]', n2, n1);\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MUL[]', n2, n1);\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ABS[]', n);\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    const stack = state.stack;\n    let n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEG[]', n);\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'FLOOR[]', n);\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CEILING[]', n);\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROUND[]');\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    const stack = state.stack;\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTF[]', v, l);\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAC[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const c = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n\n        const delta = mag * ds;\n\n        if (exports.DEBUG) console.log(state.step, 'DELTACFIX', c, 'by', delta);\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'S45ROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) console.log(state.step, 'ROFF[]');\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RUTG[]');\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RDTG[]');\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    const n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) console.log(state.step, 'SCANCTRL[]', n);\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    const stack = state.stack;\n    const sel = stack.pop();\n    let r = 0;\n\n    if (exports.DEBUG) console.log(state.step, 'GETINFO[]', sel);\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) r = 35;\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) r |= 0x1000;\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    const stack = state.stack;\n    const a = stack.pop();\n    const b = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROLL[]');\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MAX[]', e2, e1);\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MIN[]', e2, e1);\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    const n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) console.log(state.step, 'SCANTYPE[]', n);\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    const s = state.stack.pop();\n    let v = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'INSTCTRL[]', s, v);\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    if (exports.DEBUG) console.log(state.step, 'PUSHB[' + n + ']');\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.ip, 'PUSHW[' + n + ']');\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    const stack = state.stack;\n    const cvte = indirect && stack.pop();\n    const pi = stack.pop();\n    const rp0i = state.rp0;\n    const rp = state.z0[rp0i];\n    const p = state.z1[pi];\n\n    const md = state.minDis;\n    const fv = state.fv;\n    const pv = state.dpv;\n    let od; // original distance\n    let d; // moving distance\n    let sign; // sign of distance\n    let cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) d = cv;\n    }\n\n    if (keepD && d < md) d = md;\n\n    if (ro) d = state.round(d);\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) state.rp0 = pi;\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\nexport default Hinting;\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n","/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * @typedef ContextParams\n * @type Object\n * @property {array} context context items\n * @property {number} currentIndex current item index\n */\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    const coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(eventId => {\n        Object.defineProperty(this.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(eventId => {\n            const event = events[eventId];\n            if (typeof event === 'function') {\n                this.events[eventId].subscribe(event);\n            }\n        });\n    }\n    const requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(eventId => {\n        this.events[eventId].subscribe(\n            this.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    const silent = true;\n    const state = RUDs.map(RUD => (\n        this[RUD[0]].apply(this, RUD.slice(1).concat(silent))\n    ));\n    const hasFAILObject = obj => (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    );\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: `composeRUD: one or more operations hasn't completed successfully`,\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(op => !hasFAILObject(op))]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    const isTokenType = tokens.every(token => token instanceof Token);\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        const replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) this.dispatch('replaceToken', [startIndex, offset, tokens]);\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        const replaced = this.tokens.splice(index, 1, token);\n        if (!silent) this.dispatch('replaceToken', [index, token]);\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    const tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) this.dispatch('removeRange', [tokens, startIndex, offset]);\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        const token = this.tokens.splice(index, 1);\n        if (!silent) this.dispatch('removeToken', [token, index]);\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    const tokenType = tokens.every(\n        token => token instanceof Token\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) this.dispatch('insertToken', [tokens, index]);\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        const conditionParams = [token, contextParams];\n        const canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        const modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            let newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: `invalid '${this.eventId}' event handler`};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(token => token.char).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(token => token.char).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    let context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    const event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    const event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(subscriber => {\n            subscriber.apply(this, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) return {\n        FAIL:\n        `context name '${contextName}' is already registered.`\n    };\n    if (typeof contextStartCheck !== 'function') return {\n        FAIL:\n        `missing context start check.`\n    };\n    if (typeof contextEndCheck !== 'function') return {\n        FAIL:\n        `missing context end check.`\n    };\n    const contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    const endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    const context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: `context checker '${contextName}' is not registered.` };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    const registeredContexts = this.registeredContexts;\n    for (const contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            const context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    const chars = this.tokens.map(token => token.char);\n    for (let i = 0; i < chars.length; i++) {\n        const contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    const startIndex = this.getContext(contextName).openRange.startIndex;\n    let range = new ContextRange(startIndex, offset, contextName);\n    const ranges = this.getContext(contextName).ranges;\n    range.rangeId = `${contextName}.${ranges.length}`;\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    const index = contextParams.index;\n    this.contextCheckers.forEach(contextChecker => {\n        let contextName = contextChecker.contextName;\n        let openRange = this.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this.getContext(contextName).openRange = openRange;\n            this.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            const offset = (index - openRange.startIndex) + 1;\n            const range = this.setEndOffset(offset, contextName);\n            this.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    let chars = Array.from(text);\n    this.dispatch('start');\n    for (let i = 0; i < chars.length; i++) {\n        const char = chars[i];\n        const contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        let token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\nexport default Tokenizer;\nexport { Token, Event, ContextRange, ContextParams };\n","// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nexport function isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nexport function isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nexport function isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is Latin\n * @param {string} c a single char\n */\nexport function isLatinChar(c) {\n    return /[A-z]/.test(c);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nexport function isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n","/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\nimport { ContextParams } from '../tokenizer';\nimport { isTashkeelArabicChar } from '../char';\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n */\nfunction FeatureQuery(font) {\n    this.font = font;\n    this.features = {};\n}\n\n/**\n * @typedef SubstitutionAction\n * @type Object\n * @property {number} id substitution type\n * @property {string} tag feature tag\n * @property {any} substitution substitution value(s)\n */\n\n/**\n * Create a substitution action instance\n * @param {SubstitutionAction} action\n */\nfunction SubstitutionAction(action) {\n    this.id = action.id;\n    this.tag = action.tag;\n    this.substitution = action.substitution;\n}\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex glyph index\n * @param {CoverageTable} coverage coverage table\n */\nfunction lookupCoverage(glyphIndex, coverage) {\n    if (!glyphIndex) return -1;\n    switch (coverage.format) {\n        case 1:\n            return coverage.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            let ranges = coverage.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    let offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n}\n\n/**\n * Handle a single substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return glyphIndex + subtable.deltaGlyphId;\n}\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.substitute[substituteIndex];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    let lookupList = [];\n    for (let i = 0; i < coverageList.length; i++) {\n        const coverage = coverageList[i];\n        let glyphIndex = contextParams.current;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        const lookupIndex = lookupCoverage(glyphIndex, coverage);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) return -1;\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams, subtable) {\n    const lookupsCount = (\n        subtable.inputCoverage.length +\n        subtable.lookaheadCoverage.length +\n        subtable.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) return [];\n    // INPUT LOOKUP //\n    let inputLookups = lookupCoverageList(\n        subtable.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) return [];\n    // LOOKAHEAD LOOKUP //\n    const lookaheadOffset = subtable.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) return [];\n    let lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    const lookaheadParams = new ContextParams(lookaheadContext, 0);\n    let lookaheadLookups = lookupCoverageList(\n        subtable.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    let backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < subtable.backtrackCoverage.length) return [];\n    const backtrackParams = new ContextParams(backtrackContext, 0);\n    let backtrackLookups = lookupCoverageList(\n        subtable.backtrackCoverage, backtrackParams\n    );\n    const contextRulesMatch = (\n        inputLookups.length === subtable.inputCoverage.length &&\n        lookaheadLookups.length === subtable.lookaheadCoverage.length &&\n        backtrackLookups.length === subtable.backtrackCoverage.length\n    );\n    let substitutions = [];\n    if (contextRulesMatch) {\n        for (let i = 0; i < subtable.lookupRecords.length; i++) {\n            const lookupRecord = subtable.lookupRecords[i];\n            const lookupListIndex = lookupRecord.lookupListIndex;\n            const lookupTable = this.getLookupByIndex(lookupListIndex);\n            for (let s = 0; s < lookupTable.subtables.length; s++) {\n                const subtable = lookupTable.subtables[s];\n                const lookup = this.getLookupMethod(lookupTable, subtable);\n                const substitutionType = this.getSubstitutionType(lookupTable, subtable);\n                if (substitutionType === '12') {\n                    for (let n = 0; n < inputLookups.length; n++) {\n                        const glyphIndex = contextParams.get(n);\n                        const substitution = lookup(glyphIndex);\n                        if (substitution) substitutions.push(substitution);\n                    }\n                }\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams, subtable) {\n    // COVERAGE LOOKUP //\n    let glyphIndex = contextParams.current;\n    let ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (ligSetIndex === -1) return null;\n    // COMPONENTS LOOKUP\n    // (!) note, components are ordered in the written direction.\n    let ligature;\n    let ligatureSet = subtable.ligatureSets[ligSetIndex];\n    for (let s = 0; s < ligatureSet.length; s++) {\n        ligature = ligatureSet[s];\n        for (let l = 0; l < ligature.components.length; l++) {\n            const lookaheadItem = contextParams.lookahead[l];\n            const component = ligature.components[l];\n            if (lookaheadItem !== component) break;\n            if (l === ligature.components.length - 1) return ligature;\n        }\n    }\n    return null;\n}\n\n/**\n * Handle decomposition substitution - format 1\n * @param {number} glyphIndex glyph index\n * @param {any} subtable subtable\n */\nfunction decompositionSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.sequences[substituteIndex];\n}\n\n/**\n * Get default script features indexes\n */\nFeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function () {\n    const scripts = this.font.tables.gsub.scripts;\n    for (let s = 0; s < scripts.length; s++) {\n        const script = scripts[s];\n        if (script.tag === 'DFLT') return (\n            script.script.defaultLangSys.featureIndexes\n        );\n    }\n    return [];\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    const tables = this.font.tables;\n    if (!tables.gsub) return [];\n    if (!scriptTag) return this.getDefaultScriptFeaturesIndexes();\n    const scripts = this.font.tables.gsub.scripts;\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (script.tag === scriptTag && script.script.defaultLangSys) {\n            return script.script.defaultLangSys.featureIndexes;\n        } else {\n            let langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (let j = 0; j < langSysRecords.length; j++) {\n                    const langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        let langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return this.getDefaultScriptFeaturesIndexes();\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    let tags = {};\n    for (let i = 0; i < features.length; i++) {\n        const tag = features[i].tag;\n        const feature = features[i].feature;\n        tags[tag] = feature;\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    let features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) return features;\n    const featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) return null;\n    const gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(index => gsub.features[index]);\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Get substitution type\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {\n    const lookupType = lookupTable.lookupType.toString();\n    const substFormat = subtable.substFormat.toString();\n    return lookupType + substFormat;\n};\n\n/**\n * Get lookup method\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {\n    let substitutionType = this.getSubstitutionType(lookupTable, subtable);\n    switch (substitutionType) {\n        case '11':\n            return glyphIndex => singleSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '12':\n            return glyphIndex => singleSubstitutionFormat2.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '63':\n            return contextParams => chainingSubstitutionFormat3.apply(\n                this, [contextParams, subtable]\n            );\n        case '41':\n            return contextParams => ligatureSubstitutionFormat1.apply(\n                this, [contextParams, subtable]\n            );\n        case '21':\n            return glyphIndex => decompositionSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        default:\n            throw new Error(\n                `lookupType: ${lookupTable.lookupType} - ` +\n                `substFormat: ${subtable.substFormat} ` +\n                `is not yet supported`\n            );\n    }\n};\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n *\n */\n\n/**\n * @typedef FQuery\n * @type Object\n * @param {string} tag feature tag\n * @param {string} script feature script\n * @param {ContextParams} contextParams context params\n */\n\n/**\n * Lookup a feature using a query parameters\n * @param {FQuery} query feature query\n */\nFeatureQuery.prototype.lookupFeature = function (query) {\n    let contextParams = query.contextParams;\n    let currentIndex = contextParams.index;\n    const feature = this.getFeature({\n        tag: query.tag, script: query.script\n    });\n    if (!feature) return new Error(\n        `font '${this.font.names.fullName.en}' ` +\n        `doesn't support feature '${query.tag}' ` +\n        `for script '${query.script}'.`\n    );\n    const lookups = this.getFeatureLookups(feature);\n    const substitutions = [].concat(contextParams.context);\n    for (let l = 0; l < lookups.length; l++) {\n        const lookupTable = lookups[l];\n        const subtables = this.getLookupSubtables(lookupTable);\n        for (let s = 0; s < subtables.length; s++) {\n            const subtable = subtables[s];\n            const substType = this.getSubstitutionType(lookupTable, subtable);\n            const lookup = this.getLookupMethod(lookupTable, subtable);\n            let substitution;\n            switch (substType) {\n                case '11':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 11, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '12':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 12, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '63':\n                    substitution = lookup(contextParams);\n                    if (Array.isArray(substitution) && substitution.length) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 63, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '41':\n                    substitution = lookup(contextParams);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 41, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '21':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 21, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n            }\n            contextParams = new ContextParams(substitutions, currentIndex);\n            if (Array.isArray(substitution) && !substitution.length) continue;\n            substitution = null;\n        }\n    }\n    return substitutions.length ? substitutions : null;\n};\n\n/**\n * Checks if a font supports a specific features\n * @param {FQuery} query feature query object\n */\nFeatureQuery.prototype.supports = function (query) {\n    if (!query.script) return false;\n    this.getScriptFeatures(query.script);\n    const supportedScript = this.features.hasOwnProperty(query.script);\n    if (!query.tag) return supportedScript;\n    const supportedFeature = (\n        this.features[query.script].some(feature => feature.tag === query.tag)\n    );\n    return supportedScript && supportedFeature;\n};\n\n/**\n * Get lookup table subtables\n * @param {any} lookupTable lookup table\n */\nFeatureQuery.prototype.getLookupSubtables = function (lookupTable) {\n    return lookupTable.subtables || null;\n};\n\n/**\n * Get lookup table by index\n * @param {number} index lookup table index\n */\nFeatureQuery.prototype.getLookupByIndex = function (index) {\n    const lookups = this.font.tables.gsub.lookups;\n    return lookups[index] || null;\n};\n\n/**\n * Get lookup tables for a feature\n * @param {string} feature\n */\nFeatureQuery.prototype.getFeatureLookups = function (feature) {\n    // TODO: memoize\n    return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function getFeature(query) {\n    if (!this.font) return { FAIL: `No font was found`};\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    const scriptFeatures = this.features[query.script];\n    if (!scriptFeatures) return (\n        { FAIL: `No feature for script ${query.script}`}\n    );\n    if (!scriptFeatures.tags[query.tag]) return null;\n    return this.features[query.script].tags[query.tag];\n};\n\nexport default FeatureQuery;\nexport { FeatureQuery, SubstitutionAction };\n","/**\n * Arabic word context checkers\n */\n\nimport { isArabicChar } from '../../../char';\n\nfunction arabicWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: arabicWordStartCheck,\n    endCheck: arabicWordEndCheck\n};\n","/**\n * Arabic sentence context checkers\n */\n\nimport { isArabicChar, isWhiteSpace, isTashkeelArabicChar } from '../../../char';\n\nfunction arabicSentenceStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            const nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) return true;\n            if (nextIsWhitespace) {\n                let arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        c => isArabicChar(c) || isTashkeelArabicChar(c)\n                    )\n                );\n                if (!arabicCharAhead) return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nexport default {\n    startCheck: arabicSentenceStartCheck,\n    endCheck: arabicSentenceEndCheck\n};\n","import { SubstitutionAction } from './featureQuery';\n\n/**\n * Apply single substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply single substitution format 2\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat2(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply chaining context substitution format 3\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction chainingSubstitutionFormat3(action, tokens, index) {\n    action.substitution.forEach((subst, offset) => {\n        const token = tokens[index + offset];\n        token.setState(action.tag, subst);\n    });\n}\n\n/**\n * Apply ligature substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction ligatureSubstitutionFormat1(action, tokens, index) {\n    let token = tokens[index];\n    token.setState(action.tag, action.substitution.ligGlyph);\n    const compsCount = action.substitution.components.length;\n    for (let i = 0; i < compsCount; i++) {\n        token = tokens[index + i + 1];\n        token.setState('deleted', true);\n    }\n}\n\n/**\n * Supported substitutions\n */\nconst SUBSTITUTIONS = {\n    11: singleSubstitutionFormat1,\n    12: singleSubstitutionFormat2,\n    63: chainingSubstitutionFormat3,\n    41: ligatureSubstitutionFormat1\n};\n\n/**\n * Apply substitutions to a list of tokens\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction applySubstitution(action, tokens, index) {\n    if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {\n        SUBSTITUTIONS[action.id](action, tokens, index);\n    }\n}\n\nexport default applySubstitution;\n","/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport { isIsolatedArabicChar, isTashkeelArabicChar } from '../../char';\nimport { SubstitutionAction } from '../featureQuery';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    let backtrack = [].concat(charContextParams.backtrack);\n    for (let i = backtrack.length - 1; i >= 0; i--) {\n        const prevChar = backtrack[i];\n        const isolated = isIsolatedArabicChar(prevChar);\n        const tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) return true;\n        if (isolated) return false;\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) return false;\n    for (let i = 0; i < charContextParams.lookahead.length; i++) {\n        const nextChar = charContextParams.lookahead[i];\n        const tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) return true;\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    const script = 'arab';\n    const tags = this.featuresTags[script];\n    const tokens = this.tokenizer.getRangeTokens(range);\n    if (tokens.length === 1) return;\n    let contextParams = new ContextParams(\n        tokens.map(token => token.getState('glyphIndex')\n    ), 0);\n    const charContextParams = new ContextParams(\n        tokens.map(token => token.char\n    ), 0);\n    tokens.forEach((token, index) => {\n        if (isTashkeelArabicChar(token.char)) return;\n        contextParams.setCurrentIndex(index);\n        charContextParams.setCurrentIndex(index);\n        let CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) CONNECT |= 1;\n        if (willConnectNext(charContextParams)) CONNECT |= 2;\n        let tag;\n        switch (CONNECT) {\n            case 1: (tag = 'fina'); break;\n            case 2: (tag = 'init'); break;\n            case 3: (tag = 'medi'); break;\n        }\n        if (tags.indexOf(tag) === -1) return;\n        let substitutions = this.query.lookupFeature({\n            tag, script, contextParams\n        });\n        if (substitutions instanceof Error) return console.info(substitutions.message);\n        substitutions.forEach((action, index) => {\n            if (action instanceof SubstitutionAction) {\n                applySubstitution(action, tokens, index);\n                contextParams.context[index] = action.substitution;\n            }\n        });\n    });\n}\n\nexport default arabicPresentationForms;\nexport { arabicPresentationForms };\n","/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    const script = 'arab';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'rlig', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default arabicRequiredLigatures;\nexport { arabicRequiredLigatures };\n","/**\n * Latin word context checkers\n */\n\nimport { isLatinChar } from '../../../char';\n\nfunction latinWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? latin first char\n        (prevChar === null && isLatinChar(char)) ||\n        // ? latin char preceded with a non latin char\n        (!isLatinChar(prevChar) && isLatinChar(char))\n    );\n}\n\nfunction latinWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last latin char\n        (nextChar === null) ||\n        // ? next char is not latin\n        (!isLatinChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: latinWordStartCheck,\n    endCheck: latinWordEndCheck\n};\n","/**\n * Apply Latin ligature feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction latinLigature(range) {\n    const script = 'latn';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'liga', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default latinLigature;\n","/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\nimport Tokenizer from './tokenizer';\nimport FeatureQuery from './features/featureQuery';\nimport arabicWordCheck from './features/arab/contextCheck/arabicWord';\nimport arabicSentenceCheck from './features/arab/contextCheck/arabicSentence';\nimport arabicPresentationForms from './features/arab/arabicPresentationForms';\nimport arabicRequiredLigatures from './features/arab/arabicRequiredLigatures';\nimport latinWordCheck from './features/latn/contextCheck/latinWord';\nimport latinLigature from './features/latn/latinLigatures';\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.featuresTags = {};\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    latinWordCheck,\n    arabicWordCheck,\n    arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerContextChecker(checkId) {\n    const check = this.contextChecks[`${checkId}Check`];\n    return this.tokenizer.registerContextChecker(\n        checkId, check.startCheck, check.endCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerContextChecker.call(this, 'latinWord');\n    registerContextChecker.call(this, 'arabicWord');\n    registerContextChecker.call(this, 'arabicSentence');\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    const ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(range => {\n        let rangeTokens = this.tokenizer.getRangeTokens(range);\n        this.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Register supported features tags\n * @param {script} script script tag\n * @param {Array} tags features tags list\n */\nBidi.prototype.registerFeatures = function (script, tags) {\n    const supportedTags = tags.filter(\n        tag => this.query.supports({script, tag})\n    );\n    if (!this.featuresTags.hasOwnProperty(script)) {\n        this.featuresTags[script] = supportedTags;\n    } else {\n        this.featuresTags[script] =\n        this.featuresTags[script].concat(supportedTags);\n    }\n};\n\n/**\n * Apply GSUB features\n * @param {Array} tagsList a list of features tags\n * @param {string} script a script tag\n * @param {Font} font opentype font instance\n */\nBidi.prototype.applyFeatures = function (font, features) {\n    if (!font) throw new Error(\n        'No valid font was provided to apply features'\n    );\n    if (!this.query) this.query = new FeatureQuery(font);\n    for (let f = 0; f < features.length; f++) {\n        const feature = features[f];\n        if (!this.query.supports({script: feature.script})) continue;\n        this.registerFeatures(feature.script, feature.tags);\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicPresentationForms.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('rlig') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicRequiredLigatures.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyLatinLigatures() {\n    const script = 'latn';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('liga') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('latinWord');\n    ranges.forEach(range => {\n        latinLigature.call(this, range);\n    });\n}\n\n/**\n * Check if a context is registered\n * @param {string} contextId context id\n */\nBidi.prototype.checkContextReady = function (contextId) {\n    return !!this.tokenizer.getContext(contextId);\n};\n\n/**\n * Apply features to registered contexts\n */\nBidi.prototype.applyFeaturesToContexts = function () {\n    if (this.checkContextReady('arabicWord')) {\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n    }\n    if (this.checkContextReady('latinWord')) {\n        applyLatinLigatures.call(this);\n    }\n    if (this.checkContextReady('arabicSentence')) {\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        this.applyFeaturesToContexts();\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    let indexes = [];\n    for (let i = 0; i < this.tokenizer.tokens.length; i++) {\n        const token = this.tokenizer.tokens[i];\n        if (token.state.deleted) continue;\n        const index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\nexport default Bidi;\n","// The Font object\n\nimport Path from './path';\nimport sfnt from './tables/sfnt';\nimport { DefaultEncoding } from './encoding';\nimport glyphset from './glyphset';\nimport Position from './position';\nimport Substitution from './substitution';\nimport { isBrowser, checkArgument, arrayBufferToNodeBuffer } from './util';\nimport HintingTrueType from './hintingtt';\nimport Bidi from './bidi';\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n    options.tables = options.tables || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        checkArgument(options.descender <= 0, 'When creating a new Font object, negative descender value is required.');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            // postScriptName may not contain any whitespace\n            postScriptName: {en: options.postScriptName || (options.familyName + options.styleName).replace(/\\s/g, '')},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = Object.assign(options.tables, {\n            os2: Object.assign({\n                usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,\n                usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,\n                fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR,\n            }, options.tables.os2)\n        });\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    // needed for low memory mode only.\n    this._push = null;\n    this._hmtxTableData = {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function() {\n            if (this._hinting) return this._hinting;\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new HintingTrueType(this));\n            }\n        }\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function(c) {\n    const glyphIndex = this.charToGlyphIndex(c);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Update features\n * @param {any} options features options\n */\nFont.prototype.updateFeatures = function (options) {\n    // TODO: update all features options not only 'latn'.\n    return this.defaultRenderOptions.features.map(feature => {\n        if (feature.script === 'latn') {\n            return {\n                script: 'latn',\n                tags: feature.tags.filter(tag => options[tag])\n            };\n        } else {\n            return feature;\n        }\n    });\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function(s, options) {\n\n    const bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    const charToGlyphIndexMod = token => this.charToGlyphIndex(token.char);\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    // roll-back to default features\n    let features = options ?\n    this.updateFeatures(options.features) :\n    this.defaultRenderOptions.features;\n\n    bidi.applyFeatures(this, features);\n\n    const indexes = bidi.getTextGlyphs(s);\n\n    let length = indexes.length;\n\n    // convert glyph indexes to glyph objects\n    const glyphs = new Array(length);\n    const notdef = this.glyphs.get(0);\n    for (let i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\n/**\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.nameToGlyph = function(name) {\n    const glyphIndex = this.nameToGlyphIndex(name);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * @param  {Number}\n * @return {String}\n */\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    const gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(gposKerning, leftGlyph, rightGlyph);\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: [\n        /**\n         * these 4 features are required to render Arabic text properly\n         * and shouldn't be turned off when rendering arabic text.\n         */\n        { script: 'arab', tags: ['init', 'medi', 'fina', 'rlig'] },\n        { script: 'latn', tags: ['liga', 'rlig'] }\n    ]\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = Object.assign({}, this.defaultRenderOptions, options);\n    const fontScale = 1 / this.unitsPerEm * fontSize;\n    const glyphs = this.stringToGlyphs(text, options);\n    let kerningLookups;\n    if (options.kerning) {\n        const script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(script, options.language);\n    }\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            const kerningValue = kerningLookups ?\n                  this.position.getKerningValue(kerningLookups, glyph.index, glyphs[i + 1].index) :\n                  this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    const fullPath = new Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    const glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function(text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function() {});\n};\n\n/**\n * Draw the text on the given drawing context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n */\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of all glyphs in the text.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * Draw lines indicating important font measurements for all glyphs in the text.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * @param  {string}\n * @return {string}\n */\nFont.prototype.getEnglishName = function(name) {\n    const translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n/**\n * Validate\n */\nFont.prototype.validate = function() {\n    const warnings = [];\n    const _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        const englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n/**\n * Convert the font object to a SFNT data structure.\n * This structure contains all the necessary tables and metadata to create a binary OTF file.\n * @return {opentype.Table}\n */\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n/**\n * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.\n */\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n/**\n * Converts a `opentype.Font` into an `ArrayBuffer`\n * @return {ArrayBuffer}\n */\nFont.prototype.toArrayBuffer = function() {\n    const sfntTable = this.toTables();\n    const bytes = sfntTable.encode();\n    const buffer = new ArrayBuffer(bytes.length);\n    const intArray = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n/**\n * Initiate a download of the OpenType font.\n */\nFont.prototype.download = function(fileName) {\n    const familyName = this.getEnglishName('fontFamily');\n    const styleName = this.getEnglishName('fontSubfamily');\n    fileName = fileName || familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    const arrayBuffer = this.toArrayBuffer();\n\n    if (isBrowser()) {\n        window.URL = window.URL || window.webkitURL;\n\n        if (window.URL) {\n            const dataView = new DataView(arrayBuffer);\n            const blob = new Blob([dataView], {type: 'font/opentype'});\n\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.download = fileName;\n\n            let event = document.createEvent('MouseEvents');\n            event.initEvent('click', true, false);\n            link.dispatchEvent(event);\n        } else {\n            console.warn('Font file could not be downloaded. Try using a different browser.');\n        }\n    } else {\n        const fs = require('fs');\n        const buffer = arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC:              0x001, //1\n    UNDERSCORE:          0x002, //2\n    NEGATIVE:            0x004, //4\n    OUTLINED:            0x008, //8\n    STRIKEOUT:           0x010, //16\n    BOLD:                0x020, //32\n    REGULAR:             0x040, //64\n    USER_TYPO_METRICS:   0x080, //128\n    WWS:                 0x100, //256\n    OBLIQUE:             0x200  //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK:    900\n};\n\nexport default Font;\n","// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(10);         // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord()\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': GPOS lookup type 1 format must be 1 or 2.');\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    const start = this.offset + this.relativeOffset;\n    const posFormat = this.parseUShort();\n    check.assert(posFormat === 1 || posFormat === 2, '0x' + start.toString(16) + ': GPOS lookup type 2 format must be 1 or 2.');\n    const coverage = this.parsePointer(Parser.coverage);\n    const valueFormat1 = this.parseUShort();\n    const valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(Parser.pointer(Parser.list(function() {\n                return {        // pairValueRecord\n                    secondGlyph: this.parseUShort(),\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            })))\n        };\n    } else if (posFormat === 2) {\n        const classDef1 = this.parsePointer(Parser.classDef);\n        const classDef2 = this.parsePointer(Parser.classDef);\n        const class1Count = this.parseUShort();\n        const class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(class1Count, Parser.list(class2Count, function() {\n                return {\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            }))\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() { return { error: 'GPOS Lookup 3 not supported' }; };\nsubtableParsers[4] = function parseLookup4() { return { error: 'GPOS Lookup 4 not supported' }; };\nsubtableParsers[5] = function parseLookup5() { return { error: 'GPOS Lookup 5 not supported' }; };\nsubtableParsers[6] = function parseLookup6() { return { error: 'GPOS Lookup 6 not supported' }; };\nsubtableParsers[7] = function parseLookup7() { return { error: 'GPOS Lookup 7 not supported' }; };\nsubtableParsers[8] = function parseLookup8() { return { error: 'GPOS Lookup 8 not supported' }; };\nsubtableParsers[9] = function parseLookup9() { return { error: 'GPOS Lookup 9 not supported' }; };\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GPOS table version ' + tableVersion);\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GPOS Writing //////////////////////////////////////////////\n// NOT SUPPORTED\nconst subtableMakers = new Array(10);\n\nfunction makeGposTable(gpos) {\n    return new table.Table('GPOS', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gpos.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gpos.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gpos.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGposTable, make: makeGposTable };\n","// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\nfunction parseWindowsKernTable(p) {\n    const pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    const subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    const nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (let i = 0; i < nPairs; i += 1) {\n        const leftIndex = p.parseUShort();\n        const rightIndex = p.parseUShort();\n        const value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    const pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    const nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    const coverage = p.parseUShort();\n    const subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        const nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (let i = 0; i < nPairs; i += 1) {\n            const leftIndex = p.parseUShort();\n            const rightIndex = p.parseUShort();\n            const value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nexport default { parse: parseKernTable };\n","// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\nimport parse from '../parse';\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    const p = new parse.Parser(data, start);\n    const parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    const glyphOffsets = [];\n    for (let i = 0; i < numGlyphs + 1; i += 1) {\n        let glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexport default { parse: parseLocaTable };\n","/**\n * @module Typography\n * @submodule Loading & Displaying\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\nimport * as opentype from 'opentype.js';\n\nimport '../core/error_helpers';\n\n/**\n * Loads an opentype font file (.otf, .ttf) from a file or a URL,\n * and returns a PFont Object. This method is asynchronous,\n * meaning it may not finish before the next line in your sketch\n * is executed.\n * <br><br>\n * The path to the font should be relative to the HTML file\n * that links in your sketch. Loading fonts from a URL or other\n * remote location may be blocked due to your browser's built-in\n * security.\n *\n * @method loadFont\n * @param  {String}        path       name of the file or url to load\n * @param  {Function}      [callback] function to be executed after\n *                                    <a href=\"#/p5/loadFont\">loadFont()</a> completes\n * @param  {Function}      [onError]  function to be executed if\n *                                    an error occurs\n * @return {p5.Font}                  <a href=\"#/p5.Font\">p5.Font</a> object\n * @example\n *\n * <p>Calling loadFont() inside <a href=\"#/p5/preload\">preload()</a> guarantees that the load\n * operation will have completed before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.</p>\n *\n * <div><code>\n * let myFont;\n * function preload() {\n *   myFont = loadFont('assets/inconsolata.otf');\n * }\n *\n * function setup() {\n *   fill('#ED225D');\n *   textFont(myFont);\n *   textSize(36);\n *   text('p5*js', 10, 50);\n * }\n * </code></div>\n *\n * Outside of <a href=\"#/p5/preload\">preload()</a>, you may supply a callback function to handle the\n * object:\n *\n * <div><code>\n * function setup() {\n *   loadFont('assets/inconsolata.otf', drawText);\n * }\n *\n * function drawText(font) {\n *   fill('#ED225D');\n *   textFont(font, 36);\n *   text('p5*js', 10, 50);\n * }\n * </code></div>\n *\n * <p>You can also use the font filename string (without the file extension) to style other HTML\n * elements.</p>\n *\n * <div><code>\n * function preload() {\n *   loadFont('assets/inconsolata.otf');\n * }\n *\n * function setup() {\n *   let myDiv = createDiv('hello there');\n *   myDiv.style('font-family', 'Inconsolata');\n * }\n * </code></div>\n *\n * @alt\n * p5*js in p5's theme dark pink\n * p5*js in p5's theme dark pink\n *\n */\np5.prototype.loadFont = function(path, onSuccess, onError) {\n  p5._validateParameters('loadFont', arguments);\n  const p5Font = new p5.Font(this);\n\n  const self = this;\n  opentype.load(path, (err, font) => {\n    if (err) {\n      p5._friendlyFileLoadError(4, path);\n      if (typeof onError !== 'undefined') {\n        return onError(err);\n      }\n      console.error(err, path);\n      return;\n    }\n\n    p5Font.font = font;\n\n    if (typeof onSuccess !== 'undefined') {\n      onSuccess(p5Font);\n    }\n\n    self._decrementPreload();\n\n    // check that we have an acceptable font type\n    const validFontTypes = ['ttf', 'otf', 'woff', 'woff2'];\n\n    const fileNoPath = path\n      .split('\\\\')\n      .pop()\n      .split('/')\n      .pop();\n\n    const lastDotIdx = fileNoPath.lastIndexOf('.');\n    let fontFamily;\n    let newStyle;\n    const fileExt = lastDotIdx < 1 ? null : fileNoPath.substr(lastDotIdx + 1);\n\n    // if so, add it to the DOM (name-only) for use with DOM module\n    if (validFontTypes.includes(fileExt)) {\n      fontFamily = fileNoPath.substr(0, lastDotIdx);\n      newStyle = document.createElement('style');\n      newStyle.appendChild(\n        document.createTextNode(\n          `\\n@font-face {\\nfont-family: ${fontFamily};\\nsrc: url(${path});\\n}\\n`\n        )\n      );\n      document.head.appendChild(newStyle);\n    }\n  });\n\n  return p5Font;\n};\n\n/**\n * Draws text to the screen. Displays the information specified in the first\n * parameter on the screen in the position specified by the additional\n * parameters. A default font will be used unless a font is set with the\n * <a href=\"#/p5/textFont\">textFont()</a> function and a default size will be used unless a font is set\n * with <a href=\"#/p5/textSize\">textSize()</a>. Change the color of the text with the <a href=\"#/p5/fill\">fill()</a> function.\n * Change the outline of the text with the <a href=\"#/p5/stroke\">stroke()</a> and <a href=\"#/p5/strokeWeight\">strokeWeight()</a>\n * functions.\n * <br><br>\n * The text displays in relation to the <a href=\"#/p5/textAlign\">textAlign()</a> function, which gives the\n * option to draw to the left, right, and center of the coordinates.\n * <br><br>\n * The x2 and y2 parameters define a rectangular area to display within and\n * may only be used with string data. When these parameters are specified,\n * they are interpreted based on the current <a href=\"#/p5/rectMode\">rectMode()</a> setting. Text that\n * does not fit completely within the rectangle specified will not be drawn\n * to the screen. If x2 and y2 are not specified, the baseline alignment is the\n * default, which means that the text will be drawn upwards from x and y.\n * <br><br>\n * <b>WEBGL</b>: Only opentype/truetype fonts are supported. You must load a font using the\n * <a href=\"#/p5/loadFont\">loadFont()</a> method (see the example above).\n * <a href=\"#/p5/stroke\">stroke()</a> currently has no effect in webgl mode.\n *\n * @method text\n * @param {String|Object|Array|Number|Boolean} str the alphanumeric\n *                                             symbols to be displayed\n * @param {Number} x   x-coordinate of text\n * @param {Number} y   y-coordinate of text\n * @param {Number} [x2]  by default, the width of the text box,\n *                     see <a href=\"#/p5/rectMode\">rectMode()</a> for more info\n * @param {Number} [y2]  by default, the height of the text box,\n *                     see <a href=\"#/p5/rectMode\">rectMode()</a> for more info\n * @chainable\n * @example\n * <div>\n * <code>\n * textSize(32);\n * text('word', 10, 30);\n * fill(0, 102, 153);\n * text('word', 10, 60);\n * fill(0, 102, 153, 51);\n * text('word', 10, 90);\n * </code>\n * </div>\n * <div>\n * <code>\n * let s = 'The quick brown fox jumped over the lazy dog.';\n * fill(50);\n * text(s, 10, 10, 70, 80); // Text wraps within text box\n * </code>\n * </div>\n *\n * <div modernizr='webgl'>\n * <code>\n * let inconsolata;\n * function preload() {\n *   inconsolata = loadFont('assets/inconsolata.otf');\n * }\n * function setup() {\n *   createCanvas(100, 100, WEBGL);\n *   textFont(inconsolata);\n *   textSize(width / 3);\n *   textAlign(CENTER, CENTER);\n * }\n * function draw() {\n *   background(0);\n *   let time = millis();\n *   rotateX(time / 1000);\n *   rotateZ(time / 1234);\n *   text('p5.js', 0, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n *'word' displayed 3 times going from black, blue to translucent blue\n * The quick brown fox jumped over the lazy dog.\n * the text 'p5.js' spinning in 3d\n *\n */\np5.prototype.text = function(str, x, y, maxWidth, maxHeight) {\n  p5._validateParameters('text', arguments);\n  return !(this._renderer._doFill || this._renderer._doStroke)\n    ? this\n    : this._renderer.text(...arguments);\n};\n\n/**\n * Sets the current font that will be drawn with the <a href=\"#/p5/text\">text()</a> function.\n * <br><br>\n * <b>WEBGL</b>: Only fonts loaded via <a href=\"#/p5/loadFont\">loadFont()</a> are supported.\n *\n * @method textFont\n * @return {Object} the current font\n *\n * @example\n * <div>\n * <code>\n * fill(0);\n * textSize(12);\n * textFont('Georgia');\n * text('Georgia', 12, 30);\n * textFont('Helvetica');\n * text('Helvetica', 12, 60);\n * </code>\n * </div>\n * <div>\n * <code>\n * let fontRegular, fontItalic, fontBold;\n * function preload() {\n *   fontRegular = loadFont('assets/Regular.otf');\n *   fontItalic = loadFont('assets/Italic.ttf');\n *   fontBold = loadFont('assets/Bold.ttf');\n * }\n * function setup() {\n *   background(210);\n *   fill(0)\n    .strokeWeight(0)\n    .textSize(10);\n *   textFont(fontRegular);\n *   text('Font Style Normal', 10, 30);\n *   textFont(fontItalic);\n *   text('Font Style Italic', 10, 50);\n *   textFont(fontBold);\n *   text('Font Style Bold', 10, 70);\n * }\n * </code>\n * </div>\n *\n * @alt\n *words Font Style Normal displayed normally, Italic in italic and bold in bold\n */\n/**\n * @method textFont\n * @param {Object|String} font a font loaded via <a href=\"#/p5/loadFont\">loadFont()</a>, or a String\n * representing a <a href=\"https://mzl.la/2dOw8WD\">web safe font</a> (a font\n * that is generally available across all systems)\n * @param {Number} [size] the font size to use\n * @chainable\n */\np5.prototype.textFont = function(theFont, theSize) {\n  p5._validateParameters('textFont', arguments);\n  if (arguments.length) {\n    if (!theFont) {\n      throw new Error('null font passed to textFont');\n    }\n\n    this._renderer._setProperty('_textFont', theFont);\n\n    if (theSize) {\n      this._renderer._setProperty('_textSize', theSize);\n      this._renderer._setProperty(\n        '_textLeading',\n        theSize * constants._DEFAULT_LEADMULT\n      );\n    }\n\n    return this._renderer._applyTextProperties();\n  }\n\n  return this._renderer._textFont;\n};\n\nexport default p5;\n","/**\n * This module defines the <a href=\"#/p5.Font\">p5.Font</a> class and functions for\n * drawing text to the display canvas.\n * @module Typography\n * @submodule Loading & Displaying\n * @requires core\n * @requires constants\n */\n\nimport p5 from '../core/main';\nimport * as constants from '../core/constants';\n\n/**\n * Base class for font handling\n * @class p5.Font\n * @constructor\n * @param {p5} [pInst] pointer to p5 instance\n */\np5.Font = function(p) {\n  this.parent = p;\n\n  this.cache = {};\n\n  /**\n   * Underlying opentype font implementation\n   * @property font\n   */\n  this.font = undefined;\n};\n\n/**\n * Returns a tight bounding box for the given text string using this\n * font (currently only supports single lines)\n *\n * @method textBounds\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Number} [fontSize] font size to use (optional) Default is 12.\n * @param  {Object} [options] opentype options (optional)\n *                            opentype fonts contains alignment and baseline options.\n *                            Default is 'LEFT' and 'alphabetic'\n *\n *\n * @return {Object}          a rectangle object with properties: x, y, w, h\n *\n * @example\n * <div>\n * <code>\n * let font;\n * let textString = 'Lorem ipsum dolor sit amet.';\n * function preload() {\n *   font = loadFont('./assets/Regular.otf');\n * }\n * function setup() {\n *   background(210);\n *\n *   let bbox = font.textBounds(textString, 10, 30, 12);\n *   fill(255);\n *   stroke(0);\n *   rect(bbox.x, bbox.y, bbox.w, bbox.h);\n *   fill(0);\n *   noStroke();\n *\n *   textFont(font);\n *   textSize(12);\n *   text(textString, 10, 30);\n * }\n * </code>\n * </div>\n *\n * @alt\n *words Lorem ipsum dol go off canvas and contained by white bounding box\n *\n */\np5.Font.prototype.textBounds = function(str, x = 0, y = 0, fontSize, opts) {\n  // Check cache for existing bounds. Take into consideration the text alignment\n  // settings. Default alignment should match opentype's origin: left-aligned &\n  // alphabetic baseline.\n  const p = (opts && opts.renderer && opts.renderer._pInst) || this.parent;\n\n  const ctx = p._renderer.drawingContext;\n  const alignment = ctx.textAlign || constants.LEFT;\n  const baseline = ctx.textBaseline || constants.BASELINE;\n  const cacheResults = false;\n  let result;\n  let key;\n\n  fontSize = fontSize || p._renderer._textSize;\n\n  // NOTE: cache disabled for now pending further discussion of #3436\n  if (cacheResults) {\n    key = cacheKey('textBounds', str, x, y, fontSize, alignment, baseline);\n    result = this.cache[key];\n  }\n\n  if (!result) {\n    let minX;\n    let minY;\n    let maxX;\n    let maxY;\n    let pos;\n    const xCoords = [];\n    const yCoords = [];\n    const scale = this._scale(fontSize);\n\n    this.font.forEachGlyph(\n      str,\n      x,\n      y,\n      fontSize,\n      opts,\n      (glyph, gX, gY, gFontSize) => {\n        const gm = glyph.getMetrics();\n        xCoords.push(gX + gm.xMin * scale);\n        xCoords.push(gX + gm.xMax * scale);\n        yCoords.push(gY + -gm.yMin * scale);\n        yCoords.push(gY + -gm.yMax * scale);\n      }\n    );\n\n    minX = Math.min.apply(null, xCoords);\n    minY = Math.min.apply(null, yCoords);\n    maxX = Math.max.apply(null, xCoords);\n    maxY = Math.max.apply(null, yCoords);\n\n    result = {\n      x: minX,\n      y: minY,\n      h: maxY - minY,\n      w: maxX - minX,\n      advance: minX - x\n    };\n\n    // Bounds are now calculated, so shift the x & y to match alignment settings\n    pos = this._handleAlignment(\n      p._renderer,\n      str,\n      result.x,\n      result.y,\n      result.w + result.advance\n    );\n\n    result.x = pos.x;\n    result.y = pos.y;\n\n    if (cacheResults) {\n      this.cache[key] = result;\n    }\n  }\n\n  return result;\n};\n\n/**\n * Computes an array of points following the path for specified text\n *\n * @method textToPoints\n * @param  {String} txt     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Number} fontSize font size to use (optional)\n * @param  {Object} [options] an (optional) object that can contain:\n *\n * <br>sampleFactor - the ratio of path-length to number of samples\n * (default=.1); higher values yield more points and are therefore\n * more precise\n *\n * <br>simplifyThreshold - if set to a non-zero value, collinear points will be\n * be removed from the polygon; the value represents the threshold angle to use\n * when determining whether two edges are collinear\n *\n * @return {Array}  an array of points, each with x, y, alpha (the path angle)\n * @example\n * <div>\n * <code>\n * let font;\n * function preload() {\n *   font = loadFont('assets/inconsolata.otf');\n * }\n *\n * let points;\n * let bounds;\n * function setup() {\n *   createCanvas(100, 100);\n *   stroke(0);\n *   fill(255, 104, 204);\n *\n *   points = font.textToPoints('p5', 0, 0, 10, {\n *     sampleFactor: 5,\n *     simplifyThreshold: 0\n *   });\n *   bounds = font.textBounds(' p5 ', 0, 0, 10);\n * }\n *\n * function draw() {\n *   background(255);\n *   beginShape();\n *   translate(-bounds.x * width / bounds.w, -bounds.y * height / bounds.h);\n *   for (let i = 0; i < points.length; i++) {\n *     let p = points[i];\n *     vertex(\n *       p.x * width / bounds.w +\n *         sin(20 * p.y / bounds.h + millis() / 1000) * width / 30,\n *       p.y * height / bounds.h\n *     );\n *   }\n *   endShape(CLOSE);\n * }\n * </code>\n * </div>\n *\n */\np5.Font.prototype.textToPoints = function(txt, x, y, fontSize, options) {\n  let xoff = 0;\n  const result = [];\n  const glyphs = this._getGlyphs(txt);\n\n  function isSpace(i) {\n    return (\n      (glyphs[i].name && glyphs[i].name === 'space') ||\n      (txt.length === glyphs.length && txt[i] === ' ') ||\n      (glyphs[i].index && glyphs[i].index === 3)\n    );\n  }\n\n  fontSize = fontSize || this.parent._renderer._textSize;\n\n  for (let i = 0; i < glyphs.length; i++) {\n    if (!isSpace(i)) {\n      // fix to #1817, #2069\n\n      const gpath = glyphs[i].getPath(x, y, fontSize),\n        paths = splitPaths(gpath.commands);\n\n      for (let j = 0; j < paths.length; j++) {\n        const pts = pathToPoints(paths[j], options);\n\n        for (let k = 0; k < pts.length; k++) {\n          pts[k].x += xoff;\n          result.push(pts[k]);\n        }\n      }\n    }\n\n    xoff += glyphs[i].advanceWidth * this._scale(fontSize);\n  }\n\n  return result;\n};\n\n// ----------------------------- End API ------------------------------\n\n/**\n * Returns the set of opentype glyphs for the supplied string.\n *\n * Note that there is not a strict one-to-one mapping between characters\n * and glyphs, so the list of returned glyphs can be larger or smaller\n *  than the length of the given string.\n *\n * @private\n * @param  {String} str the string to be converted\n * @return {Array}     the opentype glyphs\n */\np5.Font.prototype._getGlyphs = function(str) {\n  return this.font.stringToGlyphs(str);\n};\n\n/**\n * Returns an opentype path for the supplied string and position.\n *\n * @private\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional)\n * @return {Object}     the opentype path\n */\np5.Font.prototype._getPath = function(line, x, y, options) {\n  const p =\n      (options && options.renderer && options.renderer._pInst) || this.parent,\n    renderer = p._renderer,\n    pos = this._handleAlignment(renderer, line, x, y);\n\n  return this.font.getPath(line, pos.x, pos.y, renderer._textSize, options);\n};\n\n/*\n * Creates an SVG-formatted path-data string\n * (See http://www.w3.org/TR/SVG/paths.html#PathData)\n * from the given opentype path or string/position\n *\n * @param  {Object} path    an opentype path, OR the following:\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional), set options.decimals\n * to set the decimal precision of the path-data\n *\n * @return {Object}     this p5.Font object\n */\np5.Font.prototype._getPathData = function(line, x, y, options) {\n  let decimals = 3;\n\n  // create path from string/position\n  if (typeof line === 'string' && arguments.length > 2) {\n    line = this._getPath(line, x, y, options);\n  } else if (typeof x === 'object') {\n    // handle options specified in 2nd arg\n    options = x;\n  }\n\n  // handle svg arguments\n  if (options && typeof options.decimals === 'number') {\n    decimals = options.decimals;\n  }\n\n  return line.toPathData(decimals);\n};\n\n/*\n * Creates an SVG <path> element, as a string,\n * from the given opentype path or string/position\n *\n * @param  {Object} path    an opentype path, OR the following:\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional), set options.decimals\n * to set the decimal precision of the path-data in the <path> element,\n *  options.fill to set the fill color for the <path> element,\n *  options.stroke to set the stroke color for the <path> element,\n *  options.strokeWidth to set the strokeWidth for the <path> element.\n *\n * @return {Object}     this p5.Font object\n */\np5.Font.prototype._getSVG = function(line, x, y, options) {\n  let decimals = 3;\n\n  // create path from string/position\n  if (typeof line === 'string' && arguments.length > 2) {\n    line = this._getPath(line, x, y, options);\n  } else if (typeof x === 'object') {\n    // handle options specified in 2nd arg\n    options = x;\n  }\n\n  // handle svg arguments\n  if (options) {\n    if (typeof options.decimals === 'number') {\n      decimals = options.decimals;\n    }\n    if (typeof options.strokeWidth === 'number') {\n      line.strokeWidth = options.strokeWidth;\n    }\n    if (typeof options.fill !== 'undefined') {\n      line.fill = options.fill;\n    }\n    if (typeof options.stroke !== 'undefined') {\n      line.stroke = options.stroke;\n    }\n  }\n\n  return line.toSVG(decimals);\n};\n\n/*\n * Renders an opentype path or string/position\n * to the current graphics context\n *\n * @param  {Object} path    an opentype path, OR the following:\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional)\n *\n * @return {p5.Font}     this p5.Font object\n */\np5.Font.prototype._renderPath = function(line, x, y, options) {\n  let pdata;\n  const pg = (options && options.renderer) || this.parent._renderer;\n  const ctx = pg.drawingContext;\n\n  if (typeof line === 'object' && line.commands) {\n    pdata = line.commands;\n  } else {\n    //pos = handleAlignment(p, ctx, line, x, y);\n    pdata = this._getPath(line, x, y, options).commands;\n  }\n\n  ctx.beginPath();\n\n  for (const cmd of pdata) {\n    if (cmd.type === 'M') {\n      ctx.moveTo(cmd.x, cmd.y);\n    } else if (cmd.type === 'L') {\n      ctx.lineTo(cmd.x, cmd.y);\n    } else if (cmd.type === 'C') {\n      ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n    } else if (cmd.type === 'Q') {\n      ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n    } else if (cmd.type === 'Z') {\n      ctx.closePath();\n    }\n  }\n\n  // only draw stroke if manually set by user\n  if (pg._doStroke && pg._strokeSet) {\n    ctx.stroke();\n  }\n\n  if (pg._doFill) {\n    // if fill hasn't been set by user, use default-text-fill\n    if (!pg._fillSet) {\n      pg._setFill(constants._DEFAULT_TEXT_FILL);\n    }\n    ctx.fill();\n  }\n\n  return this;\n};\n\np5.Font.prototype._textWidth = function(str, fontSize) {\n  return this.font.getAdvanceWidth(str, fontSize);\n};\n\np5.Font.prototype._textAscent = function(fontSize) {\n  return this.font.ascender * this._scale(fontSize);\n};\n\np5.Font.prototype._textDescent = function(fontSize) {\n  return -this.font.descender * this._scale(fontSize);\n};\n\np5.Font.prototype._scale = function(fontSize) {\n  return (\n    1 / this.font.unitsPerEm * (fontSize || this.parent._renderer._textSize)\n  );\n};\n\np5.Font.prototype._handleAlignment = function(renderer, line, x, y, textWidth) {\n  const fontSize = renderer._textSize;\n\n  if (typeof textWidth === 'undefined') {\n    textWidth = this._textWidth(line, fontSize);\n  }\n\n  switch (renderer._textAlign) {\n    case constants.CENTER:\n      x -= textWidth / 2;\n      break;\n    case constants.RIGHT:\n      x -= textWidth;\n      break;\n  }\n\n  switch (renderer._textBaseline) {\n    case constants.TOP:\n      y += this._textAscent(fontSize);\n      break;\n    case constants.CENTER:\n      y += this._textAscent(fontSize) / 2;\n      break;\n    case constants.BOTTOM:\n      y -= this._textDescent(fontSize);\n      break;\n  }\n\n  return { x, y };\n};\n\n// path-utils\n\nfunction pathToPoints(cmds, options) {\n  const opts = parseOpts(options, {\n    sampleFactor: 0.1,\n    simplifyThreshold: 0\n  });\n\n  const // total-length\n    len = pointAtLength(cmds, 0, 1),\n    t = len / (len * opts.sampleFactor),\n    pts = [];\n\n  for (let i = 0; i < len; i += t) {\n    pts.push(pointAtLength(cmds, i));\n  }\n\n  if (opts.simplifyThreshold) {\n    simplify(pts, opts.simplifyThreshold);\n  }\n\n  return pts;\n}\n\nfunction simplify(pts, angle = 0) {\n  let num = 0;\n  for (let i = pts.length - 1; pts.length > 3 && i >= 0; --i) {\n    if (collinear(at(pts, i - 1), at(pts, i), at(pts, i + 1), angle)) {\n      // Remove the middle point\n      pts.splice(i % pts.length, 1);\n      num++;\n    }\n  }\n  return num;\n}\n\nfunction splitPaths(cmds) {\n  const paths = [];\n  let current;\n  for (let i = 0; i < cmds.length; i++) {\n    if (cmds[i].type === 'M') {\n      if (current) {\n        paths.push(current);\n      }\n      current = [];\n    }\n    current.push(cmdToArr(cmds[i]));\n  }\n  paths.push(current);\n\n  return paths;\n}\n\nfunction cmdToArr(cmd) {\n  const arr = [cmd.type];\n  if (cmd.type === 'M' || cmd.type === 'L') {\n    // moveto or lineto\n    arr.push(cmd.x, cmd.y);\n  } else if (cmd.type === 'C') {\n    arr.push(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n  } else if (cmd.type === 'Q') {\n    arr.push(cmd.x1, cmd.y1, cmd.x, cmd.y);\n  }\n  // else if (cmd.type === 'Z') { /* no-op */ }\n  return arr;\n}\n\nfunction parseOpts(options, defaults) {\n  if (typeof options !== 'object') {\n    options = defaults;\n  } else {\n    for (const key in defaults) {\n      if (typeof options[key] === 'undefined') {\n        options[key] = defaults[key];\n      }\n    }\n  }\n  return options;\n}\n\n//////////////////////// Helpers ////////////////////////////\n\nfunction at(v, i) {\n  const s = v.length;\n  return v[i < 0 ? i % s + s : i % s];\n}\n\nfunction collinear(a, b, c, thresholdAngle) {\n  if (!thresholdAngle) {\n    return areaTriangle(a, b, c) === 0;\n  }\n\n  if (typeof collinear.tmpPoint1 === 'undefined') {\n    collinear.tmpPoint1 = [];\n    collinear.tmpPoint2 = [];\n  }\n\n  const ab = collinear.tmpPoint1,\n    bc = collinear.tmpPoint2;\n  ab.x = b.x - a.x;\n  ab.y = b.y - a.y;\n  bc.x = c.x - b.x;\n  bc.y = c.y - b.y;\n\n  const dot = ab.x * bc.x + ab.y * bc.y,\n    magA = Math.sqrt(ab.x * ab.x + ab.y * ab.y),\n    magB = Math.sqrt(bc.x * bc.x + bc.y * bc.y),\n    angle = Math.acos(dot / (magA * magB));\n\n  return angle < thresholdAngle;\n}\n\nfunction areaTriangle(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n}\n\n// Portions of below code copyright 2008 Dmitry Baranovskiy (via MIT license)\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  const t1 = 1 - t;\n  const t13 = Math.pow(t1, 3);\n  const t12 = Math.pow(t1, 2);\n  const t2 = t * t;\n  const t3 = t2 * t;\n  const x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  const y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  const mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n  const my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n  const nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n  const ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n  const ax = t1 * p1x + t * c1x;\n  const ay = t1 * p1y + t * c1y;\n  const cx = t1 * c2x + t * p2x;\n  const cy = t1 * c2y + t * p2y;\n  let alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI;\n\n  if (mx > nx || my < ny) {\n    alpha += 180;\n  }\n\n  return {\n    x,\n    y,\n    m: { x: mx, y: my },\n    n: { x: nx, y: ny },\n    start: { x: ax, y: ay },\n    end: { x: cx, y: cy },\n    alpha\n  };\n}\n\nfunction getPointAtSegmentLength(\n  p1x,\n  p1y,\n  c1x,\n  c1y,\n  c2x,\n  c2y,\n  p2x,\n  p2y,\n  length\n) {\n  return length == null\n    ? bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y)\n    : findDotsAtSegment(\n        p1x,\n        p1y,\n        c1x,\n        c1y,\n        c2x,\n        c2y,\n        p2x,\n        p2y,\n        getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length)\n      );\n}\n\nfunction pointAtLength(path, length, istotal) {\n  path = path2curve(path);\n  let x;\n  let y;\n  let p;\n  let l;\n  let sp = '';\n  const subpaths = {};\n  let point;\n  let len = 0;\n  for (let i = 0, ii = path.length; i < ii; i++) {\n    p = path[i];\n    if (p[0] === 'M') {\n      x = +p[1];\n      y = +p[2];\n    } else {\n      l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n      if (len + l > length) {\n        if (!istotal) {\n          point = getPointAtSegmentLength(\n            x,\n            y,\n            p[1],\n            p[2],\n            p[3],\n            p[4],\n            p[5],\n            p[6],\n            length - len\n          );\n          return { x: point.x, y: point.y, alpha: point.alpha };\n        }\n      }\n      len += l;\n      x = +p[5];\n      y = +p[6];\n    }\n    sp += p.shift() + p;\n  }\n  subpaths.end = sp;\n\n  point = istotal\n    ? len\n    : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\n  if (point.alpha) {\n    point = { x: point.x, y: point.y, alpha: point.alpha };\n  }\n\n  return point;\n}\n\nfunction pathToAbsolute(pathArray) {\n  let res = [],\n    x = 0,\n    y = 0,\n    mx = 0,\n    my = 0,\n    start = 0;\n  if (!pathArray) {\n    // console.warn(\"Unexpected state: undefined pathArray\"); // shouldn't happen\n    return res;\n  }\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  let dots;\n\n  const crz =\n    pathArray.length === 3 &&\n    pathArray[0][0] === 'M' &&\n    pathArray[1][0].toUpperCase() === 'R' &&\n    pathArray[2][0].toUpperCase() === 'Z';\n\n  for (let r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push((r = []));\n    pa = pathArray[i];\n    if (pa[0] !== String.prototype.toUpperCase.call(pa[0])) {\n      r[0] = String.prototype.toUpperCase.call(pa[0]);\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +(pa[6] + x);\n          r[7] = +(pa[7] + y);\n          break;\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n          for (let j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n          break;\n        default:\n          for (let j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + (j % 2 ? x : y);\n          }\n      }\n    } else if (pa[0] === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else {\n      for (let k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    switch (r[0]) {\n      case 'Z':\n        x = mx;\n        y = my;\n        break;\n      case 'H':\n        x = r[1];\n        break;\n      case 'V':\n        y = r[1];\n        break;\n      case 'M':\n        mx = r[r.length - 2];\n        my = r[r.length - 1];\n        break;\n      default:\n        x = r[r.length - 2];\n        y = r[r.length - 1];\n    }\n  }\n  return res;\n}\n\nfunction path2curve(path, path2) {\n  const p = pathToAbsolute(path),\n    p2 = path2 && pathToAbsolute(path2);\n  const attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };\n  const attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };\n  const pcoms1 = []; // path commands of original path p\n  const pcoms2 = []; // path commands of original path p2\n  let ii;\n\n  const processPath = (path, d, pcom) => {\n      let nx;\n      let ny;\n      const tq = { T: 1, Q: 1 };\n      if (!path) {\n        return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n      }\n      if (!(path[0] in tq)) {\n        d.qx = d.qy = null;\n      }\n      switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pcom === 'C' || pcom === 'S') {\n            nx = d.x * 2 - d.bx;\n            ny = d.y * 2 - d.by;\n          } else {\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pcom === 'Q' || pcom === 'T') {\n            d.qx = d.x * 2 - d.qx;\n            d.qy = d.y * 2 - d.qy;\n          } else {\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(\n            q2c(d.x, d.y, path[1], path[2], path[3], path[4])\n          );\n          break;\n        case 'L':\n          path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n          break;\n      }\n      return path;\n    },\n    fixArc = (pp, i) => {\n      if (pp[i].length > 7) {\n        pp[i].shift();\n        const pi = pp[i];\n        while (pi.length) {\n          pcoms1[i] = 'A';\n          if (p2) {\n            pcoms2[i] = 'A';\n          }\n          pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n        }\n        pp.splice(i, 1);\n        ii = Math.max(p.length, (p2 && p2.length) || 0);\n      }\n    },\n    fixM = (path1, path2, a1, a2, i) => {\n      if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n        path2.splice(i, 0, ['M', a2.x, a2.y]);\n        a1.bx = 0;\n        a1.by = 0;\n        a1.x = path1[i][1];\n        a1.y = path1[i][2];\n        ii = Math.max(p.length, (p2 && p2.length) || 0);\n      }\n    };\n\n  let pfirst = ''; // temporary holder for original path command\n  let pcom = ''; // holder for previous path command of original path\n\n  ii = Math.max(p.length, (p2 && p2.length) || 0);\n  for (let i = 0; i < ii; i++) {\n    if (p[i]) {\n      pfirst = p[i][0];\n    } // save current path command\n\n    if (pfirst !== 'C') {\n      pcoms1[i] = pfirst; // Save current path command\n      if (i) {\n        pcom = pcoms1[i - 1];\n      } // Get previous path command pcom\n    }\n    p[i] = processPath(p[i], attrs, pcom);\n\n    if (pcoms1[i] !== 'A' && pfirst === 'C') {\n      pcoms1[i] = 'C';\n    }\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) {\n      // the same procedures is done to p2\n      if (p2[i]) {\n        pfirst = p2[i][0];\n      }\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        if (i) {\n          pcom = pcoms2[i - 1];\n        }\n      }\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    const seg = p[i],\n      seg2 = p2 && p2[i],\n      seglen = seg.length,\n      seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n}\n\nfunction a2c(x1, y1, rx, ry, angle, lac, sweep_flag, x2, y2, recursive) {\n  // for more information of where this Math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  const PI = Math.PI;\n\n  const _120 = PI * 120 / 180;\n  let f1;\n  let f2;\n  let cx;\n  let cy;\n  const rad = PI / 180 * (+angle || 0);\n  let res = [];\n  let xy;\n\n  const rotate = (x, y, rad) => {\n    const X = x * Math.cos(rad) - y * Math.sin(rad),\n      Y = x * Math.sin(rad) + y * Math.cos(rad);\n    return { x: X, y: Y };\n  };\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    const x = (x1 - x2) / 2;\n    const y = (y1 - y2) / 2;\n    let h = x * x / (rx * rx) + y * y / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    const rx2 = rx * rx,\n      ry2 = ry * ry;\n    const k =\n      (lac === sweep_flag ? -1 : 1) *\n      Math.sqrt(\n        Math.abs(\n          (rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)\n        )\n      );\n\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n\n    if (f1 < 0) {\n      f1 = PI * 2 + f1;\n    }\n    if (f2 < 0) {\n      f2 = PI * 2 + f2;\n    }\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  let df = f2 - f1;\n  if (Math.abs(df) > _120) {\n    const f2old = f2,\n      x2old = x2,\n      y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [\n      f2,\n      f2old,\n      cx,\n      cy\n    ]);\n  }\n  df = f2 - f1;\n  const c1 = Math.cos(f1),\n    s1 = Math.sin(f1),\n    c2 = Math.cos(f2),\n    s2 = Math.sin(f2),\n    t = Math.tan(df / 4),\n    hx = 4 / 3 * rx * t,\n    hy = 4 / 3 * ry * t,\n    m1 = [x1, y1],\n    m2 = [x1 + hx * s1, y1 - hy * c1],\n    m3 = [x2 + hx * s2, y2 - hy * c2],\n    m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4]\n      .concat(res)\n      .join()\n      .split(',');\n    const newres = [];\n    for (let i = 0, ii = res.length; i < ii; i++) {\n      newres[i] =\n        i % 2\n          ? rotate(res[i - 1], res[i], rad).y\n          : rotate(res[i], res[i + 1], rad).x;\n    }\n    return newres;\n  }\n}\n\n// http://schepers.cc/getting-to-the-point\nfunction catmullRom2bezier(crp, z) {\n  const d = [];\n  for (let i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    const p = [\n      {\n        x: +crp[i - 2],\n        y: +crp[i - 1]\n      },\n      {\n        x: +crp[i],\n        y: +crp[i + 1]\n      },\n      {\n        x: +crp[i + 2],\n        y: +crp[i + 3]\n      },\n      {\n        x: +crp[i + 4],\n        y: +crp[i + 5]\n      }\n    ];\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n    d.push([\n      'C',\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      (p[1].y + 6 * p[2].y - p[3].y) / 6,\n      p[2].x,\n      p[2].y\n    ]);\n  }\n\n  return d;\n}\n\nfunction l2c(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n}\n\nfunction q2c(x1, y1, ax, ay, x2, y2) {\n  const _13 = 1 / 3,\n    _23 = 2 / 3;\n  return [\n    _13 * x1 + _23 * ax,\n    _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax,\n    _13 * y2 + _23 * ay,\n    x2,\n    y2\n  ];\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z == null) {\n    z = 1;\n  }\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  const z2 = z / 2;\n  const n = 12;\n  const Tvalues = [\n    -0.1252,\n    0.1252,\n    -0.3678,\n    0.3678,\n    -0.5873,\n    0.5873,\n    -0.7699,\n    0.7699,\n    -0.9041,\n    0.9041,\n    -0.9816,\n    0.9816\n  ];\n\n  let sum = 0;\n  const Cvalues = [\n    0.2491,\n    0.2491,\n    0.2335,\n    0.2335,\n    0.2032,\n    0.2032,\n    0.1601,\n    0.1601,\n    0.1069,\n    0.1069,\n    0.0472,\n    0.0472\n  ];\n\n  for (let i = 0; i < n; i++) {\n    const ct = z2 * Tvalues[i] + z2,\n      xbase = base3(ct, x1, x2, x3, x4),\n      ybase = base3(ct, y1, y2, y3, y4),\n      comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n  return z2 * sum;\n}\n\nfunction getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n  if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n    return;\n  }\n  const t = 1;\n  let step = t / 2;\n  let t2 = t - step;\n  let l;\n  const e = 0.01;\n  l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n  while (Math.abs(l - ll) > e) {\n    step /= 2;\n    t2 += (l < ll ? 1 : -1) * step;\n    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n  }\n  return t2;\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  const t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n    t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction cacheKey(...args) {\n  let hash = '';\n  for (let i = args.length - 1; i >= 0; --i) {\n    hash += `？${args[i]}`;\n  }\n  return hash;\n}\n\nexport default p5;\n","/**\n * @module Data\n * @submodule Array Functions\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * Adds a value to the end of an array. Extends the length of\n * the array by one. Maps to Array.push().\n *\n * @method append\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push\">array.push(value)</a> instead.\n * @param {Array} array Array to append\n * @param {any} value to be added to the Array\n * @return {Array} the array that was appended to\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   let myArray = ['Mango', 'Apple', 'Papaya'];\n *   print(myArray); // ['Mango', 'Apple', 'Papaya']\n *\n *   append(myArray, 'Peach');\n *   print(myArray); // ['Mango', 'Apple', 'Papaya', 'Peach']\n * }\n * </code></div>\n */\np5.prototype.append = function(array, value) {\n  array.push(value);\n  return array;\n};\n\n/**\n * Copies an array (or part of an array) to another array. The src array is\n * copied to the dst array, beginning at the position specified by\n * srcPosition and into the position specified by dstPosition. The number of\n * elements to copy is determined by length. Note that copying values\n * overwrites existing values in the destination array. To append values\n * instead of overwriting them, use <a href=\"#/p5/concat\">concat()</a>.\n * <br><br>\n * The simplified version with only two arguments, arrayCopy(src, dst),\n * copies an entire array to another of the same size. It is equivalent to\n * arrayCopy(src, 0, dst, 0, src.length).\n * <br><br>\n * Using this function is far more efficient for copying array data than\n * iterating through a for() loop and copying each element individually.\n *\n * @method arrayCopy\n * @deprecated\n * @param {Array}  src           the source Array\n * @param {Integer} srcPosition  starting position in the source Array\n * @param {Array}  dst           the destination Array\n * @param {Integer} dstPosition   starting position in the destination Array\n * @param {Integer} length        number of Array elements to be copied\n *\n * @example\n * <div class='norender'><code>\n * let src = ['A', 'B', 'C'];\n * let dst = [1, 2, 3];\n * let srcPosition = 1;\n * let dstPosition = 0;\n * let length = 2;\n *\n * print(src); // ['A', 'B', 'C']\n * print(dst); // [ 1 ,  2 ,  3 ]\n *\n * arrayCopy(src, srcPosition, dst, dstPosition, length);\n * print(dst); // ['B', 'C', 3]\n * </code></div>\n */\n/**\n * @method arrayCopy\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\">arr1.copyWithin(arr2)</a> instead.\n * @param {Array}  src\n * @param {Array}  dst\n * @param {Integer} [length]\n */\np5.prototype.arrayCopy = function(src, srcPosition, dst, dstPosition, length) {\n  // the index to begin splicing from dst array\n  let start;\n  let end;\n\n  if (typeof length !== 'undefined') {\n    end = Math.min(length, src.length);\n    start = dstPosition;\n    src = src.slice(srcPosition, end + srcPosition);\n  } else {\n    if (typeof dst !== 'undefined') {\n      // src, dst, length\n      // rename  so we don't get confused\n      end = dst;\n      end = Math.min(end, src.length);\n    } else {\n      // src, dst\n      end = src.length;\n    }\n\n    start = 0;\n    // rename  so we don't get confused\n    dst = srcPosition;\n    src = src.slice(0, end);\n  }\n\n  // Since we are not returning the array and JavaScript is pass by reference\n  // we must modify the actual values of the array\n  // instead of reassigning arrays\n  Array.prototype.splice.apply(dst, [start, end].concat(src));\n};\n\n/**\n * Concatenates two arrays, maps to Array.concat(). Does not modify the\n * input arrays.\n *\n * @method concat\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\">arr1.concat(arr2)</a> instead.\n * @param {Array} a first Array to concatenate\n * @param {Array} b second Array to concatenate\n * @return {Array} concatenated array\n *\n * @example\n * <div class = 'norender'><code>\n * function setup() {\n *   let arr1 = ['A', 'B', 'C'];\n *   let arr2 = [1, 2, 3];\n *\n *   print(arr1); // ['A','B','C']\n *   print(arr2); // [1,2,3]\n *\n *   let arr3 = concat(arr1, arr2);\n *\n *   print(arr1); // ['A','B','C']\n *   print(arr2); // [1, 2, 3]\n *   print(arr3); // ['A','B','C', 1, 2, 3]\n * }\n * </code></div>\n */\np5.prototype.concat = (list0, list1) => list0.concat(list1);\n\n/**\n * Reverses the order of an array, maps to Array.reverse()\n *\n * @method reverse\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\">array.reverse()</a> instead.\n * @param {Array} list Array to reverse\n * @return {Array} the reversed list\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   let myArray = ['A', 'B', 'C'];\n *   print(myArray); // ['A','B','C']\n *\n *   reverse(myArray);\n *   print(myArray); // ['C','B','A']\n * }\n * </code></div>\n */\np5.prototype.reverse = list => list.reverse();\n\n/**\n * Decreases an array by one element and returns the shortened array,\n * maps to Array.pop().\n *\n * @method shorten\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\">array.pop()</a> instead.\n * @param  {Array} list Array to shorten\n * @return {Array} shortened Array\n * @example\n * <div class = 'norender'><code>\n * function setup() {\n *   let myArray = ['A', 'B', 'C'];\n *   print(myArray); // ['A', 'B', 'C']\n *   let newArray = shorten(myArray);\n *   print(myArray); // ['A','B','C']\n *   print(newArray); // ['A','B']\n * }\n * </code></div>\n */\np5.prototype.shorten = function(list) {\n  list.pop();\n  return list;\n};\n\n/**\n * Randomizes the order of the elements of an array. Implements\n * <a href='http://Bost.Ocks.org/mike/shuffle/' target=_blank>\n * Fisher-Yates Shuffle Algorithm</a>.\n *\n * @method shuffle\n * @param  {Array}   array  Array to shuffle\n * @param  {Boolean} [bool] modify passed array\n * @return {Array}   shuffled Array\n * @example\n * <div><code>\n * function setup() {\n *   let regularArr = ['ABC', 'def', createVector(), TAU, Math.E];\n *   print(regularArr);\n *   shuffle(regularArr, true); // force modifications to passed array\n *   print(regularArr);\n *\n *   // By default shuffle() returns a shuffled cloned array:\n *   let newArr = shuffle(regularArr);\n *   print(regularArr);\n *   print(newArr);\n * }\n * </code></div>\n */\np5.prototype.shuffle = function(arr, bool) {\n  const isView = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(arr);\n  arr = bool || isView ? arr : arr.slice();\n\n  let rnd,\n    tmp,\n    idx = arr.length;\n  while (idx > 1) {\n    rnd = (Math.random() * idx) | 0;\n\n    tmp = arr[--idx];\n    arr[idx] = arr[rnd];\n    arr[rnd] = tmp;\n  }\n\n  return arr;\n};\n\n/**\n * Sorts an array of numbers from smallest to largest, or puts an array of\n * words in alphabetical order. The original array is not modified; a\n * re-ordered array is returned. The count parameter states the number of\n * elements to sort. For example, if there are 12 elements in an array and\n * count is set to 5, only the first 5 elements in the array will be sorted.\n *\n * @method sort\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">array.sort()</a> instead.\n * @param {Array} list Array to sort\n * @param {Integer} [count] number of elements to sort, starting from 0\n * @return {Array} the sorted list\n *\n * @example\n * <div class = 'norender'><code>\n * function setup() {\n *   let words = ['banana', 'apple', 'pear', 'lime'];\n *   print(words); // ['banana', 'apple', 'pear', 'lime']\n *   let count = 4; // length of array\n *\n *   words = sort(words, count);\n *   print(words); // ['apple', 'banana', 'lime', 'pear']\n * }\n * </code></div>\n * <div class = 'norender'><code>\n * function setup() {\n *   let numbers = [2, 6, 1, 5, 14, 9, 8, 12];\n *   print(numbers); // [2, 6, 1, 5, 14, 9, 8, 12]\n *   let count = 5; // Less than the length of the array\n *\n *   numbers = sort(numbers, count);\n *   print(numbers); // [1,2,5,6,14,9,8,12]\n * }\n * </code></div>\n */\np5.prototype.sort = function(list, count) {\n  let arr = count ? list.slice(0, Math.min(count, list.length)) : list;\n  const rest = count ? list.slice(Math.min(count, list.length)) : [];\n  if (typeof arr[0] === 'string') {\n    arr = arr.sort();\n  } else {\n    arr = arr.sort((a, b) => a - b);\n  }\n  return arr.concat(rest);\n};\n\n/**\n * Inserts a value or an array of values into an existing array. The first\n * parameter specifies the initial array to be modified, and the second\n * parameter defines the data to be inserted. The third parameter is an index\n * value which specifies the array position from which to insert data.\n * (Remember that array index numbering starts at zero, so the first position\n * is 0, the second position is 1, and so on.)\n *\n * @method splice\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\">array.splice()</a> instead.\n * @param {Array}  list Array to splice into\n * @param {any}    value value to be spliced in\n * @param {Integer} position in the array from which to insert data\n * @return {Array} the list\n *\n * @example\n * <div class = 'norender'><code>\n * function setup() {\n *   let myArray = [0, 1, 2, 3, 4];\n *   let insArray = ['A', 'B', 'C'];\n *   print(myArray); // [0, 1, 2, 3, 4]\n *   print(insArray); // ['A','B','C']\n *\n *   splice(myArray, insArray, 3);\n *   print(myArray); // [0,1,2,'A','B','C',3,4]\n * }\n * </code></div>\n */\np5.prototype.splice = function(list, value, index) {\n  // note that splice returns spliced elements and not an array\n  Array.prototype.splice.apply(list, [index, 0].concat(value));\n\n  return list;\n};\n\n/**\n * Extracts an array of elements from an existing array. The list parameter\n * defines the array from which the elements will be copied, and the start\n * and count parameters specify which elements to extract. If no count is\n * given, elements will be extracted from the start to the end of the array.\n * When specifying the start, remember that the first array element is 0.\n * This function does not change the source array.\n *\n * @method subset\n * @deprecated Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\">array.slice()</a> instead.\n * @param  {Array}  list    Array to extract from\n * @param  {Integer} start   position to begin\n * @param  {Integer} [count] number of values to extract\n * @return {Array}          Array of extracted elements\n *\n * @example\n * <div class = 'norender'><code>\n * function setup() {\n *   let myArray = [1, 2, 3, 4, 5];\n *   print(myArray); // [1, 2, 3, 4, 5]\n *\n *   let sub1 = subset(myArray, 0, 3);\n *   let sub2 = subset(myArray, 2, 2);\n *   print(sub1); // [1,2,3]\n *   print(sub2); // [3,4]\n * }\n * </code></div>\n */\np5.prototype.subset = function(list, start, count) {\n  if (typeof count !== 'undefined') {\n    return list.slice(start, start + count);\n  } else {\n    return list.slice(start, list.length);\n  }\n};\n\nexport default p5;\n","/**\n * @module Data\n * @submodule Conversion\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * Converts a string to its floating point representation. The contents of a\n * string must resemble a number, or NaN (not a number) will be returned.\n * For example, float(\"1234.56\") evaluates to 1234.56, but float(\"giraffe\")\n * will return NaN.\n *\n * When an array of values is passed in, then an array of floats of the same\n * length is returned.\n *\n * @method float\n * @param {String}  str float string to parse\n * @return {Number}     floating point representation of string\n * @example\n * <div><code>\n * let str = '20';\n * let diameter = float(str);\n * ellipse(width / 2, height / 2, diameter, diameter);\n * </code></div>\n * <div class='norender'><code>\n * print(float('10.31')); // 10.31\n * print(float('Infinity')); // Infinity\n * print(float('-Infinity')); // -Infinity\n * </code></div>\n *\n * @alt\n * 20 by 20 white ellipse in the center of the canvas\n *\n */\np5.prototype.float = function(str) {\n  if (str instanceof Array) {\n    return str.map(parseFloat);\n  }\n  return parseFloat(str);\n};\n\n/**\n * Converts a boolean, string, or float to its integer representation.\n * When an array of values is passed in, then an int array of the same length\n * is returned.\n *\n * @method int\n * @param {String|Boolean|Number}       n value to parse\n * @param {Integer}       [radix] the radix to convert to (default: 10)\n * @return {Number}                     integer representation of value\n *\n * @example\n * <div class='norender'><code>\n * print(int('10')); // 10\n * print(int(10.31)); // 10\n * print(int(-10)); // -10\n * print(int(true)); // 1\n * print(int(false)); // 0\n * print(int([false, true, '10.3', 9.8])); // [0, 1, 10, 9]\n * print(int(Infinity)); // Infinity\n * print(int('-Infinity')); // -Infinity\n * </code></div>\n */\n/**\n * @method int\n * @param {Array} ns                    values to parse\n * @return {Number[]}                   integer representation of values\n */\np5.prototype.int = function(n, radix = 10) {\n  if (n === Infinity || n === 'Infinity') {\n    return Infinity;\n  } else if (n === -Infinity || n === '-Infinity') {\n    return -Infinity;\n  } else if (typeof n === 'string') {\n    return parseInt(n, radix);\n  } else if (typeof n === 'number') {\n    return n | 0;\n  } else if (typeof n === 'boolean') {\n    return n ? 1 : 0;\n  } else if (n instanceof Array) {\n    return n.map(n => p5.prototype.int(n, radix));\n  }\n};\n\n/**\n * Converts a boolean, string or number to its string representation.\n * When an array of values is passed in, then an array of strings of the same\n * length is returned.\n *\n * @method str\n * @param {String|Boolean|Number|Array} n value to parse\n * @return {String}                     string representation of value\n * @example\n * <div class='norender'><code>\n * print(str('10')); // \"10\"\n * print(str(10.31)); // \"10.31\"\n * print(str(-10)); // \"-10\"\n * print(str(true)); // \"true\"\n * print(str(false)); // \"false\"\n * print(str([true, '10.3', 9.8])); // [ \"true\", \"10.3\", \"9.8\" ]\n * </code></div>\n */\np5.prototype.str = function(n) {\n  if (n instanceof Array) {\n    return n.map(p5.prototype.str);\n  } else {\n    return String(n);\n  }\n};\n\n/**\n * Converts a number or string to its boolean representation.\n * For a number, any non-zero value (positive or negative) evaluates to true,\n * while zero evaluates to false. For a string, the value \"true\" evaluates to\n * true, while any other value evaluates to false. When an array of number or\n * string values is passed in, then a array of booleans of the same length is\n * returned.\n *\n * @method boolean\n * @param {String|Boolean|Number|Array} n value to parse\n * @return {Boolean}                    boolean representation of value\n * @example\n * <div class='norender'><code>\n * print(boolean(0)); // false\n * print(boolean(1)); // true\n * print(boolean('true')); // true\n * print(boolean('abcd')); // false\n * print(boolean([0, 12, 'true'])); // [false, true, true]\n * </code></div>\n */\np5.prototype.boolean = function(n) {\n  if (typeof n === 'number') {\n    return n !== 0;\n  } else if (typeof n === 'string') {\n    return n.toLowerCase() === 'true';\n  } else if (typeof n === 'boolean') {\n    return n;\n  } else if (n instanceof Array) {\n    return n.map(p5.prototype.boolean);\n  }\n};\n\n/**\n * Converts a number, string representation of a number, or boolean to its byte\n * representation. A byte can be only a whole number between -128 and 127, so\n * when a value outside of this range is converted, it wraps around to the\n * corresponding byte representation. When an array of number, string or boolean\n * values is passed in, then an array of bytes the same length is returned.\n *\n * @method byte\n * @param {String|Boolean|Number}       n value to parse\n * @return {Number}                     byte representation of value\n *\n * @example\n * <div class='norender'><code>\n * print(byte(127)); // 127\n * print(byte(128)); // -128\n * print(byte(23.4)); // 23\n * print(byte('23.4')); // 23\n * print(byte('hello')); // NaN\n * print(byte(true)); // 1\n * print(byte([0, 255, '100'])); // [0, -1, 100]\n * </code></div>\n */\n/**\n * @method byte\n * @param {Array} ns                   values to parse\n * @return {Number[]}                  array of byte representation of values\n */\np5.prototype.byte = function(n) {\n  const nn = p5.prototype.int(n, 10);\n  if (typeof nn === 'number') {\n    return (nn + 128) % 256 - 128;\n  } else if (nn instanceof Array) {\n    return nn.map(p5.prototype.byte);\n  }\n};\n\n/**\n * Converts a number or string to its corresponding single-character\n * string representation. If a string parameter is provided, it is first\n * parsed as an integer and then translated into a single-character string.\n * When an array of number or string values is passed in, then an array of\n * single-character strings of the same length is returned.\n *\n * @method char\n * @param {String|Number}       n value to parse\n * @return {String}             string representation of value\n *\n * @example\n * <div class='norender'><code>\n * print(char(65)); // \"A\"\n * print(char('65')); // \"A\"\n * print(char([65, 66, 67])); // [ \"A\", \"B\", \"C\" ]\n * print(join(char([65, 66, 67]), '')); // \"ABC\"\n * </code></div>\n */\n/**\n * @method char\n * @param {Array} ns              values to parse\n * @return {String[]}             array of string representation of values\n */\np5.prototype.char = function(n) {\n  if (typeof n === 'number' && !isNaN(n)) {\n    return String.fromCharCode(n);\n  } else if (n instanceof Array) {\n    return n.map(p5.prototype.char);\n  } else if (typeof n === 'string') {\n    return p5.prototype.char(parseInt(n, 10));\n  }\n};\n\n/**\n * Converts a single-character string to its corresponding integer\n * representation. When an array of single-character string values is passed\n * in, then an array of integers of the same length is returned.\n *\n * @method unchar\n * @param {String} n     value to parse\n * @return {Number}      integer representation of value\n *\n * @example\n * <div class='norender'><code>\n * print(unchar('A')); // 65\n * print(unchar(['A', 'B', 'C'])); // [ 65, 66, 67 ]\n * print(unchar(split('ABC', ''))); // [ 65, 66, 67 ]\n * </code></div>\n */\n/**\n * @method unchar\n * @param {Array} ns       values to parse\n * @return {Number[]}      integer representation of values\n */\np5.prototype.unchar = function(n) {\n  if (typeof n === 'string' && n.length === 1) {\n    return n.charCodeAt(0);\n  } else if (n instanceof Array) {\n    return n.map(p5.prototype.unchar);\n  }\n};\n\n/**\n * Converts a number to a string in its equivalent hexadecimal notation. If a\n * second parameter is passed, it is used to set the number of characters to\n * generate in the hexadecimal notation. When an array is passed in, an\n * array of strings in hexadecimal notation of the same length is returned.\n *\n * @method hex\n * @param {Number} n     value to parse\n * @param {Number} [digits]\n * @return {String}      hexadecimal string representation of value\n *\n * @example\n * <div class='norender'><code>\n * print(hex(255)); // \"000000FF\"\n * print(hex(255, 6)); // \"0000FF\"\n * print(hex([0, 127, 255], 6)); // [ \"000000\", \"00007F\", \"0000FF\" ]\n * print(Infinity); // \"FFFFFFFF\"\n * print(-Infinity); // \"00000000\"\n * </code></div>\n */\n/**\n * @method hex\n * @param {Number[]} ns    array of values to parse\n * @param {Number} [digits]\n * @return {String[]}      hexadecimal string representation of values\n */\np5.prototype.hex = function(n, digits) {\n  digits = digits === undefined || digits === null ? (digits = 8) : digits;\n  if (n instanceof Array) {\n    return n.map(n => p5.prototype.hex(n, digits));\n  } else if (n === Infinity || n === -Infinity) {\n    const c = n === Infinity ? 'F' : '0';\n    return c.repeat(digits);\n  } else if (typeof n === 'number') {\n    if (n < 0) {\n      n = 0xffffffff + n + 1;\n    }\n    let hex = Number(n)\n      .toString(16)\n      .toUpperCase();\n    while (hex.length < digits) {\n      hex = `0${hex}`;\n    }\n    if (hex.length >= digits) {\n      hex = hex.substring(hex.length - digits, hex.length);\n    }\n    return hex;\n  }\n};\n\n/**\n * Converts a string representation of a hexadecimal number to its equivalent\n * integer value. When an array of strings in hexadecimal notation is passed\n * in, an array of integers of the same length is returned.\n *\n * @method unhex\n * @param {String} n value to parse\n * @return {Number}      integer representation of hexadecimal value\n *\n * @example\n * <div class='norender'><code>\n * print(unhex('A')); // 10\n * print(unhex('FF')); // 255\n * print(unhex(['FF', 'AA', '00'])); // [ 255, 170, 0 ]\n * </code></div>\n */\n/**\n * @method unhex\n * @param {Array} ns values to parse\n * @return {Number[]}      integer representations of hexadecimal value\n */\np5.prototype.unhex = function(n) {\n  if (n instanceof Array) {\n    return n.map(p5.prototype.unhex);\n  } else {\n    return parseInt(`0x${n}`, 16);\n  }\n};\n\nexport default p5;\n","/**\n * @module Data\n * @submodule String Functions\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\nimport '../core/error_helpers';\n\n//return p5; //LM is this a mistake?\n\n/**\n * Combines an array of Strings into one String, each separated by the\n * character(s) used for the separator parameter. To join arrays of ints or\n * floats, it's necessary to first convert them to Strings using <a href=\"#/p5/nf\">nf()</a> or\n * nfs().\n *\n * @method join\n * @param  {Array}  list      array of Strings to be joined\n * @param  {String} separator String to be placed between each item\n * @return {String}           joined String\n * @example\n * <div>\n * <code>\n * let array = ['Hello', 'world!'];\n * let separator = ' ';\n * let message = join(array, separator);\n * text(message, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * \"hello world!\" displayed middle left of canvas.\n *\n */\np5.prototype.join = function(list, separator) {\n  p5._validateParameters('join', arguments);\n  return list.join(separator);\n};\n\n/**\n * This function is used to apply a regular expression to a piece of text,\n * and return matching groups (elements found inside parentheses) as a\n * String array. If there are no matches, a null value will be returned.\n * If no groups are specified in the regular expression, but the sequence\n * matches, an array of length 1 (with the matched text as the first element\n * of the array) will be returned.\n * <br><br>\n * To use the function, first check to see if the result is null. If the\n * result is null, then the sequence did not match at all. If the sequence\n * did match, an array is returned.\n * <br><br>\n * If there are groups (specified by sets of parentheses) in the regular\n * expression, then the contents of each will be returned in the array.\n * Element [0] of a regular expression match returns the entire matching\n * string, and the match groups start at element [1] (the first group is [1],\n * the second [2], and so on).\n *\n * @method match\n * @param  {String} str    the String to be searched\n * @param  {String} regexp the regexp to be used for matching\n * @return {String[]}      Array of Strings found\n * @example\n * <div>\n * <code>\n * let string = 'Hello p5js*!';\n * let regexp = 'p5js\\\\*';\n * let m = match(string, regexp);\n * text(m, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * \"p5js*\" displayed middle left of canvas.\n *\n */\np5.prototype.match = function(str, reg) {\n  p5._validateParameters('match', arguments);\n  return str.match(reg);\n};\n\n/**\n * This function is used to apply a regular expression to a piece of text,\n * and return a list of matching groups (elements found inside parentheses)\n * as a two-dimensional String array. If there are no matches, a null value\n * will be returned. If no groups are specified in the regular expression,\n * but the sequence matches, a two dimensional array is still returned, but\n * the second dimension is only of length one.\n * <br><br>\n * To use the function, first check to see if the result is null. If the\n * result is null, then the sequence did not match at all. If the sequence\n * did match, a 2D array is returned.\n * <br><br>\n * If there are groups (specified by sets of parentheses) in the regular\n * expression, then the contents of each will be returned in the array.\n * Assuming a loop with counter variable i, element [i][0] of a regular\n * expression match returns the entire matching string, and the match groups\n * start at element [i][1] (the first group is [i][1], the second [i][2],\n * and so on).\n *\n * @method matchAll\n * @param  {String} str    the String to be searched\n * @param  {String} regexp the regexp to be used for matching\n * @return {String[]}         2d Array of Strings found\n * @example\n * <div class=\"norender\">\n * <code>\n * let string = 'Hello p5js*! Hello world!';\n * let regexp = 'Hello';\n * matchAll(string, regexp);\n * </code>\n * </div>\n */\np5.prototype.matchAll = function(str, reg) {\n  p5._validateParameters('matchAll', arguments);\n  const re = new RegExp(reg, 'g');\n  let match = re.exec(str);\n  const matches = [];\n  while (match !== null) {\n    matches.push(match);\n    // matched text: match[0]\n    // match start: match.index\n    // capturing group n: match[n]\n    match = re.exec(str);\n  }\n  return matches;\n};\n\n/**\n * Utility function for formatting numbers into strings. There are two\n * versions: one for formatting floats, and one for formatting ints.\n * The values for the digits, left, and right parameters should always\n * be positive integers.\n * (NOTE): Be cautious when using left and right parameters as it prepends numbers of 0's if the parameter\n * if greater than the current length of the number.\n * For example if number is 123.2 and left parameter passed is 4 which is greater than length of 123\n * (integer part) i.e 3 than result will be 0123.2. Same case for right parameter i.e. if right is 3 than\n * the result will be 123.200.\n *\n * @method nf\n * @param {Number|String}       num      the Number to format\n * @param {Integer|String}      [left]   number of digits to the left of the\n *                                decimal point\n * @param {Integer|String}      [right]  number of digits to the right of the\n *                                decimal point\n * @return {String}               formatted String\n *\n * @example\n * <div>\n * <code>\n * let myFont;\n * function preload() {\n *   myFont = loadFont('assets/fonts/inconsolata.ttf');\n * }\n * function setup() {\n *   background(200);\n *   let num1 = 321;\n *   let num2 = -1321;\n *\n *   noStroke();\n *   fill(0);\n *   textFont(myFont);\n *   textSize(22);\n *\n *   text(nf(num1, 4, 2), 10, 30);\n *   text(nf(num2, 4, 2), 10, 80);\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"0321.00\" middle top, -1321.00\" middle bottom canvas\n */\n/**\n * @method nf\n * @param {Array}        nums     the Numbers to format\n * @param {Integer|String}      [left]\n * @param {Integer|String}      [right]\n * @return {String[]}                formatted Strings\n */\np5.prototype.nf = function(nums, left, right) {\n  p5._validateParameters('nf', arguments);\n  if (nums instanceof Array) {\n    return nums.map(x => doNf(x, left, right));\n  } else {\n    const typeOfFirst = Object.prototype.toString.call(nums);\n    if (typeOfFirst === '[object Arguments]') {\n      if (nums.length === 3) {\n        return this.nf(nums[0], nums[1], nums[2]);\n      } else if (nums.length === 2) {\n        return this.nf(nums[0], nums[1]);\n      } else {\n        return this.nf(nums[0]);\n      }\n    } else {\n      return doNf(nums, left, right);\n    }\n  }\n};\n\nfunction doNf(num, left, right) {\n  const neg = num < 0;\n  const n = neg ? num.toString().substring(1) : num.toString();\n  const decimalInd = n.indexOf('.');\n  const intPart = decimalInd !== -1 ? n.substring(0, decimalInd) : n;\n  let decPart = decimalInd !== -1 ? n.substring(decimalInd + 1) : '';\n  let str = neg ? '-' : '';\n  if (typeof right !== 'undefined') {\n    let decimal = '';\n    if (decimalInd !== -1 || right - decPart.length > 0) {\n      decimal = '.';\n    }\n    if (decPart.length > right) {\n      decPart = decPart.substring(0, right);\n    }\n    for (let i = 0; i < left - intPart.length; i++) {\n      str += '0';\n    }\n    str += intPart;\n    str += decimal;\n    str += decPart;\n    for (let j = 0; j < right - decPart.length; j++) {\n      str += '0';\n    }\n    return str;\n  } else {\n    for (let k = 0; k < Math.max(left - intPart.length, 0); k++) {\n      str += '0';\n    }\n    str += n;\n    return str;\n  }\n}\n\n/**\n * Utility function for formatting numbers into strings and placing\n * appropriate commas to mark units of 1000. There are two versions: one\n * for formatting ints, and one for formatting an array of ints. The value\n * for the right parameter should always be a positive integer.\n *\n * @method nfc\n * @param  {Number|String}   num     the Number to format\n * @param  {Integer|String}  [right] number of digits to the right of the\n *                                  decimal point\n * @return {String}           formatted String\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   background(200);\n *   let num = 11253106.115;\n *   let numArr = [1, 1, 2];\n *\n *   noStroke();\n *   fill(0);\n *   textSize(12);\n *\n *   // Draw formatted numbers\n *   text(nfc(num, 4), 10, 30);\n *   text(nfc(numArr, 2), 10, 80);\n *\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"11,253,106.115\" top middle and \"1.00,1.00,2.00\" displayed bottom mid\n */\n/**\n * @method nfc\n * @param  {Array}    nums     the Numbers to format\n * @param  {Integer|String}  [right]\n * @return {String[]}           formatted Strings\n */\np5.prototype.nfc = function(num, right) {\n  p5._validateParameters('nfc', arguments);\n  if (num instanceof Array) {\n    return num.map(x => doNfc(x, right));\n  } else {\n    return doNfc(num, right);\n  }\n};\nfunction doNfc(num, right) {\n  num = num.toString();\n  const dec = num.indexOf('.');\n  let rem = dec !== -1 ? num.substring(dec) : '';\n  let n = dec !== -1 ? num.substring(0, dec) : num;\n  n = n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  if (right === 0) {\n    rem = '';\n  } else if (typeof right !== 'undefined') {\n    if (right > rem.length) {\n      rem += dec === -1 ? '.' : '';\n      const len = right - rem.length + 1;\n      for (let i = 0; i < len; i++) {\n        rem += '0';\n      }\n    } else {\n      rem = rem.substring(0, right + 1);\n    }\n  }\n  return n + rem;\n}\n\n/**\n * Utility function for formatting numbers into strings. Similar to <a href=\"#/p5/nf\">nf()</a> but\n * puts a \"+\" in front of positive numbers and a \"-\" in front of negative\n * numbers. There are two versions: one for formatting floats, and one for\n * formatting ints. The values for left, and right parameters\n * should always be positive integers.\n *\n * @method nfp\n * @param {Number} num      the Number to format\n * @param {Integer}      [left]   number of digits to the left of the decimal\n *                                point\n * @param {Integer}      [right]  number of digits to the right of the\n *                                decimal point\n * @return {String}         formatted String\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   background(200);\n *   let num1 = 11253106.115;\n *   let num2 = -11253106.115;\n *\n *   noStroke();\n *   fill(0);\n *   textSize(12);\n *\n *   // Draw formatted numbers\n *   text(nfp(num1, 4, 2), 10, 30);\n *   text(nfp(num2, 4, 2), 10, 80);\n *\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"+11253106.11\" top middle and \"-11253106.11\" displayed bottom middle\n */\n/**\n * @method nfp\n * @param {Number[]} nums      the Numbers to format\n * @param {Integer}      [left]\n * @param {Integer}      [right]\n * @return {String[]}         formatted Strings\n */\np5.prototype.nfp = function(...args) {\n  p5._validateParameters('nfp', args);\n  const nfRes = p5.prototype.nf.apply(this, args);\n  if (nfRes instanceof Array) {\n    return nfRes.map(addNfp);\n  } else {\n    return addNfp(nfRes);\n  }\n};\n\nfunction addNfp(num) {\n  return parseFloat(num) > 0 ? `+${num.toString()}` : num.toString();\n}\n\n/**\n * Utility function for formatting numbers into strings. Similar to <a href=\"#/p5/nf\">nf()</a> but\n * puts an additional \"_\" (space) in front of positive numbers just in case to align it with negative\n * numbers which includes \"-\" (minus) sign.\n * The main usecase of nfs() can be seen when one wants to align the digits (place values) of a non-negative\n * number with some negative number (See the example to get a clear picture).\n * There are two versions: one for formatting float, and one for formatting int.\n * The values for the digits, left, and right parameters should always be positive integers.\n * (IMP): The result on the canvas basically the expected alignment can vary based on the typeface you are using.\n * (NOTE): Be cautious when using left and right parameters as it prepends numbers of 0's if the parameter\n * if greater than the current length of the number.\n * For example if number is 123.2 and left parameter passed is 4 which is greater than length of 123\n * (integer part) i.e 3 than result will be 0123.2. Same case for right parameter i.e. if right is 3 than\n * the result will be 123.200.\n *\n * @method nfs\n * @param {Number}       num      the Number to format\n * @param {Integer}      [left]   number of digits to the left of the decimal\n *                                point\n * @param {Integer}      [right]  number of digits to the right of the\n *                                decimal point\n * @return {String}         formatted String\n *\n * @example\n * <div>\n * <code>\n * let myFont;\n * function preload() {\n *   myFont = loadFont('assets/fonts/inconsolata.ttf');\n * }\n * function setup() {\n *   background(200);\n *   let num1 = 321;\n *   let num2 = -1321;\n *\n *   noStroke();\n *   fill(0);\n *   textFont(myFont);\n *   textSize(22);\n *\n *   // nfs() aligns num1 (positive number) with num2 (negative number) by\n *   // adding a blank space in front of the num1 (positive number)\n *   // [left = 4] in num1 add one 0 in front, to align the digits with num2\n *   // [right = 2] in num1 and num2 adds two 0's after both numbers\n *   // To see the differences check the example of nf() too.\n *   text(nfs(num1, 4, 2), 10, 30);\n *   text(nfs(num2, 4, 2), 10, 80);\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"0321.00\" top middle and \"-1321.00\" displayed bottom middle\n */\n/**\n * @method nfs\n * @param {Array}        nums     the Numbers to format\n * @param {Integer}      [left]\n * @param {Integer}      [right]\n * @return {String[]}         formatted Strings\n */\np5.prototype.nfs = function(...args) {\n  p5._validateParameters('nfs', args);\n  const nfRes = p5.prototype.nf.apply(this, args);\n  if (nfRes instanceof Array) {\n    return nfRes.map(addNfs);\n  } else {\n    return addNfs(nfRes);\n  }\n};\n\nfunction addNfs(num) {\n  return parseFloat(num) >= 0 ? ` ${num.toString()}` : num.toString();\n}\n\n/**\n * The <a href=\"#/p5/split\">split()</a> function maps to String.split(), it breaks a String into\n * pieces using a character or string as the delimiter. The delim parameter\n * specifies the character or characters that mark the boundaries between\n * each piece. A String[] array is returned that contains each of the pieces.\n *\n * The <a href=\"#/p5/splitTokens\">splitTokens()</a> function works in a similar fashion, except that it\n * splits using a range of characters instead of a specific character or\n * sequence.\n *\n * @method split\n * @param  {String} value the String to be split\n * @param  {String} delim the String used to separate the data\n * @return {String[]}  Array of Strings\n * @example\n * <div>\n * <code>\n * let names = 'Pat,Xio,Alex';\n * let splitString = split(names, ',');\n * text(splitString[0], 5, 30);\n * text(splitString[1], 5, 50);\n * text(splitString[2], 5, 70);\n * </code>\n * </div>\n *\n * @alt\n * \"pat\" top left, \"Xio\" mid left and \"Alex\" displayed bottom left\n *\n */\np5.prototype.split = function(str, delim) {\n  p5._validateParameters('split', arguments);\n  return str.split(delim);\n};\n\n/**\n * The <a href=\"#/p5/splitTokens\">splitTokens()</a> function splits a String at one or many character\n * delimiters or \"tokens.\" The delim parameter specifies the character or\n * characters to be used as a boundary.\n * <br><br>\n * If no delim characters are specified, any whitespace character is used to\n * split. Whitespace characters include tab (\\t), line feed (\\n), carriage\n * return (\\r), form feed (\\f), and space.\n *\n * @method splitTokens\n * @param  {String} value   the String to be split\n * @param  {String} [delim] list of individual Strings that will be used as\n *                          separators\n * @return {String[]}          Array of Strings\n * @example\n * <div class = \"norender\">\n * <code>\n * function setup() {\n *   let myStr = 'Mango, Banana, Lime';\n *   let myStrArr = splitTokens(myStr, ',');\n *\n *   print(myStrArr); // prints : [\"Mango\",\" Banana\",\" Lime\"]\n * }\n * </code>\n * </div>\n */\np5.prototype.splitTokens = function(value, delims) {\n  p5._validateParameters('splitTokens', arguments);\n  let d;\n  if (typeof delims !== 'undefined') {\n    let str = delims;\n    const sqc = /\\]/g.exec(str);\n    let sqo = /\\[/g.exec(str);\n    if (sqo && sqc) {\n      str = str.slice(0, sqc.index) + str.slice(sqc.index + 1);\n      sqo = /\\[/g.exec(str);\n      str = str.slice(0, sqo.index) + str.slice(sqo.index + 1);\n      d = new RegExp(`[\\\\[${str}\\\\]]`, 'g');\n    } else if (sqc) {\n      str = str.slice(0, sqc.index) + str.slice(sqc.index + 1);\n      d = new RegExp(`[${str}\\\\]]`, 'g');\n    } else if (sqo) {\n      str = str.slice(0, sqo.index) + str.slice(sqo.index + 1);\n      d = new RegExp(`[${str}\\\\[]`, 'g');\n    } else {\n      d = new RegExp(`[${str}]`, 'g');\n    }\n  } else {\n    d = /\\s/g;\n  }\n  return value.split(d).filter(n => n);\n};\n\n/**\n * Removes whitespace characters from the beginning and end of a String. In\n * addition to standard whitespace characters such as space, carriage return,\n * and tab, this function also removes the Unicode \"nbsp\" character.\n *\n * @method trim\n * @param  {String} str a String to be trimmed\n * @return {String}       a trimmed String\n *\n * @example\n * <div>\n * <code>\n * let string = trim('  No new lines\\n   ');\n * text(string + ' here', 2, 50);\n * </code>\n * </div>\n *\n * @alt\n * \"No new lines here\" displayed center canvas\n */\n/**\n * @method trim\n * @param  {Array} strs an Array of Strings to be trimmed\n * @return {String[]}   an Array of trimmed Strings\n */\np5.prototype.trim = function(str) {\n  p5._validateParameters('trim', arguments);\n  if (str instanceof Array) {\n    return str.map(this.trim);\n  } else {\n    return str.trim();\n  }\n};\n\nexport default p5;\n","/**\n * @module IO\n * @submodule Time & Date\n * @for p5\n * @requires core\n */\n\nimport p5 from '../core/main';\n\n/**\n * p5.js communicates with the clock on your computer. The <a href=\"#/p5/day\">day()</a> function\n * returns the current day as a value from 1 - 31.\n *\n * @method day\n * @return {Integer} the current day\n * @example\n * <div>\n * <code>\n * let d = day();\n * text('Current day: \\n' + d, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current day is displayed\n *\n */\np5.prototype.day = function() {\n  return new Date().getDate();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The <a href=\"#/p5/hour\">hour()</a> function\n * returns the current hour as a value from 0 - 23.\n *\n * @method hour\n * @return {Integer} the current hour\n * @example\n * <div>\n * <code>\n * let h = hour();\n * text('Current hour:\\n' + h, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current hour is displayed\n *\n */\np5.prototype.hour = function() {\n  return new Date().getHours();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The <a href=\"#/p5/minute\">minute()</a> function\n * returns the current minute as a value from 0 - 59.\n *\n * @method minute\n * @return {Integer} the current minute\n * @example\n * <div>\n * <code>\n * let m = minute();\n * text('Current minute: \\n' + m, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current minute is displayed\n *\n */\np5.prototype.minute = function() {\n  return new Date().getMinutes();\n};\n\n/**\n * Returns the number of milliseconds (thousandths of a second) since\n * starting the sketch (when `setup()` is called). This information is often\n * used for timing events and animation sequences.\n *\n * @method millis\n * @return {Number} the number of milliseconds since starting the sketch\n * @example\n * <div>\n * <code>\n * let millisecond = millis();\n * text('Milliseconds \\nrunning: \\n' + millisecond, 5, 40);\n * </code>\n * </div>\n *\n * @alt\n * number of milliseconds since sketch has started displayed\n *\n */\np5.prototype.millis = function() {\n  if (this._millisStart === -1) {\n    // Sketch has not started\n    return 0;\n  } else {\n    return window.performance.now() - this._millisStart;\n  }\n};\n\n/**\n * p5.js communicates with the clock on your computer. The <a href=\"#/p5/month\">month()</a> function\n * returns the current month as a value from 1 - 12.\n *\n * @method month\n * @return {Integer} the current month\n * @example\n * <div>\n * <code>\n * let m = month();\n * text('Current month: \\n' + m, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current month is displayed\n *\n */\np5.prototype.month = function() {\n  //January is 0!\n  return new Date().getMonth() + 1;\n};\n\n/**\n * p5.js communicates with the clock on your computer. The <a href=\"#/p5/second\">second()</a> function\n * returns the current second as a value from 0 - 59.\n *\n * @method second\n * @return {Integer} the current second\n * @example\n * <div>\n * <code>\n * let s = second();\n * text('Current second: \\n' + s, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current second is displayed\n *\n */\np5.prototype.second = function() {\n  return new Date().getSeconds();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The <a href=\"#/p5/year\">year()</a> function\n * returns the current year as an integer (2014, 2015, 2016, etc).\n *\n * @method year\n * @return {Integer} the current year\n * @example\n * <div>\n * <code>\n * let y = year();\n * text('Current year: \\n' + y, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current year is displayed\n *\n */\np5.prototype.year = function() {\n  return new Date().getFullYear();\n};\n\nexport default p5;\n","import p5 from '../core/main';\nimport { initialize as initTranslator } from './internationalization';\n\n/**\n * _globalInit\n *\n * TODO: ???\n * if sketch is on window\n * assume \"global\" mode\n * and instantiate p5 automatically\n * otherwise do nothing\n *\n * @private\n * @return {Undefined}\n */\nconst _globalInit = () => {\n  // Could have been any property defined within the p5 constructor.\n  // If that property is already a part of the global object,\n  // this code has already run before, likely due to a duplicate import\n  if (typeof window._setupDone !== 'undefined') {\n    console.warn(\n      'p5.js seems to have been imported multiple times. Please remove the duplicate import'\n    );\n    return;\n  }\n\n  if (!window.mocha) {\n    // If there is a setup or draw function on the window\n    // then instantiate p5 in \"global\" mode\n    if (\n      ((window.setup && typeof window.setup === 'function') ||\n        (window.draw && typeof window.draw === 'function')) &&\n      !p5.instance\n    ) {\n      new p5();\n    }\n  }\n};\n\n// make a promise that resolves when the document is ready\nconst waitForDocumentReady = () =>\n  new Promise((resolve, reject) => {\n    // if the page is ready, initialize p5 immediately\n    if (document.readyState === 'complete') {\n      resolve();\n      // if the page is still loading, add an event listener\n      // and initialize p5 as soon as it finishes loading\n    } else {\n      window.addEventListener('load', resolve, false);\n    }\n  });\n\n// only load translations if we're using the full, un-minified library\nconst waitingForTranslator =\n  typeof IS_MINIFIED === 'undefined' ? initTranslator() : Promise.resolve();\n\nPromise.all([waitForDocumentReady(), waitingForTranslator]).then(_globalInit);\n","// core\nimport p5 from './core/main';\nimport './core/constants';\nimport './core/environment';\nimport './core/error_helpers';\nimport './core/helpers';\nimport './core/legacy';\nimport './core/preload';\nimport './core/p5.Element';\nimport './core/p5.Graphics';\nimport './core/p5.Renderer';\nimport './core/p5.Renderer2D';\nimport './core/rendering';\nimport './core/shim';\nimport './core/structure';\nimport './core/transform';\nimport './core/shape/2d_primitives';\nimport './core/shape/attributes';\nimport './core/shape/curves';\nimport './core/shape/vertex';\n\n// color\nimport './color/color_conversion';\nimport './color/creating_reading';\nimport './color/p5.Color';\nimport './color/setting';\n\n// data\nimport './data/p5.TypedDict';\nimport './data/local_storage.js';\n\n// DOM\nimport './dom/dom';\n\n// events\nimport './events/acceleration';\nimport './events/keyboard';\nimport './events/mouse';\nimport './events/touch';\n\n// image\nimport './image/filters';\nimport './image/image';\nimport './image/loading_displaying';\nimport './image/p5.Image';\nimport './image/pixels';\n\n// io\nimport './io/files';\nimport './io/p5.Table';\nimport './io/p5.TableRow';\nimport './io/p5.XML';\n\n// math\nimport './math/calculation';\nimport './math/math';\nimport './math/noise';\nimport './math/p5.Vector';\nimport './math/random';\nimport './math/trigonometry';\n\n// typography\nimport './typography/attributes';\nimport './typography/loading_displaying';\nimport './typography/p5.Font';\n\n// utilities\nimport './utilities/array_functions';\nimport './utilities/conversion';\nimport './utilities/string_functions';\nimport './utilities/time_date';\n\n// webgl\n// import './webgl/3d_primitives';\n// import './webgl/interaction';\n// import './webgl/light';\n// import './webgl/loading';\n// import './webgl/material';\n// import './webgl/p5.Camera';\n// import './webgl/p5.Geometry';\n// import './webgl/p5.Matrix';\n// import './webgl/p5.RendererGL.Immediate';\n// import './webgl/p5.RendererGL';\n// import './webgl/p5.RendererGL.Retained';\n// import './webgl/p5.Shader';\n// import './webgl/p5.RenderBuffer';\n// import './webgl/p5.Texture';\n// import './webgl/text';\n\nimport './core/init';\n\nmodule.exports = p5;\n","window.Spike = function(points, index) {\n\tthis.index = index // this will be the spike's \"phase\"\n\tthis.distance = 120 // detection distance\n\tthis.maxAngle = 15 // Maximum angle range\n\tthis.angle = 0\n\tthis.size = 1\n\tthis.spike = createVector( // Vector from axis to tip (relative)\n\t\tpoints[0].x-points[1].x,\n\t\tpoints[0].y-points[1].y\n\t)\n\tthis.axis = createVector( // Absolute position of axis\n\t\tpoints[1].x, points[1].y\n\t)\n\tthis.base = createVector( // Vector from axis to end of triangle (relative)\n\t\tpoints[2].x-points[1].x,\n\t\tpoints[2].y-points[1].y\n\t)\n\n\tthis.update = function() {\n\t\t// // DEBUG: See where is the cursor when computing\n\t\t// push()\n\t\t// ellipse(cursor.x/ratio, cursor.y/ratio, 20, 20)\n\t\t// pop()\n\t\t// Mapping the mouse position to a meaningful value for the animation\n\t\tlet d = map(\n\t\t\tmin( // Never be bigger than max distance\n\t\t\t\tdist(\n\t\t\t\t\twindow.mouseCursor.x, window.mouseCursor.y,\n\t\t\t\t\tthis.axis.x, this.axis.y // Distance to the \"base\" of spike\n\t\t\t\t),\n\t\t\t\tthis.distance\n\t\t\t),\n\t\t\t0, this.distance, // Maximum input will be never more than max distance\n\t\t\t1, 0.05 // Normalise and invert proportionality avoiding zeros\n\t\t)\n\t\t// Play 2 different \"animations\"\n\t\t\tthis.angle =\n\t\t\t(\n\t\t\t\td * (\n\t\t\t\t\t( this.maxAngle/2 ) + ( this.maxAngle * sin( (this.index*40) + millis() ) )\n\t\t\t\t)\n\t\t\t)\n\t\t\t// +\n\t\t\t// (\n\t\t\t// \t(1-d) *\n\t\t\t// \t( this.maxAngle/2 ) + ( this.maxAngle * sin( (this.index*40) + millis()/8 ) )\n\t\t\t// )\n\t\tthis.size = map(d, 0, 1, 0.4, 2)\n\t}\n\n\tthis.draw = function() {\n\t\tlet spike = this.spike.copy().mult(this.size)\n\t\tspike.rotate(-this.angle)\n\t\tpush()\n\t\ttranslate(this.axis.x, this.axis.y)\n\t\t// rotate(-this.angle)\n\t\tstrokeWeight(2)\n\t\tstroke(palette.green)\n\t\tfill(palette.green)\n\t\ttriangle(\n\t\t\t0, 0, // Axis\n\t\t\tspike.x, spike.y,\n\t\t\tthis.base.x, this.base.y\n\t\t)\n\t\tpop()\n\t}\n\n}\n","window.Particle = function(x, y, size, color) {\n\tthis.position = createVector(x, y)\n\tthis.size = size\n\tthis.color = color\n\n\tthis.vel = createVector(\n\t\trandom(-1, 1), random(-1, 1)\n\t)\n\n\tthis.update = function() {\n\t\tthis.position.add(this.vel)\n\t\tthis.position.x = ( this.position.x + width ) % width\n\t\tthis.position.y = ( this.position.y + height ) % height\n\t}\n\n\tthis.draw = function() {\n\t\tfill(this.color)\n\t\tstroke(this.color)\n\t\tellipse(\n\t\t\tthis.position.x, this.position.y,\n\t\t\tthis.size, this.size\n\t\t)\n\t}\n}\n","window.Triangle = function(x, y, size, color) {\n\tthis.position = createVector(x, y)\n\tthis.size = size\n\tthis.color = color\n\tthis.angle = random(360)\n\tthis.vel = createVector(\n\t\trandom(-2, 2),\n\t\trandom(-2, 2),\n\t)\n\tthis.avel = random(-1, 1)\n\n\n\tthis.points = [\n\t\tcreateVector(x, y),\n\t\tcreateVector(-random(this.size)*0.3, this.size),\n\t\tcreateVector(random(this.size)*0.3, this.size),\n\t]\n\n\tthis.update = function() {\n\t\tthis.position = this.position.add(this.vel)\n\t\tthis.position.x = ( this.position.x + width ) % width\n\t\tthis.position.y = ( this.position.y + height ) % height\n\t\tthis.angle += this.avel\n\t}\n\n\tthis.draw = function() {\n\t\tfill(this.color)\n\t\tstroke(this.color)\n\t\tpush()\n\t\ttranslate(this.position.x, this.position.y)\n\t\trotate(this.angle)\n\t\ttriangle(\n\t\t\t0, 0,\n\t\t\tthis.points[1].x, this.points[1].y,\n\t\t\tthis.points[2].x, this.points[2].y\n\t\t)\n\t\tpop()\n\t}\n}\n","window.canvas = null\nwindow.img = null\nwindow.spikes = []\nwindow.particles = []\nwindow.floating = []\nwindow.mouseCursor = {}\nwindow.moving = 0 // Data\nwindow.container // HTML Element container\nwindow.baseX = 1800\nwindow.baseY = 550 // Size of original file\nwindow.paddingX = null\nwindow.paddingY = null\n// Desired final width\nwindow.targetX = 700\nwindow.ratio = targetX / baseX\nwindow.targetY = baseY*ratio\n\nwindow.palette = null\n\nwindow.calculatePadding = function() {\n\t// Calculate padding to center logo\n\twindow.paddingX = abs((windowWidth/2)-(targetX/2))\n\twindow.paddingY = abs((windowHeight/2)-(targetY/2))\n}\n\nwindow.windowResized = function() {\n\tresizeCanvas(windowWidth, windowHeight);\n\tcalculatePadding()\n}\n\nwindow.preload = function() {\n\twindow.img = loadImage('https://superbeast.s3.eu-north-1.amazonaws.com/beast_spikeless_sm.png')\n\tif (!window.json) {\n\t\twindow.json = loadJSON('data_sm.json')\n\t}\n}\n\nwindow.setup = function() {\n\twindow.palette = {\n\t\tyellow: color('#fdfa38'),\n\t\tgreen: color('#35fab1'),\n\t\tpink: color('#fa28f7')\n\t}\n\tcalculatePadding()\n\t// Put canvas inside container\n\twindow.container = document.querySelector('#beastlogo')\n\twindow.container.innerHTML = ''\n\twindow.canvas = createCanvas( windowWidth, windowHeight )\n\twindow.canvas.parent(container)\n\t// Load / Init data\n\tconst triangles = json.triangles || []\n\twindow.spikes = triangles.map((triangle, i) => new Spike(triangle, i))\n\twindow.mouseCursor = createVector(0, 0)\n\tcreateParticles()\n\tcreateTriangles()\n\t// Processing settings\n\tframeRate(30)\n\tangleMode(DEGREES)\n\tellipseMode(CENTER)\n}\n\nwindow.draw = function() {\n\tbackground(0)\n\tdrawBackground()\n\tif (width < targetX) return\n\ttranslate(paddingX, paddingY)\n\tif ( moving > 0 ) {\n\t\tmoving--\n\t}\n\tif (moving) {\n\t\twindow.mouseCursor = createVector(\n\t\t\tlerp(mouseCursor.x, mouseX-paddingX, 0.1),\n\t\t\tlerp(mouseCursor.y, mouseY-paddingY, 0.1)\n\t\t)\n\t} else {\n\t\twindow.mouseCursor = createVector(\n\t\t\tlerp(mouseCursor.x, (width*0.5+width*0.35*sin(millis()/18))-paddingX, 0.1),\n\t\t\tlerp(mouseCursor.y, (height*0.5+height*0.1*cos(millis()/20))-paddingY, 0.1)\n\t\t)\n\t}\n\n\timage(img, 0, 0)\n\t// scale(ratio)\n\tspikes.forEach((spike) => {\n\t\tspike.update()\n\t\tspike.draw()\n\t})\n}\n\nwindow.mouseMoved = function() {\n\twindow.moving = 100\n}\n\nwindow.drawBackground = function() {\n\tparticles.forEach((particle) => {\n\t\tparticle.update()\n\t\tparticle.draw()\n\t})\n\tfloating.forEach((triangle) => {\n\t\ttriangle.update()\n\t\ttriangle.draw()\n\t})\n}\n\nwindow.createParticles = function() {\n\tfor (let i = 0; i < 25; i++) {\n\t\tparticles.push(\n\t\t\tnew Particle(\n\t\t\t\trandom(0, width), random(0, height),\n\t\t\t\trandom(2, 7), getRandomColor()\n\t\t\t)\n\t\t)\n\t}\n}\n\nwindow.createTriangles = function() {\n\tfor (let i = 0; i < 5; i++) {\n\t\tfloating.push(\n\t\t\tnew Triangle(\n\t\t\t\trandom(0, width), random(0, height),\n\t\t\t\trandom(15, 55), getRandomColor()\n\t\t\t)\n\t\t)\n\t}\n}\n\nwindow.getRandomColor = function() {\n\tlet colorNames = Object.keys(palette)\n\tlet colorName = colorNames[\n\t\tparseInt( random(0, colorNames.length) )\n\t]\n\treturn palette[colorName]\n}\n","import json from './data.js'\nwindow.json = json\n\nimport p5 from './p5/app.js'\n\nimport './spike.js'\nimport './particle.js'\nimport './triangle.js'\nimport './superbeast.js'\n"]}